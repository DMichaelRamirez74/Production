@{

    @section Title
{
        Volunteer Budget
    }
    ViewBag.Title = "VolunteerBudget";
    Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";
}

@section Script{}

@section MainContentHolder{
    <link href="~/Content/csschild/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/csschild/styleBM.css" rel="stylesheet" />
    <link href="~/Content/csschild/jquery.mCustomScrollbar.min.css" rel="stylesheet" />

    <style>


        #page-wrapper {
            padding-left: 0;
            padding-right: 0;
        }

        #inkindPeriodSelect option {
            background: #1f4f7d;
        }

        .form-control[readonly] {
            background-color: transparent !important;
        }

        .td-decimal {
            text-align: right;
        }

        select option {
            background: #1f4f7d;
        }


        .lbl-required:after {
            margin-left: 2px;
            content: "*";
            color: red;
        }

        .bill-table thead tr th {
            text-transform: none !important;
        }

        .checkbox.forget_answer {
            float: left;
            /* margin: 0 0 20px; */
        }

        .observation_info form div {
            /* margin-bottom: 15px; */
            font-size: 14px;
        }

        .checkbox input[type="checkbox"], .checkbox input[type="radio"] {
            opacity: 0;
            z-index: 1;
        }

            .checkbox input[type="checkbox"]:checked + label {
                color: #f2b54b;
            }

        .checkbox label {
            display: inline-block;
            vertical-align: middle;
            position: relative;
            padding-left: 5px;
            font-weight: bold;
            padding-left: 25px;
            font-weight: normal;
            font-size: 15px;
        }

        .checkbox label {
            color: #fff;
            /* padding: 0 39px; */
        }

        .checkbox input[type="checkbox"]:checked + label::before {
            color: #f2b54b;
            border: 1px solid #f2b54b;
        }

        .checkbox label::before {
            content: "";
            display: inline-block;
            position: absolute;
            width: 17px;
            height: 17px;
            left: 0px;
            margin-left: 0px;
            border: 1px solid #fff;
            border-radius: 3px;
            background-color: transparent;
            -webkit-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
            -o-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
            transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
        }

        .checkbox input[type="checkbox"]:checked + label::after, .checkbox input[type="radio"]:checked + label::after {
            font-family: "FontAwesome";
            content: "\f00c";
        }

        .checkbox label::after {
            display: inline-block;
            position: absolute;
            width: 16px;
            height: 16px;
            left: 0;
            top: 1px;
            margin-left: 0px;
            padding-left: 3px;
            padding-top: 1px;
            font-size: 11px;
            color: #f2b54b;
        }

        .inkind-start-date, .inkind-end-date {
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
            border-top-left-radius: 8px !important;
            border-bottom-left-radius: 8px !important;
        }

        /*#txtHours {
            border-radius: 8px !important;
        }*/

        #txtDollars,#txtHours
        {
            border-top-right-radius:8px!important;
            border-bottom-right-radius:8px!important;
        }

        .datepicker-icon {
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
        }

        .billing-select1
        {
            border-radius:8px!important;
        }
    </style>
    <div class="container-fluid">
        <div class="row" style="background: url('../../Content/imagechild/body-bg.jpg') center no-repeat;background-size:cover;">
            <div class="col-xs-12 bill-detl-title">
                <h2> Inkind Budget</h2>
                <div class="family_ovr"><img src="~/Content/imagechild/text-bdr.png"></div>
            </div>
            <div class="col-xs-12">
                <div class="billing-form">
                    <div class="col-lg-6">
                        @*<div class="col-xs-12 billing-form-div no-padding">
                                <div class="col-md-4 col-lg-4 col-sm-4 col-xs-12 no-padding">
                                    <div class="billing-inner-label">
                                        <label class="lbl-required">Program Year</label>
                                    </div>
                                </div>
                                <div class="col-md-8 col-lg-8 col-sm-8 col-xs-12">
                                    <div class="billing-inner">

                                        @Html.DropDownList("ddlProgramYear", Fingerprints.Utilities.Helper.GetActiveAndFutureYears(Session["AgencyID"].ToString()), new { @class = "billing-select1 ddlProgramYear" })
                                        <input type="hidden" class="inkind-id" />
                                    </div>
                                </div>
                            </div>*@

                        <input type="hidden" class="inkind-id" />


                        <div class="col-xs-12 billing-form-div no-padding">
            <div class="col-md-4 col-lg-4 col-sm-4 col-xs-12 no-padding">
                <div class="billing-inner-label">
                    <label class="lbl-required">In-Kind Entry Period</label>
                </div>
            </div>
            <div class="col-md-8 col-lg-8 col-sm-8 col-xs-12">
                <div class="billing-inner">



                  @*  @Html.DropDownList("ddlProgramYear", ), new { @class = "billing-select1 ddlProgramYear" })*@

                    <select class="billing-select1 inkindPeriodSelect" id="inkindPeriodSelect">

                        <option value="0">--Select--</option>

                        @foreach (var item in (List<FingerprintsModel.InkindPeriods>)ViewBag.InkindPeriodList)
                        {
                            <option value="@item.InkindPeriodID">@string.Concat(item.StartDate," - ",item.EndDate)</option>
                        }

                    </select>

                    <input type="hidden" class="inkind-id" />
                </div>
            </div>
        </div>





                        <div class="col-xs-12 billing-form-div no-padding">
                            <div class="col-md-4 col-lg-4 col-sm-4 col-xs-12 no-padding">
                                <div class="billing-inner-label">
                                    <label class="lbl-required">Hours</label>

                                </div>
                            </div>
                          



                            <div class="col-md-8 col-lg-8 col-sm-8 col-xs-12">
                                <div class="billing-inner">
                                    <div class="input-group">
                                        <span class="input-group-addon" id="basic-addon1">
                                            <span class="glyphicon glyphicon-time">

                                            </span>
                                        </span>
                                        <input type="text" id="txtHours" class="form-control txt-empty decimal txt-date" value="">

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 billing-form-div no-padding">
                            <div class="col-md-4 col-lg-4 col-sm-4 col-xs-12 no-padding">
                                <div class="billing-inner-label">
                                    <label class="lbl-required">Dollars</label>

                                </div>
                            </div>

                            


                            <div class="col-md-8 col-lg-8 col-sm-8 col-xs-12">
                                <div class="billing-inner">
                                    <div class="input-group">
                                        <span class="input-group-addon" id="basic-addon1">
                                            <span class="glyphicon glyphicon-usd">

                                            </span>
                                        </span>
                                        <input type="text" id="txtDollars" class="form-control txt-empty decimal txt-date" value="">
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-6">

                    </div>
                    <div class="col-xs-12" style="margin-bottom:20px;">
                        <div class="billing-sub-btn">

                            <a href="javascript:void(0);" class="btn-submit">SUBMIT</a>
                            <a href="javascript:void(0);" class="btn-Clear">CLEAR</a>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-xs-12 billing-dt-section">
                <div class="col-xs-12 billing-dt">
                    <table class="col-md-12 table-striped table-condensed cf table-change bill-table">
                        <thead class="table-hd">
                            <tr>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Hours</th>
                                <th>Dollars</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody class="bill-table-head"></tbody>
                    </table>
                </div>
                <div style="margin-bottom: 50px;height: 2px;"></div>
            </div>
        </div>
    </div>





    <script src="~/Content/scriptchild/jquery.mCustomScrollbar.min.js"></script>
    <script>


        var inkindperiodJson=@Html.Raw(Json.Encode(ViewBag.InkindPeriodList));
        console.log(inkindperiodJson);
        $(function () {



            //$('#InkindPeriodList_0_StartDate').datetimepicker({
            //    mask: true,
            //    timepicker: false,
            //    format: 'm/d/Y',

            //});

            //$('#InkindPeriodList_0_EndDate').datetimepicker({
            //    mask: true,
            //    timepicker: false,
            //    format: 'm/d/Y',

            //});


            //$('.dates-icon').on('click', function () {

            //    $(this).siblings('input:text').datetimepicker('show');


            //});


            $('#inkindPeriodSelect').on('change',function(){


                if($(this).val()=='0')
                {

                    $('#txtHours,#txtDollars').val('');

                    return false;
                }
                GetInkindBudget(parseInt($(this).val()),bindInkindOptions);

            });


            $('#txtHours').on('input', function (e) {


                if (parseFloat($(this).val()).toString() == 'NaN') {
                    e.preventDefault();
                    return false;
                }
            });

            //var regExp = /[a-z]/i;
         

            //$('#txtDollars').on('keydown keyup',function(e){

              


           
            //    var regex='[a-zA-Z]';
            //    // No letters
            //    if (regex.test(String.fromCharCode(e.which))) {
            //        e.preventDefault();
            //        return false;
            //    }

            //    FormatCurrency(this);
                
              

            //});


            
            $.fn.noMask = function(regex) { 
                this.on("keypress paste keyup blur", function(e) {

                
                    if (regex.test(String.fromCharCode(e.which))) {
                        return false;
                    }
                   
                }).on('input',function(){
                    FormatCurrency(this);
                });
            }

           
            $("#txtDollars").noMask ( /[^0-9]/g );

            $('#txtHours').noMask( /[^0-9]/g );

            GetInkindBudget(0,bindInkindBudget);


            $('.btn-submit').click(function () {
                //  if (ValidateAddressChange()) {
                var allow = true;
                cleanValidation();
                debugger;
                //if ($('#ddlProgramYear').val() == "0") {
                //    plainValidation('#ddlProgramYear');
                //    customAlert("Program Year is mandatory");
                //    allow = false;
                //    return false;
                //}

    
                var $inkindPeriod=$('#inkindPeriodSelect')

                var $hours = $('#txtHours');
                var $dollars = $('#txtDollars');

                
                if($inkindPeriod.val()==null || $inkindPeriod.val()=='' || $inkindPeriod.val()=='0')
                {
                    plainValidation($inkindPeriod);
                    customAlert("In-Kind entry period is mandatory");
                    allow = false;
                    return false;
                }

                else if ($hours.val() == "") {
                    plainValidation($hours);
                    customAlert("Hours is mandatory");
                    allow = false;
                    return false;
                }

                if (parseFloat($hours.val()).toString() == "NaN") {
                    plainValidation($hours);
                    customAlert("Please enter valid hours");
                    allow = false;
                    return false;
                }
                if ($dollars.val() == "") {
                    plainValidation($dollars);
                    customAlert("Dollars is mandatory");
                    allow = false;
                    return false;
                }
                if (parseFloat($dollars.val()).toString() == "NaN") {
                    plainValidation($dollars);
                    customAlert("Please enter valid dollars");
                    allow = false;
                    return false;
                }


                if (allow) {
                    var Inkind = {};

                    if ($('.inkind-id').val().trim() != "")
                        Inkind.Id = $('.inkind-id').val().trim();
                    Inkind.InkindPeriodID = $('#inkindPeriodSelect').val();
                    Inkind.Hours = $('#txtHours').val() == undefined || $('#txtHours').val() == "" ? "0" : $('#txtHours').val().replace(',','').trim();
                    Inkind.Dollers = $('#txtDollars').val() == undefined || $('#txtDollars').val() == "" ? "0" : $('#txtDollars').val().replace(',','').trim();
                 
                    Inkind = JSON.stringify({ 'inkind': Inkind });

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: "POST",
                        async: false,
                        url: "/Home/SaveInkind",
                        data: Inkind,
                        success: function (data) {
                            customAlertSuccess("Record Saved Successfully");
                            Clear();
                            GetInkindBudget(0,bindInkindBudget);
                        },
                        error: function (data) {
                            console.log('Error');
                        }
                    });
                }


                //  }
            });

            $('body').on('click', '.Edit', function () {
                var currentrow = $(this).closest('tr');
              
                $('#txtHours').val(currentrow.find('td').eq(2).text().replace('$', '').trim());
                $('#txtDollars').val(currentrow.find('td').eq(3).text().replace('$', '').trim());

                $('.inkind-id').val(currentrow.attr('inkindid'));

                $('.inkindPeriodSelect').val(currentrow.data('inkind-period'));
                $('.inkindPeriodSelect').attr('disabled', true);

            });

            $('body').on('click', '.dropdown', function () {
                setTimeout(function ()
                { $('.dropdown').addClass('open'); }, 100);
            });
            $('.btn-Clear').click(function () {
                Clear();
            });
            $('body').on('click', '.Delete', function () {
                var id = $(this).closest('tr').attr('inkindid');
                BootstrapDialog.confirm('Do you want to delete this record?', function (result) {
                    if (result) {
                        Delete(id);
                    }
                });
            });

            function Delete(Id) {
                $.ajax({
                    type: "POST",
                    url: "/Home/DeleteInkind",
                    data: { 'Id': Id },
                    success: function (data) {
                        if (data) {
                            customAlertSuccess("Record Deleted Successfully");
                            Clear();
                            GetInkindBudget(0,bindInkindBudget);
                        }

                    },
                    error: function (data) {
                        console.log('Error');
                    }
                });
            }
            function Clear() {
                $('#inkindPeriodSelect').val('0');
                $('#txtHours,.inkind-id,#txtDollars').val("");
                $('.inkindPeriodSelect').attr('disabled', false);
            }
            function GetInkindBudget($inkindPeriodId,callback) {
                $.ajax({
                    type: "POST",
                    url: "/Home/GetInkindByUserId",
                    data:{inkindPeriodId:$inkindPeriodId},
                    success: function (data) {
                    
                        callback(data);
                    },
                    error: function (data) {
                        console.log('Error');
                    }
                });
            }

            function bindInkindBudget(data)
            {
                $('.bill-table-head').empty();

                var Template = '<tr inkindid="##ID##" data-inkind-period="##PERIOD##">\
                                 <td data-title="Start Date">\
                                     <div class="">\
                                         <p class="Program-Type">##StartDate##</p>\
                                     </div>\
                                 </td>\
                                <td data-title="End Date">\
                                     <div class="">\
                                         <p class="Program-Type">##EndDate##</p>\
                                     </div>\
                                 </td>\
                                 <td class="td-decimal" data-title="Hours">\
                                     <div class="">\
                                         <p style="text-align: right;">##Hours##</p>\
                                     </div>\
                                 </td>\
                                 <td class="td-decimal" data-title="Dollers">\
                                     <div class="">\
                                         <p style="text-align: right;">##Dollers##</p>\
                                     </div>\
                                 </td>\
                                 <td data-title="Edit">\
                                     <div class="">\
                                         <div class="Edit"><a href="javascript:void(0);"><img src="/Content/imagechild/edit_icon.png"></a></div>\
                                     </div>\
                                 </td>\
                                 <td data-title="Delete">\
                                     <div class="">\
                                         <div class="Delete"><a href="javascript:void(0);"><img src="/Content/imagechild/delete-icon.png"></a></div>\
                                     </div>\
                                 </td>\
                             </tr>';

                var JsonData = JSON.parse(data);
                console.log(JsonData);
                if (JSON.parse(data).length > 0) {
                    if (JSON.parse(data).length > 1) {
                        $.each(JSON.parse(data), function (i, val) {
                            var input = Template;
                            input = input.replace("##ID##", val["id"]);
                            input=input.replace("##PERIOD##",val["InkindPeriodID"])
                            input = input.replace("##StartDate##", val["StartDate"]);
                            input = input.replace("##EndDate##", val["EndDate"]);
                            input = input.replace("##Hours##", val["Hours"].split('.')[0]);
                            input = input.replace("##Dollers##", val["Budget"].split('.')[0]);

                            $('.bill-table-head').append(input);

                            if(val["Closed"]==true)
                            {
                                $('.bill-table-head').find('tr:eq('+i+')').find('.Edit').hide();
                                $('.bill-table-head').find('tr:eq('+i+')').find('.Edit').hide();
                            }
                          
                        });
                    }
                    else {
                        var input = Template;
                        input = input.replace("##ID##", JsonData[0].id);
                        input=input.replace("##PERIOD##",JsonData[0].InkindPeriodID);
                        input = input.replace("##StartDate##", JsonData[0].StartDate);
                        input = input.replace("##EndDate##", JsonData[0].EndDate);
                        input = input.replace("##Hours##", JsonData[0].Hours.split('.')[0]);
                        input = input.replace("##Dollers##", JsonData[0].Budget.split('.')[0]);

                        $('.bill-table-head').append(input);
                    }
                }
            }

            function bindInkindOptions(data)
            {
                console.log(data);
                data=JSON.parse(data);
                debugger;
                if(data!=null && data.length>0)
                {
                    $('#txtHours').val(data[0].Hours.split('.')[0]);
                    $('#txtDollars').val(data[0].Budget.split('.')[0].replace('$',''));
                    $('.inkind-id').val(data[0].id);
                    $('.inkindPeriodSelect').val(data[0].InkindPeriodID);
                  
                }
               
            }

            function FormatCurrency(ctrl) {
                //Check if arrow keys are pressed - we want to allow navigation around textbox using arrow keys
                if (event.keyCode == 37 || event.keyCode == 38 || event.keyCode == 39 || event.keyCode == 40) {
                    return;
                }

                var val = ctrl.value;

                val = val.replace(/,/g, "")
                ctrl.value = "";
                val += '';
                x = val.split('.');
                x1 = x[0];
                x2 = x.length > 1 ? '.' + x[1] : '';

                var rgx = /(\d+)(\d{3})/;

                while (rgx.test(x1)) {
                    x1 = x1.replace(rgx, '$1' + ',' + '$2');
                    console.log(x1);
                }

                ctrl.value = x1 + x2;
            }

            function CheckNumeric() {
                return event.keyCode >= 48 && event.keyCode <= 57 || event.keyCode == 46;
            }

            function addCommas(nStr) {

                nStr=nStr.replace('$','');
                nStr=nStr.replace(',','');
                nStr += '';
                var x = nStr.split('.');
                var x1 = x[0];
                var x2 = x.length > 1 ? '.' + x[1] : '';
                var rgx = /(\d+)(\d{3})/;
                while (rgx.test(x1)) {
                    x1 = x1.replace(rgx, '$1' + ',' + '$2');
                }
                return x1 + x2;
            }

          
        });

    </script>
}


