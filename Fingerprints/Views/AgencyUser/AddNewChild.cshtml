@model FingerprintsModel.FamilyHousehold
@{
    @section Title
    {
        Add New Child
    }


    ViewBag.Title = "AddNewChild";
    // Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";
    Layout = (Session["RoleId"].ToString() == "a65bb7c2-e320-42a2-aed4-409a321c08a5" || Session["RoleId"].ToString() == "3b49b025-68eb-4059-8931-68a0577e5fa2") ? "~/Views/Shared/AgencyAdminLayout.cshtml" : "~/Views/Shared/AgencyStaffLayout.cshtml";

}

@section Style{


    <style type="text/css">
                /*@@media only screen and (min-width:768px) and (max-width:1200px) {
                .title-fixed {
            position: static;
            padding-left: 0;
        }
                .protype-solid span textarea {
            height: 50px;
            width: 100% !important;
        }
                .protype-solid span {
            width: 55% !important;
            float: left;
        }
                    .protype-solid label {
                    width: 45% !important;float: left;
                    }
                .protype-solid label input {
            width: 30px !important;
            float: left;
        }
                }
                .edu-protextarea textarea {
            width: 65%;
            float: left;
            height: 60px;
            margin-bottom: 15px;
            max-width:65%;
        }
                .protype-solid span textarea {
            height:  50px;
            width: 60%;
        }
                .protype-solid {
            width:  100%;
            float:  left;
            margin-bottom: 15px;
        }

        .protype-solid label {
            width: 30%;
            float:  left;
        }

        .protype-solid span {
            width:  70%;
            float:  left;
        }*/










                .billing-inner-label label, .billing-inner-label span {
                    color: #333;
                    font-weight: normal !important;
                    font-size: 15px;
                    margin-bottom: 0;
                    margin-top: 10px;
                }

                .bill-radio {
                    margin: 0.5rem;
                    display: inline-block;
                }

                    .bill-radio input[type="radio"] {
                        position: absolute;
                        opacity: 0;
                    }

                .billing-inner input {
                    background: transparent;
                    color: #333;
                    border: 1px solid #333;
                    border-radius: 8px !important;
                    height: 40px;
                }

                .bill-radio label {
                    padding-left: 0;
                    color: #333;
                }

                .bill-radio input[type="radio"]:checked + .radio-label:before {
                    background-color: #295b8f;
                    box-shadow: inset 0 0 0 4px #fff;
                }

                .bill-radio input[type="radio"] + .radio-label:before {
                    content: '';
                    background: none;
                    border-radius: 100%;
                    border: 1px solid #333;
                    display: inline-block;
                    width: 1.4em;
                    height: 1.4em;
                    position: relative;
                    top: -0.2em;
                    margin-right: 1em;
                    vertical-align: top;
                    cursor: pointer;
                    text-align: center;
                    -webkit-transition: all 250ms ease;
                    transition: all 250ms ease;
                }

                .control-label {
                    width: 35%;
                }

                .ch-form .form-group {
                    min-height: initial;
                    padding-bottom: 10px;
                }

                .screeenig-table {
                    text-align: center;
                    border: 1px solid #e7e7e7;
                    border-radius: 5px;
                    width: 100%;
                    max-width: 98%;
                    margin: 1% auto 4%;
                }

                .section-screen {
                    text-align: center;
                    width: 100%;
                    float: left;
                }

                .screeenig-table thead th {
                    background-color: #295b8f;
                    color: #fff;
                }

                /*.fill-part {
                width: 100%;
                float: left;
                border: 1px solid #295b8f;
                max-width: 98%;
                margin: 0 1%;
                border-radius: 4px;
                background-color: #f1f5f8;
            }

                .fill-part h2 {
                    margin: 0px 0 24px 0;
                    padding: 12px 0 !important;
                    width: 100%;
                    float: left;
                    background-color: #295b8f;
                    color: #fff;
                }*/

                .btn-iview {
                    background-color: #295b8f;
                    color: #fff;
                    padding: 7px 18px;
                    font-weight: 600;
                }

                    .btn-iview:hover, .btn-iview:focus {
                        background-color: #183f67;
                        color: #fff;
                    }

                .screeenig-table tbody td {
                    background-color: #f7f7f7;
                }

                .import-filetpr {
                    width: 100%;
                    float: left;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    margin: 0 0 8px 0;
                }

                    .import-filetpr label:hover {
                        margin: 0px;
                    }

                    .import-filetpr label {
                        color: #fff;
                        cursor: pointer;
                        float: left;
                        margin: 0;
                    }

                    .import-filetpr span {
                        float: left;
                        padding: 20px 0px 0 5px;
                        font-size: 16px;
                    }

                /*.my-btn:hover {
                     padding: 8px 20px;
                 }*/

                .backto_list:hover, .backto_list:active, .backto_list:focus {
                    color: #fff;
                    text-decoration: none;
                    outline: none;
                }

        @@media only screen and (min-width:768px) and (max-width:1330px) {


            #HSHealth a[data-toggle="modal"]
            {
                margin-left:0!important;
            }
        }
    </style>


}

@section Script{
    <script type="text/javascript">
        var ssnoriginalvalue = null;
        var isUpdate = false;
        function setDisability() {

            var IsProgramchecked = false;
            var isEHS = false;
            $('#forexpire').hide();
            $('#IsIFSP')[0].checked = false;
            $('#IsIEP')[0].checked = false;
            $('#IsExpired')[0].checked = false;
            if ($('#CParentdisable1')[0].checked) {
                $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {
                        IsProgramchecked = true;
                        if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                            isEHS = true;
                        }
                    }
                });

            } else {
                $('#IsIFSP')[0].checked = false;
                $('#IsIEP')[0].checked = false;
                $('#IsExpired')[0].checked = false;
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            if (!IsProgramchecked) {
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            else {
                $('#disablity').show();
                if (isEHS) {

                    $('#forehs').show();
                    $('#forhs').hide();
                }
                else {

                    $('#forehs').hide();
                    $('#forhs').show();
                }
            }

        }
        function IEPorIFSP_Checked() {
            if ($('#IsIEP')[0].checked || $('#IsIFSP')[0].checked) {
                $('#forexpire').show();
            } else {
                $('#forexpire').hide();
            }
        }
        $(document).ready(function () {



            $('.backto_list').on('click', function () {

                $('#spinner').show();
            });

            $('#getScreening').on('click', function () {
                debugger;
                var arrlist = $.map($('#customChecklist').find('input:checkbox:checked'), function (ele, i) {

                    return $(ele).attr('accesskey');

                });

                arrlist = $.unique(arrlist);

                arrlist = (arrlist.length > 0) ? arrlist[0] : 0;

                var clientID = $('#ChildId').val();





                $('#spinner').show();

                $('#ApplicationScreening').find('#screeningDivStart').load('@Url.Action("GetScreeningByRefProg", "AgencyUser")', { clientID: clientID, refProg: arrlist }, function (response, status, xhr) {
                    $('#ApplicationScreening').find('#screeningDivStart').html(response);

                    $('#spinner').hide();

                    $('#ApplicationScreening').find('#screeningDivStart').find('.Sdate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

                    $('#scrSig').signature();

                    if ($('#ApplicationScreening').find('#ParentSignature').length>0) {
                        var parentsig = $('#ApplicationScreening').find('#ParentSignature').val();
                        if (parentsig.length > 0) {
                            $('#scrSig').signature('draw', parentsig)
                        }
                    }


                    $('#ApplicationScreening').find('.modal-content').height(window.height - ((window.height * 2.6) / 100));

                    var divstartHeight = (window.height - ((window.height * 23.68) / 100));
                    $('#ApplicationScreening').find('#screeningDivStart').css('max-height', divstartHeight);

                    //   $('#ApplicationScreening').find('.tab-content').css('max-height', divstartHeight);


                    //  $('#ApplicationScreening').find('.tab-content').css('max-height', (window.height - ((window.height * 40.7) / 100)))

                    $('#ApplicationScreening').modal('show');
                });

            });


            //$('#WellBabyDoc').change(function () {
            //    var val = $(this).val();
            //    var fname = val.substr(val.lastIndexOf("\\") + 1, val.length);
            //    $('#filename').text(fname);

            //});

            //$('#AddPhyExamDetailsPopUp').on('hidden.bs.modal', function (e) {
            //    cleanValidation();
            //    $('.txt-clear').val('');
            //});
            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');
                    // $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                }
            });
            if ($('#CParentdisable1')[0].checked) {
                $('#disablity').show();
            } else {
                $('#disablity').hide();
            }
            $('#RecentDentalExam').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#AssessmentDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#HSProfessionalDentalExam').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            try {

                $("#CDoctor").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDoctor",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        //   label: item.Fname, id: item.CommunityID
                                        label: item.MedicalCenter, id: item.CommunityID //Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#Doctor').val(ui.item.id);
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }
            try {
                $("#CDentist").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDentist",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {

                                response($.map(data, function (item) {
                                    return {
                                        //  label: item.Fname, id: item.CommunityID
                                        label: item.DentalCenter, id: item.CommunityID//Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#Dentist').val(ui.item.id);
                    },

                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }
            $("#CSSN").mask("999-99-9999");
            $('#CDOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#DOBverifiedBy').val('');
            $('#CRace').val('');
            $('#CEthnicity').val('');
            $('#Medicalhome').val('');
            $('#CDentalhome').val('');
            $('#InsuranceOption').val('');
            $('#SchoolDistrict').val('');
            $('#ImmunizationService').val('');
            $('#BMIStatus').val('');
            $('#FoodPantory').val('');
            $('#DdlChildhungry').val('');
            $('#DdlChildFeed').val('');
            $('#DdlChildFormula').val('');
            $('#ChildFeedCereal').val('');
            $('#ChildFeedMarshfood').val('');
            $('#ChildFeedChopedfood').val('');
            $('#ChildFingerFood').val('');
            $('#ChildFruitJuice').val('');
            $('#ChildReferalCriteria').val('');
            $('#Allow30DayPhysical').hide();
            $('#Allow45DayVisionScreening').hide();
            $('#Allow45DayHearingScreening').hide();
            $('#Allow45DayDevelopmentalScreening').hide();
            $('#Allow90DayDentalScreening').hide();
            $('#ScreeningAcceptance').hide();
            $('#AllowSpeechScreening').hide();
            $('#Parentscreening').val('@Model.Pfirstname');
            $('#CTransportNeeded1').prop("checked", false);
            $('#CTransportNeeded2').prop("checked", false);

            $('#customChecklist input[type=checkbox]').change(function () {
                var exist1 = false;
                var exist2 = false;
                var programtype = null;
                $('#HSHealth').hide();
                $('#EHSHealth').hide();
                //Changes by Akansha on 19Dec2016
                $('#Nutrition').hide();
                $('#EhsNutrition1').hide();

                //End
                $('#customChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).attr("accesskey") == 1)
                            exist1 = true;
                        if ($(this).attr("accesskey") == 2)
                            exist2 = true;
                        programtype = $(this).attr("accesskey");
                    }
                });
                if (exist1 == true || exist2 == true) {
                    $('#Screening1').show();
                }
                else
                    $('#Screening1').hide();
                //added on 12-26-2016 rohit rawat
                $('.customallowscreening').each(function () {
                    if ($(this).attr("accesskey") == programtype) {
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });
                if (exist1 == true && exist2 == true) {
                    customAlert('Cannot select Head Start or Early Head Start program together.');
                    $(this).prop("checked", false);
                    exist1 = false;
                    exist2 = false;
                }
                if (exist1) {
                    $('#CDBRText').html('');
                    $('#CDCText').html('');
                    $('#CCHText').html('');
                    $('#CTCHText').html('');
                    $('#CDBRlist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#MedicalChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                }
                if (exist2) {
                    //03082016
                    $('#EHSCDBRText').html('');
                    $('#EHSCDCText').html('');
                    $('#EHSCHCText').html('');
                    $('#EHDCDCText').html('');
                    $('#EHSCCHText').html('');
                    $('#EHSCTCHText').html('');
                    $('#CDBRlist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#EHSChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#EHSCHCChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#MedicalChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                }


                $('#customChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).attr("accesskey") == 1)
                            $('#_childprogrefid').val("1");
                        if ($(this).attr("accesskey") == 2)
                            $('#_childprogrefid').val("2");
                    }
                });



            });
            if ('@Model.CSSN' != "") {

                var res = '@Model.CSSN';
                len = res.length;
                max = 11;
                stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                result = stars + res.substring(7);
                $('#CSSN').val(result);
                ssnoriginalvalue = '@Model.CSSN';
            }
            $("#CSSN").blur(function () {

                if (ssnoriginalvalue != null) {
                    var sss = $('#CSSN').val();
                    if ($('#CSSN').val().trim() == "") {
                        var res = ssnoriginalvalue;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '***' : '*' : '';
                        result = stars + res.substring(7);
                        $('#CSSN').val(result);
                    }
                }
            });




            //GetChildid

            $('#CDOB').removeAttr("readonly");



            if ('@Session["Roleid"]' != "a31b1716-b042-46b7-acc0-95794e378b26") {
                if ($('#ChildId').val() != "0") {
                    $('#CDOB').attr("readonly", "readonly");
                    $('#customChecklist input[type=checkbox]').each(function () {
                        $(this).attr("onclick", "return false");
                    });
                    $('#CGenderfemale').attr("onclick", "return false");
                    $('#CGendermale').attr("onclick", "return false");
                    $('#CGenderother').attr("onclick", "return false");

                    if ($('title').html().trim() == 'Add New Child') {
                        Getchild();
                    }

                }
            }
            if ('@Session["Roleid"]' == "a31b1716-b042-46b7-acc0-95794e378b26") {


                if ($('#ChildId').val() != "0") {
                    if ($('#viewBagText').val() == "ChildDetails") {
                        GetHschild();
                    }
                    else {
                        Getchild();
                    }


                }

            }

        });


        function validatedates(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(inputTextObject).val())) {
                    customAlert("Invalid date.");
                    $(inputTextObject).val('');
                }
            }

        }

        function setDisability() {

            var IsProgramchecked = false;
            var isEHS = false;
            if ($('#CParentdisable1')[0].checked) {
                $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {
                        IsProgramchecked = true;
                        if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                            isEHS = true;
                        }
                    }
                });

            } else {
                $('#IsIFSP')[0].checked = false;
                $('#IsIEP')[0].checked = false;
                $('#IsExpired')[0].checked = false;
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            if (!IsProgramchecked) {
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            else {
                $('#disablity').show();
                if (isEHS) {
                    $('#forehs').show();
                    $('#forhs').hide();
                }
                else {
                    $('#forehs').hide();
                    $('#forhs').show();
                }
            }

        }


        function Getchild(Childid, HouseHoldId) {

            $.ajax({
                url: HostedDir + "/AgencyUser/Getchild",
                type: "POST",
                data: {
                    ChildId: $('#ChildId').val(),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {

                    EditChild(data);
                    SetCustomData(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }
        //Changes on 20Dec2016
        function EditChild(data) {
            $('#ScreeningDiv').find('input:text,select').each(function (j, element) {
                $(element).val('');
            });
            $('#Health').hide();

            $('#EHSHealth').hide();
            $('#HSHealth').hide();
            $('#Nutrition').hide();
            $('#ChildId').val(data.ChildId);
            $('#Cfirstname').val(data.Cfirstname);
            $('#Cmiddlename').val(data.Cmiddlename);
            $('#Clastname').val(data.Clastname);
            $('#Physical').hide();
            $('#Vision').hide();
            $('#Hearing').hide();
            $('#Develop').hide();
            $('#Dental').hide();
            $('#Speech').hide();
            $('#disablity').hide();
            $('#childnameheading').text(data.Cfirstname + (data.Cmiddlename == "" ? " " + data.Clastname : " " + data.Cmiddlename + " " + data.Clastname));
            //Changes Transportation
            if (data.CTransport != null && data.CTransport != "") {
                if (data.CTransport == true) {
                    $('#ChildTransport').show();

                }

                else
                    $('#ChildTransport').hide();
            }
            else {
                $('#ChildTransport').hide();
            }

            if (data.CTransportNeeded != null) {
                if (data.CTransportNeeded == true) {
                    $('#CTransportNeeded1').prop("checked", true);
                    $('#transport-pop-div').show();
                }
                else {
                    $('#CTransportNeeded2').prop("checked", true);
                    $('#transport-pop-div').hide();
                }

            }
            else {
                $('#CTransportNeeded1').prop("checked", false);
                $('#CTransportNeeded2').prop("checked", false);
            }
            //End
            $('.panel - body3').show();
            var $this = $('.clickable3');
            $this.parents('.panel3').find('.panel-body3').slideDown();
            $this.removeClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            $('#customChecklist input[type=checkbox]').each(function () {
                $(this).prop("checked", false);
                $('#Screening1').hide();
            });
            if (data.AvailableProgram != null && data.AvailableProgram.length > 0) {
                for (var i = 0; i < data.AvailableProgram.length; i++) {
                    if (data.AvailableProgram[i].ReferenceId == 1) {
                        $('#Screening1').show();
                        $('#_childprogrefid').val("1");
                    }
                    if (data.AvailableProgram[i].ReferenceId == 2) {
                        $('#Screening1').show();
                        $('#_childprogrefid').val("2");

                    }


                   


                    $('#customChecklist input[type=checkbox]').each(function () {


                        if ($(this).val() == data.AvailableProgram[i].Id && data.AvailableProgram[i].IsSelected == true) {
                            $(this).prop("checked", true);
                            $(this).parent('div').show();

                            $('.import-filetpr').hide();
                          
                            $('.DivScreenFields').show();
                        }
                        else if ($(this).val() == data.AvailableProgram[i].Id && data.AvailableProgram[i].IsShow) {
                            $(this).parent('div').show();
                        }

                        //if ($(this).val() == data.AvailableProgram[i].Id && data.AvailableProgram[i].IsSelected == true) {
                        //    $(this).prop("checked", true);

                            //if ($(this).val() == 10064 || $(this).val() == 10065) // id of EHS
                            //{
                            //    $('#PhysicalScreen label').html("Well Baby Exam <sup>*</sup>");
                            //    $('#PhysicalScreen').find('#Physical').remove();
                            //    $('.DivForScreening').show();
                            //    $('#myTab').find('#Physical a').text("Well Baby Exam");
                            //    PhysicalExamDates(data.PhysicalExamDates);
                            //    $('.DivScreenFields').hide();
                            //    $('#Allow30DayPhysical').hide();

                            //}
                            //else {
                            //    $('.import-filetpr').hide();
                            //    $('#WellBabyExamMonth').val("");
                            //    $('.DivScreenFields').show();
                            //}

                          

                        

                    });
                }
            }



            if ($('#_childprogrefid').val() == "1") {
                if (data.EhsChildBorn == 1)
                    $('#EhsChildBorn1').prop("checked", true);
                else if (data.EhsChildBorn == 2)
                    $('#EhsChildBorn2').prop("checked", true);
                else if (data.EhsChildBorn == 3)
                    $('#EhsChildBorn3').prop("checked", true);
                else {
                    $('#EhsChildBorn1').prop("checked", false);
                    $('#EhsChildBorn2').prop("checked", false);
                    $('#EhsChildBorn3').prop("checked", false);
                }
                $('#EhsChildBirthWt').val(data.EhsChildBirthWt);
                $('#EhsChildLength').val(data.EhsChildLength);
                if (data.EhsChildProblm == 1) {
                    $('#EhsChildProblm1').prop("checked", true);
                    $('#EHSBabyOrMotherProblems').val(data.EHSBabyOrMotherProblems);

                    $('#DivEhsChildProblm').show();
                }
                else if (data.EhsChildProblm == 2) {
                    $('#EhsChildProblm2').prop("checked", true);
                    $('#EHSBabyOrMotherProblems').val(data.EHSBabyOrMotherProblems);
                    $('#DivEhsChildProblm').hide();
                }
                else {
                    $('#EhsChildProblm1').prop("checked", false);
                    $('#EhsChildProblm2').prop("checked", false);
                    $('#EHSBabyOrMotherProblems').val("");
                    $('#DivEhsChildProblm').hide();

                }
                if (data.EhsMedication == 1) {
                    $('#EhsMedication1').prop("checked", true);
                    $('#EHSChildMedication').val(data.EHSChildMedication);

                    $('#DivEhsMedication').show();
                }
                else if (data.EhsMedication == 2) {
                    $('#EhsMedication2').prop("checked", true);
                    $('#EHSChildMedication').val("");
                    $('#DivEhsMedication').hide();
                }
                else {
                    $('#EhsMedication1').prop("checked", false);
                    $('#EhsMedication2').prop("checked", false);
                    $('#EHSChildMedication').val("");
                    $('#DivEhsMedication').hide();
                }
                $('#EhsComment').val(data.EhsComment);
                //08032016
                $('#EHSCDBRText').html('');
                $('#EHSCDCText').html('');
                $('#EHSCHCText').html('');
                $('#EHDCDCText').html('');
                $('#EHSCCHText').html('');
                $('#EHSCTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#CDBRText').html('');
                $('#CDCText').html('');
                $('#CCHText').html('');
                $('#CTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });

                ///ChildDirectBloodRelative Popup
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#CDBRlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "1") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#CDBRlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDBRText').append(div);
                    }
                });
                //Diagnosed Conditions pop
                var count = 0;
                $('#DivEHSAllergy').hide();
                $('#DivEHSEpiPen').hide();
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "2") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#DiagnoseChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                    if (data._Childhealthnutrition[i].MasterId == 1)
                                        count = 1;
                                });
                            }
                        }
                    }
                    if (count == 1) {
                        $('#DivEHSAllergy').show();
                        $('#DivEHSEpiPen').show();
                        $('#EHSAllergy').val(data.EHSAllergy);
                        if (data.EHSEpiPen == 1) {
                            $('#EHSEpiPen1').prop("checked", true);
                        }
                        else if (data.EHSEpiPen == 2) {
                            $('#EHSEpiPen2').prop("checked", true);
                        }
                        else {
                            $('#EHSEpiPen1').prop("checked", false);
                            $('#EHSEpiPen2').prop("checked", false);
                        }
                    }

                }
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDCText').append(div);
                    }
                });
                // received medical treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#EHSChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "6") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#EHSChildChecklist').append('<br><input  name="PostedPostedMedicalEHS.ChildEHSID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#EHSChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#EHSChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCHCText').append(div);
                    }
                });
                // receiving treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#EHSCHCChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "5") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#EHSCHCChildChecklist').append('<br><input  name="PostedPostedEHS.ChildEHSID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#EHSCHCChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHDCDCText').append(div);
                    }
                });
                //Medical Treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#MedicalChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "4") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#MedicalChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCCHText').append(div);
                    }
                });

                //receive treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#ChronicChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "3") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChronicChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCTCHText').append(div);
                    }
                });
            }
            if ($('#_childprogrefid').val() == "2") {

                if (data.HsChildBorn == 1)
                    $('#ChildBorn1').prop("checked", true);
                else if (data.HsChildBorn == 2)
                    $('#ChildBorn2').prop("checked", true);
                else if (data.HsChildBorn == 3)
                    $('#ChildBorn3').prop("checked", true);
                else {
                    $('#ChildBorn1').prop("checked", false);
                    $('#ChildBorn2').prop("checked", false);
                    $('#ChildBorn3').prop("checked", false);
                }
                $('#ChildBirthWt').val(data.HsChildBirthWt);
                $('#ChildLength').val(data.HsChildLength);
                if (data.HsChildProblm == 1) {
                    $('#ChildProblm1').prop("checked", true);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').show();

                }
                else if (data.HsChildProblm == 2) {
                    $('#ChildProblm2').prop("checked", true);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').hide();
                }
                else {
                    $('#ChildProblm1').prop("checked", false);
                    $('#ChildProblm2').prop("checked", false);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').hide();
                }
                if (data.HsMedication == 1) {
                    $('#Medication1').prop("checked", true);
                    $('#HsMedicationName').val(data.HsMedicationName);
                    $('#Dosage').val(data.HsDosage);
                    $('#HSChildMedication').val(data.HSChildMedication);
                    $('#MedicationName').show();
                    $('#DosageMedication').show();
                    $('#DivSChildMedication').show();

                }
                else if (data.HsMedication == 2) {
                    $('#Medication2').prop("checked", true);
                    $('#HsMedicationName').val("");
                    $('#HsDosage').val("");
                    $('#HSChildMedication').val("");
                    $('#MedicationName').hide();
                    $('#DosageMedication').hide();
                    $('#DivSChildMedication').hide();

                }
                else {
                    $('#Medication1').prop("checked", false);
                    $('#Medication2').prop("checked", false);
                    $('#HsMedicationName').val("");
                    $('#HsDosage').val("");
                    $('#HSChildMedication').val("");
                    $('#MedicationName').hide();
                    $('#DosageMedication').hide();
                    $('#DivSChildMedication').hide();
                }
                //$('#Comment').val(data.HsComment);
                if (data.HsChildDentalCare == 1) {
                    $('#ChildDentalCare1').prop("checked", true);

                    $('#HSPreventativeDentalCare').val(data.HSPreventativeDentalCare);
                    $('#DivHsChildDentalCare').show();
                }
                else if (data.HsChildDentalCare == 2) {
                    $('#ChildDentalCare2').prop("checked", true);
                    $('#HSPreventativeDentalCare').val("");
                    $('#DivHsChildDentalCare').hide();
                }
                else {
                    $('#ChildDentalCare1').prop("checked", false);
                    $('#ChildDentalCare2').prop("checked", false);
                    $('#HSPreventativeDentalCare').val("");
                    $('#DivHsChildDentalCare').hide();
                }
                if (data.HsDentalExam == 1) {
                    $('#DentalExam1').prop("checked", true);

                    $('#DivHsDentalExam').show();
                    $('#HSProfessionalDentalExam').val(data.HSProfessionalDentalExam);
                }
                else if (data.HsDentalExam == 2) {
                    $('#DentalExam2').prop("checked", true);
                    $('#HSProfessionalDentalExam').val("");
                    $('#DivHsDentalExam').hide();
                }
                else {
                    $('#DentalExam1').prop("checked", false);
                    $('#DentalExam2').prop("checked", false);
                    $('#HSProfessionalDentalExam').val("");
                    $('#DivHsDentalExam').hide();
                }
                $('#RecentDentalExam').val(data.HsRecentDentalExam);
                if (data.HsChildNeedDentalTreatment == 1) {
                    $('#ChildNeedDentalTreatment1').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val(data.HSNeedingDentalTreatment);
                    $('#DivHSNeedingDentalTreatment').show();
                }
                else if (data.HsChildNeedDentalTreatment == 2) {
                    $('#ChildNeedDentalTreatment2').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                else if (data.HsChildNeedDentalTreatment == 3) {
                    $('#ChildNeedDentalTreatment3').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                else {
                    $('#ChildNeedDentalTreatment1').prop("checked", false);
                    $('#ChildNeedDentalTreatment2').prop("checked", false);
                    $('#ChildNeedDentalTreatment3').prop("checked", false);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                if (data.HsChildRecievedDentalTreatment == 1) {
                    $('#ChildRecievedDentalTreatment1').prop("checked", true);
                    $('#DivHSChildReceivedDentalTreatment').show();
                    $('#HSChildReceivedDentalTreatment').val(data.HSChildReceivedDentalTreatment);

                }
                else if (data.HsChildRecievedDentalTreatment == 2) {
                    $('#ChildRecievedDentalTreatment2').prop("checked", true);
                    $('#HSChildReceivedDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                else if (data.HsChildRecievedDentalTreatment == 3) {
                    $('#ChildRecievedDentalTreatment3').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                else {

                    $('#ChildRecievedDentalTreatment1').prop("checked", false);
                    $('#ChildRecievedDentalTreatment2').prop("checked", false);
                    $('#ChildRecievedDentalTreatment3').prop("checked", false);
                    $('#HSChildReceivedDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                $('#CDBRText').html('');
                $('#CDCText').html('');
                $('#CCHText').html('');
                $('#CTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCDBRText').html('');
                $('#EHSCDCText').html('');
                $('#EHSCHCText').html('');
                $('#EHDCDCText').html('');
                $('#EHSCCHText').html('');
                $('#EHSCTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#CDBRlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "1") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#CDBRlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }

                    $('#CDBRlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDBRText').append(div);
                        }
                    });

                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "2") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#DiagnoseChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDCText').append(div);
                        }
                    });

                    $('#MedicalChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "4") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#MedicalChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#MedicalChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CCHText').append(div);
                        }
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "5") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChronicChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChronicChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CTCHText').append(div);
                        }
                    });
                }
            }
            $('#CDOB').val(data.CDOB);
            if ($('#CDOB').val() != '') {
                isUpdate = true;
            }
            $('#DOBverifiedBy').val(data.DOBverifiedBy);
            if (data.CSSN != "" && data.CSSN != null) {
                var res = data.CSSN;
                len = res.length;
                max = 11;
                stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                result = stars + res.substring(7);
                $('#CSSN').val(result);
                ssnoriginalvalue = data.CSSN;
            }
            else {
                $('#CSSN').val('');

            }
            if (data.CGender == "1")
                $('#CGendermale').prop("checked", true);
            if (data.CGender == "2")
                $('#CGenderfemale').prop("checked", true);
            if (data.CGender == "3")
                $('#CGenderother').prop("checked", true);
            $('#CRace').val(data.CRace);
            bindsubcategory();
            $('#CRaceSubCategory').val(data.CRaceSubCategory);
            $('#CEthnicity').val(data.CEthnicity);
            $('#Medicalhome').val(data.Medicalhome);
            $('#CDentalhome').val(data.CDentalhome);
            $('#ImmunizationService').val(data.ImmunizationService);
            if (data.MedicalService == 1)
                $('#MedicalService1').prop("checked", true);
            else if (data.MedicalService == 2)
                $('#MedicalService2').prop("checked", true);
            else {
                $('#MedicalService1').prop("checked", false);
                $('#MedicalService2').prop("checked", false);
            }
            $('#BMIStatus').val(data.BMIStatus);
            $('#BMIStatus2').val(data.BMIStatus);
            if (data.CParentdisable == 1)
                $('#CParentdisable1').prop("checked", true);
            else if (data.CParentdisable == 2)
                $('#CParentdisable2').prop("checked", true);
            else {
                $('#CParentdisable1').prop("checked", false);
                $('#CParentdisable2').prop("checked", false);
            }
            $('#CFileName').val(data.CFileName);
            $('#CFileExtension').val(data.CFileExtension);
            $('#Imagejson').val(data.Imagejson);
            if ($('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4 || $('#Medicalhome').val() == 2) {
                $('#addrowC1').show();
                $('#CDoctor').val(data.CDoctor);
                $('#Doctor').val(data.Doctor);

            }
            else
                $('#addrowC1').hide();
            if ($('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4 || $('#CDentalhome').val() == 2) {
                $('#addrowDentist').show();
                $('#CDentist').val(data.CDentist);
                $('#Dentist').val(data.Dentist);
            }
            else
                $('#addrowDentist').hide();
            if (data.DobverificationinPaper)
                $('#DobverificationinPaper').prop("checked", true);
            else
                $('#DobverificationinPaper').prop("checked", false);
            $('#DobFileName').val(data.DobFileName);
            $('#FosterFileName').val(data.FosterFileName);
            $('#SchoolDistrict').val(data.SchoolDistrict);
            if (data.IsFoster == 1) {
                $('#IsFoster1').prop("checked", true);
                $('.verificationFileChoose').removeClass('hidden');
            }

            else if (data.IsFoster == 2) {
                $('#IsFoster2').prop("checked", true);
                $('.verificationFileChoose').addClass('hidden');
            }

            else {
                $('#IsFoster1').prop("checked", false);
                $('#IsFoster2').prop("checked", false);
            }
            if (data.Inwalfareagency == 1)
                $('#Inwalfareagency1').prop("checked", true);
            else if (data.Inwalfareagency == 2)
                $('#Inwalfareagency2').prop("checked", true);
            else {
                $('#Inwalfareagency1').prop("checked", false);
                $('#Inwalfareagency2').prop("checked", false);
            }
            if (data.InDualcustody == 1)
                $('#InDualcustody1').prop("checked", true);
            else if (data.InDualcustody == 2)
                $('#InDualcustody2').prop("checked", true);
            else {
                $('#InDualcustody1').prop("checked", false);
                $('#InDualcustody2').prop("checked", false);
            }
            if (data.InChildCareSubsidy == 1)
                $('#InChildCareSubsidy1').prop("checked", true);
            else if (data.InChildCareSubsidy == 2)
                $('#InChildCareSubsidy2').prop("checked", true);
            else {
                $('#InChildCareSubsidy1').prop("checked", false);
                $('#InChildCareSubsidy2').prop("checked", false);
            }
            $('#ImmunizationFileName').val(data.ImmunizationFileName);
            if (data.ImmunizationinPaper)
                $('#ImmunizationinPaper').prop("checked", true);
            else
                $('#ImmunizationinPaper').prop("checked", false);
            $('#InsuranceOption').val(data.InsuranceOption);
            $('#MedicalNote').val(data.MedicalNote);
            if ($('#CRace').val() == "1e5304d3-6182-483a-8b27-5269a2dd9936") {
                $('#divRaceother').show();
                $('#Raceother').val(data.Raceother);
            }
            else {
                $('#Raceother').val('');
            }



            //for disablility
            $('#IsIFSP')[0].checked = false;
            $('#IsIEP')[0].checked = false;
            $('#IsExpired')[0].checked = false;
            var IsProgramchecked = false;
            var isEHS = false;
            if ($('#CParentdisable1')[0].checked) {
                $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {

                        IsProgramchecked = true;
                        if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                            isEHS = true;
                        }
                    }
                });

            } else {
                $('#disablity').hide();
            }
            if (!IsProgramchecked) {
                $('#disablity').hide();
            }
            else {
                $('#disablity').show();
                if (isEHS) {

                    $('#forehs').show();
                    $('#forhs').hide();
                }
                else {

                    $('#forehs').hide();
                    $('#forhs').show();
                }
            }

            $('#IsIFSP')[0].checked = data.IsIFSP;
            $('#IsIEP')[0].checked = data.IsIEP;
            $('#IsExpired')[0].checked = data.IsExpired;

            if ($('#IsIEP')[0].checked || $('#IsIFSP')[0].checked) {
                $('#forexpire').show();
            } else {
                $('#forexpire').hide();
            }
            //Nutrition data
            //Changes on 20Dec2016 for HS/EHS Nutrition Question
            if ($('#_childprogrefid').val() == "1") {
                //debugger;
                $('#EhsCvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#EhsCDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#EhsCDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.EhsPersistentNausea == 1) {
                    $('#EhsPersistentNausea1').prop("checked", true);

                    $('#EhsNauseaorVomitingcomment').val(data.EhsNauseaorVomitingcomment);
                    $('#divEhsNauseaorVomitingcomment').show();
                }
                else if (data.EhsPersistentNausea == 2) {
                    $('#EhsPersistentNausea2').prop("checked", true);
                    $('#divEhsNauseaorVomitingcomment').hide();
                    $('#EhsNauseaorVomitingcomment').val('');

                }
                else {
                    $('#EhsPersistentNausea1').prop("checked", false);
                    $('#EhsPersistentNausea2').prop("checked", false);
                    $('#EhsNauseaorVomitingcomment').val('');
                    $('#divEhsNauseaorVomitingcomment').hide();
                }
                if (data.EhsPersistentDiarrhea == 1) {
                    $('#EhsPersistentDiarrhea1').prop("checked", true);
                    $('#divEhsdiarrheacomment').show();
                    $('#EhsDiarrheaComment').val(data.EhsDiarrheaComment);

                }
                else if (data.EhsPersistentDiarrhea == 2) {
                    $('#EhsPersistentDiarrhea2').prop("checked", true);
                    $('#EhsDiarrheaComment').val('');
                    $('#divEhsdiarrheacomment').hide();
                }
                else {
                    $('#EhsPersistentDiarrhea1').prop("checked", false);
                    $('#EhsPersistentDiarrhea2').prop("checked", false);
                    $('#EhsDiarrheaComment').val('');
                    $('#divEhsdiarrheacomment').hide();
                }
                if (data.EhsPersistentConstipation == 1) {
                    $('#EhsPersistentConstipation1').prop("checked", true);
                    $('#divEhsPersistentConstipation').show();
                    $('#EhsConstipationcomment').val(data.EhsConstipationcomment);

                }
                else if (data.EhsPersistentConstipation == 2) {
                    $('#EhsPersistentConstipation2').prop("checked", true);
                    $('#EhsConstipationcomment').val('');
                    $('#divEhsPersistentConstipation').hide();

                }
                else {
                    $('#EhsPersistentConstipation1').prop("checked", false);
                    $('#EhsPersistentConstipation2').prop("checked", false);
                    $('#EhsConstipationcomment').val('');
                    $('#divEhsPersistentConstipation').hide();
                }
                if (data.EhsDramaticWeight == 1) {
                    $('#EhsDramaticWeight1').prop("checked", true);
                    $('#divEhsDramaticWeightchange').show();
                    $('#EhsDramaticWeightchangecomment').val(data.EhsDramaticWeightchangecomment);
                }
                else if (data.EhsDramaticWeight == 2) {
                    $('#EhsDramaticWeight2').prop("checked", true);
                    $('#EhsDramaticWeightchangecomment').val('');
                    $('#divEhsDramaticWeightchange').hide();

                }
                else {
                    $('#EhsDramaticWeight1').prop("checked", false);
                    $('#EhsDramaticWeight2').prop("checked", false);
                    $('#EhsDramaticWeightchangecomment').val('');
                    $('#divEhsDramaticWeightchange').hide();
                }
                if (data.EhsRecentSurgery == 1) {
                    $('#EhsRecentSurgery1').prop("checked", true);
                    $('#divEhsRecentSurgery').show();
                    $('#EhsRecentSurgerycomment').val(data.EhsRecentSurgerycomment);


                }
                else if (data.EhsRecentSurgery == 2) {
                    $('#EhsRecentSurgery2').prop("checked", true);
                    $('#EhsRecentSurgerycomment').val('');
                    $('#divEhsRecentSurgery').hide();
                }
                else {
                    $('#EhsRecentSurgery1').prop("checked", false);
                    $('#EhsRecentSurgery2').prop("checked", false);
                    $('#EhsRecentSurgerycomment').val('');
                    $('#divEhsRecentSurgery').hide();
                }
                if (data.EhsRecentHospitalization == 1) {
                    $('#EhsRecentHospitalization1').prop("checked", true);
                    $('#EhsRecentHospitalizationComment').val(data.EhsRecentHospitalizationComment);
                    $('#divEhsRecentHospitalization').show();

                }
                else if (data.EhsRecentHospitalization == 2) {
                    $('#EhsRecentHospitalization2').prop("checked", true);

                    $('#divEhsRecentHospitalization').hide();
                    $('#EhsRecentHospitalizationComment').val('');
                }
                else {
                    $('#EhsRecentHospitalization1').prop("checked", false);
                    $('#EhsRecentHospitalization2').prop("checked", false);
                    $('#EhsRecentHospitalizationComment').val('');
                    $('#divEhsRecentHospitalization').hide();
                }
                if (data.EhsChildSpecialDiet == 1) {
                    $('#EhsChildSpecialDiet1').prop("checked", true);
                    $('#divEhsChildSpecialDiet').show();
                    $('#EhsSpecialDietComment').val(data.EhsSpecialDietComment);
                }
                else if (data.EhsChildSpecialDiet == 2) {
                    $('#EhsChildSpecialDiet2').prop("checked", true);
                    $('#EhsSpecialDietComment').val('');
                    $('#divEhsChildSpecialDiet').hide();

                }
                else {
                    $('#EhsChildSpecialDiet1').prop("checked", false);
                    $('#EhsChildSpecialDiet2').prop("checked", false);
                    $('#EhsSpecialDietComment').val('');
                    $('#divEhsChildSpecialDiet').hide();
                }
                if (data.EhsFoodAllergies == 1) {
                    $('#EhsFoodAllergies1').prop("checked", true);
                    $('#divEhsFoodAllergies').show();
                    $('#EhsFoodAllergiesComment').val(data.EhsFoodAllergiesComment);
                }
                else if (data.EhsFoodAllergies == 2) {
                    $('#EhsFoodAllergies2').prop("checked", true);
                    $('#EhsFoodAllergiesComment').val('');
                    $('#divEhsFoodAllergies').hide();


                }
                else {
                    $('#EhsFoodAllergies1').prop("checked", false);
                    $('#EhsFoodAllergies2').prop("checked", false);
                    $('#EhsFoodAllergiesComment').val('');
                    $('#divEhsFoodAllergies').hide();


                }
                if (data.EhsNutritionalConcern == 1) {
                    $('#EhsNutritionalConcern1').prop("checked", true);
                    $('#divEhsNutritionalConcern').show();
                    $('#EhsNutritionAlconcernsComment').val(data.EhsNutritionAlconcernsComment);

                }
                else if (data.EhsNutritionalConcern == 2) {
                    $('#EhsNutritionalConcern2').prop("checked", true);
                    $('#EhsNutritionAlconcernsComment').val('');
                    $('#divEhsNutritionalConcern').hide();
                }
                else {
                    $('#EhsNutritionalConcern1').prop("checked", false);
                    $('#EhsNutritionalConcern2').prop("checked", false);
                    $('#EhsNutritionAlconcernsComment').val('');
                    $('#divEhsNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#EhsFoodPantory').val(data.EhsFoodPantory);
                if (data.EhschildTrouble == 1) {
                    $('#EhschildTrouble1').prop("checked", true);
                    $('#divEhschildTrouble').show();
                    $('#EhsChewingorSwallowingcomment').val(data.EhsChewingorSwallowingcomment);

                }
                else if (data.EhschildTrouble == 2) {
                    $('#EhschildTrouble2').prop("checked", true);
                    $('#EhsChewingorSwallowingcomment').val('');
                    $('#divEhschildTrouble').hide();
                }
                else {
                    $('#EhschildTrouble1').prop("checked", false);
                    $('#EhschildTrouble2').prop("checked", false);
                    $('#EhsChewingorSwallowingcomment').val('');
                    $('#divEhschildTrouble').hide();
                }
                if (data.Ehsspoon == 1) {
                    $('#Ehsspoon1').prop("checked", true);
                    $('#divEhsSpoonorForkComment').hide();
                    $('#EhsSpoonorForkComment').val('');
                }
                else if (data.Ehsspoon == 2) {
                    $('#Ehsspoon2').prop("checked", true);
                    $('#EhsSpoonorForkComment').val(data.EhsSpoonorForkComment);
                    $('#divEhsSpoonorForkComment').show();
                }
                else {
                    $('#Ehsspoon1').prop("checked", false);
                    $('#Ehsspoon2').prop("checked", false);
                    $('#EhsSpoonorForkComment').val('');
                    $('#divEhsSpoonorForkComment').hide();
                }
                if (data.Ehsfeedingtube == 1) {
                    $('#Ehsfeedingtube1').prop("checked", true);
                    $('#divEhsSpecialFeedingComment').show();
                    $('#EhsSpecialFeedingComment').val(data.EhsSpecialFeedingComment);

                }
                else if (data.Ehsfeedingtube == 2) {
                    $('#Ehsfeedingtube2').prop("checked", true);
                    $('#EhsSpecialFeedingComment').val('');
                    $('#divEhsSpecialFeedingComment').hide();
                }
                else {
                    $('#Ehsfeedingtube1').prop("checked", false);
                    $('#Ehsfeedingtube2').prop("checked", false);
                    $('#EhsSpecialFeedingComment').val('');
                    $('#divEhsSpecialFeedingComment').hide();
                }
                if (data.EhschildThin == 1)
                    $('#EhschildThin1').prop("checked", true);
                else if (data.EhschildThin == 2)
                    $('#EhschildThin2').prop("checked", true);
                else if (data.EhschildThin == 3)
                    $('#EhschildThin3').prop("checked", true);
                else if (data.EhschildThin == 4)
                    $('#EhschildThin4').prop("checked", true);
                else if (data.EhschildThin == 5)
                    $('#EhschildThin5').prop("checked", true);
                else {
                    $('#EhschildThin1').prop("checked", false);
                    $('#EhschildThin2').prop("checked", false);
                    $('#EhschildThin3').prop("checked", false);
                    $('#EhschildThin4').prop("checked", false);
                    $('#EhschildThin5').prop("checked", false);
                }
                if (data.EhsTakebottle == 1) {
                    $('#EhsTakebottle1').prop("checked", true);
                    $('#divEhsBottleComment').show();

                    $('#EhsBottleComment').val(data.EhsBottleComment);

                }
                else if (data.EhsTakebottle == 2) {
                    $('#EhsTakebottle2').prop("checked", true);
                    $('#EhsBottleComment').val('');
                    $('#divEhsBottleComment').hide();
                }
                else {
                    $('#EhsTakebottle1').prop("checked", false);
                    $('#EhsTakebottle2').prop("checked", false);
                    $('#EhsBottleComment').val('');
                    $('#divEhsBottleComment').hide();
                }
                if (data.Ehschewanything == 1) {
                    $('#Ehschewanything1').prop("checked", true);
                    $('#divEhschewanything').show();
                    $('#EhsEatOrChewComment').val(data.EhsEatOrChewComment);
                }
                else if (data.Ehschewanything == 2) {
                    $('#Ehschewanything2').prop("checked", true);
                    $('#EhsEatOrChewComment').val(data.EhsEatOrChewComment);
                    $('#divEhschewanything').hide();
                }
                else {
                    $('#Ehschewanything1').prop("checked", false);
                    $('#Ehschewanything2').prop("checked", false);
                    $('#EhsEatOrChewComment').val("");
                    $('#divEhschewanything').hide();
                }
                if (data.EhsChildFruitJuicevitaminc == "1") {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", true);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.EhsChildFruitJuicevitaminc == "2") {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", true);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", false);
                }
                else {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", true);
                }
                if (data.EhsChildWater == "1") {
                    $('#EhsChildWater1').prop("checked", true);
                    $('#EhsChildWater2').prop("checked", false);
                    $('#EhsChildWater3').prop("checked", false);
                }
                else if (data.EhsChildWater == "2") {
                    $('#EhsChildWater1').prop("checked", false);
                    $('#EhsChildWater2').prop("checked", true);
                    $('#EhsChildWater3').prop("checked", false);
                }
                else {
                    $('#EhsChildWater1').prop("checked", false);
                    $('#EhsChildWater2').prop("checked", false);
                    $('#EhsChildWater3').prop("checked", true);
                }

                if (data.EhsNA)
                    $('#EhsNA').prop("checked", true);
                else
                    $('#EhsNA').prop("checked", false);

                if (data.EhsBreakfast)
                    $('#EhsBreakfast').prop("checked", true);
                else
                    $('#EhsBreakfast').prop("checked", false);

                if (data.EhsDinner)
                    $('#EhsDinner').prop("checked", true);
                else
                    $('#EhsDinner').prop("checked", false);

                if (data.EhsLunch)
                    $('#EhsLunch').prop("checked", true);
                else
                    $('#EhsLunch').prop("checked", false);

                if (data.EhsSnack)
                    $('#EhsSnack').prop("checked", true);
                else
                    $('#EhsSnack').prop("checked", false);

                if (data.EhsRestrictFood == "1") {
                    $('#EhsRestrictFood1').prop("checked", true);
                    $('#EhsRestrictFood2').prop("checked", false);

                }
                else if (data.EhsRestrictFood == "2") {
                    $('#EhsRestrictFood1').prop("checked", false);
                    $('#EhsRestrictFood2').prop("checked", true);
                }
                else {
                    $('#EhsRestrictFood1').prop("checked", false);
                    $('#EhsRestrictFood2').prop("checked", false);

                }
                if (data.EhsChildVitaminSupplment == "1") {
                    $('#EhsChildVitaminSupplment1').prop("checked", true);
                    $('#EhsChildVitaminSupplment2').prop("checked", false);

                }
                else if (data.EhsChildVitaminSupplment == "2") {
                    $('#EhsChildVitaminSupplment1').prop("checked", false);
                    $('#EhsChildVitaminSupplment2').prop("checked", true);

                }
                else {
                    $('#EhsChildVitaminSupplment1').prop("checked", false);
                    $('#EhsChildVitaminSupplment2').prop("checked", false);

                }

                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }
                //Questions


                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCDRinkText').append(div);
                        }
                    });
                }
                //End

            }
            else if ($('#_childprogrefid').val() == "2") {
                $('#Cvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.PersistentNausea == 1) {
                    $('#PersistentNausea1').prop("checked", true);

                    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
                    $('#divNauseaorVomitingcomment').show();
                }
                else if (data.PersistentNausea == 2) {
                    $('#PersistentNausea2').prop("checked", true);
                    $('#divNauseaorVomitingcomment').hide();
                    $('#NauseaorVomitingcomment').val('');

                }
                else {
                    $('#PersistentNausea1').prop("checked", false);
                    $('#PersistentNausea2').prop("checked", false);
                    $('#NauseaorVomitingcomment').val('');
                    $('#divNauseaorVomitingcomment').hide();
                }
                if (data.PersistentDiarrhea == 1) {
                    $('#PersistentDiarrhea1').prop("checked", true);
                    $('#divdiarrheacomment').show();
                    $('#DiarrheaComment').val(data.DiarrheaComment);

                }
                else if (data.PersistentDiarrhea == 2) {
                    $('#PersistentDiarrhea2').prop("checked", true);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                else {
                    $('#PersistentDiarrhea1').prop("checked", false);
                    $('#PersistentDiarrhea2').prop("checked", false);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                if (data.PersistentConstipation == 1) {
                    $('#PersistentConstipation1').prop("checked", true);
                    $('#divPersistentConstipation').show();
                    $('#Constipationcomment').val(data.Constipationcomment);

                }
                else if (data.PersistentConstipation == 2) {
                    $('#PersistentConstipation2').prop("checked", true);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();

                }
                else {
                    $('#PersistentConstipation1').prop("checked", false);
                    $('#PersistentConstipation2').prop("checked", false);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();
                }
                if (data.DramaticWeight == 1) {
                    $('#DramaticWeight1').prop("checked", true);
                    $('#divDramaticWeightchange').show();
                    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
                }
                else if (data.DramaticWeight == 2) {
                    $('#DramaticWeight2').prop("checked", true);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();

                }
                else {
                    $('#DramaticWeight1').prop("checked", false);
                    $('#DramaticWeight2').prop("checked", false);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();
                }
                if (data.RecentSurgery == 1) {
                    $('#RecentSurgery1').prop("checked", true);
                    $('#divRecentSurgery').show();
                    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


                }
                else if (data.RecentSurgery == 2) {
                    $('#RecentSurgery2').prop("checked", true);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                else {
                    $('#RecentSurgery1').prop("checked", false);
                    $('#RecentSurgery2').prop("checked", false);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                if (data.RecentHospitalization == 1) {
                    $('#RecentHospitalization1').prop("checked", true);
                    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
                    $('#divRecentHospitalization').show();

                }
                else if (data.RecentHospitalization == 2) {
                    $('#RecentHospitalization2').prop("checked", true);

                    $('#divRecentHospitalization').hide();
                    $('#RecentHospitalizationComment').val('');
                }
                else {
                    $('#RecentHospitalization1').prop("checked", false);
                    $('#RecentHospitalization2').prop("checked", false);
                    $('#RecentHospitalizationComment').val('');
                    $('#divRecentHospitalization').hide();
                }
                if (data.ChildSpecialDiet == 1) {
                    $('#ChildSpecialDiet1').prop("checked", true);
                    $('#divChildSpecialDiet').show();
                    $('#SpecialDietComment').val(data.SpecialDietComment);
                }
                else if (data.ChildSpecialDiet == 2) {
                    $('#ChildSpecialDiet2').prop("checked", true);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();

                }
                else {
                    $('#ChildSpecialDiet1').prop("checked", false);
                    $('#ChildSpecialDiet2').prop("checked", false);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();
                }
                if (data.FoodAllergies == 1) {
                    $('#FoodAllergies1').prop("checked", true);
                    $('#divFoodAllergies').show();
                    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
                }
                else if (data.FoodAllergies == 2) {
                    $('#FoodAllergies2').prop("checked", true);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                else {
                    $('#FoodAllergies1').prop("checked", false);
                    $('#FoodAllergies2').prop("checked", false);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                if (data.NutritionalConcern == 1) {
                    $('#NutritionalConcern1').prop("checked", true);
                    $('#divNutritionalConcern').show();
                    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

                }
                else if (data.NutritionalConcern == 2) {
                    $('#NutritionalConcern2').prop("checked", true);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                else {
                    $('#NutritionalConcern1').prop("checked", false);
                    $('#NutritionalConcern2').prop("checked", false);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#FoodPantory').val(data.FoodPantory);
                if (data.childTrouble == 1) {
                    $('#childTrouble1').prop("checked", true);
                    $('#divchildTrouble').show();
                    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

                }
                else if (data.childTrouble == 2) {
                    $('#childTrouble2').prop("checked", true);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                else {
                    $('#childTrouble1').prop("checked", false);
                    $('#childTrouble2').prop("checked", false);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                if (data.spoon == 1) {
                    $('#spoon1').prop("checked", true);
                    $('#divSpoonorForkComment').hide();
                    $('#SpoonorForkComment').val('');
                }
                else if (data.spoon == 2) {
                    $('#spoon2').prop("checked", true);
                    $('#SpoonorForkComment').val(data.SpoonorForkComment);
                    $('#divSpoonorForkComment').show();
                }
                else {
                    $('#spoon1').prop("checked", false);
                    $('#spoon2').prop("checked", false);
                    $('#SpoonorForkComment').val('');
                    $('#divSpoonorForkComment').hide();
                }
                if (data.feedingtube == 1) {
                    $('#feedingtube1').prop("checked", true);
                    $('#divSpecialFeedingComment').show();
                    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

                }
                else if (data.feedingtube == 2) {
                    $('#feedingtube2').prop("checked", true);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                else {
                    $('#feedingtube1').prop("checked", false);
                    $('#feedingtube2').prop("checked", false);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                if (data.childThin == 1)
                    $('#childThin1').prop("checked", true);
                else if (data.childThin == 2)
                    $('#childThin2').prop("checked", true);
                else if (data.childThin == 3)
                    $('#childThin3').prop("checked", true);
                else if (data.childThin == 4)
                    $('#childThin4').prop("checked", true);
                else if (data.childThin == 5)
                    $('#childThin5').prop("checked", true);
                else {
                    $('#childThin1').prop("checked", false);
                    $('#childThin2').prop("checked", false);
                    $('#childThin3').prop("checked", false);
                    $('#childThin4').prop("checked", false);
                    $('#childThin5').prop("checked", false);
                }
                if (data.Takebottle == 1) {
                    $('#Takebottle1').prop("checked", true);
                    $('#divBottleComment').show();

                    $('#BottleComment').val(data.BottleComment);

                }
                else if (data.Takebottle == 2) {
                    $('#Takebottle2').prop("checked", true);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                else {
                    $('#Takebottle1').prop("checked", false);
                    $('#Takebottle2').prop("checked", false);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                if (data.chewanything == 1) {
                    $('#chewanything1').prop("checked", true);
                    $('#divchewanything').show();
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                }
                else if (data.chewanything == 2) {
                    $('#chewanything2').prop("checked", true);
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                    $('#divchewanything').hide();
                }
                else {
                    $('#chewanything1').prop("checked", false);
                    $('#chewanything2').prop("checked", false);
                    $('#EatOrChewComment').val("");
                    $('#divchewanything').hide();
                }

                if (data.ChildFruitJuicevitaminc == "1") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", true);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.ChildFruitJuicevitaminc == "2") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", true);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", true);
                }
                if (data.ChildWater == "1") {
                    $('#ChildWater1').prop("checked", true);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", false);
                }
                else if (data.ChildWater == "2") {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", true);
                    $('#ChildWater3').prop("checked", false);
                }
                else {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", true);
                }

                if (data.NA)
                    $('#NA').prop("checked", true);
                else
                    $('#NA').prop("checked", false);

                if (data.Breakfast)
                    $('#Breakfast').prop("checked", true);
                else
                    $('#Breakfast').prop("checked", false);

                if (data.Dinner)
                    $('#Dinner').prop("checked", true);
                else
                    $('#Dinner').prop("checked", false);

                if (data.Lunch)
                    $('#Lunch').prop("checked", true);
                else
                    $('#Lunch').prop("checked", false);

                if (data.Snack)
                    $('#Snack').prop("checked", true);
                else
                    $('#Snack').prop("checked", false);

                if (data.RestrictFood == "1") {
                    $('#RestrictFood1').prop("checked", true);
                    $('#RestrictFood2').prop("checked", false);

                }
                else if (data.RestrictFood == "2") {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", true);
                }
                else {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", false);

                }
                if (data.ChildVitaminSupplment == "1") {
                    $('#ChildVitaminSupplment1').prop("checked", true);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }
                else if (data.ChildVitaminSupplment == "2") {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", true);

                }
                else {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }

                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }
                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#Cvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDRinkText').append(div);
                        }
                    });
                }
                //End

            }
            else {
                $('#Cvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.PersistentNausea == 1) {
                    $('#PersistentNausea1').prop("checked", true);

                    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
                    $('#divNauseaorVomitingcomment').show();
                }
                else if (data.PersistentNausea == 2) {
                    $('#PersistentNausea2').prop("checked", true);
                    $('#divNauseaorVomitingcomment').hide();
                    $('#NauseaorVomitingcomment').val('');

                }
                else {
                    $('#PersistentNausea1').prop("checked", false);
                    $('#PersistentNausea2').prop("checked", false);
                    $('#NauseaorVomitingcomment').val('');
                    $('#divNauseaorVomitingcomment').hide();
                }
                if (data.PersistentDiarrhea == 1) {
                    $('#PersistentDiarrhea1').prop("checked", true);
                    $('#divdiarrheacomment').show();
                    $('#DiarrheaComment').val(data.DiarrheaComment);

                }
                else if (data.PersistentDiarrhea == 2) {
                    $('#PersistentDiarrhea2').prop("checked", true);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                else {
                    $('#PersistentDiarrhea1').prop("checked", false);
                    $('#PersistentDiarrhea2').prop("checked", false);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                if (data.PersistentConstipation == 1) {
                    $('#PersistentConstipation1').prop("checked", true);
                    $('#divPersistentConstipation').show();
                    $('#Constipationcomment').val(data.Constipationcomment);

                }
                else if (data.PersistentConstipation == 2) {
                    $('#PersistentConstipation2').prop("checked", true);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();

                }
                else {
                    $('#PersistentConstipation1').prop("checked", false);
                    $('#PersistentConstipation2').prop("checked", false);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();
                }
                if (data.DramaticWeight == 1) {
                    $('#DramaticWeight1').prop("checked", true);
                    $('#divDramaticWeightchange').show();
                    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
                }
                else if (data.DramaticWeight == 2) {
                    $('#DramaticWeight2').prop("checked", true);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();

                }
                else {
                    $('#DramaticWeight1').prop("checked", false);
                    $('#DramaticWeight2').prop("checked", false);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();
                }
                if (data.RecentSurgery == 1) {
                    $('#RecentSurgery1').prop("checked", true);
                    $('#divRecentSurgery').show();
                    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


                }
                else if (data.RecentSurgery == 2) {
                    $('#RecentSurgery2').prop("checked", true);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                else {
                    $('#RecentSurgery1').prop("checked", false);
                    $('#RecentSurgery2').prop("checked", false);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                if (data.RecentHospitalization == 1) {
                    $('#RecentHospitalization1').prop("checked", true);
                    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
                    $('#divRecentHospitalization').show();

                }
                else if (data.RecentHospitalization == 2) {
                    $('#RecentHospitalization2').prop("checked", true);

                    $('#divRecentHospitalization').hide();
                    $('#RecentHospitalizationComment').val('');
                }
                else {
                    $('#RecentHospitalization1').prop("checked", false);
                    $('#RecentHospitalization2').prop("checked", false);
                    $('#RecentHospitalizationComment').val('');
                    $('#divRecentHospitalization').hide();
                }
                if (data.ChildSpecialDiet == 1) {
                    $('#ChildSpecialDiet1').prop("checked", true);
                    $('#divChildSpecialDiet').show();
                    $('#SpecialDietComment').val(data.SpecialDietComment);
                }
                else if (data.ChildSpecialDiet == 2) {
                    $('#ChildSpecialDiet2').prop("checked", true);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();

                }
                else {
                    $('#ChildSpecialDiet1').prop("checked", false);
                    $('#ChildSpecialDiet2').prop("checked", false);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();
                }
                if (data.FoodAllergies == 1) {
                    $('#FoodAllergies1').prop("checked", true);
                    $('#divFoodAllergies').show();
                    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
                }
                else if (data.FoodAllergies == 2) {
                    $('#FoodAllergies2').prop("checked", true);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                else {
                    $('#FoodAllergies1').prop("checked", false);
                    $('#FoodAllergies2').prop("checked", false);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                if (data.NutritionalConcern == 1) {
                    $('#NutritionalConcern1').prop("checked", true);
                    $('#divNutritionalConcern').show();
                    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

                }
                else if (data.NutritionalConcern == 2) {
                    $('#NutritionalConcern2').prop("checked", true);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                else {
                    $('#NutritionalConcern1').prop("checked", false);
                    $('#NutritionalConcern2').prop("checked", false);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#FoodPantory').val(data.FoodPantory);
                if (data.childTrouble == 1) {
                    $('#childTrouble1').prop("checked", true);
                    $('#divchildTrouble').show();
                    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

                }
                else if (data.childTrouble == 2) {
                    $('#childTrouble2').prop("checked", true);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                else {
                    $('#childTrouble1').prop("checked", false);
                    $('#childTrouble2').prop("checked", false);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                if (data.spoon == 1) {
                    $('#spoon1').prop("checked", true);
                    $('#divSpoonorForkComment').hide();
                    $('#SpoonorForkComment').val('');
                }
                else if (data.spoon == 2) {
                    $('#spoon2').prop("checked", true);
                    $('#SpoonorForkComment').val(data.SpoonorForkComment);
                    $('#divSpoonorForkComment').show();
                }
                else {
                    $('#spoon1').prop("checked", false);
                    $('#spoon2').prop("checked", false);
                    $('#SpoonorForkComment').val('');
                    $('#divSpoonorForkComment').hide();
                }
                if (data.feedingtube == 1) {
                    $('#feedingtube1').prop("checked", true);
                    $('#divSpecialFeedingComment').show();
                    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

                }
                else if (data.feedingtube == 2) {
                    $('#feedingtube2').prop("checked", true);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                else {
                    $('#feedingtube1').prop("checked", false);
                    $('#feedingtube2').prop("checked", false);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                if (data.childThin == 1)
                    $('#childThin1').prop("checked", true);
                else if (data.childThin == 2)
                    $('#childThin2').prop("checked", true);
                else if (data.childThin == 3)
                    $('#childThin3').prop("checked", true);
                else if (data.childThin == 4)
                    $('#childThin4').prop("checked", true);
                else if (data.childThin == 5)
                    $('#childThin5').prop("checked", true);
                else {
                    $('#childThin1').prop("checked", false);
                    $('#childThin2').prop("checked", false);
                    $('#childThin3').prop("checked", false);
                    $('#childThin4').prop("checked", false);
                    $('#childThin5').prop("checked", false);
                }
                if (data.Takebottle == 1) {
                    $('#Takebottle1').prop("checked", true);
                    $('#divBottleComment').show();

                    $('#BottleComment').val(data.BottleComment);

                }
                else if (data.Takebottle == 2) {
                    $('#Takebottle2').prop("checked", true);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                else {
                    $('#Takebottle1').prop("checked", false);
                    $('#Takebottle2').prop("checked", false);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                if (data.chewanything == 1) {
                    $('#chewanything1').prop("checked", true);
                    $('#divchewanything').show();
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                }
                else if (data.chewanything == 2) {
                    $('#chewanything2').prop("checked", true);
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                    $('#divchewanything').hide();
                }
                else {
                    $('#chewanything1').prop("checked", false);
                    $('#chewanything2').prop("checked", false);
                    $('#EatOrChewComment').val("");
                    $('#divchewanything').hide();
                }

                if (data.ChildFruitJuicevitaminc == "1") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", true);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.ChildFruitJuicevitaminc == "2") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", true);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", true);
                }
                if (data.ChildWater == "1") {
                    $('#ChildWater1').prop("checked", true);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", false);
                }
                else if (data.ChildWater == "2") {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", true);
                    $('#ChildWater3').prop("checked", false);
                }
                else {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", true);
                }

                if (data.NA)
                    $('#NA').prop("checked", true);
                else
                    $('#NA').prop("checked", false);

                if (data.Breakfast)
                    $('#Breakfast').prop("checked", true);
                else
                    $('#Breakfast').prop("checked", false);

                if (data.Dinner)
                    $('#Dinner').prop("checked", true);
                else
                    $('#Dinner').prop("checked", false);

                if (data.Lunch)
                    $('#Lunch').prop("checked", true);
                else
                    $('#Lunch').prop("checked", false);

                if (data.Snack)
                    $('#Snack').prop("checked", true);
                else
                    $('#Snack').prop("checked", false);

                if (data.RestrictFood == "1") {
                    $('#RestrictFood1').prop("checked", true);
                    $('#RestrictFood2').prop("checked", false);

                }
                else if (data.RestrictFood == "2") {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", true);
                }
                else {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", false);

                }
                if (data.ChildVitaminSupplment == "1") {
                    $('#ChildVitaminSupplment1').prop("checked", true);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }
                else if (data.ChildVitaminSupplment == "2") {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", true);

                }
                else {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }

                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#Cvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDRinkText').append(div);
                        }
                    });
                }
                //End



                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }


            }
            //$('#Cvstext').html('');
            //$('#ChildVitaminSupplementlist input:checked').each(function () {
            //    $(this).prop("checked", false);
            //});
            //$('#CDText').html('');
            //$('#ChildDietlist input:checked').each(function () {
            //    $(this).prop("checked", false);
            //});
            //$('#CDRinkText').html('');
            //$('#ChildDrinklist input:checked').each(function () {
            //    var value = $(this).val();
            //    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
            //        $(this).next('label').remove();
            //        $(this).remove();
            //    }
            //    else
            //        $(this).prop("checked", false);
            //});
            //if (data.PersistentNausea == 1) {
            //    $('#PersistentNausea1').prop("checked", true);

            //    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
            //    $('#divNauseaorVomitingcomment').show();
            //}
            //else if (data.PersistentNausea == 2) {
            //    $('#PersistentNausea2').prop("checked", true);
            //    $('#divNauseaorVomitingcomment').hide();
            //    $('#NauseaorVomitingcomment').val('');

            //}
            //else {
            //    $('#PersistentNausea1').prop("checked", false);
            //    $('#PersistentNausea2').prop("checked", false);
            //    $('#NauseaorVomitingcomment').val('');
            //    $('#divNauseaorVomitingcomment').hide();
            //}
            //if (data.PersistentDiarrhea == 1) {
            //    $('#PersistentDiarrhea1').prop("checked", true);
            //    $('#divdiarrheacomment').show();
            //    $('#DiarrheaComment').val(data.DiarrheaComment);

            //}
            //else if (data.PersistentDiarrhea == 2) {
            //    $('#PersistentDiarrhea2').prop("checked", true);
            //    $('#DiarrheaComment').val('');
            //    $('#divdiarrheacomment').hide();
            //}
            //else {
            //    $('#PersistentDiarrhea1').prop("checked", false);
            //    $('#PersistentDiarrhea2').prop("checked", false);
            //    $('#DiarrheaComment').val('');
            //    $('#divdiarrheacomment').hide();
            //}
            //if (data.PersistentConstipation == 1) {
            //    $('#PersistentConstipation1').prop("checked", true);
            //    $('#divPersistentConstipation').show();
            //    $('#Constipationcomment').val(data.Constipationcomment);

            //}
            //else if (data.PersistentConstipation == 2) {
            //    $('#PersistentConstipation2').prop("checked", true);
            //    $('#Constipationcomment').val('');
            //    $('#divPersistentConstipation').hide();

            //}
            //else {
            //    $('#PersistentConstipation1').prop("checked", false);
            //    $('#PersistentConstipation2').prop("checked", false);
            //    $('#Constipationcomment').val('');
            //    $('#divPersistentConstipation').hide();
            //}
            //if (data.DramaticWeight == 1) {
            //    $('#DramaticWeight1').prop("checked", true);
            //    $('#divDramaticWeightchange').show();
            //    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
            //}
            //else if (data.DramaticWeight == 2) {
            //    $('#DramaticWeight2').prop("checked", true);
            //    $('#DramaticWeightchangecomment').val('');
            //    $('#divDramaticWeightchange').hide();

            //}
            //else {
            //    $('#DramaticWeight1').prop("checked", false);
            //    $('#DramaticWeight2').prop("checked", false);
            //    $('#DramaticWeightchangecomment').val('');
            //    $('#divDramaticWeightchange').hide();
            //}
            //if (data.RecentSurgery == 1) {
            //    $('#RecentSurgery1').prop("checked", true);
            //    $('#divRecentSurgery').show();
            //    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


            //}
            //else if (data.RecentSurgery == 2) {
            //    $('#RecentSurgery2').prop("checked", true);
            //    $('#RecentSurgerycomment').val('');
            //    $('#divRecentSurgery').hide();
            //}
            //else {
            //    $('#RecentSurgery1').prop("checked", false);
            //    $('#RecentSurgery2').prop("checked", false);
            //    $('#RecentSurgerycomment').val('');
            //    $('#divRecentSurgery').hide();
            //}
            //if (data.RecentHospitalization == 1) {
            //    $('#RecentHospitalization1').prop("checked", true);
            //    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
            //    $('#divRecentHospitalization').show();

            //}
            //else if (data.RecentHospitalization == 2) {
            //    $('#RecentHospitalization2').prop("checked", true);

            //    $('#divRecentHospitalization').hide();
            //    $('#RecentHospitalizationComment').val('');
            //}
            //else {
            //    $('#RecentHospitalization1').prop("checked", false);
            //    $('#RecentHospitalization2').prop("checked", false);
            //    $('#RecentHospitalizationComment').val('');
            //    $('#divRecentHospitalization').hide();
            //}
            //if (data.ChildSpecialDiet == 1) {
            //    $('#ChildSpecialDiet1').prop("checked", true);
            //    $('#divChildSpecialDiet').show();
            //    $('#SpecialDietComment').val(data.SpecialDietComment);
            //}
            //else if (data.ChildSpecialDiet == 2) {
            //    $('#ChildSpecialDiet2').prop("checked", true);
            //    $('#SpecialDietComment').val('');
            //    $('#divChildSpecialDiet').hide();

            //}
            //else {
            //    $('#ChildSpecialDiet1').prop("checked", false);
            //    $('#ChildSpecialDiet2').prop("checked", false);
            //    $('#SpecialDietComment').val('');
            //    $('#divChildSpecialDiet').hide();
            //}
            //if (data.FoodAllergies == 1) {
            //    $('#FoodAllergies1').prop("checked", true);
            //    $('#divFoodAllergies').show();
            //    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
            //}
            //else if (data.FoodAllergies == 2) {
            //    $('#FoodAllergies2').prop("checked", true);
            //    $('#FoodAllergiesComment').val('');
            //    $('#divFoodAllergies').hide();


            //}
            //else {
            //    $('#FoodAllergies1').prop("checked", false);
            //    $('#FoodAllergies2').prop("checked", false);
            //    $('#FoodAllergiesComment').val('');
            //    $('#divFoodAllergies').hide();


            //}
            //if (data.NutritionalConcern == 1) {
            //    $('#NutritionalConcern1').prop("checked", true);
            //    $('#divNutritionalConcern').show();
            //    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

            //}
            //else if (data.NutritionalConcern == 2) {
            //    $('#NutritionalConcern2').prop("checked", true);
            //    $('#NutritionAlconcernsComment').val('');
            //    $('#divNutritionalConcern').hide();
            //}
            //else {
            //    $('#NutritionalConcern1').prop("checked", false);
            //    $('#NutritionalConcern2').prop("checked", false);
            //    $('#NutritionAlconcernsComment').val('');
            //    $('#divNutritionalConcern').hide();
            //}
            //if (data.WICNutrition)
            //    $('#WICNutrition').prop("checked", true);
            //else
            //    $('#WICNutrition').prop("checked", false);
            //if (data.FoodStamps)
            //    $('#FoodStamps').prop("checked", true);
            //else
            //    $('#FoodStamps').prop("checked", false);
            //if (data.NoNutritionProg)
            //    $('#NoNutritionProg').prop("checked", true);
            //else
            //    $('#NoNutritionProg').prop("checked", false);
            //$('#FoodPantory').val(data.FoodPantory);
            //if (data.childTrouble == 1) {
            //    $('#childTrouble1').prop("checked", true);
            //    $('#divchildTrouble').show();
            //    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

            //}
            //else if (data.childTrouble == 2) {
            //    $('#childTrouble2').prop("checked", true);
            //    $('#ChewingorSwallowingcomment').val('');
            //    $('#divchildTrouble').hide();
            //}
            //else {
            //    $('#childTrouble1').prop("checked", false);
            //    $('#childTrouble2').prop("checked", false);
            //    $('#ChewingorSwallowingcomment').val('');
            //    $('#divchildTrouble').hide();
            //}
            //if (data.spoon == 1) {
            //    $('#spoon1').prop("checked", true);
            //    $('#divSpoonorForkComment').hide();
            //    $('#SpoonorForkComment').val('');
            //}
            //else if (data.spoon == 2) {
            //    $('#spoon2').prop("checked", true);
            //    $('#SpoonorForkComment').val(data.SpoonorForkComment);
            //    $('#divSpoonorForkComment').show();
            //}
            //else {
            //    $('#spoon1').prop("checked", false);
            //    $('#spoon2').prop("checked", false);
            //    $('#SpoonorForkComment').val('');
            //    $('#divSpoonorForkComment').hide();
            //}
            //if (data.feedingtube == 1) {
            //    $('#feedingtube1').prop("checked", true);
            //    $('#divSpecialFeedingComment').show();
            //    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

            //}
            //else if (data.feedingtube == 2) {
            //    $('#feedingtube2').prop("checked", true);
            //    $('#SpecialFeedingComment').val('');
            //    $('#divSpecialFeedingComment').hide();
            //}
            //else {
            //    $('#feedingtube1').prop("checked", false);
            //    $('#feedingtube2').prop("checked", false);
            //    $('#SpecialFeedingComment').val('');
            //    $('#divSpecialFeedingComment').hide();
            //}
            //if (data.childThin == 1)
            //    $('#childThin1').prop("checked", true);
            //else if (data.childThin == 2)
            //    $('#childThin2').prop("checked", true);
            //else if (data.childThin == 3)
            //    $('#childThin3').prop("checked", true);
            //else if (data.childThin == 4)
            //    $('#childThin4').prop("checked", true);
            //else if (data.childThin == 5)
            //    $('#childThin5').prop("checked", true);
            //else {
            //    $('#childThin1').prop("checked", false);
            //    $('#childThin2').prop("checked", false);
            //    $('#childThin3').prop("checked", false);
            //    $('#childThin4').prop("checked", false);
            //    $('#childThin5').prop("checked", false);
            //}
            //if (data.Takebottle == 1) {
            //    $('#Takebottle1').prop("checked", true);
            //    $('#divBottleComment').show();

            //    $('#BottleComment').val(data.BottleComment);

            //}
            //else if (data.Takebottle == 2) {
            //    $('#Takebottle2').prop("checked", true);
            //    $('#BottleComment').val('');
            //    $('#divBottleComment').hide();
            //}
            //else {
            //    $('#Takebottle1').prop("checked", false);
            //    $('#Takebottle2').prop("checked", false);
            //    $('#BottleComment').val('');
            //    $('#divBottleComment').hide();
            //}
            //if (data.chewanything == 1) {
            //    $('#chewanything1').prop("checked", true);
            //    $('#divchewanything').show();
            //    $('#EatOrChewComment').val(data.EatOrChewComment);
            //}
            //else if (data.chewanything == 2) {
            //    $('#chewanything2').prop("checked", true);
            //    $('#EatOrChewComment').val(data.EatOrChewComment);
            //    $('#divchewanything').hide();
            //}
            //else {
            //    $('#chewanything1').prop("checked", false);
            //    $('#chewanything2').prop("checked", false);
            //    $('#EatOrChewComment').val("");
            //    $('#divchewanything').hide();
            //}
            //if (data.NotHealthStaff) {
            //    $('#NotHealthStaff').prop("checked", true);
            //    $('#ChildReferalCriteria').attr("disabled", true);
            //}
            //else {

            //    $('#NotHealthStaff').prop("checked", false);
            //    $('#ChildReferalCriteria').attr("disabled", false);
            //}












            //0410
            $('#AHeight').val(data.AHeight);
            $('#AWeight').val(data.AWeight);
            $('#HeadCircle').val(data.HeadCircle);
            $('#AssessmentDate').val(data.AssessmentDate);
            if (data.HWInput == 1)
                $('#HWInput1').prop("checked", true);
            else if (data.HWInput == 2)
                $('#HWInput2').prop("checked", true);
            else {
                $('#HWInput1').prop("checked", false);
                $('#HWInput2').prop("checked", false);
            }
            if (data.ChangeinAppetite == 1)
                $('#ChangeinAppetite1').prop("checked", true);
            else if (data.ChangeinAppetite == 2)
                $('#ChangeinAppetite2').prop("checked", true);
            else if (data.ChangeinAppetite == 3)
                $('#ChangeinAppetite3').prop("checked", true);
            else {
                $('#ChangeinAppetite1').prop("checked", false);
                $('#ChangeinAppetite2').prop("checked", false);
                $('#ChangeinAppetite3').prop("checked", false);
            }
            $('[name=ChildHungry]').val(data.ChildHungry);
            $('#DdlChildFeed').val(data.ChildFeed);
            $('#DdlChildFormula').val(data.ChildFeed);
            $('#ChildFeedCereal').val(data.ChildFeedCereal);
            $('#ChildFeedMarshfood').val(data.ChildFeedMarshfood);
            $('#ChildFeedChopedfood').val(data.ChildFeedChopedfood);
            $('#ChildFingerFood').val(data.ChildFingerFood);
            if (data.ChildFingerFEDFood == 1)
                $('#ChildFingerFEDFood1').prop("checked", true);
            else if (data.ChildFingerFEDFood == 2)
                $('#ChildFingerFEDFood2').prop("checked", true);
            else if (data.ChildFingerFEDFood == 3)
                $('#ChildFingerFEDFood3').prop("checked", true);
            else {
                $('#ChildFingerFEDFood1').prop("checked", false);
                $('#ChildFingerFEDFood2').prop("checked", false);
                $('#ChildFingerFEDFood3').prop("checked", false);
            }
            $('#ChildFruitJuice').val(data.ChildFruitJuice);
            if (data.ChildFruitJuicevitaminc == 1)
                $('#ChildFruitJuicevitaminc1').prop("checked", true);
            else if (data.ChildFruitJuicevitaminc == 2)
                $('#ChildFruitJuicevitaminc2').prop("checked", true);
            else if (data.ChildFruitJuicevitaminc == 3)
                $('#ChildFruitJuicevitaminc3').prop("checked", true);
            else {
                $('#ChildFruitJuicevitaminc1').prop("checked", false);
                $('#ChildFruitJuicevitaminc2').prop("checked", false);
                $('#ChildFruitJuicevitaminc3').prop("checked", false);
            }
            if (data.ChildWater == 1)
                $('#ChildWater1').prop("checked", true);
            else if (data.ChildWater == 2)
                $('#ChildWater2').prop("checked", true);
            else if (data.ChildWater == 3)
                $('#ChildWater3').prop("checked", true);
            else {
                $('#ChildWater1').prop("checked", false);
                $('#ChildWater2').prop("checked", false);
                $('#ChildWater3').prop("checked", false);
            }
            if (data.Breakfast)
                $('#Breakfast').prop("checked", true);
            else
                $('#Breakfast').prop("checked", false);
            if (data.Lunch)
                $('#Lunch').prop("checked", true);
            else
                $('#Lunch').prop("checked", false);
            if (data.Snack)
                $('#Snack').prop("checked", true);
            else
                $('#Snack').prop("checked", false);
            if (data.NA)
                $('#NA').prop("checked", true);
            else
                $('#NA').prop("checked", false);
            if (data.Dinner)
                $('#Dinner').prop("checked", true);
            else
                $('#Dinner').prop("checked", false);
            $('#ChildReferalCriteria').val(data.ChildReferalCriteria);
            $('#DdlChildFormula').val(data.ChildFormula);


            $('#Clientbminame').text($('#Cfirstname').val() + ' ' + $('#Cmiddlename').val() + ' ' + $('#Clastname').val());
            $('#ClientDob').text($('#CDOB').val());
            //if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
            //    $('#ChildVitaminSupplementlist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "7") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildVitaminSupplementlist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#Cvstext').append(div);
            //        }
            //    });


            //    //Child Diet Pop

            //    $('#ChildDietlist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "8") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildDietlist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildDietlist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#CDText').append(div);
            //        }
            //    });

            //    //Child Drink Pop

            //    $('#ChildDrinklist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "9") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildDrinklist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildDrinklist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#CDRinkText').append(div);
            //        }
            //    });
            //}
            // $('#Health').show();
            if (data.ImmunizationRecords != null && data.ImmunizationRecords.length > 0) {
                $('#Immunization > tbody > tr').remove();
                var tr = "";
                var immunizatiocount = 0;
                for (var i = 0; i < data.ImmunizationRecords.length; i++) {
                    tr = "";
                    tr = tr + '<tr><td width="200px">' + data.ImmunizationRecords[i].Dose + '<input type="hidden" value="' + data.ImmunizationRecords[i].Dose + '" name="imminization[' + immunizatiocount + '].dose" />' +
                               '<input type="hidden" value="' + data.ImmunizationRecords[i].ImmunizationId + '"  name="Imminization[' + immunizatiocount + '].ImmunizationId" /><input type="hidden" value="' + data.ImmunizationRecords[i].ImmunizationmasterId + '" name="Imminization[' + immunizatiocount + '].ImmunizationmasterId" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose1 + '" name="Imminization[' + immunizatiocount + '].Dose1" /></td>';
                    if (data.ImmunizationRecords[i].Preempt1)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt1" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt1" /></td>';
                    if (data.ImmunizationRecords[i].Exempt1)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt1" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt1" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose2 + '" name="Imminization[' + immunizatiocount + '].Dose2" /></td>';
                    if (data.ImmunizationRecords[i].Preempt2)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt2" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt2" /></td>';
                    if (data.ImmunizationRecords[i].Exempt2)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt2" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt2" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose3 + '" name="Imminization[' + immunizatiocount + '].Dose3" /></td>';
                    if (data.ImmunizationRecords[i].Preempt3)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt3" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt3" /></td>';
                    if (data.ImmunizationRecords[i].Exempt3)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt3" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt3" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose4 + '" name="Imminization[' + immunizatiocount + '].Dose4" /></td>';
                    if (data.ImmunizationRecords[i].Preempt4)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt4" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt4" /></td>';
                    if (data.ImmunizationRecords[i].Exempt4)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt4" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt4" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose5 + '" name="Imminization[' + immunizatiocount + '].Dose5" /></td>';
                    if (data.ImmunizationRecords[i].Preempt5)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt5" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt5" /></td>';
                    if (data.ImmunizationRecords[i].Exempt5)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt5" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt5" /></td>';
                    $('#Immunization > tbody').append(tr);
                    immunizatiocount = immunizatiocount + 1;
                }

                $('#Immunization > tbody tr').each(function () {
                    var end = new Date();
                    $(this).find(':input[type="text"]').each(function () {
                        $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                    });

                });
            }




            $('#Physical').removeClass("active");
            $('#Vision').removeClass("active");
            $('#Hearing').removeClass("active");
            $('#Develop').removeClass("active");
            $('#Dental').removeClass("active");
            $('#Speech').removeClass("active");
            $('#Screeningallowed').removeClass("active");
            $('#Screeningallowed').addClass("active");


            $('#addPhysical').removeClass("active").removeClass("in");
            $('#addVision').removeClass("active").removeClass("in");
            $('#addHearing').removeClass("active").removeClass("in");
            $('#addDevelop').removeClass("active").removeClass("in");
            $('#addDental').removeClass("active").removeClass("in");
            $('#addSpeech').removeClass("active").removeClass("in");
            $('#AllowScreening').removeClass("active").removeClass("in");
            $('#AllowScreening').addClass("active").addClass("in");



            // debugger;

            if (data._Screening != null) {

                $('#F001physicalDate').val(data._Screening.F001physicalDate)
                $('#F002physicalResults').val(data._Screening.F002physicalResults)
                $('#F003physicallFOReason').val(data._Screening.F003physicallFOReason)
                $('#F004medFollowup').val(data._Screening.F004medFollowup)
                $('#F005MedFOComments').val(data._Screening.F005MedFOComments)
                $('#F006bpResults').val(data._Screening.F006bpResults)
                $('#F007hgDate').val(data._Screening.F007hgDate)
                $('#FhgStatus').val(data._Screening.F008hgStatus)
                $('#F009hgResults').val(data._Screening.F009hgResults)
                $('#F010hgReferralDate').val(data._Screening.F010hgReferralDate)
                $('#F011hgComments').val(data._Screening.F011hgComments)
                $('#F012hgDate2').val(data._Screening.F012hgDate2)
                $('#F013hgResults2').val(data._Screening.F013hgResults2)
                $('#F014hgFOStatus').val(data._Screening.F014hgFOStatus)
                $('#F015leadDate').val(data._Screening.F015leadDate)
                $('#F016leadResults').val(data._Screening.F016leadResults)
                $('#F017leadReferDate').val(data._Screening.F017leadReferDate)
                $('#F018leadComments').val(data._Screening.F018leadComments)
                $('#F019leadDate2').val(data._Screening.F019leadDate2)
                $('#F020leadResults2').val(data._Screening.F020leadResults2)
                $('#F021leadFOStatus').val(data._Screening.F021leadFOStatus)
                $('#v022date').val(data._Screening.v022date)
                $('#v023results').val(data._Screening.v023results)
                $('#v024comments').val(data._Screening.v024comments)
                $('#v025dateR1').val(data._Screening.v025dateR1)
                $('#v026resultsR1').val(data._Screening.v026resultsR1)
                $('#v027commentsR1').val(data._Screening.v027commentsR1)
                $('#v028dateR2').val(data._Screening.v028dateR2)
                $('#v029resultsR2').val(data._Screening.v029resultsR2)
                $('#v030commentsR2').val(data._Screening.v030commentsR2)
                $('#v031ReferralDate').val(data._Screening.v031ReferralDate)
                $('#v032Treatment').val(data._Screening.v032Treatment)
                $('#v033TreatmentComments').val(data._Screening.v033TreatmentComments)
                $('#v034Completedate').val(data._Screening.v034Completedate)
                $('#v035ExamStatus').val(data._Screening.v035ExamStatus)
                $('#h036Date').val(data._Screening.h036Date)
                $('#h037Results').val(data._Screening.h037Results)
                $('#h038Comments').val(data._Screening.h038Comments)
                $('#h039DateR1').val(data._Screening.h039DateR1)
                $('#h040ResultsR1').val(data._Screening.h040ResultsR1)
                $('#h041CommentsR1').val(data._Screening.h041CommentsR1)
                $('#h042DateR2').val(data._Screening.h042DateR2)
                $('#h043ResultsR2').val(data._Screening.h043ResultsR2)
                $('#h044CommentsR2').val(data._Screening.h044CommentsR2)
                $('#h045ReferralDate').val(data._Screening.h045ReferralDate)
                $('#h046Treatment').val(data._Screening.h046Treatment)
                $('#h047TreatmentComments').val(data._Screening.h047TreatmentComments)
                $('#h048CompleteDate').val(data._Screening.h048CompleteDate)
                $('#h049ExamStatus').val(data._Screening.h049ExamStatus)
                $('#d050evDate').val(data._Screening.d050evDate)
                $('#d051NameDEV').val(data._Screening.d051NameDEV)
                $('#d052evResults').val(data._Screening.d052evResults)
                $('#d053evResultsDetails').val(data._Screening.d053evResultsDetails)
                $('#d054evDate2').val(data._Screening.d054evDate2)
                $('#d055evResults2').val(data._Screening.d055evResults2)
                $('#d056evReferral').val(data._Screening.d056evReferral)
                $('#d057evFOStatus').val(data._Screening.d057evFOStatus)
                $('#d058evComments').val(data._Screening.d058evComments)
                $('#d059evTool').val(data._Screening.d059evTool)
                $('#E060denDate').val(data._Screening.E060denDate)
                $('#E061denResults').val(data._Screening.E061denResults)
                $('#E062denPrevent').val(data._Screening.E062denPrevent)
                $('#E063denReferralDate').val(data._Screening.E063denReferralDate)
                $('#E064denTreatment').val(data._Screening.E064denTreatment)
                $('#E065denTreatmentComments').val(data._Screening.E065denTreatmentComments)
                $('#E066denTreatmentReceive').val(data._Screening.E066denTreatmentReceive)
                $('#s067Date').val(data._Screening.s067Date)
                $('#s068NameTCR').val(data._Screening.s068NameTCR)
                $('#s069Details').val(data._Screening.s069Details)
                $('#s070Results').val(data._Screening.s070Results)
                $('#s071RescreenTCR').val(data._Screening.s071RescreenTCR)
                $('#s072RescreenTCRDate').val(data._Screening.s072RescreenTCRDate)
                $('#s073RescreenTCRResults').val(data._Screening.s073RescreenTCRResults)
                $('#s074ReferralDC').val(data._Screening.s074ReferralDC)
                $('#s075ReferDate').val(data._Screening.s075ReferDate)
                $('#s076DCDate').val(data._Screening.s076DCDate)
                $('#s077NameDC').val(data._Screening.s077NameDC)
                $('#s078DetailDC').val(data._Screening.s078DetailDC)
                $('#s079DCDate2').val(data._Screening.s079DCDate2)
                $('#s080DetailDC2').val(data._Screening.s080DetailDC2)
                $('#s081FOStatus').val(data._Screening.s081FOStatus)

                if (data._Screening.Parentname != null)
                    $('#Parentscreening').val(data._Screening.Parentname);
                else
                    $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val())



                if (data._Screening.AddPhysical == "1") {
                    $('#AddPhysical').prop("checked", true);
                    $('#Physical').show();
                }
                else if (data._Screening.AddPhysical == "2") {
                    $('#AddPhysical1').prop("checked", true);
                    $('#Physical').hide();
                }
                else {
                    $('#AddPhysical').prop("checked", false);
                    $('#AddPhysical1').prop("checked", false);
                    $('#Physical').hide();
                }
                if (data._Screening.AddVision == "1") {
                    $('#AddVision').prop("checked", true);
                    $('#Vision').show();
                }
                else if (data._Screening.AddVision == "2") {
                    $('#AddVision1').prop("checked", true);
                    $('#Vision').hide();
                }
                else {
                    $('#AddVision').prop("checked", false);
                    $('#AddVision1').prop("checked", false);
                    $('#Vision').hide();
                }
                if (data._Screening.AddHearing == "1") {
                    $('#AddHearing').prop("checked", true);
                    $('#Hearing').show();

                }
                else if (data._Screening.AddHearing == "2") {
                    $('#AddHearing1').prop("checked", true);
                    $('#Hearing').hide();
                }
                else {
                    $('#AddHearing').prop("checked", false);
                    $('#AddHearing1').prop("checked", false);
                    $('#Hearing').hide();
                }
                if (data._Screening.AddDental == "1") {
                    $('#AddDental').prop("checked", true);
                    $('#Dental').show();
                }
                else if (data._Screening.AddDental == "2") {
                    $('#AddDental1').prop("checked", true);
                    $('#Dental').hide();
                }
                else {
                    $('#AddDental').prop("checked", false);
                    $('#AddDental1').prop("checked", false);
                    $('#Dental').hide();
                }
                if (data._Screening.AddDevelop == "1") {
                    $('#AddDevelop').prop("checked", true);
                    $('#Develop').show();
                }
                else if (data._Screening.AddDevelop == "2") {
                    $('#AddDevelop1').prop("checked", true);
                    $('#Develop').hide();
                }
                else {
                    $('#AddDevelop').prop("checked", false);
                    $('#AddDevelop1').prop("checked", false);
                    $('#Develop').hide();
                }
                if (data._Screening.AddSpeech == "1") {
                    $('#AddSpeech').prop("checked", true);
                    $('#Speech').show();
                }
                else if (data._Screening.AddSpeech == "2") {
                    $('#AddSpeech1').prop("checked", true);
                    $('#Speech').hide();
                }
                else {
                    $('#AddSpeech').prop("checked", false);
                    $('#AddSpeech1').prop("checked", false);
                    $('#Speech').hide();
                }

                //18-11-2016

                if (data._Screening.PhysicalFileName != "" && data._Screening.PhysicalFileName != null) {

                    //if ($('#customChecklist input[type=checkbox]').val() != 10064 && $('#customChecklist input[type=checkbox]').val() != 10065) {
                        $('#Allow30DayPhysical').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/1," + data._Screening.ParentAppID);
                        $('#Allow30DayPhysical').show();
                    //}

                    if (data._Screening.PhysicalFileExtension == ".pdf") {

                        $('#Phyimagedocument').hide();
                        $('#Phypdfdocument').show();
                        $('#Phypdfdocument').attr("src", HostedDir + data._Screening.PhysicalImagejson);
                    }
                    else {
                        $('#Phyimagedocument').show();
                        $('#Phypdfdocument').hide();
                        $('#Phyimagedocument').ZoomCrop(
                            {
                                image: "data:image/png;base64," + data._Screening.PhysicalImagejson,
                                updated: function (size, crop, position) {
                                }
                            });
                    }


                }
                else {
                    $('#Allow30DayPhysical').hide();
                    $('#Phyimagedocument').show();
                    $('#Phypdfdocument').hide();
                    $('#Phyimagedocument').ZoomCrop(
                {
                    image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                    updated: function (size, crop, position) {
                    }
                });
                }
                if (data._Screening.VisionFileName != "" && data._Screening.VisionFileName != null) {
                    $('#Allow45DayVisionScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/2," + data._Screening.ParentAppID);
                    $('#Allow45DayVisionScreening').show();
                    if (data._Screening.VisionFileExtension == ".pdf") {
                        $('#Visimagedocument').hide();
                        $('#Vispdfdocument').show();
                        $('#Vispdfdocument').attr("src", HostedDir + data._Screening.VisionImagejson);
                    }
                    else {
                        $('#Visimagedocument').show();
                        $('#Vispdfdocument').hide();
                        $('#Visimagedocument').ZoomCrop(
                             {

                                 image: "data:image/png;base64," + data._Screening.VisionImagejson,
                                 updated: function (size, crop, position) {


                                 }
                             });






                    }
                }
                else {
                    $('#Visimagedocument').show();
                    $('#Vispdfdocument').hide();
                    $('#Visimagedocument').ZoomCrop(
                      {
                          image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                          updated: function (size, crop, position) {
                            
                          }
                      });
                    $('#Allow45DayVisionScreening').hide();
                }
                if (data._Screening.HearingFileName != "" && data._Screening.HearingFileName != null) {
                    $('#Allow45DayHearingScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/3," + data._Screening.ParentAppID);
                    $('#Allow45DayHearingScreening').show();
                    if (data._Screening.HearingFileExtension == ".pdf") {
                        $('#Hearimagedocument').hide();
                        $('#Hearpdfdocument').show();
                        $('#Hearpdfdocument').attr("src", HostedDir + data._Screening.HearingImagejson);
                    }
                    else {
                        $('#Hearimagedocument').show();
                        $('#Hearpdfdocument').hide();

                        $('#Hearimagedocument').ZoomCrop(
                           {
                               image: "data:image/png;base64," + data._Screening.HearingImagejson,
                               updated: function (size, crop, position) {
                                
                               }
                           });


                    }
                }
                else {

                    $('#Hearimagedocument').show();
                    $('#Hearpdfdocument').hide();
                    $('#Hearimagedocument').ZoomCrop(
                        {
                            image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                            updated: function (size, crop, position) {
                               
                            }
                        });
                    $('#Allow45DayHearingScreening').hide();
                }
                if (data._Screening.DevelopFileName != "" && data._Screening.DevelopFileName != null) {
                    $('#Allow45DayDevelopmentalScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/4," + data._Screening.ParentAppID);
                    $('#Allow45DayDevelopmentalScreening').show();

                    if (data._Screening.DevelopFileExtension == ".pdf") {
                        $('#Devimagedocument').hide();
                        $('#Devpdfdocument').show();
                        $('#Devpdfdocument').attr("src", HostedDir + data._Screening.DevelopImagejson);
                    }
                    else {
                        $('#Devimagedocument').show();
                        $('#Devpdfdocument').hide();
                        $('#Devimagedocument').ZoomCrop(
                           {
                               image: "data:image/png;base64," + data._Screening.DevelopImagejson,
                               updated: function (size, crop, position) {
                                  
                               }
                           });

                    }
                }
                else {

                    $('#Devimagedocument').show();
                    $('#Devpdfdocument').hide();
                    $('#Devimagedocument').ZoomCrop(
                        {
                            image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                            updated: function (size, crop, position) {
                              
                            }
                        });
                    $('#Allow45DayDevelopmentalScreening').hide();
                }
                if (data._Screening.DentalFileName != "" && data._Screening.DentalFileName != null) {
                    $('#Allow90DayDentalScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/5," + data._Screening.ParentAppID);
                    $('#Allow90DayDentalScreening').show();


                    if (data._Screening.DentalFileExtension == ".pdf") {
                        $('#Dentimagedocument').hide();
                        $('#Dentpdfdocument').show();
                        $('#Dentpdfdocument').attr("src", HostedDir + data._Screening.DentalImagejson);
                    }
                    else {
                        $('#Dentimagedocument').show();
                        $('#Dentpdfdocument').hide();
                        $('#Dentimagedocument').ZoomCrop(
                          {
                              image: "data:image/png;base64," + data._Screening.DentalImagejson,
                              updated: function (size, crop, position) {
                                  
                              }
                          });


                    }
                }
                else {

                    $('#Dentimagedocument').show();
                    $('#Dentpdfdocument').hide();
                    $('#Dentimagedocument').ZoomCrop(
                     {
                         image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                         updated: function (size, crop, position) {
                            
                         }
                     });
                    $('#Allow90DayDentalScreening').hide();
                }
                if (data._Screening.SpeechFileName != "" && data._Screening.SpeechFileName != null) {
                    $('#AllowSpeechScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/6," + data._Screening.ParentAppID);
                    $('#AllowSpeechScreening').show();

                    if (data._Screening.SpeechFileExtension == ".pdf") {
                        $('#Speechimagedocument').hide();
                        $('#Speechpdfdocument').show();
                        $('#Speechpdfdocument').attr("src", HostedDir + data._Screening.SpeechImagejson);
                    }
                    else {
                        $('#Speechimagedocument').show();
                        $('#Speechpdfdocument').hide();
                        $('#Speechimagedocument').ZoomCrop(
                       {
                           image: "data:image/png;base64," + data._Screening.SpeechImagejson,
                           updated: function (size, crop, position) {
                             
                           }
                       });

                    }


                }
                else {
                    $('#Speechimagedocument').show();
                    $('#Speechpdfdocument').hide();
                    $('#Speechimagedocument').ZoomCrop(
                        {
                            image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                            updated: function (size, crop, position) {
                               
                            }
                        });

                    $('#AllowSpeechScreening').hide();
                }
                if (data._Screening.ScreeningAcceptFileName != "" && data._Screening.ScreeningAcceptFileName != null) {
                    $('#ScreeningAcceptance').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/7," + data._Screening.ParentAppID);
                    $('#ScreeningAcceptance').show();
                }
                else {
                    $('#ScreeningAcceptance').hide();
                }
                $('#PhysicalFileName').val(data._Screening.PhysicalFileName);
                $('#VisionFileName').val(data._Screening.VisionFileName);
                $('#HearingFileName').val(data._Screening.HearingFileName);
                $('#DevelopFileName').val(data._Screening.DevelopFileName);
                $('#DentalFileName').val(data._Screening.DentalFileName);
                $('#SpeechFileName').val(data._Screening.SpeechFileName);
                $('#ScreeningAcceptFileName').val(data._Screening.ScreeningAcceptFileName);
                $('#ParentAppID').val(data._Screening.ParentAppID);
            }
            else {
                $('#Allow30DayPhysical').hide();
                $('#Allow45DayVisionScreening').hide();
                $('#Allow45DayHearingScreening').hide();
                $('#Allow45DayDevelopmentalScreening').hide();
                $('#Allow90DayDentalScreening').hide();
                $('#ScreeningAcceptance').hide();
                $('#AllowSpeechScreening').hide();
                $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val());
            }

        }


        //Changes on 6Feb2017
        function Custodychange1() {
            $('#Dualcustody').hide();
        }
        function Custodychange() {
            $('#Dualcustody').show();
        }
        //End
        //changes Ifoster
        function popupshow1() {
            $('.verificationFileChoose').removeClass('hidden');
        }
        function popupshow2() {
            $('.verificationFileChoose').addClass('hidden');
        }
        // end
        //Changes on 6Feb2017
        function checkParentZipCode(inputTextObject) {

            if ($(inputTextObject).val() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;
                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckParentAddress(1);
                return ret;
            }
            else {

                $('#Parentcity').find('option').remove();
                $('#Parentstate').val('');
                // $('#County').val('');
            }
        }
        function CheckParentAddress(value) {
            //  debugger;
            var Zipcode = 0;
            if (value == 0)
                Zipcode = 0;
            else
                Zipcode = $('#Parentzipcode').val();



            if ($('#Parentzipcode').val().trim() != "") {

                $.ajax({
                    url: HostedDir + "/AgencyAdmin/Checkaddress",
                    type: "POST",
                    data: {
                        Address: $('#Parentzipcode').val(),
                        //HouseHoldId: $('#HouseholdId').val(),
                        Zipcode: Zipcode
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        // debugger;
                        if (value == 1) {
                            if (response.Zipcodelist != null && response.Zipcodelist.length > 0) {
                                var option = "";
                                for (var i = 0; i < response.Zipcodelist.length; i++) {
                                    option = option + '<option value="' + response.Zipcodelist[i].City + '">' + response.Zipcodelist[i].City + '</option>';
                                }
                                $('#Parentcity').find('option').remove().end().append(option);
                                $('#Parentcity').val('');
                                $('#Parentstate').val(response.Zipcodelist[0].State);
                                // $('#CountyD').val(response.Zipcodelist[0].County);
                                $('#Parentzipcode').val(response.Zipcodelist[0].Zipcode);
                            }
                            else {
                                $('#Parentcity').find('option').remove().end();
                                $('#Parentcity').val('');
                                $('#Parentstate').val('');
                                $('#Parentzipcode').val('');
                                // $('#CountyD').val('');
                                customAlert("Could not find zipcode details.");

                            }
                        }
                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });
            }


        }
        //End

        function validatedateChild(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                    $('#Oemergencycontact').hide();
                                    $('#lblOemergencycontact').hide();
                                }
                            });
                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }
        function bindsubcategory() {
            if ($('#CRace').val() == '1e5304d3-6182-483a-8b27-5269a2dd9936')
                $('#divRaceother').show();
            else
                $('#divRaceother').hide();
            $.ajax({
                url: HostedDir + "/Agencyuser/getsubcategory",
                type: "POST",
                data: {
                    Raceid: $('#CRace').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].RaceSubCategoryID + '">' + response[i].Name + '</option>';
                        }
                        $('#CRaceSubCategory').find('option').remove().end().append(option);
                        $('#CRaceSubCategory').val('');
                    }
                    else {
                        $('#CRaceSubCategory').find('option').remove();
                    }
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });





        }
        function AddDentist() {

            if ($('#CDentalhome').val() == 3) {
                $('#addrowDentist').show();
            }
            else if ($('#CDentalhome').val() == 4) {
                $('#addrowDentist').show();
            }
            else if ($('#CDentalhome').val() == 2) {
                $('#addrowDentist').show();
            }
            else {
                $('#addrowDentist').hide();
                $('#Dentist').val(0);
            }
        }
        function AddDoctor() {
            if ($('#Medicalhome').val() == 3) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else if ($('#Medicalhome').val() == 4) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else if ($('#Medicalhome').val() == 2) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else {
                $('#addrowC1').hide();
                $('#Doctor').val(0);
            }

        }
        //function SetResource(value, resource) {
        //    popupid = value;
        //    popupname = resource;
        //    if (popupid == 1 || popupid == 3 || popupid == 4) {
        //        $('#Resourece1').text("Doctor Information");
        //        $('#Resourece2').text("Doctor");
        //        $('#Resourece3').text("Add New Doctor");
        //        //Changes
        //        $('#DdlCommunityList').prop('selectedIndex', 1);
        //        $("#DdlCommunityList").attr("disabled", "disabled");
        //        //Added by Akansha on 14Dec2016
        //        $('#divmedicalCenter').show();
        //        $('#divmedicalnotes').show();
        //        $('#divdentalCenter').hide();
        //        $('#divdentalnotes').hide();
        //    }
        //    if (popupid == 2) {
        //        $('#Resourece1').text("Dentist Information");
        //        $('#Resourece2').text("Dentist");
        //        $('#Resourece3').text("Add New Dentist");
        //        //Changes
        //        $('#DdlCommunityList').prop('selectedIndex', 0);
        //        $("#DdlCommunityList").attr("disabled", "disabled");
        //        //Added by Akansha on 14Dec2016
        //        $('#divdentalCenter').show();
        //        $('#divdentalnotes').show();
        //        $('#divmedicalCenter').hide();
        //        $('#divmedicalnotes').hide();
        //    }

        //}
        ////Changes by Akansha on 14Dec2016
        //function SetResource(value, resource) {
        //    popupid = value;
        //    popupname = resource;
        //    if (popupid == 1 || popupid == 3 || popupid == 4) {
        //        // $('#Resourece1').text("Doctor Information");
        //        $('#Resourece1').text("Medical Center");
        //        // $('#Resourece2').text("Doctor");
        //        $('#ddlDoctor').show(); //Added by Akansha on 14Dec2016
        //        $('#ddlDentist').hide();
        //        $('#AddDoctorBtn').show();
        //        $('#AddDentistBtn').hide();
        //        $('#Resourece3').text("Add New Medical Center");
        //        //Changes

        //        $('#DdlCommunityList').prop('selectedIndex', 1);
        //        $("#DdlCommunityList").attr("disabled", "disabled");
        //        //Added by Akansha on 14Dec2016

        //        $('#divmedicalCenter').show();
        //        $('#divmedicalnotes').show();
        //        $('#divdentalCenter').hide();
        //        $('#divdentalnotes').hide();

        //        AddDoctorCenter(1);
        //    }
        //    if (popupid == 2) {
        //        // $('#Resourece1').text("Dentist Information");
        //        $('#Resourece1').text("Dental Center");
        //        $('#Resourece2').text("Dentist");
        //        $('#ddlDentist').show(); //Added by Akansha on 14Dec2016
        //        $('#AddDentistBtn').show();
        //        $('#AddDoctorBtn').hide();
        //        $('#ddlDoctor').hide();
        //        $('#Resourece3').text("Add New Dental Center");
        //        //Changes
        //        $('#DdlCommunityList').prop('selectedIndex', 0);
        //        $("#DdlCommunityList").attr("disabled", "disabled");
        //        //Added by Akansha on 14Dec2016
        //        $('#divdentalCenter').show();
        //        $('#divdentalnotes').show();
        //        $('#divmedicalCenter').hide();
        //        $('#divmedicalnotes').hide();

        //        AddDoctorCenter(2);
        //    }

        //}
        //Added on 1Feb2017
        function SetResource(value, resource) {
            popupid = value;
            popupname = resource;
            if (popupid == 1 || popupid == 3 || popupid == 4) {
                // $('#Resourece1').text("Doctor Information");
                $('#Resourece1').text("Medical Center");
                // $('#Resourece2').text("Doctor");
                $('#ddlDoctor').show(); //Added by Akansha on 14Dec2016
                $('#ddlDentist').hide();
                $('#AddDoctorBtn').show();
                $('#AddDentistBtn').hide();
                $('#Resourece3').text("Add New Medical Center");
                //Changes

                $('#DdlCommunityList').prop('selectedIndex', 1);
                $("#DdlCommunityList").attr("disabled", "disabled");
                //Added on 31Jan2017
                $('#DoctorCheck').show();
                $('#DentistCheck').hide();
                $('#txtCompanyNameD').val("");
                $('#txtFnameD').val("");
                $('#txtLnameD').val("");
                $('#CityD').val("");//1Feb2017
                $('#StateD').val("");
                $('#CountyD').val("");
                $('#ZipCodeD').val("");
                $('#DocCheck')[0].value = "";
                $('#DenCheck')[0].value = "";
                //End
                $('#divmedicalCenter').show();
                $('#divmedicalnotes').show();
                $('#divdentalCenter').hide();
                $('#divdentalnotes').hide();

                AddDoctorCenter(1);
            }
            if (popupid == 2) {
                // $('#Resourece1').text("Dentist Information");
                $('#Resourece1').text("Dental Center");
                $('#Resourece2').text("Dentist");
                $('#ddlDentist').show(); //Added by Akansha on 14Dec2016
                $('#AddDentistBtn').show();
                $('#AddDoctorBtn').hide();
                $('#ddlDoctor').hide();
                $('#Resourece3').text("Add New Dental Center");
                //Added on 31Jan2017
                $('#DoctorCheck').hide();
                $('#DentistCheck').show();
                $('#txtFnameD').val("");
                $('#txtLnameD').val("");
                $('#CityD').val("");//1Feb2017
                $('#StateD').val("");
                $('#txtCompanyNameDen').val("");
                $('#CountyD').val("");
                $('#ZipCodeD').val("");
                $('#DocCheck')[0].value = "";
                $('#DenCheck')[0].value = "";
                //End
                //Changes
                $('#DdlCommunityList').prop('selectedIndex', 0);
                $("#DdlCommunityList").attr("disabled", "disabled");
                //Added by Akansha on 14Dec2016
                $('#divdentalCenter').show();
                $('#divdentalnotes').show();
                $('#divmedicalCenter').hide();
                $('#divmedicalnotes').hide();

                AddDoctorCenter(2);
            }

        }
        //End

        //Added by Akansha on 14Dec2016
        function AddDoctorCenter(community) {
            $.ajax({
                url: HostedDir + "/AgencyUser/FillCommunity",
                type: "POST",
                data: {
                    Community: community,
                    //HouseHoldId: $('#HouseholdId').val(),

                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (community == "1") {
                        if (response.doctorList != null && response.doctorList.length > 0) {
                            var option = "";
                            for (var i = 0; i < response.doctorList.length; i++) {
                                option = option + '<option value="' + response.doctorList[i].Id + '">' + response.doctorList[i].Name + '</option>';
                            }
                            $('#Username').find('option').remove().end().append(option);
                            $('#Username').val('');

                        }
                    }
                    if (community == "2") {
                        if (response.doctorList != null && response.doctorList.length > 0) {
                            var option = "";
                            for (var i = 0; i < response.doctorList.length; i++) {
                                option = option + '<option value="' + response.doctorList[i].Id + '">' + response.doctorList[i].Name + '</option>';
                            }
                            $('#UsernameDentist').find('option').remove().end().append(option);
                            $('#UsernameDentist').val('');

                        }
                    }

                }
                      , error: function (response) {
                          customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                      }
            });
        }
        //End
        function Showhealth() {
            if ($("#Health").is(':visible'))
                $('#Health').hide();
            else
                $('#Health').show();
        }
        function ShowhealthHistory() {

            var exist1 = false;
            var exist2 = false;
            $('#customChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    if ($(this).attr("accesskey") == 1)
                        exist1 = true;
                    if ($(this).attr("accesskey") == 2)
                        exist2 = true;
                }
            });
            if (exist1 == false && exist2 == false) {
                customAlert('Please select Head Start or Early Head Start from program type.');
                exist1 = false;
                exist2 = false;
            }
            else {
                if (exist1) {
                    if ($("#EHSHealth").is(':visible'))
                        $('#EHSHealth').hide();
                    else
                        $('#EHSHealth').show();
                }
                if (exist2) {
                    if ($("#HSHealth").is(':visible'))
                        $('#HSHealth').hide();
                    else
                        $('#HSHealth').show();
                }
            }
        }
        //function ShowNutrition() {
        //    if ($("#Nutrition").is(':visible'))
        //        $('#Nutrition').hide();
        //    else
        //        $('#Nutrition').show();
        //}
        //Changes on 20Dec2016
        function ShowNutrition() {
            // debugger;
            //if ($("#Nutrition").is(':visible'))
            //    $('#Nutrition').hide();
            //else
            //    $('#Nutrition').show();



            var exist1 = false;
            var exist2 = false;
            $('#customChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    if ($(this).attr("accesskey") == 1)
                        exist1 = true;
                    if ($(this).attr("accesskey") == 2)
                        exist2 = true;
                }
                else {
                    $('#EhsNutrition1').hide();
                    $('#Nutrition').hide();
                }
            });
            if (exist1 == false && exist2 == false) {
                customAlert('Please select Head Start or Early Head Start from program type.');
                exist1 = false;
                exist2 = false;
                $('#EhsNutrition1').hide();
                $('#Nutrition').hide();
            }
            else {
                if (exist1) {
                    if ($("#EhsNutrition1").is(':visible'))
                        $('#EhsNutrition1').hide();
                    else
                        $('#EhsNutrition1').show();
                }
                if (exist2) {
                    if ($("#Nutrition").is(':visible'))
                        $('#Nutrition').hide();
                    else
                        $('#Nutrition').show();
                }







            }
        }

        //function isValidscreening() {

        //    //return CheckChild();
        //    if (CheckChild()) {
        //        if ($('#WellBabyExamMonth').val() != "") {

        //            var Screening = {};
        //            var formData = new FormData();
        //            formData.append('F001physicalDate', $('#F001physicalDate').val());
        //            formData.append('F002physicalResults', $('#F002physicalResults').val());
        //            formData.append('F003physicallFOReason', $('#F003physicallFOReason').val());
        //            formData.append('F004medFollowup', $('#F004medFollowup').val());
        //            formData.append('F005MedFOComments', $('#F005MedFOComments').val());
        //            formData.append('F006bpResults', $('#F006bpResults').val());
        //            formData.append('F007hgDate', $('#F007hgDate').val());
        //            formData.append('F008hgStatus', $('#F008hgStatus').val());
        //            formData.append('F009hgResults', $('#F009hgResults').val());
        //            formData.append('F010hgReferralDate', $('#F010hgReferralDate').val());
        //            formData.append('F011hgComments', $('#F011hgComments').val());
        //            formData.append('F012hgDate2', $('#F012hgDate2').val());
        //            formData.append('F013hgResults2', $('#F013hgResults2').val());
        //            formData.append('F014hgFOStatus', $('#F014hgFOStatus').val());
        //            formData.append('F015leadDate', $('#F015leadDate').val());
        //            formData.append('F016leadResults', $('#F016leadResults').val());
        //            formData.append('F017leadReferDate', $('#F017leadReferDate').val());
        //            formData.append('F018leadComments', $('#F018leadComments').val());
        //            formData.append('F019leadDate2', $('#F019leadDate2').val());
        //            formData.append('F020leadResults2', $('#F020leadResults2').val());
        //            formData.append('F021leadFOStatus', $('#F021leadFOStatus').val());
        //            formData.append('WellBabyExamMonth', $('#WellBabyExamMonth').val());
        //            formData.append('Householdid', $('#WellBabyHouseHoldId').val());
        //            formData.append('ChildId', $('#WellBabyChildId').val());
        //            formData.append('WellBabyDoc', $('#WellBabyDoc')[0].files[0]);

        //            //alert($('#WellBabyDoc')[0].files[0]);



        //            $.ajax({
        //                url: HostedDir + "/AgencyUser/AddWellBabyExamDetails",
        //                type: "POST",
        //                dateType: 'json',
        //                secureuri: false,
        //                async: false,
        //                processData: false,
        //                contentType: false,
        //                //   data: '{Screening: ' + JSON.stringify(Screening) + '}',
        //                data: formData,
        //                // contentType: "application/json; charset=utf-8",
        //                success: function (result) {
        //                    if (result = "1") {
        //                        $('#ApplicationScreening').modal('hide');
        //                        $('.DivScreenFields').hide();
        //                        $('.Wtext-clear').val("");
        //                        $('#WellBabyExamMonth').val("");
        //                    }

        //                }
        //            });



        //        }

        //    }
        //    else if (CheckChild()) {
        //        $('#ApplicationScreening').modal('hide');
        //    }

        //}
        //function PhysicalExamDates(data) {

        //    var tableData = "";
        //    console.clear();
        //    console.log(data);

        //    for (var i = 0; i < data.length; i++) {
        //        tableData += '<tr>';
        //        if (data[i].Status == "Expired") {
        //            tableData += '<td>' + data[i].Month + '</td>';
        //            tableData += '<td>' + data[i].ScheduledExamDate + '</td>';
        //            tableData += '<td>' + data[i].ExaminedDate + '</td>';
        //            tableData += '<td style="color:red;">' + data[i].Status + '</td>';
        //            tableData += '<td><a href="#target" style="cursor:pointer;" data-duration="' + data[i].Month + '" onclick="AddPhysicalWellBaby(this)" class="btn btn-iview">View</a></td>';

        //        }
        //        else if (data[i].Status == "Missing") {
        //            tableData += '<td>' + data[i].Month + '</td>';
        //            tableData += '<td>' + data[i].ScheduledExamDate + '</td>';
        //            tableData += '<td>' + data[i].ExaminedDate + '</td>';
        //            tableData += '<td style="color:blue;">' + data[i].Status + '</td>';
        //            tableData += '<td><a href="#target" style="cursor:pointer;" data-duration="' + data[i].Month + '" onclick="AddPhysicalWellBaby(this)" class="btn btn-iview">View</a></td>';
        //            // tableData += '<td>--</td>';

        //        }

        //        else if (data[i].Status == "Competed") {
        //            tableData += '<td>' + data[i].Month + '</td>';
        //            tableData += '<td>' + data[i].ScheduledExamDate + '</td>';
        //            tableData += '<td>' + data[i].ExaminedDate + '</td>';
        //            tableData += '<td style="color:green;">' + data[i].Status + '</td>';
        //            tableData += '<td><a href="#target" style="cursor:pointer;" data-duration="' + data[i].Month + '" onclick="AddPhysicalWellBaby(this)" class="btn btn-iview">View</a></td>';
        //        }
        //        else {
        //            tableData += '<td>' + data[i].Month + '</td>';
        //            tableData += '<td>' + data[i].ScheduledExamDate + '</td>';
        //            tableData += '<td>' + data[i].ExaminedDate + '</td>';
        //            tableData += '<td style="color:green;">' + data[i].Status + '</td>';
        //            tableData += '<td><a href="#target" style="cursor:pointer;" data-duration="' + data[i].Month + '" onclick="AddPhysicalWellBaby(this)" class="btn btn-iview">View</a></td>';
        //            // tableData += '<td>--</td>';
        //        }
        //    }
        //    $('.ehs-screening-table tbody').append(tableData);

        //}
        //function PhysicalExamDates(data)
        //{

        //    var tableData = "";

        //    for (var i = 0; i < data.length; i++)
        //    {
        //        tableData += '<tr>';
        //        for (var j = 0; j < data.length; j++)
        //        {
        //            if (data[i][j] == "Expired")
        //            {
        //                tableData += '<td style="color:red;">' + data[i][j] + '</td>';
        //            }
        //            else if(data[i][j] == "Missing")
        //            {
        //                tableData += '<td style="color:blue;">' + data[i][j] + '</td>';
        //            }

        //            else
        //            {
        //                tableData += '<td>' + data[i][j] + '</td>';

        //            }
        //        }
        //      //  tableData += '<td><i style="cursor:pointer;" data-duration="' + data[i][0] + '" onclick="AddPhysicalWellBaby(this)" class="fa fa-plus" aria-hidden="true"></i></td>';
        //        tableData += '<td><a href="#target" style="cursor:pointer;" data-duration="' + data[i][0] + '" onclick="AddPhysicalWellBaby(this)" class="btn btn-iview">View</a></td>';

        //        tableData += '</tr>';
        //    }
        //    $('.ehs-screening-table tbody').append(tableData);

        //}

        //function AddPhysicalWellBaby(arg) {

        //    $('.DivScreenFields').show();
        //    var duration = $(arg).data('duration');
        //    $('#WellBabyExamMonth').val(duration);
        //    $('#DivScreenFieldsHeading').text("Exam Details For " + duration);


        //    if ($('#WellBabyExamMonth').val() != "") {

        //        var Screening = {};

        //        Screening.WellBabyExamMonth = $('#WellBabyExamMonth').val();
        //        Screening.Householdid = $('#WellBabyHouseHoldId').val();
        //        Screening.Childid = $('#WellBabyChildId').val();
        //        //  Screening.WellBabyDoc = $('#WellBabyDoc').val();

        //        //var formData = new FormData();
        //        //var file = document.getElementById("WellBabyDoc").files[0];

        //        //formData.append("WellBabyExamMonth", $("#WellBabyExamMonth").val());
        //        //formData.append("Householdid", $("#Householdid").val());
        //        //formData.append("Childid", $("#Childid").val());

        //        //formData.append("file", file);


        //        $.ajax({
        //            url: HostedDir + "/AgencyUser/GetWellBabyExamDetails",
        //            type: "POST",
        //            dateType: 'json',
        //            secureuri: false,
        //            async: false,
        //            data: '{Screening: ' + JSON.stringify(Screening) + '}',
        //            //data:formData,
        //            contentType: "application/json; charset=utf-8",
        //            success: function (result) {
        //                if (result != null && result.length > 0) {
        //                    console.clear();
        //                    console.log(result);
        //                    //$('#ApplicationScreening').modal('hide');
        //                    //$('.DivScreenFields').hide();
        //                    ////$('.Wtext-clear').val("");
        //                    //$('#WellBabyExamMonth').val("");
        //                    $('#filename').text("No file choosen");

        //                    $('#F001physicalDate').val(result[0]),
        //                    $('#F002physicalResults').val(result[1]);
        //                    $('#F003physicallFOReason').val(result[2]);
        //                    $('#F004medFollowup').val(result[3]);
        //                    $('#F005MedFOComments').val(result[4]);
        //                    $('#F006bpResults').val(result[5]);
        //                    $('#F007hgDate').val(result[6]);
        //                    $('#F008hgStatus').val(result[7]);
        //                    $('#F009hgResults').val(result[8]);
        //                    $('#F010hgReferralDate').val(result[9]);
        //                    $('#F011hgComments').val(result[10]);
        //                    $('#F012hgDate2').val(result[11]);
        //                    $('#F013hgResults2').val(result[12]);
        //                    $('#F014hgFOStatus').val(result[13]);
        //                    $('#F015leadDate').val(result[14]);
        //                    $('#F016leadResults').val(result[15]);
        //                    $('#F017leadReferDate').val(result[16]);
        //                    $('#F018leadComments').val(result[17]);
        //                    $('#F019leadDate2').val(result[18]);
        //                    $('#F020leadResults2').val(result[19]);
        //                    $('#F021leadFOStatus').val(result[20]);

        //                    var filename = result[21];
        //                    var PhysicalImagejson = result[22];
        //                    var Extensn = result[23];

        //                    if (filename != "" && filename != null) {
        //                        $('#filename').text(filename);
        //                        // $('#Allow30DayPhysical').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/1," + data._Screening.ParentAppID);
        //                        //$('#Allow30DayPhysical').show();
        //                        if (Extensn == ".pdf") {

        //                            $('#Phyimagedocument').hide();
        //                            $('#Phypdfdocument').show();
        //                            $('#Phypdfdocument').attr("src", HostedDir + PhysicalImagejson);
        //                        }
        //                        else {
        //                            $('#Phyimagedocument').show();
        //                            $('#Phypdfdocument').hide();
        //                            $('#Phyimagedocument').ZoomCrop(
        //                                {
        //                                    image: "data:image/png;base64," + PhysicalImagejson,
        //                                    updated: function (size, crop, position) {
        //                                        //console.log(size, crop, position);

        //                                    }
        //                                });
        //                        }


        //                    }
        //                    else {
        //                        $('#Allow30DayPhysical').hide();
        //                        $('#Phyimagedocument').show();
        //                        $('#Phypdfdocument').hide();
        //                        $('#Phyimagedocument').ZoomCrop(
        //                    {
        //                        image: HostedDir + "/Content/img/NoImageAvailable.jpg",
        //                        updated: function (size, crop, position) {
        //                            console.log(size, crop, position);
        //                        }
        //                    });
        //                    }

        //                }
        //                else {
        //                    $('.Wtext-clear').val("");
        //                }
        //            }

        //        });



        //    }

        //}

        function AddChildDirectBloodHS() {
            if ($('#OtherConditions').val().trim() != "") {
                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                'type="checkbox" checked value="$' + $('#OtherConditions').val() + '?"><label>' + $('#OtherConditions').val() + '</label>');
                $('#OtherConditions').val('');
            }
        }
        function DiagnosedConditions() {
            if ($('#HsDiagonoseOtherConditions').val().trim() != "") {
                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                'type="checkbox" Checked value="$' + $('#HsDiagonoseOtherConditions').val() + '?"><label>' + $('#HsDiagonoseOtherConditions').val() + '</label>');
                $('#HsDiagonoseOtherConditions').val('');
            }
        }
        function MedicalChecklist() {
            if ($('#HsOthermedicalConditions').val().trim() != "") {
                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                'type="checkbox" Checked value="$' + $('#HsOthermedicalConditions').val() + '?"><label>' + $('#HsOthermedicalConditions').val() + '</label>');
                $('#HsOthermedicalConditions').val('');
            }
        }
        function ChronicConditions() {
            if ($('#ChronicHealthConditions').val().trim() != "") {
                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                'type="checkbox" Checked value="$' + $('#ChronicHealthConditions').val() + '?"><label>' + $('#ChronicHealthConditions').val() + '</label>');
                $('#ChronicHealthConditions').val('');
            }
        }
        function EHSChronicHealthConditions() {
            if ($('#EhsChronicHealthConditions').val().trim() != "") {
                $('#EHSChildChecklist').append('<br><input  name="PostedPostedMedicalEHS.ChildEHSID"' +
                'type="checkbox" Checked value="$' + $('#EhsChronicHealthConditions').val() + '?"><label>' + $('#EhsChronicHealthConditions').val() + '</label>');
                $('#EhsChronicHealthConditions').val('');
            }
        }
        function SaveEhsCho() {
            if ($('#EhsCHConditions').val().trim() != "") {
                $('#EHSCHCChildChecklist').append('<br><input  name="PostedPostedEHS.ChildEHSID"' +
                'type="checkbox" Checked value="$' + $('#EhsCHConditions').val() + '?"><label>' + $('#EhsCHConditions').val() + '</label>');
                $('#EhsCHConditions').val('');
            }
        }
        function ChilddrinkHs() {
            if ($('#HsChilddrinkcondition').val().trim() != "") {
                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                'type="checkbox" Checked value="$' + $('#HsChilddrinkcondition').val() + '?"><label>' + $('#HsChilddrinkcondition').val() + '</label>');
                $('#HsChilddrinkcondition').val('');
            }
        }
        function AddOtherConditions() {
            if ($('#HSHealth').is(':visible')) {
                $('#CDBRText').show();
                $('#CDBRText').empty();
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDBRText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCDBRText').show();
                $('#EHSCDBRText').empty();
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDBRText').append(div);
                    }
                });
            }
        }
        function AddOtherdiagnosedConditions() {
            var count = 0;
            if ($('#HSHealth').is(':visible')) {
                $('#CDCText').show();
                $('#CDCText').empty();
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDCText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCDCText').show();
                $('#EHSCDCText').empty();
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).val() == 1) {
                            count = 1;
                        }
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDCText').append(div);
                    }
                });
            }
            if (count == 1) {
                $('#DivEHSAllergy').show();
                $('#DivEHSEpiPen').show();
            }
            else {
                $('#DivEHSAllergy').hide();
                $('#DivEHSEpiPen').hide();
                $('#EHSAllergy').val('');
                $('#EHSEpiPen1').prop("checked", false);
                $('#EHSEpiPen1').prop("checked", false);



            }
        }
        function AddMedicalOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCCHText').show();
                $('#EHSCCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCCHText').append(div);
                    }
                });
            }
            if ($('#HSHealth').is(':visible')) {
                $('#CCHText').show();
                $('#CCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CCHText').append(div);
                    }
                });
            }
        }
        function AddOtherHealthConditions() {

            if ($('#HSHealth').is(':visible')) {
                $('#CTCHText').show();
                $('#CTCHText').empty();
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CTCHText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {


                $('#EHSCTCHText').show();
                $('#EHSCTCHText').empty();
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCTCHText').append(div);
                    }
                });
            }
        }
        function AddEhsOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCHCText').show();
                $('#EHSCHCText').empty();
                $('#EHSChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCHCText').append(div);
                    }
                });
            }
        }
        function AddEhsCHCOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHDCDCText').show();
                $('#EHDCDCText').empty();
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHDCDCText').append(div);
                    }
                });
            }
        }
        function AddMedicalOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCCHText').show();
                $('#EHSCCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCCHText').append(div);
                    }
                });
            }
            if ($('#HSHealth').is(':visible')) {
                $('#CCHText').show();
                $('#CCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CCHText').append(div);
                    }
                });
            }
        }
        function SaveChildVitaminSupplement() {
            $('#Cvstext').show();
            $('#Cvstext').empty();
            $('#ChildVitaminSupplementlist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#Cvstext').append(div);
                }
            });
        }
        function SaveChildDiet() {
            $('#CDText').show();
            $('#CDText').empty();
            $('#ChildDietlist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#CDText').append(div);
                }
            });
        }
        function AddChilddrinkcondition() {
            $('#CDRinkText').show();
            $('#CDRinkText').empty();
            $('#ChildDrinklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#CDRinkText').append(div);
                }
            });
        }
        //Added by Akansha on 19Dec2016
        function ShowEhsChildVitaminSupplmentcomment() {
            $('#divEhsVitaminPopup').show();
        }
        function HideEhsChildVitaminSupplmentcomment() {
            $('#divEhsVitaminPopup').hide();
            // $('#Cvstext').val("");
            $('#EhsCvstext').html('');
            $('#ChildVitaminSupplementlist input:checked').each(function () {
                $(this).prop("checked", false);
            });
        }


        //End

        //Added by Akansha on 14Dec2016
        function ShowRestrictFoodcomment() {
            $('#divRestrictFoodcomment').show();
        }
        function HideRestrictFoodcomment() {
            $('#divRestrictFoodcomment').hide();
        }
        //
        function ShowChildVitaminSupplmentcomment() {
            $('#divVitaminPopup').show();
            // $('#divChildVitaminSupplmentcomment').show();
        }
        function HideChildVitaminSupplmentcomment() {
            // $('#divChildVitaminSupplmentcomment').hide();
            $('#divVitaminPopup').hide();
            // $('#Cvstext').val("");
            $('#Cvstext').html('');
            $('#ChildVitaminSupplementlist input:checked').each(function () {
                $(this).prop("checked", false);
            });
        }
        //End

        //Added by Akansha on 19Dec2016
        function ShowEhsNauseaorVomitingcomment() {
            $('#divEhsNauseaorVomitingcomment').show();
        }
        function HideNauseaorVomitingcomment() {
            $('#divEhsNauseaorVomitingcomment').hide();
        }
        function ShowEhsPersistentDiarrheacomment() {
            $('#divEhsdiarrheacomment').show();
        }
        function HideEhsPersistentDiarrheacomment() {
            $('#divEhsdiarrheacomment').hide();
        }
        function ShowEhsPersistentConstipationcomment() {
            $('#divEhsPersistentConstipation').show();
        }
        function HideEhsPersistentConstipationcomment() {
            $('#divEhsPersistentConstipation').hide();
        }
        function ShowEhsDramaticWeightcomment() {
            $('#divEhsDramaticWeightchange').show();
        }
        function HideEhsDramaticWeightcomment() {
            $('#divEhsDramaticWeightchange').hide();
        }

        function ShowEhsRecentSurgerycomment() {
            $('#divEhsRecentSurgery').show();
        }
        function HideEhsRecentSurgerycomment() {
            $('#divEhsRecentSurgery').hide();
        }
        function ShowEhsRecentHospitalizationcomment() {
            $('#divEhsRecentHospitalization').show();
        }
        function HideEhsRecentHospitalizationcomment() {
            $('#divEhsRecentHospitalization').hide();
        }
        function ShowEhsChildSpecialDietcomment() {
            $('#divEhsChildSpecialDiet').show();
        }
        function HideEhsChildSpecialDietcomment() {
            $('#divEhsChildSpecialDiet').hide();
        }
        function ShowEhsFoodAllergies() {
            $('#divEhsFoodAllergies').show();
        }
        function HideEhsFoodAllergies() {
            $('#divEhsFoodAllergies').hide();
        }
        function ShowEhsNutritionalConcern() {
            $('#divEhsNutritionalConcern').show();
        }
        function HideEhsNutritionalConcern() {
            $('#divEhsNutritionalConcern').hide();
        }

        function ShowEhschildTrouble() {
            $('#divEhschildTrouble').show();
        }
        function HideEhschildTrouble() {
            $('#divEhschildTrouble').hide();
        }
        function EhsHidespoon() {
            $('#divEhsSpoonorForkComment').hide();
        }
        function EhsShowspoon() {
            $('#divEhsSpoonorForkComment').show();
        }
        function ShowEhsfeedingtube() {
            $('#divEhsSpecialFeedingComment').show();
        }
        function HideEhsfeedingtube() {
            $('#divEhsSpecialFeedingComment').hide();
        }
        function ShowEhsTakebottle() {
            $('#divEhsBottleComment').show();
        }
        function HideEhsTakebottle() {
            $('#divEhsBottleComment').hide();
        }
        function ShowEhschewanything() {
            $('#divEhschewanything').show();
        }
        function HideEhschewanything() {
            $('#divEhschewanything').hide();
        }




        //End

        function ShowNauseaorVomitingcomment() {
            $('#divNauseaorVomitingcomment').show();
        }
        function HideNauseaorVomitingcomment() {
            $('#divNauseaorVomitingcomment').hide();
        }
        function ShowPersistentDiarrheacomment() {
            $('#divdiarrheacomment').show();
        }
        function HidePersistentDiarrheacomment() {
            $('#divdiarrheacomment').hide();
        }
        function ShowPersistentConstipationcomment() {
            $('#divPersistentConstipation').show();
        }
        function HidePersistentConstipationcomment() {
            $('#divPersistentConstipation').hide();
        }
        function ShowDramaticWeightcomment() {
            $('#divDramaticWeightchange').show();
        }
        function HideDramaticWeightcomment() {
            $('#divDramaticWeightchange').hide();
        }

        function ShowRecentSurgerycomment() {
            $('#divRecentSurgery').show();
        }
        function HideRecentSurgerycomment() {
            $('#divRecentSurgery').hide();
        }
        function ShowRecentHospitalizationcomment() {
            $('#divRecentHospitalization').show();
        }
        function HideRecentHospitalizationcomment() {
            $('#divRecentHospitalization').hide();
        }
        function ShowChildSpecialDietcomment() {
            $('#divChildSpecialDiet').show();
        }
        function HideChildSpecialDietcomment() {
            $('#divChildSpecialDiet').hide();
        }
        function ShowFoodAllergies() {
            $('#divFoodAllergies').show();
        }
        function HideFoodAllergies() {
            $('#divFoodAllergies').hide();
        }
        function ShowNutritionalConcern() {
            $('#divNutritionalConcern').show();
        }
        function HideNutritionalConcern() {
            $('#divNutritionalConcern').hide();
        }

        function ShowchildTrouble() {
            $('#divchildTrouble').show();
        }
        function HidechildTrouble() {
            $('#divchildTrouble').hide();
        }
        function Showspoon() {
            $('#divSpoonorForkComment').show();
        }
        function Hidespoon() {
            $('#divSpoonorForkComment').hide();
        }
        function Showfeedingtube() {
            $('#divSpecialFeedingComment').show();
        }
        function Hidefeedingtube() {
            $('#divSpecialFeedingComment').hide();
        }
        function ShowTakebottle() {
            $('#divBottleComment').show();
        }
        function HideTakebottle() {
            $('#divBottleComment').hide();
        }
        function Showchewanything() {
            $('#divchewanything').show();
        }
        function Hidechewanything() {
            $('#divchewanything').hide();
        }
        //08082016
        function ShowHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').hide();
        }


        function ShowHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').hide();
        }
        //10082016
        function ShowEhsChildProblemComment() {
            $('#DivEhsChildProblm').show();
        }
        function HideEhsChildProblemComment() {
            $('#DivEhsChildProblm').hide();
        }
        function ShowEhsMedicationName() {
            $('#DivEhsMedication').show();
        }
        function HideEhsMedicationName() {
            $('#DivEhsMedication').hide();
        }
        function ShowHsChildProblem() {
            $('#DivHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblem() {
            $('#DivHSBabyOrMotherProblems').hide();
        }
        function ShowHsDentalExam() {
            $('#DivHsDentalExam').show();
        }
        function HideHsDentalExam() {
            $('#DivHsDentalExam').hide();
        }
        function ShowHsChildNeedDentalTreatment() {
            $('#DivHSNeedingDentalTreatment').show();
        }
        function HideHsChildNeedDentalTreatment() {
            $('#DivHSNeedingDentalTreatment').hide();
        }
        function ShowHsChildRecievedDentalTreatment() {
            $('#DivHSChildReceivedDentalTreatment').show();
        }
        function HideHsChildRecievedDentalTreatment() {
            $('#DivHSChildReceivedDentalTreatment').hide();
        }
        function ShowHsChildDentalCare() {
            $('#DivHsChildDentalCare').show();
        }
        function HideHsChildDentalCare() {
            $('#DivHsChildDentalCare').hide();
        }
        var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInput(oInput) {
            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    // alert(oInput.files[0].size/1024/1024);
                    var valid_size = 3 * 1000 * 1000;
                    //   var v = oInput.files[0].size / 1024 / 1024;
                    var v = oInput.files[0].size;

                    // if (v <= 3)
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }
        var _validFileExtensions1 = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInputpdf(oInput) {
            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    // alert(oInput.files[0].size / 1024 / 1024);
                    //   var v = oInput.files[0].size / 1024 / 1024 ;
                    //  if (v <= 3)
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions1.length; j++) {
                            var sCurExtension = _validFileExtensions1[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                $('#AdresssverificationinPaper').prop("checked", false);
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }
        var _validFileExtensions1 = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInputpdf2(oInput) {

            //Changes by Akansha on 12Dec2016
            if (oInput.id == "Physical") {
                $('#AddPhysical').prop("checked", true);
                $('#Physical').show();

            }
            if (oInput.id == "Vision") {
                $('#AddVision').prop("checked", true);
                $('#Vision').show();

            }
            if (oInput.id == "Hearing") {
                $('#AddHearing').prop("checked", true);
                $('#Hearing').show();
            }
            if (oInput.id == "Develop") {
                $('#AddDevelop').prop("checked", true);
                $('#Develop').show();
            }
            if (oInput.id == "Dental") {
                $('#AddDental').prop("checked", true);
                $('#Dental').show();
            }
            if (oInput.id == "Speech") {
                $('#AddSpeech').prop("checked", true);
                $('#Speech').show();
            }

            //End

            //End
            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    // alert(oInput.files[0].size / 1024 / 1024);
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    //  var v = oInput.files[0].size / 1024 / 1024;
                    // if (v <= 3)
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions1.length; j++) {
                            var sCurExtension = _validFileExtensions1[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                $('#DobverificationinPaper').prop("checked", false);
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }

        //function isValidscreening() {

        //    if (CheckChild()) {
        //        $('#ApplicationScreening').modal('hide');
        //    }

        //}


        function isValidscreening(ele, screenCommand) {
            isValid = true;
            cleanValidation();




            if (screenCommand == 1) {



                //Checks for Approval of Screening by parent//

                var allowScr = $('#ApplicationScreening').find('#AllowScreening');

                if (allowScr.find('#ScreenAcc').find('#ScreeningAccept').val() == '' && !allowScr.find('#ScreenAcc').find('#ScreeningAcceptance').is(':visible')
                    && !allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked')) {
                    isValid = false;
                    customAlert("Permission to screening form is required.");
                    //$('#ApplicationScreening').modal('toggle');
                    plainValidation('#ScreeningAccept');
                    return isValid;
                }

                if (!allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked')

                    && (allowScr.find('#ScreenAcc').find('#ScreeningAccept').val() == '' && !allowScr.find('#ScreenAcc').find('#ScreeningAcceptance').is(':visible'))) {
                    isValid = false;
                    customAlert("Please select parent");
                    allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').focus();
                    //   plainValidation('#ScreeningAcceptance');
                    return isValid;
                }

                if (allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked') && ($('#ParentSignature').val() == null || $('#ParentSignature').val() == '')) {
                    isValid = false;
                    customAlert("Parent signature is required.");
                    plainValidation('#scrSig');
                    $('.scr-signature-div').show('slow');
                    return isValid;
                }





                debugger;
                var errScr = 0;
                allowScr.find('.screening-approval-div').each(function (i, scr) {
                    debugger;
                    if (!$(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"]').is(':checked')) {
                        isValid = false;
                        customAlert('Please select Yes or No to allow screening.');
                        plainValidation($(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"]'));
                        errScr++;

                    }
                    else if (

                        $(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"][value=1]').is(':checked') &&
                        $(scr).find('input:file[name="ScreeningList[' + i + '].ApprovedFile"]').val() == '' &&
                        !$(scr).find('#Allow_' + i).is(':visible') &&
                        !$(scr).find('input:checkbox[name="ScreeningList[' + i + '].NoDocument"]').is(':checked')) {
                        isValid = false;
                        customAlert('Please upload document for screening.');
                        plainValidation($(scr).find('input:file[name="ScreeningList[' + i + '].ApprovedFile"]'));
                        errScr++;

                    }

                    if (errScr > 0) {
                        return isValid;
                    }
                    else {

                    }
                });


                if (errScr > 0) {
                    return false;
                }
            }




            if (screenCommand == 2) {
                debugger;
                cleanValidation();
                var scrtabarr = [];

                var qnerror = 0;

                var tabid = $(ele).closest('.tab-pane').attr('id');

                $.each($('#ScreeningDiv').find('#myTabContent').find('#' + tabid).find('.qn-div'), function (j, qn) {

                    var ackey = $(qn).children('label').attr('accesskey');

                    if (ackey == '1' && j == 0) {
                        if ($(qn).find('select').val() == null || $(qn).find('select').val() == '' || $(qn).find('select').val() == '0') {
                            qnerror++;
                            plainValidation($(qn).find('select'));
                        }
                    }

                    else {
                        var supLength = $(qn).children('label').contents().filter(function () {

                            return $(this)[0].nodeName == 'SUP';
                        }).length;

                        if (supLength > 0) {


                            var nodeName = $(qn).find('.custscreeningquestin')[0].nodeName;

                            switch (nodeName) {
                                case 'SELECT':
                                    if ($(qn).find('.custscreeningquestin').val() == null || $(qn).find('.custscreeningquestin').val() == '' || $(qn).find('.custscreeningquestin').val() == '0') {
                                        qnerror++;
                                        plainValidation($(qn).find('.custscreeningquestin'));
                                    }
                                    break;

                                case 'INPUT':
                                    if ($(qn).find('.custscreeningquestin').val() == null || $(qn).find('.custscreeningquestin').val() == '' || $(qn).find('.custscreeningquestin').val() == undefined) {
                                        qnerror++;
                                        plainValidation($(qn).find('.custscreeningquestin'));
                                    }
                                    break;




                            }
                        }



                    }



                });
                if (qnerror > 0) {
                    customAlert('Mandatory fields are required.');
                    // $('#ScreeningDiv').find('#myTab').find('#tabid' + scrtabarr[i] + '').children('a').trigger('click');
                    return false;
                }








                if (qnerror > 0) {
                    customAlert('Mandatory fields are required.');
                    return false;

                }




            }




            $('#spinner').show();






            var myform = document.getElementById("form2");
            var fd = new FormData(myform);
            $('#form1 input:file').each(function (a, b) {
                var fileInput = $(this);
                fd.append($(fileInput).attr("name"), fileInput);
            });

            fd.append('saveCommand', screenCommand);

            $.ajax({
                url: HostedDir + "/AgencyUser/SaveScreeningApprovalByClient",
                type: "POST",
                data: fd,
                dataType: "json",
                secureuri: false,
                processData: false,
                contentType: false,
                async: true,
                success: function (Data) {

                    if (Data) {
                        customAlert("Record saved successfully.");
                        $('#ApplicationScreening').modal('hide');
                        $('#spinner').hide();
                    }
                    else {

                        customAlert("Error occurred. Please, try again later.");
                        $('#spinner').hide();
                    }


                }
                   , error: function (Data) {

                       customAlert("Session Ended Log Onto The System Again.");
                       setTimeout(function () {
                           window.location.href = HostedDir + '/login/Loginagency';
                       }, 2000);
                   }
            });




        }


        function CheckChild() {
            debugger;
            var isValid = true;
            var programcount = 0;
            cleanValidation();
            if ($('#Cfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Cfirstname');
                return isValid;
            }
            if ($('#Clastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Clastname');
                return isValid;
            }

            $('#customChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    programcount = 1;
                }
            });
            if (programcount == 0) {
                isValid = false;
                customAlert("Program Type is required. ");
                return isValid;
            }
            if ($('#CDOB')[0].value.trim() == "") {
                isValid = false;
                customAlert("Date of birth is required. ");
                plainValidation('#CDOB');
                return isValid;
            }
            if ($('#CDOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#CDOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth Can't be greater than current date. ");
                    plainValidation('#CDOB');
                    return isValid;
                }
                else if (!validatedateChild($('#CDOB'))) {
                    isValid = false;
                    plainValidation('#CDOB');
                    return isValid;
                }
            }
            if ($('#DOBverifiedBy').val() == "" || $('#DOBverifiedBy').val() == null) {

                isValid = false;
                customAlert("DOB Verified by is required.");
                plainValidation('#DOBverifiedBy');
                return isValid;
            }
            if (!$("input:radio[name='CGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }

            if ($('#CRace').val() == "" || $('#CRace').val() == null) {
                isValid = false;
                customAlert("Race is required.");
                plainValidation('#CRace');
                return isValid;
            }
            if ($('#CEthnicity').val() == "" || $('#CEthnicity').val() == null) {
                isValid = false;
                customAlert("Ethnicity is required. ");
                plainValidation('#CEthnicity');
                return isValid;
            }
            if ($('#SchoolDistrict').val() == "" || $('#SchoolDistrict').val() == null) {
                isValid = false;
                customAlert("School District is required. ");
                plainValidation('#SchoolDistrict');
                return isValid;

            }
            if ($('#Medicalhome').val() == "" || $('#Medicalhome').val() == null) {
                $('#BtnMsave').show();
                customAlert("Medical Home is required. ");
                plainValidation('#Medicalhome');
                return isValid;
            }
            if ($('#Medicalhome').val() == 2 || $('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4) {
                if ($('#Doctor').val() == 0) {
                    isValid = false;
                    customAlert("Doctor information is required. ");
                    plainValidation('#CDoctor');
                    return isValid;

                }
            }
            if ($('#CDentalhome').val() == "" || $('#CDentalhome').val() == null) {
                isValid = false;
                customAlert("Medical Home is required. ");
                plainValidation('#CDentalhome');
                return isValid;

            }
            if ($('#CDentalhome').val() == 2 || $('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4) {
                if ($('#Dentist').val() == 0) {
                    isValid = false;
                    customAlert("Dentist information is required. ");
                    plainValidation('#Dentist');
                    return isValid;
                }
            }
            if ($('#InsuranceOption').val() == "" || $('#InsuranceOption').val() == null) {
                isValid = false;
                customAlert("Primary Insurance is required.");
                plainValidation('#InsuranceOption');
                return isValid;

            }
            if (!$('#IsFoster1').prop("checked") && !$('#IsFoster2').prop("checked")) {
                isValid = false;
                customAlert("Is Foster Child is required. ");
                return isValid;
            }
            if ($('#IsFoster1').prop("checked") && $('#FiledFosterAvatar').val() == "") {
                if ($('#FosterFileName').val() == '') {
                    isValid = false;
                    customAlert("Foster child document form is required");
                    return isValid;
                }

            }
            if (!$('#Inwalfareagency1').prop("checked") && !$('#Inwalfareagency2').prop("checked")) {
                isValid = false;
                customAlert("Is child referred by a child welfare agency is required. ");
                return isValid;
            }
            if (!$('#InDualcustody1').prop("checked") && !$('#InDualcustody2').prop("checked")) {
                isValid = false;
                customAlert("Is child a dual custody is required. ");
                return isValid;
            }
            if (!$('#InChildCareSubsidy1').prop("checked") && !$('#InChildCareSubsidy2').prop("checked")) {
                isValid = false;
                customAlert("Is child in child care subsidy is required? ");
                return isValid;
            }
            if (!$('#CParentdisable1').prop("checked") && !$('#CParentdisable2').prop("checked")) {
                isValid = false;
                customAlert("Suspected or document of disabilty is required. ");
                return isValid;

            }
            if ($('#ChildTransport').length > 0) {
                if (!$('#CTransportNeeded1').prop("checked") && !$('#CTransportNeeded2').prop("checked")) {
                    isValid = false;
                    customAlert("Is Transportation Needed is required. ");
                    return isValid;
                }
            }
            $('#Health').show();
            if ($('#ImmunizationService').val() == "" || $('#ImmunizationService').val() == null) {
                isValid = false;
                customAlert("Immunization Status is required. ");
                plainValidation('#ImmunizationService');
                return isValid;

            }
            //if ($('#BMIStatus').val() == "" || $('#BMIStatus').val() == null) {
            //    isValid = false;
            //    customAlert("BMI Status is required. ");
            //    plainValidation('#BMIStatus');
            //    return isValid;

            //}
            if (!$('#MedicalService1').prop("checked") && !$('#MedicalService2').prop("checked")) {
                isValid = false;
                customAlert("Is this child up-to-date on a schedule of age-appropriate health care is required. ");
                return isValid;
            }








            return isValid;
        }
        function HidedivCriteriaforReferral(object) {
            if ($(object).prop("checked")) {
                $('#ChildReferalCriteria').attr("disabled", true);
                $('#ChildReferalCriteria').val('');
            }
            else
                $('#ChildReferalCriteria').attr("disabled", false);

        }
        function Checkdateprofessional(value) {
            isValid = true;
            if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(value).val())) {
                    customAlert("Invalid date format. ");
                    $(value).val('');
                    return false;
                }
            }
            if ($(value).val().trim() != "" && $('#CDOB').val().trim() != "") {
                var Adate = new Date($(value).val());
                var Cdate = new Date($('#CDOB').val());
                var TodayDate = new Date();

                if (Adate > Cdate) {
                    customAlert("Recent professional dental exam date  can't be greater than  child dob.");
                    $(value).val('');
                    return false;
                }
                else if (Adate > TodayDate) {
                    customAlert("Recent professional dental exam date can't be greater than today's date.");
                    $(value).val('');
                    return false;
                }




            }
            return true;
        }
        function CheckdateNew(value) {

            isValid = true;
            if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(value).val())) {
                    customAlert("Invalid date format. ");
                    $(value).val('');
                    return false;
                }
            }


            if ($(value).val().trim() != "" && $('#CDOB').val().trim() != "") {
                var Adate = new Date($(value).val());
                var Cdate = new Date($('#CDOB').val());
                var TodayDate = new Date();

                if ((Adate > TodayDate) || (Adate < Cdate)) {
                    customAlert("Assessment date must be greater than child dob or equal to today's date.");
                    $(value).val('');
                    return false;
                }


            }



            return true;
        }
        function ValidateWeightHeight(object) {
            if ($('#HWInput1').prop("checked") || $('#HWInput2').prop("checked")) {
                var ex = /^[0-9]+\.?[0-9]*$/;
                if (ex.test(object.value) == false) {
                    $(object).val('');
                }
                var ex = /^\d*\.?\d{0,2}$/;
                if (ex.test(object.value) == false) {
                    object.value = object.value.substring(0, object.value.indexOf('.') + 3);
                }
                var lastChar = object.value.substring(object.value.length - 1);
                if (lastChar == ".") {
                    object.value = object.value.substring(0, object.value.length - 1);
                }

            }
            else {
                $(object).val('');
                customAlert("Type of input is required.");

            }
        }
        function LoadBmiModal() {

            $('#Clientbminame').text($('#Cfirstname').val() + ' ' + $('#Cmiddlename').val() + ' ' + $('#Clastname').val());
            $('#ClientDob').text($('#CDOB').val());
            if (!$('#BmiModel').hasClass('in'))
                $('#BmiModel').modal('toggle');

        }
        function CheckClientBMi() {
            cleanValidation();
            var Adate = null;
            var Cdate = null;
            var TodayDate = null;

            if ($('#AssessmentDate').val().trim() != "" && $('#CDOB').val().trim() != "") {
                Adate = new Date($('#AssessmentDate').val());
                Cdate = new Date($('#CDOB').val());
                TodayDate = new Date();
            }
            if ($('#CDOB').val().trim() == "") {
                customAlert("Child dob is required.");
                plainValidation('#CDOB');
            }
            else if (!$('#CGenderfemale').prop("checked") && !$('#CGendermale').prop("checked") && !$('#CGenderother').prop("checked")) {
                customAlert("Child gender is required.");
            }
            else if (!$('#HWInput1').prop("checked") && !$('#HWInput2').prop("checked")) {
                customAlert("Input type is required.");
            }
            else if ($('#AssessmentDate').val().trim() == "") {
                customAlert("Assessment date is required.");
                plainValidation('#AssessmentDate');
            }
            else if ((Adate > TodayDate) || (Adate < Cdate)) {
                customAlert("Assessment date must be greater than child dob or equal to today's date.");
                $('#AssessmentDate').val().val('');

            }
            else if ($('#AHeight').val().trim() == "") {
                customAlert("Height is required.");
                plainValidation('#AHeight');
            }
            else if ($('#AWeight').val().trim() == "") {
                customAlert("Weight is required.");
                plainValidation('#AWeight');
            }

            //else if ($('#HeadCircle').val().trim() == "") {
            //    customAlert("Head circumference is required.");
            //    plainValidation('#HeadCircle');
            //}

            else if ($('#AHeight').val().trim() == "0" || $('#AHeight').val().trim() == "0.00" ||
                $('#AWeight').val().trim() == "0" || $('#AWeight').val().trim() == "0.00" ||
               $('#HeadCircle').val().trim() == "0" || $('#HeadCircle').val().trim() == "0.00") {
                customAlert("Height or Weight or  HeadCircle  can't be zero.");
                plainValidation('#HeadCircle');
            }

            else if ($('#CGenderother').prop("checked")) {
                $('#BMiModal').modal('toggle');
            }
            else {

                Getbmi($("input[name='CGender']:checked").val(), $("input[name='HWInput']:checked").val(), $('#CDOB').val().trim(), $('#AssessmentDate').val(), $('#AHeight').val(), $('#AWeight').val().trim(), $('#HeadCircle').val().trim());
            }
        }
        function CheckBmi() {
            if (!$('#Bmifemale').prop("checked") && !$('#Bmimale').prop("checked")) {
                customAlert("Please specify gender.");
            }
            else {
                Getbmi($("input[name='BmiGender']:checked").val(), $("input[name='HWInput']:checked").val(), $('#CDOB').val().trim(), $('#AssessmentDate').val(), $('#AHeight').val(), $('#AWeight').val().trim(), $('#HeadCircle').val().trim());
                $('#BMiModal').modal('toggle');
                $('#Bmifemale').prop("checked", false);
                $('#Bmimale').prop("checked", false);
            }


        }
        function Getbmi(Gender, Input, Dob, AssessmentDate, Height, Weight, Headcir) {

            $.ajax({
                url: HostedDir + "/Agencyuser/CalculateBmi",
                type: "POST",
                data: {
                    Gender: Gender,
                    Input: Input,
                    Dob: Dob,
                    AssessmentDate: AssessmentDate,
                    Height: Height,
                    Weight: Weight,
                    Headcir: Headcir
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {

                    if (response != null & (response == 1 || response == 2 || response == 3 || response == 4)) {
                        $('#BMIStatus').val(response);
                        $('#BMIStatus2').val(response);
                        $('#BmiModel').modal('toggle');

                    }
                    else {
                        $('#BMIStatus').val('');
                        customAlert("Error in Calculation.");
                    }


                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });
        }

        function SetBmistatus(object) {
            $("#BMIStatus2").val($(object).val());

        }

        function SetCustomData(data) {
            var filename = null;
            var fileextension = null;
            var filedata = null;
            var programtype = null;

            $('#customChecklist input[type=checkbox]').each(function () {
                if ($(this).prop("checked")) {
                    programtype = $(this).attr("accesskey");
                }
            });

            if (programtype != null && (programtype == 1 || programtype == 2)) {
                $('.customallowscreening').each(function () {
                    if ($(this).attr("accesskey") == programtype) {
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });
            }
            //if (data._CustomScreeningAlloweds != null && data._CustomScreeningAlloweds.length > 0) {
            //    for (var i = 0; i < data._CustomScreeningAlloweds.length; i++) {
            //        $('.customscreeningradioallowed').each(function () {
            //            var screeingid = $(this).attr("name").split("@@");
            //            if (data._CustomScreeningAlloweds[i].Screeningid == screeingid[0]) {
            //                if (data._CustomScreeningAlloweds[i].ScreeningAllowed == 1) {
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "101").prop("checked", true);
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "tabid").show();
            //                    //$('#add' + data._CustomScreeningAlloweds[i].ScreeningName ).show();
            //                    if (data._childscreenings != null && data._childscreenings.length > 0) {
            //                        for (var j = 0; j < data._childscreenings.length; j++) {
            //                            if (data._childscreenings[j].Screeningid == data._CustomScreeningAlloweds[i].Screeningid) {
            //                                var cusquesinputid = null;
            //                                if (data._childscreenings[j].optionid != "0")
            //                                    cusquesinputid = data._childscreenings[j].QuestionAcronym + "o" + data._childscreenings[j].optionid;
            //                                else
            //                                    cusquesinputid = data._childscreenings[j].QuestionAcronym;
            //                                if (cusquesinputid != null) {
            //                                    var input = $('#' + cusquesinputid);
            //                                    if ($(input).attr("type") == "text")
            //                                        $(input).val(data._childscreenings[j].Value);
            //                                    if ($(input).attr("type") == "radio" || $(input).attr("type") == "checkbox")
            //                                        $(input).prop("checked", true);
            //                                    if ($(input).is("select")) {
            //                                        $(input).val(data._childscreenings[j].Value);
            //                                    }
            //                                }

            //                                //Code to display document image or pdf
            //                                if (data._childscreenings[j].pdfpath != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').attr("src", HostedDir + data._childscreenings[j].pdfpath);
            //                                }
            //                                else if (data._childscreenings[j].Documentdata != "") {

            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').ZoomCrop(
            //                                         {
            //                                             image: "data:image/png;base64," + data._childscreenings[j].Documentdata,
            //                                             updated: function (size, crop, position) {
            //                                                 console.log(size, crop, position);
            //                                             }
            //                                         });
            //                                }
            //                                ///End of code
            //                            }
            //                        }
            //                    }
            //                }
            //                else {
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "102").prop("checked", true);
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "tabid").hide();
            //                    if (data._childscreenings != null && data._childscreenings.length > 0) {
            //                        for (var j = 0; j < data._childscreenings.length; j++) {
            //                            if (data._childscreenings[j].Screeningid == data._CustomScreeningAlloweds[i].Screeningid) {
            //                                //Code to display document image or pdf
            //                                if (data._childscreenings[j].pdfpath != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').attr("src", HostedDir + data._childscreenings[j].pdfpath);
            //                                }
            //                                else if (data._childscreenings[j].Documentdata != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').ZoomCrop(
            //                                         {
            //                                             image: "data:image/png;base64," + data._childscreenings[j].Documentdata,
            //                                             updated: function (size, crop, position) {
            //                                                 console.log(size, crop, position);
            //                                             }
            //                                         });
            //                                }
            //                                ///End of code
            //                            }
            //                        }
            //                    }
            //                }
            //            }
            //        });
            //    }
            //}
        }

    </script>


}
@section MainContentHolder{

 <style>
        .billing-inner-label label, .billing-inner-label span {
            color: #333;
            font-weight: normal !important;
            font-size: 15px;
            margin-bottom: 0;
            margin-top: 10px;
        }

        .bill-radio {
            margin: 0.5rem;
            display: inline-block;
        }

            .bill-radio input[type="radio"] {
                position: absolute;
                opacity: 0;
            }

        .billing-inner input {
            background: transparent;
            color: #333;
            border: 1px solid #333;
            border-radius: 8px !important;
            height: 40px;
        }

        .bill-radio label {
            padding-left: 0;
            color: #333;
            margin-bottom: 0;
        }

        .bill-radio input[type="radio"]:checked + .radio-label:before {
            background-color: #295b8f;
            box-shadow: inset 0 0 0 4px #fff;
        }

        .bill-radio input[type="radio"] + .radio-label:before {
            content: '';
            background: none;
            border-radius: 100%;
            border: 1px solid #333;
            display: inline-block;
            width: 1.4em;
            height: 1.4em;
            position: relative;
            top: -1px;
            margin-right: 1em;
            vertical-align: top;
            cursor: pointer;
            text-align: center;
            -webkit-transition: all 250ms ease;
            transition: all 250ms ease;
        }

        .control-label {
            width: 35%;
        }

        .ch-form .form-group {
            min-height: initial;
            padding-bottom: 10px;
        }

        .screeenig-table {
            text-align: center;
            border: 1px solid #e7e7e7;
            border-radius: 5px;
            width: 100%;
            max-width: 98%;
            margin: 1% auto 4%;
        }

        .section-screen {
            text-align: center;
            width: 100%;
            float: left;
        }

        .screeenig-table thead th {
            background-color: #295b8f;
            color: #fff;
        }

        /*.fill-part {
            width: 100%;
            float: left;
            border: 1px solid #295b8f;
            max-width: 98%;
            margin: 0 1%;
            border-radius: 4px;
            background-color: #f1f5f8;
        }

            .fill-part h2 {
                margin: 0px 0 24px 0;
                padding: 12px 0 !important;
                width: 100%;
                float: left;
                background-color: #295b8f;
                color: #fff;
            }*/

        .btn-iview {
            background-color: #295b8f;
            color: #fff;
            padding: 7px 18px;
            font-weight: 600;
        }

            .btn-iview:hover, .btn-iview:focus {
                background-color: #183f67;
                color: #fff;
            }

        .screeenig-table tbody td {
            background-color: #f7f7f7;
        }

        .import-filetpr {
            width: 100%;
            float: left;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin: 0 0 8px 0;
        }

            .import-filetpr label:hover {
                margin: 0px;
            }

            .import-filetpr label {
                color: #fff;
                cursor: pointer;
                float: left;
                margin: 0;
            }

            .import-filetpr span {
                float: left;
                padding: 20px 0px 0 5px;
                font-size: 16px;
            }
    </style>

    <form method="post" enctype="multipart/form-data" role="form" id="form2" autocomplete="off">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="page-header">

                    @if (@Model.ChildId == 0)
                    {
                        <span>  Add New Child</span>
                    }
                    else
                    {

                        <span>  Update Child</span>
                    }


                    <span class="view-btn backto_listspan" id="BackToList">
                        <button onclick="return CheckChild();" style="height: 26px; padding-top: 4px;" class="my-btn" type="submit">Save</button>
                        <a href="~/AgencyUser/FamilySummary/@Model.Encrypthouseholid" class="backto_list" style="padding:8px 20px;">Back to Family Summary</a>
                        <input type="hidden" name="HouseholdId" id="HouseholdId" value="@Model.HouseholdId" />
                        <input type="hidden" name="Encrypthouseholid" value="@Model.Encrypthouseholid" />
                        <input type="hidden" name="OthersId" value="@Model.OthersId" />
                        <input type="hidden" name="ChildId" id="ChildId" value="@Model.ChildId" />
                        <input type="hidden" name="FosterFileName" id="FosterFileName" value="" />
                    </span>
                </h2>
            </div>
        </div>
        <div class="add-useragform add-useragform2 add-useragform2_sz ">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>First Name <sup>*</sup></label>
                            @Html.TextBoxFor(m => m.Cfirstname, new { placeholder = "First Name", id = "Cfirstname", maxlength = "20", @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Middle Name </label>
                            @Html.TextBoxFor(m => m.Cmiddlename, new { placeholder = "Middle Name", id = "Cmiddlename", maxlength = "20", @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Last Name <sup>*</sup></label>
                            @Html.TextBoxFor(m => m.Clastname, new { placeholder = "Last Name", id = "Clastname", maxlength = "20", @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <div class="">
                                <label>Program Type <sup>*</sup></label>
                            </div>
                            <div class="cont-sz program_type" id="customChecklist">
                                <div class="">
                                    @if (Model != null && Model.AvailableProgram != null && Model.AvailableProgram.Count > 0)
                                    {
                                        foreach (var item1 in Model.AvailableProgram)
                                        {
                                            <div class="centerinhorizontal1">
                                                <input type="checkbox" name="PostedPostedPrograms.ProgramID" onclick="setDisability();" id="@item1.Id" value="@item1.Id" accesskey="@item1.ReferenceId" />
                                                <label class="chk_1" for="chk_1">@item1.Name </label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group datepicker-days">
                            <label>DOB <sup>*</sup></label>
                            <div class="date custom-time">
                                @Html.TextBoxFor(m => m.CDOB, new { placeholder = "MM/DD/YYYY", id = "CDOB", Name = "CDOB", @readonly = "readonly", maxlength = "50", @class = "form-control", @onblur = "return validatedateChild(this);" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group datepicker-days">
                            <label>DOB Verified by <sup>*</sup></label>
                            <div class="date custom-time">
                                @{
                                    List<SelectListItem> CDOBList = new List<SelectListItem>();
                                    CDOBList.Add(new SelectListItem() { Text = "Baptism Certificate", Value = "1" });
                                    CDOBList.Add(new SelectListItem() { Text = "Birth Certificate", Value = "2" });
                                    CDOBList.Add(new SelectListItem() { Text = "Hospital Record", Value = "3" });
                                    CDOBList.Add(new SelectListItem() { Text = "Immigration Form I-94", Value = "4" });
                                    CDOBList.Add(new SelectListItem() { Text = "Immunization Record", Value = "5" });
                                    CDOBList.Add(new SelectListItem() { Text = "Medical Card", Value = "6" });
                                    CDOBList.Add(new SelectListItem() { Text = "SS w/ Medical Card", Value = "7" });
                                    CDOBList.Add(new SelectListItem() { Text = "Tribal Verification", Value = "8" });
                                    CDOBList.Add(new SelectListItem() { Text = "Other", Value = "9" });
                                }
                                @Html.DropDownListFor(m => m.DOBverifiedBy, new SelectList(CDOBList, "Value", "Text", Model.DOBverifiedBy), new { id = "DOBverifiedBy", Name = "DOBverifiedBy", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group datepicker-days">
                            <label>SSN </label>
                            <div class="date custom-time">
                                @Html.TextBoxFor(m => m.CSSN, new { placeholder = "SSN", id = "CSSN", Name = "CSSN", @class = "form-control" })

                            </div>
                        </div>
                    </div>




                    <!-- /.form-group -->
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Gender <sup>*</sup></label>
                            <div class="cont-sz">
                                <div class="col-xs-6 col-sm-4">
                                    @Html.RadioButtonFor(m => m.CGender, "2", new { id = "CGenderfemale" })
                                    <span>Female </span>
                                </div>
                                <div class="col-xs-6 col-sm-4">
                                    @Html.RadioButtonFor(m => m.CGender, "1", new { id = "CGendermale" })
                                    <span>Male</span>
                                </div>

                                <div class="col-xs-6 col-sm-4">
                                    @Html.RadioButtonFor(m => m.CGender, "3", new { id = "CGenderother" })
                                    <span>Other </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<div class="col-sm-12">*@
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Race <sup>*</sup></label>
                            @{
                                List<SelectListItem> race = new List<SelectListItem>();
                                foreach (var item in ViewBag.Race)
                                {
                                    race.Add(new SelectListItem() { Text = item.Name, Value = item.RaceId });
                                }

                                @Html.DropDownListFor(m => m.CRace, new SelectList(race, "Value", "Text"), new { @class = "form-control", onchange = "bindsubcategory();" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Ethnicity <sup>*</sup></label>
                            @{
                                List<SelectListItem> EthnicityList = new List<SelectListItem>();
                                EthnicityList.Add(new SelectListItem() { Text = "Hispanic or Latino Origin", Value = "1" });
                                EthnicityList.Add(new SelectListItem() { Text = "Non-Hispanic or Non-Latino Origin", Value = "2" });
                            }
                            @Html.DropDownListFor(m => m.CEthnicity, new SelectList(EthnicityList, "Value", "Text", Model.CEthnicity), new { id = "CEthnicity", Name = "CEthnicity", @class = "form-control" })
                        </div>
                        @*@Html.HiddenFor(m => m.CAvatarUrl, new { id = "CAvatarUrl", Name = "CAvatarUrl" })*@
                    </div>

                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-6" id="divRaceother" style="display:none;">
                                <div class="form-group">
                                    <label for="email">Other Race</label>
                                    @Html.TextBoxFor(m => m.Raceother, new { placeholder = "Other Race", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Cultural Category </label>
                            @{
                                List<SelectListItem> racecategory = new List<SelectListItem>();
                                @Html.DropDownListFor(m => m.CRaceSubCategory, new SelectList(racecategory, "Value", "Text"), new { @class = "form-control" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>School District <sup>*</sup></label>
                            @{

                                List<SelectListItem> SchoolDistrictList = new List<SelectListItem>();
                                foreach (var item in Model.SchoolList)
                                {
                                    SchoolDistrictList.Add(new SelectListItem() { Text = item.Acronym, Value = item.SchoolDistrictID.ToString() });


                                }
                            }
                            @Html.DropDownListFor(m => m.SchoolDistrict, new SelectList(SchoolDistrictList, "Value", "Text", Model.SchoolDistrict), new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Medical Home <sup>*</sup></label>
                            @{
                                List<SelectListItem> MedicalList = new List<SelectListItem>();
                                MedicalList.Add(new SelectListItem() { Text = "Does not have a medical home", Value = "1" });
                                MedicalList.Add(new SelectListItem() { Text = "Ongoing Source of continuous, accessible health care", Value = "2" });
                                MedicalList.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });
                                if (Model.AvailableProgram != null)
                                {
                                    foreach (var item in Model.AvailableProgram)
                                    {
                                        if (item.ReferenceId == "3")
                                        {
                                            MedicalList.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                        }
                                    }
                                }
                            }
                            @Html.DropDownListFor(m => m.Medicalhome, new SelectList(MedicalList, "Value", "Text", Model.Medicalhome), new { id = "Medicalhome", Name = "Medicalhome", @class = "form-control", @onchange = "AddDoctor();" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Dental Home <sup>*</sup></label>
                            @{
                                List<SelectListItem> DentalList = new List<SelectListItem>();
                                DentalList.Add(new SelectListItem() { Text = "Does not have a Dental Home", Value = "1" });
                                DentalList.Add(new SelectListItem() { Text = "Has access to continous, accessible dental care provided by a dentist", Value = "2" });
                                DentalList.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });
                                if (Model.AvailableProgram != null)
                                {
                                    foreach (var item in Model.AvailableProgram)
                                    {
                                        if (item.ReferenceId == "3")
                                        {
                                            DentalList.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                        }
                                    }

                                }

                            }
                            @Html.DropDownListFor(m => m.CDentalhome, new SelectList(DentalList, "Value", "Text", Model.CDentalhome), new { id = "CDentalhome", Name = "CDentalhome", @class = "form-control", @onchange = "AddDentist();" })
                        </div>
                    </div>



                    <div class="test">
                        <div id="addrowC1" style="display:none;">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Medical Center<sup>*</sup></label>
                                    @*<label>Doctor Information<sup>*</sup></label>*@
                                    @Html.TextBoxFor(m => m.CDoctor, new { placeholder = "Medical Center", id = "CDoctor", name = "CDoctor", maxlength = "30", @class = "form-control", @style = "width:50%;" })
                                    <input type="hidden" name="Doctor" id="Doctor" value="0" />
                                    <a href="#" id="AddDoctor" title="Add Community Resource" onclick="SetResource(1,'doctor');" data-toggle="modal" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>

                                </div>
                            </div>
                        </div>
                        <div id="addrowDentist" style="display:none;">
                            <div class="col-lg-6 dnl-home">
                                <div class="form-group">
                                    @*<label for="exampleInputFile">Dentist Information<sup>*</sup></label>*@
                                    <label for="exampleInputFile">Dental Center<sup>*</sup></label>
                                    @Html.TextBoxFor(m => m.CDentist, new { placeholder = "Dental Center", id = "CDentist", name = "CDentist", maxlength = "100", @class = "form-control", @style = "width:50%;" })
                                    <input type="hidden" name="Dentist" id="Dentist" value="0" />
                                    <a href="#" id="AddDentist" title="Add Community Resource" onclick="SetResource(2,'dentist');" data-toggle="modal" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>


                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="email">Primary Insurance <sup style="color:red;">*</sup></label>
                            @{
                                List<SelectListItem> InsuranceList = new List<SelectListItem>();
                                InsuranceList.Add(new SelectListItem() { Text = " Medicaid/Chip", Value = "1" });
                                InsuranceList.Add(new SelectListItem() { Text = "No Insurance", Value = "2" });
                                InsuranceList.Add(new SelectListItem() { Text = "Other Insurance", Value = "3" });
                                InsuranceList.Add(new SelectListItem() { Text = "Private Health Insurance", Value = "4" });
                                InsuranceList.Add(new SelectListItem() { Text = "State Funded", Value = "5" });
                            }
                            @Html.DropDownListFor(m => m.InsuranceOption, new SelectList(InsuranceList, "Value", "Text", Model.InsuranceOption), new { id = "InsuranceOption", Name = "InsuranceOption", @class = "form-control", @placeholder = "Select", tabIndex = "24" })

                        </div>
                    </div>
                    <div class="col-lg-6 ">
                        <div class="form-group">
                            <label for="email">Insurance Notes </label>
                            @Html.TextBoxFor(m => m.MedicalNote, new { placeholder = "Insurance Notes", id = "MedicalNote", name = "MedicalNote", maxlength = "100", @class = "form-control", tabIndex = "25" })
                        </div>
                    </div>




                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Is Foster Child? <sup>*</sup></label>
                            <div class="cont-sz">
                                <div class="col-xs-6 col-sm-3">
                                    @Html.RadioButtonFor(m => m.IsFoster, 1, new { id = "IsFoster1", onchange = "popupshow1();" })
                                    <span>Yes</span>
                                </div>
                                <div class="col-xs-6 col-sm-3">
                                    @Html.RadioButtonFor(m => m.IsFoster, 2, new { id = "IsFoster2", onchange = "popupshow2();" })
                                    <span>No </span>
                                </div>
                            </div>
                        </div>
                        @if (Model.IsFoster == 1)
                        {
                            <div class="form-group verificationFileChoose">
                                <label>Foster Verification Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                @Html.TextBoxFor(m => m.FiledFosterAvatar, new { id = "FiledFosterAvatar", @accept = "image/*", @capture = "camera", Name = "FiledFosterAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                    @Html.CheckBoxFor(m => m.FosterVerificationPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                    <label style="width:45px;">Paper</label>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group  hidden verificationFileChoose">
                                <label>Foster Child Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                @Html.TextBoxFor(m => m.FiledFosterAvatar, new { id = "FiledFosterAvatar", @accept = "image/*", @capture = "camera", Name = "FiledFosterAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                    @Html.CheckBoxFor(m => m.FosterVerificationPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                    <label style="width:45px;">Paper</label>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Is child referred by a child welfare agency? <sup>*</sup></label>
                            <div class="cont-sz">
                                <div class="col-xs-6 col-sm-3">
                                    @Html.RadioButtonFor(m => m.Inwalfareagency, 1, new { id = "Inwalfareagency1" })
                                    <span>Yes</span>
                                </div>
                                <div class="col-xs-6 col-sm-3">
                                    @Html.RadioButtonFor(m => m.Inwalfareagency, 2, new { id = "Inwalfareagency2" })
                                    <span>No </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Is child a dual custody child? <sup>*</sup></label>
                                    <div class="cont-sz">
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.InDualcustody, 1, new { id = "InDualcustody1", onchange = "Custodychange();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.InDualcustody, 2, new { id = "InDualcustody2", onchange = "Custodychange1();" })
                                            <span>No </span>
                                        </div>
                                        <div class="col-xs-6 col-sm-6">
                                            <span id="Dualcustodyparent"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Suspected or document of disabilty? <sup>*</sup></label>
                                    <div class="cont-sz">
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.CParentdisable, 1, new { id = "CParentdisable1", onclick = "setDisability();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.CParentdisable, 2, new { id = "CParentdisable2", onclick = "setDisability();" })
                                            <span>No </span>
                                        </div>
                                    </div>
                                    <div class="cont-sz" id="disablity">
                                        <div class="col-xs-6 col-sm-4" id="forhs">
                                            @* @Html.RadioButtonFor(m => m.IsIEP,0,new { onclick = "IEPorIFSP_Checked()", id = "IsIEP" })*@
                                            @Html.CheckBoxFor(m => m.IsIEP, new { @id = "IsIEP", onclick = "IEPorIFSP_Checked()" })

                                            <span>IEP</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4" id="forehs">
                                            @* @Html.RadioButtonFor(m => m.IsIFSP,0, new { onclick = "IEPorIFSP_Checked()", id = "IsIFSP" })*@
                                            @Html.CheckBoxFor(m => m.IsIFSP, new { @id = "IsIFSP", onclick = "IEPorIFSP_Checked()" })
                                            <span>IFSP </span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4" id="forexpire">
                                            @Html.CheckBoxFor(m => m.IsExpired, new { @id = "IsExpired" })
                                            <span>Expired </span>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Is in child care subsidy? <sup>*</sup></label>
                                    <div class="cont-sz">
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.InChildCareSubsidy, 1, new { id = "InChildCareSubsidy1" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-3">
                                            @Html.RadioButtonFor(m => m.InChildCareSubsidy, 2, new { id = "InChildCareSubsidy2" })
                                            <span>No </span>
                                        </div>
                                        <div class="col-xs-6 col-sm-6">
                                            <span id="InChildCareSubsidy"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>





                    <div class="row" style="display: none;  margin: 4px 3px 19px 3px; padding: 6px;" id="Dualcustody">
                        <fieldset style="border: 1px solid #295b8f; ">
                            <legend class="legend1">Dual Custody</legend>
                            <div class="col-md-12">

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="email">First Name <sup>*</sup></label>
                                        @Html.TextBoxFor(m => m.Parentfirstname, new { placeholder = "First Name", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                    </div>
                                </div>
                                <div class="col-lg-6 ">
                                    <div class="form-group">
                                        <label for="email">Last Name <sup>*</sup></label>
                                        @Html.TextBoxFor(m => m.ParentLastname, new { placeholder = "Last Name", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                    </div>
                                </div>
                                <div class="col-lg-6 ">
                                    <div class="form-group">
                                        <label for="email">Address <sup>*</sup></label>
                                        @Html.TextBoxFor(m => m.ParentStrretaddress, new { placeholder = "Address", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                    </div>
                                </div>
                                <div class="col-lg-6 ">
                                    <div class="form-group">
                                        <label for="email">Zip Code <sup>*</sup></label>
                                        @*Changes on 6Feb2017*@
                                        @Html.TextBoxFor(m => m.Parentzipcode, new { placeholder = "Zip Code", onblur = "checkParentZipCode(this);", maxlength = "5", @class = "form-control", tabIndex = "25" })
                                    </div>
                                </div>
                                <div class="col-lg-6 ">
                                    <div class="form-group">
                                        <label for="email">City <sup>*</sup></label>
                                        @*Changes on 6Feb2017*@
                                        <select id="Parentcity" name="Parentcity" class="form-control" tabindex="6">

                                            <option value="@Model.City">@Model.City</option>
                                        </select>



                                        @*@Html.TextBoxFor(m => m.Parentcity, new { placeholder = "City", maxlength = "100", onblur = "Changefirstchar(this);", @class = "form-control", tabIndex = "25" })*@
                                    </div>
                                </div>
                                <div class="col-lg-6 ">
                                    <div class="form-group">
                                        <label for="email">State <sup>*</sup></label>
                                        @*Changes on 6Feb2017*@
                                        @Html.TextBoxFor(m => m.Parentstate, new { placeholder = "State", maxlength = "100", @class = "form-control", tabIndex = "25", @readonly = "readonly" })
                                    </div>
                                </div>



                            </div>
                            <div class="col-md-12">
                                <div class="btnwrp_subcal">
                                    <button type="button" id="btndualsearch" name="Command" onclick="Searchparent();" class="my-btn">Search</button>
                                    <div class="col-xs-6 col-sm-6">
                                        <span id="Dualcustodyparent1"></span>
                                    </div>
                                    <div class="clear"></div>

                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="clear">

                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="margin-top:10px;">
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label>Profile Picture</label>
                                    <div class="cont-sz">
                                        @Html.TextBoxFor(m => m.CAvatar, new { id = "CAvatar", Name = "CAvatar", type = "file", @accept = "image/*", @capture = "camera", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                        <div class="img-iconavt">
                                            <img alt="" id="imgAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.CAvatarUrl)' style="border-style:none;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.docstorage == 0)
                            {
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label>DOB Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                        @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                        <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                            @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                            <label style="width:45px;">Paper</label>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (Model.docstorage == 1)
                            {
                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label>DOB Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                        @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                        <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                            @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                            <label style="width:45px;">Paper</label>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (Model.docstorage == 2)
                            {
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label>DOB Verfication Form <sup>*</sup></label>
                                        <div class="cont-sz">
                                            @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                            <label style="width:45px;">Paper</label>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>


                    @if (Model.CTransportNeeded == true)
                    {
                        <div class="col-sm-6" id="ChildTransport">
                            <div class="form-group">
                                <label>Is Transportation Needed? <sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-xs-6 col-sm-3">
                                        @Html.RadioButtonFor(m => m.CTransportNeeded, true, new { id = "CTransportNeeded1" })
                                        <span>Yes</span>
                                    </div>
                                    <div class="col-xs-6 col-sm-3">
                                        @Html.RadioButtonFor(m => m.CTransportNeeded, false, new { id = "CTransportNeeded2" })
                                        <span>No </span>
                                    </div>
                                    <div class="col-sm-6" id="transport-pop-div" style="display:none;">
                                        <a href="javascript:void(0)" onclick="showTransport(this);">Update Details<i class="fa fa-arrow-up"></i></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }




                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <a href="javascript:void(0)" onclick="Showhealth();">Health <i class="fa fa-arrow-right"></i></a>
                        </div>
                    </div>

                    <div class="row" style="display:none;margin: 4px 3px 19px 3px; padding: 6px;margin-top:2%;" id="Health">
                        <fieldset style="border: 1px solid #295b8f;width:100%;">
                            <legend class="legend1"></legend>
                            <div class="col-md-12">
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label>Immunization Status <sup>*</sup></label>
                                        @{
                                            List<SelectListItem> ImmunizationServiceList = new List<SelectListItem>();
                                            ImmunizationServiceList.Add(new SelectListItem() { Text = "Child is out of compliance regarding immunizations", Value = "1" });
                                            ImmunizationServiceList.Add(new SelectListItem() { Text = "Exempt", Value = "2" });
                                            ImmunizationServiceList.Add(new SelectListItem() { Text = "Received all immunizations possible at this time, but not all Immunizations appropriate for age", Value = "3" });
                                            ImmunizationServiceList.Add(new SelectListItem() { Text = "Up-to-date on all immunizations appropriate for age", Value = "4" });
                                        }
                                        @Html.DropDownListFor(m => m.ImmunizationService, new SelectList(ImmunizationServiceList, "Value", "Text", Model.ImmunizationService), new { id = "ImmunizationService", Name = "ImmunizationService", @class = "form-control", @style = "width:51% !important;" })
                                        <div class="cont-sz" style="width: 36px; margin-top:5px; float: right;">
                                            <a href="javascript:void(0)" title="Click here to open child Immunization" data-toggle="modal" data-target="#MyImmunization"><i class="fa fa-arrow-up"></i></a>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.docstorage == 0)
                                {
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group">
                                            <label>Immunization Document (pdf,jpg,jpeg,bmp,gif,png) </label>
                                            @Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                            <div class="cont-sz" style="width: 85px; margin-top:5px; float: right;display:none;">
                                                @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                <label style="width:45px;">Paper</label>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (Model.docstorage == 1)
                                {
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none">
                                        <div class="form-group">
                                            <label>Immunization Document (pdf,jpg,jpeg,bmp,gif,png) </label>
                                            @Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                            <div class="cont-sz" style="width: 85px; margin-top:5px; float: right;display:none;">
                                                @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                <label style="width:45px;">Paper</label>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (Model.docstorage == 2)
                                {
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group">
                                            <label>Immunization Document </label>
                                            @*@Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })*@
                                            <div class="cont-sz">
                                                @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                <label style="width:45px;">Paper</label>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <input type="hidden" name="BMIStatus2" value="0" id="BMIStatus2" />
                                        <label>BMI Status<sup>*</sup></label>
                                        @{
                                            List<SelectListItem> BMIStatusList = new List<SelectListItem>();
                                            BMIStatusList.Add(new SelectListItem() { Text = "Underweight (BMI Less than 5%)", Value = "1" });
                                            BMIStatusList.Add(new SelectListItem() { Text = "Healthy Weight (BMI >= 5% and <=85%)", Value = "2" });
                                            BMIStatusList.Add(new SelectListItem() { Text = "Overweight (BMI >= 85%)", Value = "3" });
                                            BMIStatusList.Add(new SelectListItem() { Text = "Obese (BMI >= 95%)", Value = "4" });
                                        }
                                        @Html.DropDownListFor(m => m.BMIStatus, new SelectList(BMIStatusList, "Value", "Text", Model.BMIStatus), new { id = "BMIStatus", Name = "BMIStatus", @class = "form-control", @style = "width:51%;", onchange = "SetBmistatus(this)" })
                                        <div class="cont-sz" style="width: 36px; margin-top:5px; float: right;">
                                            <a href="javascript:void(0)" title="Click here to determine child BMI Status" onclick="LoadBmiModal();"><i class="fa fa-arrow-up"></i></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label>Is this child up-to-date on a schedule of age-appropriate health care? <sup>*</sup></label>
                                        <div class="cont-sz">
                                            <div class="col-xs-6 col-sm-4">
                                                @Html.RadioButtonFor(m => m.MedicalService, 1, new { id = "MedicalService1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-3">
                                                @Html.RadioButtonFor(m => m.MedicalService, 2, new { id = "MedicalService2" })
                                                <span>No </span>
                                            </div>
                                            <div class="col-sm-5" style="display:none;" id="Screening1">
                                                <a href="javascript:void(0)" id="getScreening">Screening <i class="fa fa-arrow-up"></i></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label>Authorization Release Form</label>
                                        @Html.TextBoxFor(m => m.Releaseform, new { @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <input id="_childprogrefid" name="_childprogrefid" type="hidden" value="0" />
                    <div class="col-sm-12" style="margin-top:1%;" id="hsProgram">
                        <div class="col-sm-6">
                            <a href="javascript:void(0)" onclick="ShowhealthHistory();">Health History <i class="fa fa-arrow-right"></i></a>
                        </div>
                    </div>
                    <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal;" id="HSHealth">
                        <fieldset style="border: 1px solid #295b8f;width:100%; ">
                            <legend class="legend1"></legend>
                            <div class="col-md-12">
                                <div class="col-md-11 col-sm-12 mb10">
                                    <div class="form-group">
                                        <div class="col-sm-8" style="margin-bottom:5px;">Was the child born?<sup>*</sup></div>
                                        <div class="col-sm-12 cont-sz">
                                            @*Added by Akansha on 13Dec2016*@
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.HsChildBorn, 3, new { id = "ChildBorn3" })
                                                <span>Child was full term </span>
                                            </div>
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.HsChildBorn, 1, new { id = "ChildBorn1" })
                                                <span>More than three weeks early</span>
                                            </div>
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.HsChildBorn, 2, new { id = "ChildBorn2" })
                                                <span>More than three weeks late </span>
                                            </div>
                                            @*End*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-9">
                                    <div class="row">
                                        <div class="col-md-12 mb10">
                                            <div class="col-md-12">What was the child's birth weight? </div>
                                            <div class="col-md-5">@Html.TextBoxFor(m => m.HsChildBirthWt, new { id = "ChildBirthWt", @class = "form-control", @style = " width:100% !important; margin-top:5px;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })</div>
                                        </div>
                                        <div class=" col-md-12 mb10">
                                            <div class="col-md-12">What was the child's length?</div>
                                            <div class="col-md-5">@Html.TextBoxFor(m => m.HsChildLength, new { id = "ChildLength", @class = "form-control", @style = " width:100% !important; margin-top:5px;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-bottom:20px;">
                                    <div class="col-sm-7" style="margin-bottom:5px;">Did the baby or mother have problems in the hospital?</div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsChildProblm, 1, new { id = "ChildProblm1", onchange = "ShowHsChildProblem();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsChildProblm, 2, new { id = "ChildProblm2", onchange = "HideHsChildProblem();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12 mb10" id="DivHSBabyOrMotherProblems" style="display:none;">

                                    <div class="col-md-8">
                                        @Html.TextBoxFor(m => m.HSBabyOrMotherProblems, new { @class = "form-control", @style = "width:100% !important;  margin-top:5px;", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class=" col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">
                                        Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)? <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-95%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="CDBRText">

                                    </div>
                                </div>

                                <div class="col-md-12 col-sm-12 adddivspace mb10">

                                    <div class="col-md-10 col-sm-7">
                                        Has the child been diagnosed with any of the following conditions since last year's PIR? <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-182%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="CDCText">

                                    </div>


                                </div>

                                <div class="col-md-12 col-sm-12 adddivspace mb10">

                                    <div class="col-md-10 col-sm-7">
                                        Did the child require medical treatment for the following chronic health conditions ?  <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-204%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="CCHText">

                                    </div>


                                </div>



                                <div class="col-md-12 col-sm-12 adddivspace mb10">

                                    <div class="col-md-10 col-sm-7">
                                        Did child receive treatment for any of the following chronic health conditions?  <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left: -233%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="CTCHText">
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-7" style="margin-bottom:5px;">Is the child currently taking any medication?  </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsMedication, 1, new { id = "Medication1", onchange = "ShowMedicationName();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsMedication, 2, new { id = "Medication2", onchange = "HideMedicationName();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="MedicationName" style="display:none;">

                                    <div class="col-sm-10">What is the name of the medication?  </div>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HsMedicationName, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;" })
                                    </div>

                                </div>



                                <div class="col-sm-12 mb10" id="DosageMedication" style="display:none;">

                                    <div class="col-sm-10">What is the dosage?   </div>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HsDosage, new { id = "Dosage", @class = "form-control", @style = "width:100% !important; margin-top:5px;" })
                                    </div>

                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivSChildMedication">
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HSChildMedication, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                    </div>

                                </div>



                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12" style="margin-bottom:5px;">Has this child received preventative dental care (e.g. cleaning, fluoride treatments, sealant application, etc)?  <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsChildDentalCare, 1, new { id = "ChildDentalCare1", onchange = "ShowHsChildDentalCare();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsChildDentalCare, 2, new { id = "ChildDentalCare2", onchange = "HideHsChildDentalCare();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHsChildDentalCare">
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HSPreventativeDentalCare, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                    </div>
                                </div>



                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does the child have a current professional dental exam (less than a year old)?   <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsDentalExam, 1, new { id = "DentalExam1", onchange = "ShowHsDentalExam();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.HsDentalExam, 2, new { id = "DentalExam2", onchange = "HideHsDentalExam();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHsDentalExam">
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HSProfessionalDentalExam, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "MM/DD/YYYY" })
                                    </div>
                                </div>



                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">Date of most recent professional dental exam (leave blank if child has never received one)  </div>
                                    <div class="col-md-4">@Html.TextBoxFor(m => m.HsRecentDentalExam, new { id = "RecentDentalExam", @class = "form-control", placeholder = "MM/DD/YYYY", onblur = "validatedatenew(this);", @style = "width:100% !important; margin-top:10px;" })</div>@*, onblur = "Checkdateprofessional(this);"*@ @*Added by akansha on 13Dec2016*@

                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Has this child been diagnosed as needing dental treatment (e.g. restoration, pulp therapy, extraction, etc. Does not include cleaning or fluoride)? <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:5px;">
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 1, new { id = "ChildNeedDentalTreatment1", onchange = "ShowHsChildNeedDentalTreatment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 2, new { id = "ChildNeedDentalTreatment2", onchange = "HideHsChildNeedDentalTreatment();" })
                                            <span>No</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 3, new { id = "ChildNeedDentalTreatment3", onchange = "HideHsChildNeedDentalTreatment();" })
                                            <span>No Exam Completed</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHSNeedingDentalTreatment">
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HSNeedingDentalTreatment, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                    </div>
                                </div>






                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Has this child received (or are they currently receiving) dental treatment?    <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:5px;">
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 1, new { id = "ChildRecievedDentalTreatment1", onchange = "ShowHsChildRecievedDentalTreatment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 2, new { id = "ChildRecievedDentalTreatment2", onchange = "HideHsChildRecievedDentalTreatment();" })
                                            <span>No</span>

                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 3, new { id = "ChildRecievedDentalTreatment3", onchange = "HideHsChildRecievedDentalTreatment();" })
                                            <span>Treatment not required</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHSChildReceivedDentalTreatment">
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.HSChildReceivedDentalTreatment, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                    </div>
                                </div>

                                <div class="col-md-12 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <div class="">
                                            <label>Why did the child not receive dental treatment?  <sup>*</sup></label>
                                        </div>
                                        <div class="col-lg-5 cont-sz" id="cstomChecklist">
                                            <div class="">
                                                @if (Model.AvailableDental != null)
                                                {
                                                    @Html.CheckBoxListFor(m => m.PostedPostedDental.DentalTreatmentID,
                                                                                         m => m.AvailableDental, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                }
                                            </div>
                                        </div>
                                        <div id="HSProg">
                                            @if (Model.AvailableDental != null)
                                            {
                                                foreach (var item1 in Model.AvailableDental)
                                                {
                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </fieldset>





                    </div>
                    <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="EHSHealth">
                        <fieldset style="border: 1px solid #295b8f;width:100%; ">
                            <legend class="legend1"></legend>
                            <div class="col-md-12">
                                <div class="col-md-11 col-sm-12 mb10">
                                    <div class="form-group">
                                        <div class="col-sm-8" style="margin-bottom:5px;">
                                            Was the child born?
                                            <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz">

                                            @*Changes by Akansha on 13Dec2016*@
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.EhsChildBorn, 3, new { id = "EhsChildBorn3" })
                                                <span>Child was full term </span>

                                            </div>
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.EhsChildBorn, 1, new { id = "EhsChildBorn1" })
                                                <span>More than three weeks early</span>
                                            </div>
                                            <div class="col-sm-12">
                                                @Html.RadioButtonFor(m => m.EhsChildBorn, 2, new { id = "EhsChildBorn2" })
                                                <span>More than three weeks late </span>

                                            </div>
                                            @*End*@
                                        </div>
                                    </div>
                                </div>


                                <div class="col-sm-9 adddivspace">
                                    <div class="row">
                                        <div class="col-md-12 mb10">
                                            <div class="col-md-12">
                                                What was the child's birth weight?
                                            </div>
                                            <div class="col-md-5" style="margin-top: 8px;">
                                                @Html.TextBoxFor(m => m.EhsChildBirthWt, new { @class = "form-control", @style = "width:100% !important;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class=" col-md-12 mb10">
                                    <div class="col-md-12">
                                        What was the child's length?
                                    </div>
                                    <div class="col-md-5" style="margin-top: 8px;">
                                        @Html.TextBoxFor(m => m.EhsChildLength, new { @class = "form-control", @style = "width:72% !important;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })
                                    </div>
                                </div>



                                <div class="col-sm-12 mb10" style="margin-bottom:20px;">
                                    <div class="col-sm-7" style="margin-bottom:5px;">
                                        Did the baby or mother have problems in the hospital?
                                    </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildProblm, 1, new { id = "EhsChildProblm1", onchange = "ShowEhsChildProblemComment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildProblm, 2, new { id = "EhsChildProblm2", onchange = "HideEhsChildProblemComment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-12 mb10" id="DivEhsChildProblm" style="display:none;">
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(m => m.EHSBabyOrMotherProblems, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment", maxlength = "100" })
                                    </div>
                                </div>


                                <div class=" col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">

                                        Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)? <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24jan2017*@
                                        <a style="margin-left:-94%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="EHSCDBRText">

                                    </div>

                                </div>




                                <div class=" col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">
                                        Has the child ever had any of these condition? <sup>*</sup>
                                    </div>

                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24jan2017*@
                                        <a style="margin-left:-376%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="EHSCDCText">
                                    </div>
                                </div>


                                <div class=" col-md-12 mb10" style="display: none;" id="DivEHSAllergy">

                                    <div class="col-md-5" style="margin-top:8px;">
                                        @Html.TextBoxFor(m => m.EHSAllergy, new { @class = "form-control", @style = "width:72% !important;", @maxlength = "200", placeholder = "Allergy Details" })
                                    </div>
                                </div>

                                <div class=" col-md-12 mb10" style="display:none;" id="DivEHSEpiPen">
                                    <div class="col-md-12">
                                        Does your child require an Epi-Pen?
                                    </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EHSEpiPen, 1, new { id = "EHSEpiPen1" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EHSEpiPen, 2, new { id = "EHSEpiPen2" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">
                                        Has this child received medical treatment for the following chronic health conditions  <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 25Jan2017*@
                                        <a style="margin-left:-201%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSRMCHC"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="EHSCHCText">
                                    </div>
                                </div>
                                <div class="col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">

                                        Is this child receiving treatment for any of the following chronic health conditions?  <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24jan2017*@
                                        <a style="margin-left: -212%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSCHC"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="EHDCDCText">

                                    </div>

                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-7" style="margin-bottom:5px;">
                                        Is the child currently taking any medication?
                                    </div>
                                    <div class="col-sm-12 cont-sz">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsMedication, 1, new { id = "EhsMedication1", onchange = "ShowEhsMedicationName();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsMedication, 2, new { id = "EhsMedication2", onchange = "HideEhsMedicationName();" })
                                            <span>No</span>

                                        </div>

                                    </div>

                                </div>


                                @*<div class="col-sm-12 mb10" id="EhsMedicationName" style="display:none;">
                                        <div class="col-sm-10" style="margin-bottom: 5px;">
                                            What is the name of the medication?
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(m => m.EhsMedicationName, new { @class = "form-control", @style = "width:72% !important;" })
                                        </div>
                                    </div>*@


                                @*<div class="col-sm-12 mb10" id="EhsDosageMedication" style="display:none;">
                                        <div class="col-sm-10" style="margin-bottom: 5px;">
                                            What is the dosage?
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(m => m.EhsDosage, new { @class = "form-control", @style = "width:72% !important;" })
                                        </div>
                                    </div>*@

                                <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivEhsMedication">
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(m => m.EHSChildMedication, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment" })
                                    </div>
                                </div>


                                <div class="col-md-12 col-sm-12  mb10">
                                    <div class="col-md-10 col-sm-7">

                                        Did the child require medical treatment for the following chronic health conditions?   <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24jan2017*@
                                        <a style="margin-left: -206%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="EHSCCHText">
                                    </div>
                                </div>
                                <div class="col-md-12 col-sm-12 mb10">
                                    <div class="col-md-10 col-sm-7">
                                        Did child receive treatment for any of the following chronic health conditions?  <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24jan2017*@
                                        <a style="margin-left: -232%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>
                                    </div>
                                    <div id="EHSCTCHText">
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="col-sm-12" style="margin-bottom:1%;">
                        <div class="col-sm-6">
                            <a href="javascript:void(0)" onclick="ShowNutrition();">Nutrition Assessment  <i class="fa fa-arrow-right"></i></a>
                        </div>
                    </div>
                    @*Nutrition Questions without HS/EHS*@
                    @*<div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="Nutrition">


                            <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                <legend class="legend1"></legend>
                                <div class="col-md-12">

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12"> Is your child currently taking a vitamin supplement? <sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 1, new { id = "ChildVitaminSupplment1", onchange = "ShowChildVitaminSupplmentcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 2, new { id = "ChildVitaminSupplment2", onchange = "HideChildVitaminSupplmentcomment();" })
                                                <span>No</span>
                                            </div>

                                            <div class="col-md-2 col-sm-5" id="divVitaminPopup" style="display:none;">
                                                <a style="margin-left: 396%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                            </div>
                                        </div>
                                    </div>

                                    <div id="Cvstext" class="col-sm-12 mb10">

                                    </div>
                                    <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Persistent/Current Nausea or Vomiting?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentNausea, 1, new { id = "PersistentNausea1", onchange = "ShowNauseaorVomitingcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentNausea, 2, new { id = "PersistentNausea2", onchange = "HideNauseaorVomitingcomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divNauseaorVomitingcomment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.NauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Persistent/Current diarrhea?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentDiarrhea, 1, new { id = "PersistentDiarrhea1", onchange = "ShowPersistentDiarrheacomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentDiarrhea, 2, new { id = "PersistentDiarrhea2", onchange = "HidePersistentDiarrheacomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divdiarrheacomment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.DiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Persistent/Current Constipation?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentConstipation, 1, new { id = "PersistentConstipation1", onchange = "ShowPersistentConstipationcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.PersistentConstipation, 2, new { id = "PersistentConstipation2", onchange = "HidePersistentConstipationcomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divPersistentConstipation" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.Constipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Dramatic weight change in the past year?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.DramaticWeight, 1, new { id = "DramaticWeight1", onchange = "ShowDramaticWeightcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.DramaticWeight, 2, new { id = "DramaticWeight2", onchange = "HideDramaticWeightcomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divDramaticWeightchange" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.DramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Recent surgery (within 3 months)?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RecentSurgery, 1, new { id = "RecentSurgery1", onchange = "ShowRecentSurgerycomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RecentSurgery, 2, new { id = "RecentSurgery2", onchange = "HideRecentSurgerycomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divRecentSurgery" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.RecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Recent hospitalization (within 3 months)?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RecentHospitalization, 1, new { id = "RecentHospitalization1", onchange = "ShowRecentHospitalizationcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RecentHospitalization, 2, new { id = "RecentHospitalization2", onchange = "HideRecentHospitalizationcomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divRecentHospitalization" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.RecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child on any special diet?   </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.ChildSpecialDiet, 1, new { id = "ChildSpecialDiet1", onchange = "ShowChildSpecialDietcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.ChildSpecialDiet, 2, new { id = "ChildSpecialDiet2", onchange = "HideChildSpecialDietcomment();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divChildSpecialDiet" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.SpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child have any food allergies or intollerance?<sup>*</sup>  </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.FoodAllergies, 1, new { id = "FoodAllergies1", onchange = "ShowFoodAllergies();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.FoodAllergies, 2, new { id = "FoodAllergies2", onchange = "HideFoodAllergies();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divFoodAllergies" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.FoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you have nutritional concerns for anyone in the household?<sup>*</sup>  </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.NutritionalConcern, 1, new { id = "NutritionalConcern1", onchange = "ShowNutritionalConcern();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.NutritionalConcern, 2, new { id = "NutritionalConcern2", onchange = "HideNutritionalConcern();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divNutritionalConcern" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.NutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">When was the last time your family received foods from the local food pantry?<sup>*</sup>  </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            @{
                                                List<SelectListItem> foodpantry = new List<SelectListItem>();
                                                foodpantry.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                                foodpantry.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                                foodpantry.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                                foodpantry.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                            }
                                            @Html.DropDownListFor(m => m.FoodPantory, new SelectList(foodpantry, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.childTrouble, 1, new { id = "childTrouble1", onchange = "ShowchildTrouble();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.childTrouble, 2, new { id = "childTrouble2", onchange = "HidechildTrouble();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divchildTrouble" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.ChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child use a spoon or fork?<sup>*</sup></div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.spoon, 1, new { id = "spoon1", onchange = "Hidespoon();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.spoon, 2, new { id = "spoon2", onchange = "Showspoon();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divSpoonorForkComment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.SpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?<sup>*</sup></div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.feedingtube, 1, new { id = "feedingtube1", onchange = "Showfeedingtube();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.feedingtube, 2, new { id = "feedingtube2", onchange = "Hidefeedingtube();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divSpecialFeedingComment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.SpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>





                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you think your child is too:</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.childThin, 3, new { id = "childThin3" })
                                                <span>Heavy </span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.childThin, 2, new { id = "childThin2" })
                                                <span>Small </span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.childThin, 4, new { id = "childThin4" })
                                                <span>Tall </span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.childThin, 1, new { id = "childThin1" })
                                                <span>Thin </span>
                                            </div>



                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.childThin, 5, new { id = "childThin5" })
                                                <span>None of the above</span>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Takebottle, 1, new { id = "Takebottle1", onchange = "ShowTakebottle();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Takebottle, 2, new { id = "Takebottle2", onchange = "HideTakebottle();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divBottleComment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.BottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child eat or chew anything that is not food?<sup>*</sup></div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.chewanything, 1, new { id = "chewanything1", onchange = "Showchewanything();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.chewanything, 2, new { id = "chewanything2", onchange = "Hidechewanything();" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" id="divchewanything" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.EatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>


                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>
                                                Specify non-food item(s) your child eats or chews
                                            </label>
                                            @Html.TextBoxFor(m => m.NonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Describe your child's appetite:<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ChangeinAppetite, 2, new { id = "ChangeinAppetite2" })
                                                <span>Fair</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ChangeinAppetite, 1, new { id = "ChangeinAppetite1" })
                                                <span>Good</span>
                                            </div>

                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ChangeinAppetite, 3, new { id = "ChangeinAppetite3" })
                                                <span>Poor</span>
                                            </div>

                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            How do you know when your child is hungry? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> hungry = new List<SelectListItem>();
                                                foreach (var item in ViewBag.hungry)
                                                {
                                                    hungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>




                                    </div>

                                    <div class="col-md-12 col-sm-12 mb10">

                                        <div class="col-md-10 col-sm-7">
                                            How do you know when your child is full? (Check all that apply) <sup>*</sup>
                                        </div>
                                        <div class="col-md-2 col-sm-5">
                                            <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                        </div>

                                        <div id="CDText">

                                        </div>


                                    </div>

                                    <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                        <div class="col-md-10 col-sm-7">
                                            What type of milk do you feed your child?<sup>*</sup>
                                        </div>
                                        <div class="col-md-2 col-sm-5">
                                            <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>

                                        </div>

                                        <div id="CDRinkText">

                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>
                                                Milk Comment
                                            </label>
                                            @Html.TextBoxFor(m => m.MilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            If breastfeeding, how many times do you nurse in 24 hours? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildFeed)
                                                {
                                                    ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            If formula feeding, how many fluid ounces of formula does your child take in 24 hours? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildFormula)
                                                {
                                                    ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child cereal?<sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child pureed and/or mashed foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child ground and/or finely chopped foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child finger foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">How is your child fed finger foods?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                                <span>Child does not eat finger foods</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                                <span>Child feeds self</span>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you begin feeding your child 100% fruit juice with Vitamin C? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>




                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">How is your child fed 100% juice with Vitamin C?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 3, new { id = "ChildFruitJuicevitaminc3" })
                                                <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 1, new { id = "ChildFruitJuicevitaminc1" })
                                                <span> Bottle feeding</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 2, new { id = "ChildFruitJuicevitaminc2" })
                                                <span>Cup</span>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">How much water does your child drink?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildWater, 1, new { id = "ChildWater1" })
                                                <span>N/A (Child drinks breastmilk or formula)</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildWater, 2, new { id = "ChildWater2" })
                                                <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildWater, 3, new { id = "ChildWater3" })
                                                <span>I don't give my child water</span>
                                            </div>


                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-md-12">
                                                @Html.CheckBoxFor(m => m.NA, new { @class = "minimal", tabIndex = "19" })
                                                <span>N/A(Infant follows individual feeding schedule)</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                <span>Breakfast</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.CheckBoxFor(m => m.Dinner, new { @class = "minimal", tabIndex = "19" })
                                                <span>Dinner</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                <span>Lunch</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                <span>Snack(s)</span>
                                            </div>



                                        </div>
                                    </div>



                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RestrictFood, 1, new { id = "RestrictFood1", onchange = "ShowRestrictFoodcomment();" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-4 col-md-2">
                                                @Html.RadioButtonFor(m => m.RestrictFood, 2, new { id = "RestrictFood2", onchange = "HideRestrictFoodcomment();" })
                                                <span>No</span>
                                            </div>



                                        </div>
                                    </div>




                                    <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.RestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                        </div>
                                    </div>














                                </div>
                            </fieldset>



                        </div>*@
                    @*End*@
                    @*HS Nutrition Questions*@

                    <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="Nutrition">


                        <fieldset style="border: 1px solid #295b8f;width:100%; ">
                            <legend class="legend1"></legend>
                            <div class="col-md-12">

                                @*<div class=" col-md-12 col-sm-12 mb10">
                                        <div class="col-md-10 col-sm-7">
                                            Is your child currently taking a vitamin supplement?  <sup>*</sup>
                                        </div>
                                        <div class="col-md-2 col-sm-5">
                                            <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                        </div>
                                        <div id="Cvstext">

                                        </div>

                                    </div>*@
                                @*Added by Akansha on 12Dec2016*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12"> Is your child currently taking a vitamin supplement? <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 1, new { id = "ChildVitaminSupplment1", onchange = "ShowChildVitaminSupplmentcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 2, new { id = "ChildVitaminSupplment2", onchange = "HideChildVitaminSupplmentcomment();" })
                                            <span>No</span>
                                        </div>
                                        @*Added by Akansha on 14Dec2016*@
                                        <div class="col-md-2 col-sm-5" id="divVitaminPopup" style="display:none;">
                                            @*Changes on 24jan2017*@
                                            <a style="margin-left: -4%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                        </div>


                                    </div>

                                </div>
                                @*Added by Akansha on 14Dec2016*@
                                <div id="Cvstext" class="col-sm-12 mb10">

                                </div>
                                <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                @*End*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current Nausea or Vomiting?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentNausea, 1, new { id = "PersistentNausea1", onchange = "ShowNauseaorVomitingcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentNausea, 2, new { id = "PersistentNausea2", onchange = "HideNauseaorVomitingcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divNauseaorVomitingcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.NauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current diarrhea?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentDiarrhea, 1, new { id = "PersistentDiarrhea1", onchange = "ShowPersistentDiarrheacomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentDiarrhea, 2, new { id = "PersistentDiarrhea2", onchange = "HidePersistentDiarrheacomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divdiarrheacomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.DiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current Constipation?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentConstipation, 1, new { id = "PersistentConstipation1", onchange = "ShowPersistentConstipationcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.PersistentConstipation, 2, new { id = "PersistentConstipation2", onchange = "HidePersistentConstipationcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divPersistentConstipation" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.Constipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Dramatic weight change in the past year?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.DramaticWeight, 1, new { id = "DramaticWeight1", onchange = "ShowDramaticWeightcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.DramaticWeight, 2, new { id = "DramaticWeight2", onchange = "HideDramaticWeightcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divDramaticWeightchange" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.DramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Recent surgery (within 3 months)?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RecentSurgery, 1, new { id = "RecentSurgery1", onchange = "ShowRecentSurgerycomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RecentSurgery, 2, new { id = "RecentSurgery2", onchange = "HideRecentSurgerycomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divRecentSurgery" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.RecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Recent hospitalization (within 3 months)?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RecentHospitalization, 1, new { id = "RecentHospitalization1", onchange = "ShowRecentHospitalizationcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RecentHospitalization, 2, new { id = "RecentHospitalization2", onchange = "HideRecentHospitalizationcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divRecentHospitalization" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.RecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Is your child on any special diet?   </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.ChildSpecialDiet, 1, new { id = "ChildSpecialDiet1", onchange = "ShowChildSpecialDietcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.ChildSpecialDiet, 2, new { id = "ChildSpecialDiet2", onchange = "HideChildSpecialDietcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divChildSpecialDiet" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.SpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child have any food allergies or intollerance?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.FoodAllergies, 1, new { id = "FoodAllergies1", onchange = "ShowFoodAllergies();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.FoodAllergies, 2, new { id = "FoodAllergies2", onchange = "HideFoodAllergies();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divFoodAllergies" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.FoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Do you have nutritional concerns for anyone in the household?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.NutritionalConcern, 1, new { id = "NutritionalConcern1", onchange = "ShowNutritionalConcern();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.NutritionalConcern, 2, new { id = "NutritionalConcern2", onchange = "HideNutritionalConcern();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divNutritionalConcern" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.NutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">When was the last time your family received foods from the local food pantry?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                        @{
                                            List<SelectListItem> foodpantry = new List<SelectListItem>();
                                            foodpantry.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                            foodpantry.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                            foodpantry.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                            foodpantry.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                        }
                                        @Html.DropDownListFor(m => m.FoodPantory, new SelectList(foodpantry, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.childTrouble, 1, new { id = "childTrouble1", onchange = "ShowchildTrouble();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.childTrouble, 2, new { id = "childTrouble2", onchange = "HidechildTrouble();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divchildTrouble" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child use a spoon or fork?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.spoon, 1, new { id = "spoon1", onchange = "Hidespoon();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.spoon, 2, new { id = "spoon2", onchange = "Showspoon();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divSpoonorForkComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.SpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.feedingtube, 1, new { id = "feedingtube1", onchange = "Showfeedingtube();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.feedingtube, 2, new { id = "feedingtube2", onchange = "Hidefeedingtube();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divSpecialFeedingComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.SpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>





                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Do you think your child is too:</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by Akansha on 13Dec2016*@
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.childThin, 3, new { id = "childThin3" })
                                            <span>Heavy </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.childThin, 2, new { id = "childThin2" })
                                            <span>Small </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.childThin, 4, new { id = "childThin4" })
                                            <span>Tall </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.childThin, 1, new { id = "childThin1" })
                                            <span>Thin </span>
                                        </div>



                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.childThin, 5, new { id = "childThin5" })
                                            <span>None of the above</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.Takebottle, 1, new { id = "Takebottle1", onchange = "ShowTakebottle();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.Takebottle, 2, new { id = "Takebottle2", onchange = "HideTakebottle();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divBottleComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.BottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child eat or chew anything that is not food?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.chewanything, 1, new { id = "chewanything1", onchange = "Showchewanything();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.chewanything, 2, new { id = "chewanything2", onchange = "Hidechewanything();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divchewanything" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>


                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label>
                                            Specify non-food item(s) your child eats or chews
                                        </label>
                                        @Html.TextBoxFor(m => m.NonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Describe your child's appetite:<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by akansha on 13Dec2016*@
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.ChangeinAppetite, 2, new { id = "ChangeinAppetite2" })
                                            <span>Fair</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.ChangeinAppetite, 1, new { id = "ChangeinAppetite1" })
                                            <span>Good</span>
                                        </div>

                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.ChangeinAppetite, 3, new { id = "ChangeinAppetite3" })
                                            <span>Poor</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        How do you know when your child is hungry? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> hungry = new List<SelectListItem>();
                                            foreach (var item in ViewBag.hungry)
                                            {
                                                hungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                    </div>




                                </div>

                                <div class="col-md-12 col-sm-12 mb10">

                                    <div class="col-md-10 col-sm-7">
                                        How do you know when your child is full? (Check all that apply) <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-298%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="CDText">

                                    </div>

                                    @*<div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                                 <div class="col-md-6 input_wd" id="cstomChecklist" style="width:47%;">
                                                                                                     <div class="">
                                                                                                         @if (Model.AvailableChildDietFull != null)
                                                                                                         {
                                                                                                         @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
                                        m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                         }
                                                                                                     </div>
                                                                                                 </div>
                                                                                                 <div id="HSDiag">
                                                                                                     @if (Model.AvailableChildDietFull != null)
                                                                                                     {
                                                                                                         foreach (var item1 in Model.AvailableChildDietFull)
                                                                                                         {
                                                                                                     <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                         }
                                                                                                     }
                                                                                                 </div>
                                                                                             </div>*@
                                </div>

                                <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                    <div class="col-md-10 col-sm-7">
                                        What type of milk do you feed your child?<sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-405%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="CDRinkText">

                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label>
                                            Milk Comment
                                        </label>
                                        @Html.TextBoxFor(m => m.MilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                    </div>
                                </div>
                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            If breastfeeding, how many times do you nurse in 24 hours? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildFeed)
                                                {
                                                    ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@

                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            If formula feeding, how many fluid ounces of formula does your child take in 24 hours? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildFormula)
                                                {
                                                    ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@
                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child cereal?<sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@
                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child pureed and/or mashed foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@

                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child ground and/or finely chopped foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@

                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you start feeding your child finger foods? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                        </div>



                                    </div>*@

                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">How is your child fed finger foods?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                                <span>Child does not eat finger foods</span>
                                            </div>
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                                <span>Child feeds self</span>
                                            </div>


                                        </div>
                                    </div>*@
                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">
                                            At what age did you begin feeding your child 100% fruit juice with Vitamin C? <sup>*</sup>
                                        </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            @{
                                                List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                                foreach (var item in ViewBag.ChildCereal)
                                                {
                                                    ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>




                                    </div>*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">How is your child fed 100% juice with Vitamin C?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by Akansha*@
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 3, new { id = "ChildFruitJuicevitaminc3" })
                                            <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 1, new { id = "ChildFruitJuicevitaminc1" })
                                            <span> Bottle feeding</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 2, new { id = "ChildFruitJuicevitaminc2" })
                                            <span>Cup</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">How much water does your child drink?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildWater, 1, new { id = "ChildWater1" })
                                            <span>N/A (Child drinks breastmilk or formula)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildWater, 2, new { id = "ChildWater2" })
                                            <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildWater, 3, new { id = "ChildWater3" })
                                            <span>I don't give my child water</span>
                                        </div>


                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Added by akansha on 13Dec2016*@
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.NA, new { @class = "minimal", tabIndex = "19" })
                                            <span>N/A(Infant follows individual feeding schedule)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                            <span>Breakfast</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.Dinner, new { @class = "minimal", tabIndex = "19" })
                                            <span>Dinner</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                            <span>Lunch</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                            <span>Snack(s)</span>
                                        </div>


                                        @*End*@
                                    </div>
                                </div>
                                @*//Added by Akansha on 12Dec2016*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RestrictFood, 1, new { id = "RestrictFood1", onchange = "ShowRestrictFoodcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.RestrictFood, 2, new { id = "RestrictFood2", onchange = "HideRestrictFoodcomment();" })
                                            <span>No</span>
                                        </div>



                                    </div>
                                </div>




                                <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.RestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                @*End*@




                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Elevated blood lead level?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Elevatedblood, 1, new { id = "Elevatedblood1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Elevatedblood, 2, new { id = "Elevatedblood" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Anemia (low iron) </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Anemia, 1, new { id = "Anemia1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Anemia, 2, new { id = "Anemia2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-lg-12">
                                        <h5 class="page-header">Eating/Drinking Behaviors</h5>
                                    </div>



                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Breastfeed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Breastfeed, 1, new { id = "Breastfeed1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Breastfeed, 2, new { id = "Breastfeed2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Drink from a cup?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Drinkfromcup, 1, new { id = "Drinkfromcup1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Drinkfromcup, 2, new { id = "Drinkfromcup2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Feed him/herself?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Feedherself, 1, new { id = "Feedherself1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Feedherself, 2, new { id = "Feedherself2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Eat pureed foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.pureedfoods, 1, new { id = "pureedfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.pureedfoods, 2, new { id = "pureedfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Eat finger foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.fingerfoods, 1, new { id = "fingerfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.fingerfoods, 2, new { id = "fingerfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If your child takes a bottle, do you put foods (cereals, strained foods) into the bottle?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.putfoods, 1, new { id = "putfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.putfoods, 2, new { id = "putfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If your child takes a bottle, does the child take it to bed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.childbottle, 1, new { id = "childbottle1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.childbottle, 2, new { id = "childbottle2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>










                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Vitamins or supplements</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Vitamins, 1, new { id = "Vitamins1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Vitamins, 2, new { id = "Vitamins2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child currently taking a vitamin supplement?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.vitaminsupplement, 1, new { id = "vitaminsupplement1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.vitaminsupplement, 2, new { id = "vitaminsupplement2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child takes a vitamin, is it prescribed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.prescribed, 1, new { id = "prescribed1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.prescribed, 2, new { id = "prescribed2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child takes a vitamin, is it iron fortified?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ironfortified, 1, new { id = "ironfortified1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ironfortified, 2, new { id = "ironfortified2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child have any other nutritional concerns?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.nutritionalconcerns, 1, new { id = "nutritionalconcerns1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.nutritionalconcerns, 2, new { id = "nutritionalconcerns2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Explain the other nutritional concerns:    </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Are your stove and refrigerator working?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.stove, 1, new { id = "stove1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.stove, 2, new { id = "stove2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>






                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Why are the appliance(s) not working:     </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you know how to make your own baby foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.babyfoods, 1, new { id = "babyfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.babyfoods, 2, new { id = "babyfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you ever run out of food for your child?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.runout, 1, new { id = "runout1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.runout, 2, new { id = "runout2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">How many times a day does your child eat?  </div>
                                        <div class="col-md-4">
                                            @{
                                                List<SelectListItem> diet = new List<SelectListItem>();
                                                foreach (var item in ViewBag.diet)
                                                {
                                                    diet.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(diet, "Value", "Text"), new { id = "DdlChildDiet", @class = "form-control", tabIndex = "21", @style = "width:43%;" })


                                        </div>

                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Typical meals:    </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Check meals child typically eats:</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                <span>Breakfast</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                <span>Lunch</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                <span>Snack(s)</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child eats snack(s), how many? </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.childsnacks, new { id = "childsnacks", @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Favorite foods: </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.Favoritefoods, new { id = "Favoritefoods", @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Least favorite foods: </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child on a special diet?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Specialdiet, 1, new { id = "Specialdiet1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Specialdiet, 2, new { id = "Specialdiet2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>













                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label> Reasons for special diet:     </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


























                                    <div class="col-lg-12">
                                        <h5 class="page-header">Please indicate the number of times your child typically eats foods in each category (and indicate the time period): </h5>
                                    </div>




                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">     Milk, cheese, yogurt    </label>
                                            @{
                                                List<SelectListItem> ChildFood = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    ChildFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildFood, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>


                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">   Meat, poultry, fish, eggs, dried beans/peas, peanut butter    </label>
                                            @{
                                                List<SelectListItem> ChildServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    ChildServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>

                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Rice, grits, bread, cereal, tortillas    </label>
                                            @{
                                                List<SelectListItem> RiceServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    RiceServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(RiceServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>



                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">Greens, carrots, broccoli, winter, squash, pumpkin, sweet potatoes   </label>
                                            @{
                                                List<SelectListItem> GreensServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    GreensServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(GreensServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>

                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">Oranges, grapefruit, tomatoes (fruit or pure fruit juices)    </label>
                                            @{
                                                List<SelectListItem> fruitServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.Food)
                                                {
                                                    fruitServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(fruitServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>


                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Other fruits and vegetables     </label>
                                            @{
                                                List<SelectListItem> OtherServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    OtherServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OtherServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Oil, butter, lard, margarine      </label>
                                            @{
                                                List<SelectListItem> OilServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    OilServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OilServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Cakes, cookies, soda/pop, fruit drinks (kool-aid), candy       </label>
                                            @{
                                                List<SelectListItem> CakeServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    CakeServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(CakeServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>





                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group">
                                            <label>What is the time-frame for these serving estimates  </label>
                                            @Html.TextBoxFor(m => m.Medication, new { @class = "form-control", @style = "width:43% !important;" })

                                        </div>
                                    </div>*@







                            </div>
                        </fieldset>



                    </div>

                    @*End*@

                    @*Ehs Nutrition Questions*@
                    <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="EhsNutrition1">


                        <fieldset style="border: 1px solid #295b8f;width:100%; ">
                            <legend class="legend1"></legend>
                            <div class="col-md-12">

                                @*<div class=" col-md-12 col-sm-12 mb10">
                                        <div class="col-md-10 col-sm-7">
                                            Is your child currently taking a vitamin supplement?  <sup>*</sup>
                                        </div>
                                        <div class="col-md-2 col-sm-5">
                                            <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                        </div>
                                        <div id="Cvstext">

                                        </div>

                                    </div>*@
                                @*Added by Akansha on 12Dec2016*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12"> Is your child currently taking a vitamin supplement? <sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildVitaminSupplment, 1, new { id = "EhsChildVitaminSupplment1", onchange = "ShowEhsChildVitaminSupplmentcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildVitaminSupplment, 2, new { id = "EhsChildVitaminSupplment2", onchange = "HideEhsChildVitaminSupplmentcomment();" })
                                            <span>No</span>
                                        </div>
                                        @*Added by Akansha on 14Dec2016*@
                                        <div class="col-md-2 col-sm-5" id="divEhsVitaminPopup" style="display:none;">
                                            @*Changes on 24Jan2017*@
                                            <a style="margin-left: -10%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                        </div>


                                    </div>

                                </div>
                                @*Added by Akansha on 14Dec2016*@
                                <div id="EhsCvstext" class="col-sm-12 mb10">

                                </div>
                                <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                @*End*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current Nausea or Vomiting?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentNausea, 1, new { id = "EhsPersistentNausea1", onchange = "ShowEhsNauseaorVomitingcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentNausea, 2, new { id = "EhsPersistentNausea2", onchange = "HideEhsNauseaorVomitingcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsNauseaorVomitingcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsNauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current diarrhea?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentDiarrhea, 1, new { id = "EhsPersistentDiarrhea1", onchange = "ShowEhsPersistentDiarrheacomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentDiarrhea, 2, new { id = "EhsPersistentDiarrhea2", onchange = "HideEhsPersistentDiarrheacomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsdiarrheacomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsDiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Persistent/Current Constipation?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentConstipation, 1, new { id = "EhsPersistentConstipation1", onchange = "ShowEhsPersistentConstipationcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsPersistentConstipation, 2, new { id = "EhsPersistentConstipation2", onchange = "HideEhsPersistentConstipationcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsPersistentConstipation" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsConstipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Dramatic weight change in the past year?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsDramaticWeight, 1, new { id = "EhsDramaticWeight1", onchange = "ShowEhsDramaticWeightcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsDramaticWeight, 2, new { id = "EhsDramaticWeight2", onchange = "HideEhsDramaticWeightcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsDramaticWeightchange" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsDramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Recent surgery (within 3 months)?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRecentSurgery, 1, new { id = "EhsRecentSurgery1", onchange = "ShowEhsRecentSurgerycomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRecentSurgery, 2, new { id = "EhsRecentSurgery2", onchange = "HideEhsRecentSurgerycomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsRecentSurgery" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsRecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Recent hospitalization (within 3 months)?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRecentHospitalization, 1, new { id = "EhsRecentHospitalization1", onchange = "ShowEhsRecentHospitalizationcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRecentHospitalization, 2, new { id = "EhsRecentHospitalization2", onchange = "HideEhsRecentHospitalizationcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsRecentHospitalization" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsRecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Is your child on any special diet?   </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildSpecialDiet, 1, new { id = "EhsChildSpecialDiet1", onchange = "ShowEhsChildSpecialDietcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsChildSpecialDiet, 2, new { id = "EhsChildSpecialDiet2", onchange = "HideEhsChildSpecialDietcomment();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsChildSpecialDiet" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsSpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child have any food allergies or intollerance?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsFoodAllergies, 1, new { id = "EhsFoodAllergies1", onchange = "ShowEhsFoodAllergies();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsFoodAllergies, 2, new { id = "EhsFoodAllergies2", onchange = "HideEhsFoodAllergies();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsFoodAllergies" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsFoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Do you have nutritional concerns for anyone in the household?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsNutritionalConcern, 1, new { id = "EhsNutritionalConcern1", onchange = "ShowEhsNutritionalConcern();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsNutritionalConcern, 2, new { id = "EhsNutritionalConcern2", onchange = "HideEhsNutritionalConcern();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsNutritionalConcern" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsNutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">When was the last time your family received foods from the local food pantry?<sup>*</sup>  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                        @{
                                            List<SelectListItem> foodpantryEhs = new List<SelectListItem>();
                                            foodpantryEhs.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                            foodpantryEhs.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                            foodpantryEhs.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                            foodpantryEhs.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                        }
                                        @Html.DropDownListFor(m => m.EhsFoodPantory, new SelectList(foodpantryEhs, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhschildTrouble, 1, new { id = "EhschildTrouble1", onchange = "ShowEhschildTrouble();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhschildTrouble, 2, new { id = "EhschildTrouble2", onchange = "HideEhschildTrouble();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhschildTrouble" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child use a spoon or fork?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.Ehsspoon, 1, new { id = "Ehsspoon1", onchange = "EhsHidespoon();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.Ehsspoon, 2, new { id = "Ehsspoon2", onchange = "EhsShowspoon();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsSpoonorForkComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsSpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.Ehsfeedingtube, 1, new { id = "Ehsfeedingtube1", onchange = "ShowEhsfeedingtube();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.Ehsfeedingtube, 2, new { id = "Ehsfeedingtube2", onchange = "HideEhsfeedingtube();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsSpecialFeedingComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsSpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>





                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Do you think your child is too:</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by Akansha on 13Dec2016*@
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhschildThin, 3, new { id = "EhschildThin3" })
                                            <span>Heavy </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhschildThin, 2, new { id = "EhschildThin2" })
                                            <span>Small </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhschildThin, 4, new { id = "EhschildThin4" })
                                            <span>Tall </span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhschildThin, 1, new { id = "EhschildThin1" })
                                            <span>Thin </span>
                                        </div>



                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhschildThin, 5, new { id = "EhschildThin5" })
                                            <span>None of the above</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.EhsTakebottle, 1, new { id = "EhsTakebottle1", onchange = "ShowEhsTakebottle();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.EhsTakebottle, 2, new { id = "EhsTakebottle2", onchange = "HideEhsTakebottle();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhsBottleComment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsBottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Does your child eat or chew anything that is not food?<sup>*</sup></div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.Ehschewanything, 1, new { id = "Ehschewanything1", onchange = "ShowEhschewanything();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.Ehschewanything, 2, new { id = "Ehschewanything2", onchange = "HideEhschewanything();" })
                                            <span>No</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" id="divEhschewanything" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsEatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>


                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label>
                                            Specify non-food item(s) your child eats or chews
                                        </label>
                                        @Html.TextBoxFor(m => m.EhsNonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                    </div>
                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Describe your child's appetite:<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by akansha on 13Dec2016*@
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 2, new { id = "EhsChangeinAppetite2" })
                                            <span>Fair</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 1, new { id = "EhsChangeinAppetite1" })
                                            <span>Good</span>
                                        </div>

                                        <div class="col-xs-6 col-sm-2">
                                            @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 3, new { id = "EhsChangeinAppetite3" })
                                            <span>Poor</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>


                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        How do you know when your child is hungry? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> Ehshungry = new List<SelectListItem>();
                                            foreach (var item in ViewBag.hungry)
                                            {
                                                Ehshungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.EhsChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlEhsChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                    </div>




                                </div>

                                <div class="col-md-12 col-sm-12 mb10">

                                    <div class="col-md-10 col-sm-7">
                                        How do you know when your child is full? (Check all that apply) <sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@

                                        <a style="margin-left: -298%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="EhsCDText">

                                    </div>

                                    @*<div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                                 <div class="col-md-6 input_wd" id="cstomChecklist" style="width:47%;">
                                                                                                     <div class="">
                                                                                                         @if (Model.AvailableChildDietFull != null)
                                                                                                         {
                                                                                                         @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
                                        m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                         }
                                                                                                     </div>
                                                                                                 </div>
                                                                                                 <div id="HSDiag">
                                                                                                     @if (Model.AvailableChildDietFull != null)
                                                                                                     {
                                                                                                         foreach (var item1 in Model.AvailableChildDietFull)
                                                                                                         {
                                                                                                     <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                         }
                                                                                                     }
                                                                                                 </div>
                                                                                             </div>*@
                                </div>

                                <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                    <div class="col-md-10 col-sm-7">
                                        What type of milk do you feed your child?<sup>*</sup>
                                    </div>
                                    <div class="col-md-2 col-sm-5">
                                        @*Changes on 24Jan2017*@
                                        <a style="margin-left:-404%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>

                                    </div>

                                    <div id="EhsCDRinkText">

                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label>
                                            Milk Comment
                                        </label>
                                        @Html.TextBoxFor(m => m.EhsMilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        If breastfeeding, how many times do you nurse in 24 hours? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildFeed)
                                            {
                                                ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        If formula feeding, how many fluid ounces of formula does your child take in 24 hours? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildFormula)
                                            {
                                                ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        At what age did you start feeding your child cereal?<sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildCereal)
                                            {
                                                ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        At what age did you start feeding your child pureed and/or mashed foods? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildCereal)
                                            {
                                                ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        At what age did you start feeding your child ground and/or finely chopped foods? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildCereal)
                                            {
                                                ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        At what age did you start feeding your child finger foods? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildCereal)
                                            {
                                                ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                    </div>



                                </div>

                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">How is your child fed finger foods?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Added by akansha on 13Dec2016*@
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                            <span>Child does not eat finger foods</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                            <span>Child feeds self</span>
                                        </div>
                                        @*<div class="col-md-12">
                                                @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood2" })
                                                <span>Not yet</span>
                                            </div>*@
                                        @*End*@
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">

                                    <div class="col-sm-12">
                                        At what age did you begin feeding your child 100% fruit juice with Vitamin C? <sup>*</sup>
                                    </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @{
                                            List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ChildCereal)
                                            {
                                                ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                    </div>




                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">How is your child fed 100% juice with Vitamin C?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Changes by Akansha*@
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 3, new { id = "EhsChildFruitJuicevitaminc3" })
                                            <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 1, new { id = "EhsChildFruitJuicevitaminc1" })
                                            <span> Bottle feeding</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 2, new { id = "EhsChildFruitJuicevitaminc2" })
                                            <span>Cup</span>
                                        </div>
                                        @*End*@
                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">How much water does your child drink?<sup>*</sup> </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildWater, 1, new { id = "EhsChildWater1" })
                                            <span>N/A (Child drinks breastmilk or formula)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildWater, 2, new { id = "EhsChildWater2" })
                                            <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.RadioButtonFor(m => m.EhsChildWater, 3, new { id = "EhsChildWater3" })
                                            <span>I don't give my child water</span>
                                        </div>


                                    </div>
                                </div>
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        @*Added by akansha on 13Dec2016*@
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.EhsNA, new { @class = "minimal", tabIndex = "19" })
                                            <span>N/A(Infant follows individual feeding schedule)</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.EhsBreakfast, new { @class = "minimal", tabIndex = "16" })
                                            <span>Breakfast</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.EhsDinner, new { @class = "minimal", tabIndex = "19" })
                                            <span>Dinner</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.EhsLunch, new { @class = "minimal", tabIndex = "17" })
                                            <span>Lunch</span>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.CheckBoxFor(m => m.EhsSnack, new { @class = "minimal", tabIndex = "18" })
                                            <span>Snack(s)</span>
                                        </div>


                                        @*End*@
                                    </div>
                                </div>
                                @*//Added by Akansha on 12Dec2016*@
                                <div class="col-sm-12 mb10" style="margin-top:10px;">
                                    <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                    <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRestrictFood, 1, new { id = "EhsRestrictFood1", onchange = "ShowEhsRestrictFoodcomment();" })
                                            <span>Yes</span>
                                        </div>
                                        <div class="col-xs-6 col-sm-4 col-md-2">
                                            @Html.RadioButtonFor(m => m.EhsRestrictFood, 2, new { id = "EhsRestrictFood2", onchange = "HideEhsRestrictFoodcomment();" })
                                            <span>No</span>
                                        </div>



                                    </div>
                                </div>




                                <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">
                                    @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                        </div>*@
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.EhsRestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                    </div>
                                </div>
                                @*End*@




                                @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Elevated blood lead level?<sup>*</sup> </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Elevatedblood, 1, new { id = "Elevatedblood1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Elevatedblood, 2, new { id = "Elevatedblood" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Anemia (low iron) </div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Anemia, 1, new { id = "Anemia1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Anemia, 2, new { id = "Anemia2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-lg-12">
                                        <h5 class="page-header">Eating/Drinking Behaviors</h5>
                                    </div>



                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Breastfeed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Breastfeed, 1, new { id = "Breastfeed1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Breastfeed, 2, new { id = "Breastfeed2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Drink from a cup?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Drinkfromcup, 1, new { id = "Drinkfromcup1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Drinkfromcup, 2, new { id = "Drinkfromcup2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Feed him/herself?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Feedherself, 1, new { id = "Feedherself1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Feedherself, 2, new { id = "Feedherself2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Eat pureed foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.pureedfoods, 1, new { id = "pureedfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.pureedfoods, 2, new { id = "pureedfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Eat finger foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.fingerfoods, 1, new { id = "fingerfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.fingerfoods, 2, new { id = "fingerfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If your child takes a bottle, do you put foods (cereals, strained foods) into the bottle?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.putfoods, 1, new { id = "putfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.putfoods, 2, new { id = "putfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If your child takes a bottle, does the child take it to bed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.childbottle, 1, new { id = "childbottle1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.childbottle, 2, new { id = "childbottle2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>










                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Vitamins or supplements</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Vitamins, 1, new { id = "Vitamins1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Vitamins, 2, new { id = "Vitamins2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child currently taking a vitamin supplement?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.vitaminsupplement, 1, new { id = "vitaminsupplement1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.vitaminsupplement, 2, new { id = "vitaminsupplement2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child takes a vitamin, is it prescribed?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.prescribed, 1, new { id = "prescribed1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.prescribed, 2, new { id = "prescribed2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child takes a vitamin, is it iron fortified?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ironfortified, 1, new { id = "ironfortified1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.ironfortified, 2, new { id = "ironfortified2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Does your child have any other nutritional concerns?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.nutritionalconcerns, 1, new { id = "nutritionalconcerns1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.nutritionalconcerns, 2, new { id = "nutritionalconcerns2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Explain the other nutritional concerns:    </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Are your stove and refrigerator working?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.stove, 1, new { id = "stove1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.stove, 2, new { id = "stove2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>






                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Why are the appliance(s) not working:     </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you know how to make your own baby foods?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.babyfoods, 1, new { id = "babyfoods1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.babyfoods, 2, new { id = "babyfoods2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Do you ever run out of food for your child?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.runout, 1, new { id = "runout1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.runout, 2, new { id = "runout2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-sm-12 mb10" style="margin-top:10px;">

                                        <div class="col-sm-12">How many times a day does your child eat?  </div>
                                        <div class="col-md-4">
                                            @{
                                                List<SelectListItem> diet = new List<SelectListItem>();
                                                foreach (var item in ViewBag.diet)
                                                {
                                                    diet.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(diet, "Value", "Text"), new { id = "DdlChildDiet", @class = "form-control", tabIndex = "21", @style = "width:43%;" })


                                        </div>

                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label>Typical meals:    </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Check meals child typically eats:</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                <span>Breakfast</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                <span>Lunch</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                <span>Snack(s)</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">If child eats snack(s), how many? </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.childsnacks, new { id = "childsnacks", @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Favorite foods: </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.Favoritefoods, new { id = "Favoritefoods", @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Least favorite foods: </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb10" style="margin-top:10px;">
                                        <div class="col-sm-12">Is your child on a special diet?</div>
                                        <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Specialdiet, 1, new { id = "Specialdiet1" })
                                                <span>Yes</span>
                                            </div>
                                            <div class="col-xs-6 col-sm-2">
                                                @Html.RadioButtonFor(m => m.Specialdiet, 2, new { id = "Specialdiet2" })
                                                <span>No</span>
                                            </div>
                                        </div>
                                    </div>













                                    <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                        <div class="form-group">
                                            <label> Reasons for special diet:     </label>
                                            @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                        </div>
                                    </div>


























                                    <div class="col-lg-12">
                                        <h5 class="page-header">Please indicate the number of times your child typically eats foods in each category (and indicate the time period): </h5>
                                    </div>




                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">     Milk, cheese, yogurt    </label>
                                            @{
                                                List<SelectListItem> ChildFood = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    ChildFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildFood, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>


                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">   Meat, poultry, fish, eggs, dried beans/peas, peanut butter    </label>
                                            @{
                                                List<SelectListItem> ChildServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    ChildServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>

                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Rice, grits, bread, cereal, tortillas    </label>
                                            @{
                                                List<SelectListItem> RiceServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    RiceServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(RiceServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>



                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">Greens, carrots, broccoli, winter, squash, pumpkin, sweet potatoes   </label>
                                            @{
                                                List<SelectListItem> GreensServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    GreensServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(GreensServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>

                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status">Oranges, grapefruit, tomatoes (fruit or pure fruit juices)    </label>
                                            @{
                                                List<SelectListItem> fruitServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.Food)
                                                {
                                                    fruitServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(fruitServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>


                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Other fruits and vegetables     </label>
                                            @{
                                                List<SelectListItem> OtherServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    OtherServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OtherServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Oil, butter, lard, margarine      </label>
                                            @{
                                                List<SelectListItem> OilServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    OilServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OilServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group" id="DivStatus">
                                            <label for="Status"> Cakes, cookies, soda/pop, fruit drinks (kool-aid), candy       </label>
                                            @{
                                                List<SelectListItem> CakeServings = new List<SelectListItem>();
                                                foreach (var item in ViewBag.food)
                                                {
                                                    CakeServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.ChildDiet, new SelectList(CakeServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                        </div>
                                    </div>





                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group">
                                            <label>What is the time-frame for these serving estimates  </label>
                                            @Html.TextBoxFor(m => m.Medication, new { @class = "form-control", @style = "width:43% !important;" })

                                        </div>
                                    </div>*@







                            </div>
                        </fieldset>



                    </div>
                    @*End*@




                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CDBR" role="dialog">
                            <div class="modal-dialog ">
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3> Child Direct Blood Relative<span class="extra-title muted"></span></h3>
                                        <button onclick="AddOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        <div class="">
                                            <div class="row">
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                            Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)? <sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="CDBRlist" style="width:81%;">
                                                            @if (Model.AvailableDisease != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedDisease.DiseaseID,
                                                                                              m => m.AvailableDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }
                                                        </div>
                                                        @*<div id="HSProg">
                                                                @if (Model.AvailableDisease != null)
                                                                {
                                                                    foreach (var item1 in Model.AvailableDisease)
                                                                    {
                                                                        <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                    }
                                                                }
                                                            </div>*@
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="AddChildDirectBloodHS();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.OtherConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>k
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CDC" role="dialog">
                            <div class="modal-dialog ">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Diagnosed Conditions<span class="extra-title muted"></span></h3>
                                        <button onclick="AddOtherdiagnosedConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important; float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        <div class="">
                                            <div class="row">
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Has the child been diagnosed with any of the following conditions since last year's PIR?<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="DiagnoseChildChecklist" style="width:185%;">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.DiagnoseDiseaseID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="HSProg">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="DiagnosedConditions();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.HsDiagonoseOtherConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddOtherdiagnosedConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CCH" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Medical Treatment<span class="extra-title muted"></span></h3>
                                        <button onclick="AddMedicalOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">

                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Did the child require medical treatment for the following chronic health conditions?<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="MedicalChildChecklist" style="width:185%;">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="HSProg">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="MedicalChecklist();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.HsOthermedicalConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddMedicalOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CTCH" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                        <button onclick="AddOtherHealthConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">

                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Did child receive treatment for any of the following chronic health conditions?<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="ChronicChildChecklist" style="width:185%;">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.ChronicHealthConditionsID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="HSProg">
                                                            @if (Model.AvailableDiagnosedDisease != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="ChronicConditions();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.ChronicHealthConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddOtherHealthConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CD" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Child Drink<span class="extra-title muted"></span></h3>
                                        <button onclick="AddChilddrinkcondition();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            What type of milk do you feed your child?<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildDrinklist" style="width:139%;">
                                                            @*<div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">*@
                                                            @if (Model.AvailableChildDrink != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedChildDrink.CDrinkID,
                                                                                              m => m.AvailableChildDrink, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="HSProg">
                                                            @if (Model.AvailableChildDrink != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableChildDrink)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>








                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                Other Conditions
                                                                <a href="javascript:void(0)" onclick="ChilddrinkHs();"><i class="fa fa-plus-square"></i></a>
                                                            </div>
                                                            <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                @Html.TextBoxFor(m => m.HsChilddrinkcondition, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                            </div>
                                                        </div>
                                                    </div>*@
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddChilddrinkcondition();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CDietfull" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3> Child Diet<span class="extra-title muted"></span></h3>
                                        <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;float:right;" class="my-btn" tabindex="2" onclick="SaveChildDiet();" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">

                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                            How do you know when your child is full? (Check all that apply)<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildDietlist" style="width:185%;">
                                                            @if (Model.AvailableChildDietFull != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
            m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }
                                                        </div>
                                                        <div id="Diet">
                                                            @if (Model.AvailableChildDietFull != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableChildDietFull)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;" class="my-btn" tabindex="2" onclick="SaveChildDiet();" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@

                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="CDVitamin" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3> Child Vitamin Supplement<span class="extra-title muted"></span></h3>
                                        <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;float:right;" onclick="SaveChildVitaminSupplement();" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">

                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                            Is your child currently taking a vitamin supplement?<sup>*</sup>
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildVitaminSupplementlist" style="width:122%;">
                                                            @if (Model.AvailableChildVitamin != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedChildVitamin.CDietInfoID, m => m.AvailableChildVitamin, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }
                                                        </div>
                                                        <div id="Diet">
                                                            @if (Model.AvailableChildVitamin != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableChildVitamin)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;" onclick="SaveChildVitaminSupplement();" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@

                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="EHSRMCHC" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                        <button onclick="AddEhsOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                            Has this child received medical treatment for the following chronic health conditions
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="EHSChildChecklist" style="width:81%;">
                                                            @if (Model.AvailableEHS != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedMedicalEHS.ChildEHSID, m => m.AvailableEHS, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="EHSProg">
                                                            @if (Model.AvailableEHS != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableEHS)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="EHSChronicHealthConditions();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.EhsChronicHealthConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddEhsOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row qualifierdiv">
                        <div class="modal fade scroll-modal " id="EHSCHC" role="dialog">
                            @*scroll-modal*@
                            <div class="modal-dialog ">
                                @*income-popup width-auto*@
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                        <button onclick="AddEhsCHCOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                    </div>
                                    <div class="control-group">
                                        @*add-useragform*@
                                        <div class="">
                                            @*col-sm-12*@
                                            <div class="row">
                                                @*<div class="row qualifierdiv">*@
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    @*col-sm-6*@
                                                    <div class="form-group">

                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                            Is this child receiving treatment for any of the following chronic health conditions?
                                                        </div>
                                                        <br />
                                                        <div class="col-md-6 input_wd scroll-none adddvispace" id="EHSCHCChildChecklist" style="width:81%;">
                                                            @if (Model.AvailableEHS != null)
                                                            {
                                                                @Html.CheckBoxListFor(m => m.PostedPostedEHS.ChildEHSID,
                                          m => m.AvailableEHS, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                            }

                                                        </div>
                                                        <div id="EHSProg">
                                                            @if (Model.AvailableEHS != null)
                                                            {
                                                                foreach (var item1 in Model.AvailableEHS)
                                                                {
                                                                    <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                    <div class="form-group">
                                                        <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                            Other Conditions
                                                            <a href="javascript:void(0)" onclick="SaveEhsCho();"><i class="fa fa-plus-square"></i></a>
                                                        </div>
                                                        <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                            @Html.TextBoxFor(m => m.EhsCHConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                        <div class="form-group">
                                                            <label for="email"></label>
                                                            &nbsp;
                                                            <button onclick="AddEhsCHCOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                        </div>
                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>



                </div>
            </div>

        </div>

        <div class="modal fade scroll-modal" id="BmiModel" role="dialog">
            <div class="modal-dialog income-popup">
                <!-- Modal content-->
                <div class="modal-content" style="width:900px;">
                    <div class="modal-header">
                        <h3>Assessment<span class="extra-title muted"></span></h3>
                        <div class="col-sm-5 col-xs-12 pull-right" style="padding-right:0;">
                            <div class="btnwrp_subcal" style="padding:0; margin:0;">
                                <button type="button" class="my-btn pull-right" data-dismiss="modal">Exit</button>
                                <button type="button" onclick="CheckClientBMi();" class="my-btn pull-right">Ok</button>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="add-useragform">
                            <div class="row qualifierdiv">
                                <div class="row" style="margin-bottom:3%;">
                                    <div class="col-md-11 col-sm-12 mb10">
                                        <div class="form-group">

                                            <div class="col-sm-8">
                                                <span style="font-size:17px;">Select Type of Input:</span>

                                            </div>
                                            <div class="col-sm-12 cont-sz" style="margin-top:1%;">
                                                <div class="col-sm-12">
                                                    @Html.RadioButtonFor(m => m.HWInput, 1, new { id = "HWInput1" })
                                                    <span>Imperial (Inches/LBS)</span>
                                                </div>
                                                <div class="col-sm-12">
                                                    @Html.RadioButtonFor(m => m.HWInput, 2, new { id = "HWInput2" })
                                                    <span>Metrical (CM/Kgs) </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="col-sm-12">
                                            <fieldset style="border: 1px solid #295b8f; ">
                                                <legend class="legend1"></legend>
                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                    <div class="table-responsive">
                                                        <table class="table table_size">
                                                            <thead style="cursor:pointer;">
                                                                <tr>
                                                                    <th style="width:31%;">Child Name</th>
                                                                    <th style="width:12%;">DOB</th>
                                                                    <th style="width:18%;">Assessment Date</th>
                                                                    <th style="width:13%;">Height</th>
                                                                    <th style="width:13%;">Weight</th>
                                                                    <th>Head Circ.</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td id="Clientbminame" style="text-align:center;"></td>
                                                                    <td id="ClientDob" style="text-align:center;"></td>
                                                                    <td><input class="form-control" style="width:100%;" placeholder="MM/DD/YYYY" onblur="CheckdateNew(this);" name="AssessmentDate" id="AssessmentDate" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" maxlength="10" onblur="ValidateWeightHeight(this);" name="AHeight" id="AHeight" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" maxlength="10" onblur="ValidateWeightHeight(this);" name="AWeight" id="AWeight" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" name="HeadCircle" onblur="ValidateWeightHeight(this);" id="HeadCircle" type="text"></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="BMiModal" tabindex="-1" role="dialog" aria-labelledby="BMiModal" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <h4 class="modal-title" id="myModalLabel">Please select male or female for bmi calculatuion </h4>
                    </div>
                    <div class="modal-body">
                        <label class="radio-inline">
                            <input type="radio" name="BmiGender" id="Bmimale" value="2"> Female
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="BmiGender" id="Bmifemale" value="1"> Male
                        </label>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="my-btn1" onclick="CheckBmi();">Ok</button>
                        <button type="button" data-dismiss="modal" class="my-btn1">Exit</button>
                    </div>
                </div>
            </div>
        </div>
        @{Html.RenderAction("Immunizationquestion", "AgencyUser", new { Immunization = Model.ImmunizationRecords });}
        @{Html.RenderAction("ScreeningIntake", "AgencyUser", new { CustomScreening = Model.customscreening });}
        @{Html.RenderAction("AddDoctor", "AgencyUser", new { area = "" });}
    </form>

    <div class="modal fade in" id="transportation" role="dialog" style="display: none;background: rgba(0,0,0,0.4);" aria-hidden="false">
        <div class="modal-dialog" style="width:60%;margin:0 15%;">
            <!-- Modal content-->
            <div class="modal-content col-xs-12" style="padding:0;">
                <div class="modal-header col-xs-12">
                    <input type="hidden" name="childid" id="childid" value="">
                    <input type="hidden" name="childname" id="childname" value="">
                    <label class="alert-dismissible" for="current_password" style="font-size: 20px;color: #295b8f;">Transportation</label>
                    <input type="hidden" class="transportation-id" />
                </div>
                <div class="col-xs-12" style="width: 80%;margin: 0 10%;">
                    <div class="form-group input-container">
                        <label class="control-label" style="margin-left: 0;display:inline-block;">Pick child up from home?</label>
                        <div class="col-xs-12 billing-form-div no-padding pick-up-radio" style="padding:0;width:65%;display:inline-block;">
                            <div class="col-xs-12" style="padding:0;">
                                <div class="billing-inner">
                                    <div class="bill-radio">
                                        <input id="rdEmailYes" name="Pickup" class="rd-email" value="1" type="radio">
                                        <label for="rdEmailYes" class="radio-label">Yes</label>
                                    </div>

                                    <div class="bill-radio">
                                        <input id="rdEmailNo" name="Pickup" value="0" class="rd-email" type="radio">
                                        <label for="rdEmailNo" class="radio-label">No</label>
                                    </div>
                                    <div class="bill-radio">
                                        <input id="rdEmailNA" name="Pickup" value="2" class="rd-email" type="radio">
                                        <label for="rdEmailNA" class="radio-label">Not Needed</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="pickup-details" style="display:none;">
                        <div class="form-group input-container" style="margin-bottom:10px!important;">
                            <label class="control-label" for="current_password" style="margin-left: 0;">Address</label>
                            <textarea name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;resize:none;" id="txtPickupAddress"></textarea>
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">ZIP Code</label>
                            <input name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtPickupZipcode" onblur="checkZipCode(this);" type="text" maxlength="50" value="">
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">City</label>
                            <select class="ddlPickupCity form-control" style="width:65%"></select>
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">State</label>
                            <input name="CNotes" readonly="readonly" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtPickupState" type="text" maxlength="50" value="">
                        </div>
                    </div>

                </div>
                <div class="col-xs-12" style="margin-top:20px;width: 80%;margin: 0 10%;">
                    <div class="form-group input-container">
                        <label class="control-label" style="margin-left:0;display:inline-block;">Drop child to home?</label>
                        <div class="col-xs-12 billing-form-div no-padding drop-radio" style="padding:0;width:65%;display:inline-block;">
                            <div class="col-xs-12" style="padding:0;">
                                <div class="billing-inner">

                                    <div class="bill-radio">
                                        <input id="rdPrintYes" name="Drop" class="rd-print" value="1" type="radio">
                                        <label for="rdPrintYes" class="radio-label">Yes</label>
                                    </div>

                                    <div class="bill-radio">
                                        <input id="rdPrintNo" name="Drop" class="rd-print" value="0" type="radio">
                                        <label for="rdPrintNo" class="radio-label">No</label>
                                    </div>
                                    <div class="bill-radio">
                                        <input id="rdPrintNA" name="Drop" class="rd-print" value="2" type="radio">
                                        <label for="rdPrintNA" class="radio-label">Not Needed</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="drop-details" style="display:none;">
                        <div class="form-group input-container" style="margin-bottom:10px!important;">
                            <label class="control-label" for="current_password" style="margin-left: 0;">Address</label>

                            <textarea name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;resize:none;" id="txtDropAddress"></textarea>
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">ZIP Code</label>
                            <input name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;" id="txtDropZipcode" onblur="checkZipCode(this);" type="text" maxlength="50" value="">
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">City</label>
                            <select class="ddlDropCity form-control" style="width:65%"></select>
                        </div>
                        <div class="form-group input-container">
                            <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">State</label>
                            <input name="CNotes" readonly="readonly" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtDropState" type="text" maxlength="50" value="">
                        </div>
                    </div>

                </div>
                <div class="col-xs-12" style="text-align:center;padding: 15px;border-top: 1px solid #e5e5e5;">
                    <button class="btn-save-transportation btn-primary btn">Save</button>
                    <button class="btn-primary btn btn-close-transportaion" data-dismiss="transportation">Back</button>
                </div>
            </div>

        </div>
    </div>

  
    <script>



        function getTransportationDetails() {
            $.ajax({
                dataType: 'json',
                type: "POST",
                async: false,
                url: "/AgencyUser/GetTransportationDetails",
                data: { 'ClientId': $('#ChildId').val() },
                success: function (data) {
                    console.log(data);
                    var result = JSON.parse(data);
                    if (result.length > 0) {
                        $('.transportation-id').val(result[0].Id);
                        if (result[0].PickupStatus == "1") {
                            $('.pickup-details').hide();
                            $('#rdEmailYes').prop('checked', true);
                            $('#txtPickupAddress').val("");
                            $('#txtPickupZipcode').val("");
                            $('.ddlPickupCity option').remove();
                            $('#txtPickupState').val('');
                        }
                        else if (result[0].PickupStatus == "0") {
                            $('.pickup-details').show();
                            $('#rdEmailNo').prop('checked', true);
                            $('#txtPickupAddress').val(result[0].PickupAddress);
                            $('#txtPickupZipcode').val(result[0].PickupZipcode);
                            console.log('Pick-up-zipcode' + result[0].PickupZipcode);
                            checkZipCode($('#txtPickupZipcode')[0]);
                            $('.ddlPickupCity').val(result[0].PickupCity);
                            $('#txtPickupState').val(result[0].PickupState);
                        }
                        else if (result[0].PickupStatus == "2") {
                            $('.pickup-details').hide();
                            $('#rdEmailNA').prop('checked', true);
                            $('#txtPickupAddress').val("");
                            $('#txtPickupZipcode').val("");
                            $('.ddlPickupCity option').remove();
                            $('#txtPickupState').val('');
                        }
                        if (result[0].DropStatus == "1") {
                            $('.drop-details').hide();
                            $('#rdPrintYes').prop('checked', true);
                            $('#txtDropAddress').val("");
                            $('#txtDropZipcode').val("");
                            $('.ddlDropCity option').remove();
                            $('#txtDropState').val('');
                        }
                        else if (result[0].DropStatus == "0") {
                            $('.drop-details').show();
                            $('#rdPrintNo').prop('checked', true);
                            $('#txtDropAddress').val(result[0].DropAddress);
                            $('#txtDropZipcode').val(result[0].DropZipcode);
                            checkZipCode($('#txtDropZipcode')[0]);
                            $('.ddlDropCity').val(result[0].DropCity);
                            $('#txtDropState').val(result[0].DropState);
                        }
                        else if (result[0].DropStatus == "2") {
                            $('.drop-details').hide();
                            $('#rdPrintNA').prop('checked', true);
                            $('#txtDropAddress').val("");
                            $('#txtDropZipcode').val("");
                            $('.ddlDropCity option').remove();
                            $('#txtDropState').val('');
                        }
                    }
                    $('#transportation').modal('show');
                },
                error: function (data) {
                }
            });
        }

        function showTransport(ele) {
            getTransportationDetails();
        }

        $(function () {

            $('input[type=radio][name=CTransportNeeded]').change(function () {
                if (this.value == "True") {
                    getTransportationDetails();
                    $('#transport-pop-div').show();
                }
                else {
                    $('#transport-pop-div').hide();
                }
            });
            $('input[type=radio][name=Pickup]').change(function () {
                if (this.value == "0")
                    $('.pickup-details').show();
                else
                    $('.pickup-details').hide();
                $('#txtPickupAddress').val("");
                $('#txtPickupZipcode').val("");
                $('.ddlPickupCity option').remove();
                $('#txtPickupState').val("");
            });
            $('input[type=radio][name=Drop]').change(function () {
                if (this.value == "0")
                    $('.drop-details').show();
                else
                    $('.drop-details').hide();
                $('#txtDropAddress').val("");
                $('#txtDropZipcode').val("");
                $('.ddlDropCity option').remove();
                $('#txtDropState').val("");
            });
            $('.btn-close-transportaion').click(function () {
                $('#transportation').modal('hide');
                $('#txtPickupAddress').val("");
                $('#txtPickupZipcode').val("");
                $('#txtDropAddress').val("");
                $('#txtDropZipcode').val("");
                $('#rdEmailYes').prop('checked', true);
                $('#rdPrintYes').prop('checked', true);
            });
            $('.btn-save-transportation').click(function () {
                var isAllow = true;
                cleanValidation();
                $('.pick-up-radio,.drop-radio').css("background-color", "");
                if ($('input[type=radio][name=Pickup]:checked').val() == undefined) {
                    isAllow = false;
                    customAlert("Select pickup option");
                    plainValidation('.pick-up-radio');
                }
                else if ($('input[type=radio][name=Pickup]:checked').val() == "0") {
                    if ($('#txtPickupAddress').val() == "") {
                        isAllow = false;
                        customAlert("Enter pickup address");
                        plainValidation('#txtPickupAddress');
                    }
                    else if ($('#txtPickupZipcode').val() == "") {
                        isAllow = false;
                        customAlert("Enter pickup zipcode");
                        plainValidation('#txtPickupZipcode');
                    }
                    else if ($('.ddlPickupCity').val() == null || $('.ddlPickupCity').val() == "" || $('.ddlPickupCity').val() == "0") {
                        isAllow = false;
                        customAlert("Enter pickup city");
                        plainValidation('.ddlPickupCity');
                    } else if ($('#txtPickupState').val() == "") {
                        isAllow = false;
                        customAlert("Enter pickup state");
                        plainValidation('#txtPickupState');
                    }
                }
                if ($('input[type=radio][name=Drop]:checked').val() == undefined && isAllow) {
                    isAllow = false;
                    customAlert("Select drop off option");
                    plainValidation('.drop-radio');
                }
                else if ($('input[type=radio][name=Drop]:checked').val() == "0" && isAllow) {
                    if ($('#txtDropAddress').val() == "") {
                        isAllow = false;
                        customAlert("Enter drop off address");
                        plainValidation('#txtDropAddress');
                    }
                    else if ($('#txtDropZipcode').val() == "") {
                        isAllow = false;
                        customAlert("Enter drop off zip code");
                        plainValidation('#txtDropZipcode');
                    }
                    else if ($('.ddlDropCity').val() == null || $('.ddlDropCity').val() == "" || $('.ddlDropCity').val() == "0") {
                        isAllow = false;
                        customAlert("Enter drop city");
                        plainValidation('.ddlDropCity');
                    } else if ($('#txtDropState').val() == "") {
                        isAllow = false;
                        customAlert("Enter drop state");
                        plainValidation('#txtDropState');
                    }
                }
                else if ($('input[type=radio][name=Drop]:checked').val() == "2" && $('input[type=radio][name=Pickup]:checked').val() == "2" && isAllow) {
                    isAllow = false;
                    customAlert("Both pickup and drop should not be Not Needed");
                    plainValidation('.pick-up-radio');
                    plainValidation('.drop-radio');
                }
                if (isAllow) {
                    var Trasportation = {};
                    if ($('.transportation-id').val().trim() != "")
                        Trasportation.Id = $('.transportation-id').val().trim();
                    Trasportation.ClientId = $('#ChildId').val();
                    Trasportation.PickupStatus = $('input[type=radio][name=Pickup]:checked').val();
                    //var geocoder = new google.maps.Geocoder();
                    //var address = "";
                    //if ($('input[type=radio][name=Pickup]:checked').val() == "1") {
                    //    $.ajax({
                    //        type: "POST",
                    //        async: false,
                    //        url: "/AgencyUser/GetAddressByClientId",
                    //        data: { 'ClientId': $('#ChildId').val() },
                    //        success: function (data) {
                    //            geocoder.geocode({ 'address': data }, function (results, status) {
                    //                alert(google.maps.GeocoderStatus.OK);
                    //                if (status == google.maps.GeocoderStatus.OK) {
                    //                    Trasportation.PickupLatitude = results[0].geometry.location.lat();
                    //                    Trasportation.PickupLongitude = results[0].geometry.location.lng();

                    //                } else {
                    //                }
                    //            });
                    //        },
                    //        error: function (data) {
                    //        }
                    //    });

                    //}
                    //else if ($('input[type=radio][name=Pickup]:checked').val() == "0") {
                    //    address = $('#txtPickupAddress').val() + "," + $('#ddlPickupCity').val() + "," + $('#txtPickupState').val() + "," + $('#txtPickupZipcode').val();
                    //    geocoder.geocode({ 'address': address }, function (results, status) {
                    //        alert(google.maps.GeocoderStatus.OK);
                    //        if (status == google.maps.GeocoderStatus.OK) {
                    //            Trasportation.PickupLatitude = results[0].geometry.location.lat();
                    //            Trasportation.PickupLongitude = results[0].geometry.location.lng();
                    //        } else {
                    //        }
                    //    });
                    //}

                    Trasportation.PickupAddress = $('#txtPickupAddress').val();
                    Trasportation.PickupZipcode = $('#txtPickupZipcode').val();
                    Trasportation.PickupCity = $('.ddlPickupCity').val();
                    Trasportation.PickupState = $('#txtPickupState').val();
                    Trasportation.DropStatus = $('input[type=radio][name=Drop]:checked').val();
                    //if ($('input[type=radio][name=Drop]:checked').val() == "1") {
                    //    $.ajax({
                    //        type: "POST",
                    //        async: false,
                    //        url: "/AgencyUser/GetAddressByClientId",
                    //        data: { 'ClientId': $('#ChildId').val() },
                    //        success: function (data) {
                    //            geocoder.geocode({ 'address': data }, function (results, status) {
                    //                alert(google.maps.GeocoderStatus.OK);
                    //                if (status == google.maps.GeocoderStatus.OK) {
                    //                    Trasportation.DropLatitude = results[0].geometry.location.lat();
                    //                    Trasportation.DropLongitude = results[0].geometry.location.lng();

                    //                } else {
                    //                }
                    //            });
                    //        },
                    //        error: function (data) {
                    //        }
                    //    });

                    //}
                    //else if ($('input[type=radio][name=Drop]:checked').val() == "0") {
                    //    address = $('#txtDropAddress').val() + "," + $('#ddlDropCity').val() + "," + $('#txtDropState').val() + "," + $('#txtDropZipcode').val();
                    //    geocoder.geocode({ 'address': address }, function (results, status) {
                    //        alert(google.maps.GeocoderStatus.OK);
                    //        if (status == google.maps.GeocoderStatus.OK) {
                    //            Trasportation.DropLatitude = results[0].geometry.location.lat();
                    //            Trasportation.DropLongitude = results[0].geometry.location.lng();
                    //        } else {
                    //        }
                    //    });
                    //}
                    Trasportation.DropAddress = $('#txtDropAddress').val();
                    Trasportation.DropZipcode = $('#txtDropZipcode').val();
                    Trasportation.DropCity = $('.ddlDropCity').val();
                    Trasportation.DropState = $('#txtDropState').val();
                    Trasportation = JSON.stringify({ 'objTransportation': Trasportation });
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: "POST",
                        async: false,
                        url: "/AgencyUser/SaveTransportation",
                        data: Trasportation,
                        success: function (data) {
                            if (data) {
                                customAlertSuccess("Record Saved Successfully");
                                $('#transportation').modal('hide');
                                $('#txtPickupAddress').val("");
                                $('#txtPickupZipcode').val("");
                                $('#txtDropAddress').val("");
                                $('#txtDropZipcode').val("");
                                $('#rdEmailYes').prop('checked', true);
                                $('#rdPrintYes').prop('checked', true);
                            }
                            else
                                customAlertSuccess("Sorry,Unable to save details");
                        },
                        error: function (data) {
                        }
                    });
                }

            });
        });

        function checkZipCode(inputTextObject) {

            if ($(inputTextObject).val() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;

                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckAddress(inputTextObject);
                return ret;
            }
            else {
                if ($(inputTextObject).attr('id') == "txtPickupZipcode") {
                    $('.ddlPickupCity').find('option').remove();
                    $('.txtPickupState').val('');
                }
                else if ($(inputTextObject).attr('id') == "txtDropZipcode") {
                    $('.ddlDropCity').find('option').remove();
                    $('.txtDropState').val('');
                }
            }
        }
        function CheckAddress(value) {
            var Zipcode = 0;
            Zipcode = $(value).val();
            if (Zipcode.trim() != "") {

                $.ajax({
                    type: "POST",
                    url: "/Billing/Checkaddress",
                    data: { 'Zipcode': Zipcode },
                    async: false,
                    success: function (response) {
                        console.log(response);
                        if (response != null && response.length > 0) {
                            var option = "<option value='0'>Choose</option>";
                            for (var i = 0; i < response.length; i++) {
                                option = option + '<option value="' + response[i].City + '">' + response[i].City + '</option>';
                            }


                            console.log('Name:');
                            console.log($(value).attr('id'));
                            console.log($(value).attr('id'));
                            if ($(value).attr('id') == "txtPickupZipcode") {
                                $('.ddlPickupCity').find('option').remove().end().append(option);
                                $('.ddlPickupCity').val('0');
                                $('#txtPickupState').val(response[0].State);
                            }
                            else if ($(value).attr('id') == "txtDropZipcode") {
                                $('.ddlDropCity').find('option').remove().end().append(option);
                                $('.ddlDropCity').val('0');
                                $('#txtDropState').val(response[0].State);
                            }
                        }
                        else {

                            if ($(value).attr('id') == "txtPickupZipcode") {
                                $('.ddlPickupCity').find('option').remove().end();
                                $('.ddlPickupCity').val('0');
                                $('#txtPickupState').val('');
                            }
                            else if ($(value).attr('id') == "txtDropZipcode") {
                                $('.ddlDropCity').find('option').remove();
                                $('.ddlDropCity').val('0');
                                $('#txtDropState').val('');
                            }

                            customAlert("Could not find zipcode details.");
                        }
                    }, error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                });
            }
        }
    </script>
}
