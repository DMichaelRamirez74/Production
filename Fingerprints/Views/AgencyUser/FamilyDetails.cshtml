
@model FingerprintsModel.FamilyHousehold
@using MvcCheckBoxList

@{
    @section Title
{
        Family Intake
    }
    Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";
}
@section Script{
  
    <script type="text/javascript">
        var round = 1;
        var rounds = 1;
        var round1 = 1;
        var isValid = true;
        var isValiddob = true;
        var ssnoriginalvalue = null;
        var ssnothervalue = null;
        var Parent1ssn = null;
        var Parent2ssn = null;
        var popupid = null;
        var popupname = null;
        var cloneimmunizationtable = null;
        var Refrenceid = [];
        function setDisability() {

            var IsProgramchecked = false;
            var isEHS = false;
            if ($('#CParentdisable1')[0].checked) {
                $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {
                        IsProgramchecked = true;
                        if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                            isEHS = true;
                        }
                    }
                });

            } else {
                $('#IsIFSP')[0].checked = false;
                $('#IsIEP')[0].checked = false;
                $('#IsExpired')[0].checked = false;
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            if (!IsProgramchecked) {
                $('#disablity').hide();
                $('#forexpire').hide();
            }
            else {
                $('#disablity').show();
                if (isEHS) {
                    $('#forehs').show();
                    $('#forhs').hide();
                }
                else {
                    $('#forehs').hide();
                    $('#forhs').show();
                }
            }


            var isEHsScreening = false;
            $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {
                   // IsProgramchecked = true;
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                        isEHsScreening = true;
                    }
                }
            });


            $('#AllowScreening').find('.table-main').children('div').hide()
            if (isEHsScreening)
            {
                $('#AllowScreening').find('#ConsolidateHeading').show();
                $('#AllowScreening').find('#ParentName').show();
                $('#AllowScreening').find('#wellBabyScreening').show();
            }

            else {
                $('#AllowScreening').find('.table-main').children('div').show();
                $('#AllowScreening').find('#wellBabyScreening').hide();
            }




        }
        function IEPorIFSP_Checked() {
            if ($('#IsIEP')[0].checked || $('#IsIFSP')[0].checked) {
                $('#forexpire').show();
            } else {
                $('#forexpire').hide();
            }
        }
        function removeclasss() {
            $('#HouseholdRecord').removeClass("active");
            $('#HouseholdRecord').removeClass("in");
            $('#FamilyHouseholdRecord').removeClass("active");
            $('#FamilyHouseholdRecord').removeClass("in");
            $('#FamilyRecord').removeClass("active");
            $('#FamilyRecord').removeClass("in");
            $('#ChildRecord').removeClass("active");
            $('#ChildRecord').removeClass("in");
            $('#EmergencyContacts').removeClass("active");
            $('#EmergencyContacts').removeClass("in");
            $('#RestrictedList').removeClass("active");
            $('#RestrictedList').removeClass("in");
            $('#OtherinHousehold').removeClass("active");
            $('#OtherinHousehold').removeClass("in");
            $('#FamilyFileCabinet').removeClass("active");
            $('#FamilyFileCabinet').removeClass("in");
            $('#Qualifier').removeClass("active");
            $('#Qualifier').removeClass("in");
        }

        function validateEmail1(email) {

            if ($(email).val().trim() != "") {
                if (!validateEmail($(email).val())) {
                    isValid = false;
                    customAlert("Please enter valid email id. ");
                    plainValidation(email);
                    $(email).val('');
                    return isValid;
                }
            }

        }


        function validatedates(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(inputTextObject).val())) {
                    customAlert("Invalid date.");
                    $(inputTextObject).val('');
                }
            }

        }


        $(document).ready(function () {


        

            $('#getScreening').on('click', function () {
                debugger;
                var arrlist = $.map($('#customChecklist').find('input:checkbox:checked'), function (ele, i) {

                    return $(ele).attr('accesskey');

                });

                arrlist = $.unique(arrlist);

                arrlist = (arrlist.length > 0) ? arrlist[0] : 0;

                var clientID = $('#ChildId').val();





                $('#spinner').show();

                $('#ApplicationScreening').find('#screeningDivStart').load('@Url.Action("GetScreeningByRefProg", "AgencyUser")', { clientID: clientID, refProg: arrlist }, function (response, status, xhr) {
                    $('#ApplicationScreening').find('#screeningDivStart').html(response);

                    $('#spinner').hide();

                    $('#ApplicationScreening').find('#screeningDivStart').find('.Sdate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

                    $('#scrSig').signature();

                    if ($('#ApplicationScreening').find('#ParentSignature') != '') {
                        var parentsig = $('#ApplicationScreening').find('#ParentSignature').val();
                        if (parentsig.length > 0) {
                            $('#scrSig').signature('draw', parentsig)
                        }
                    }


                    $('#ApplicationScreening').find('.modal-content').height(window.height - ((window.height * 2.6) / 100));

                    var divstartHeight = (window.height - ((window.height * 23.68) / 100));
                    $('#ApplicationScreening').find('#screeningDivStart').css('max-height', divstartHeight);

                 //   $('#ApplicationScreening').find('.tab-content').css('max-height', divstartHeight);


                  //  $('#ApplicationScreening').find('.tab-content').css('max-height', (window.height - ((window.height * 40.7) / 100)))

                    $('#ApplicationScreening').modal('show');
                });

            });



            $('#btnClosefuture').on('click', function () {

                if (!$(this).parent('.modal-footer').siblings('.modal-body').find('input[name=allowFutureRadio]').is(":checked")) {
                    customAlert("Please select Yes or No for next program year intake")
                    return false;
                }

                var assignValue = $(this).parent('.modal-footer').siblings('.modal-body').find('input[name=allowFutureRadio]:checked').val();
                assignValue = (assignValue == '1') ? 'True' : 'False';
                $("#customChecklist").find('#IsFutureApplication').val(assignValue);

                $("#futureApplicationModal").modal('hide');




            });


            $('#btnClosefuturePreg').on('click', function () {

                if (!$(this).parent('.modal-footer').siblings('.modal-body').find('input[name=allowFutureRadioPreg]').is(":checked")) {
                    customAlert("Please select Yes or No for next program year intake")
                    return false;
                }

                var assignValue = $(this).parent('.modal-footer').siblings('.modal-body').find('input[name=allowFutureRadioPreg]:checked').val();
                var accesskey = $(this).attr('enc');
                assignValue = (assignValue == '1') ? 'True' : 'False';

                if (accesskey == 'Pregnantmotherenrolled') {

                    $('#' + accesskey + '').siblings('#IsFutureIntakePregEnrolled').val(assignValue);
                }

                if (accesskey == 'PregnantmotherenrolledP1') {

                    $('#' + accesskey + '').siblings('#IsFutureIntakePregEnrolled1').val(assignValue);
                }


                $("#futureApplicationModalPreg").modal('hide');




            });

            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');
                    // $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                }
            });
            if ($('#CParentdisable1')[0].checked) {
                $('#disablity').show();
            } else {
                $('#disablity').hide();
            }

            $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                if ($(this)[0].checked) {
                    if ($(this)[0].accessKey == "1") {
                        $('#forehs').show();
                        $('#forhs').hide();
                    }
                    else {
                        $('#forehs').hide();
                        $('#forhs').show();
                    }
                }

            });
            $('#gridViewAgency img').zoomify();
            $('#gridViewEmergencyContact img').zoomify();
            $('#gridViewRestrictedlist img').zoomify();
            if (parseInt('@Model.phoneListParent.Count') > 0) {
                rounds = '@Model.phoneListParent.Count';
            }
            else {
                rounds = 1;
            }



            if (parseInt('@Model.phoneListParent1.Count') > 0) {
                round1 = '@Model.phoneListParent1.Count';
            }
            else {
                round1 = 1;
            }

            //Added on 26Dec2016
            // ViewWorkshopList();
            if ('@Model.WorkshopId' == 0) {
                $('#DdlCenter').val('');
            }
            //End

            $('#Yakkrli').removeClass("active");
            $('#viewfamily').addClass("active");
            $('#DashboardHV').removeClass("active");
            $('#WorkshopDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#AssessmentDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#RecentDentalExam').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#HSProfessionalDentalExam').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });//Added by Akansha on 14Dec2016
            $('#ddlcentername').val("");
            $("#DivWaitinglist > tbody >tr").each(function () {
                $(this).find('td:eq(4) :input').val("");
            });
            $("#searchurl").load('@Url.Action("FamilyHouseHold", "AgencyUser")', { tabName: 'Household', houseHoldId: $('#HouseholdId').val() });
            $('#familydetailsId li a').click(function () {
                $("#searchurl").load('@Url.Action("FamilyHouseHold", "AgencyUser")', { tabName: $(this).text(), houseHoldId: $('#HouseholdId').val() });
            });
            $('#form1').on('keyup keypress', function (e) {

                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });

            try {

                $("#CDoctor").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDoctor",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.MedicalCenter, id: item.CommunityID //Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#Doctor').val(ui.item.id);
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }
            //end of auto suggest doctor
            try {

                $("#CDoctorP1").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDoctor",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.MedicalCenter, id: item.CommunityID //Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#P1Doctor').val(ui.item.id);
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }
            ////////////////
            try {

                $("#CDoctorP2").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDoctor",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        //label: item.Fname, id: item.CommunityID
                                        label: item.MedicalCenter, id: item.CommunityID //Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#P2Doctor').val(ui.item.id);
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }


            //auto suggest for dentist
            try {
                $("#CDentist").autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.ajax({
                            url: HostedDir + "/AgencyUser/AutoCompleteDentist",
                            type: "POST",
                            dataType: "json",
                            data: { term: request.term, IsDeleted: "0" },
                            success: function (data) {

                                response($.map(data, function (item) {
                                    return {
                                        label: item.DentalCenter, id: item.CommunityID//Changes by Akansha on 15Dec2016
                                    };
                                }))
                            }

                        })
                    },
                    select: function (event, ui) {
                        $('#Dentist').val(ui.item.id);
                    },

                    messages: {
                        noResults: "", results: ""
                    }
                })

            }
            catch (err) {
            }
            //Screening changes
            if ($('#ChildId').val() == "0") {
                $('#Allow30DayPhysical').hide();
                $('#Allow45DayVisionScreening').hide();
                $('#Allow45DayHearingScreening').hide();
                $('#Allow45DayDevelopmentalScreening').hide();
                $('#Allow90DayDentalScreening').hide();
                $('#ScreeningAcceptance').hide();
                $('#AllowSpeechScreening').hide();
                $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val())


            }
            $('#Allow30DayPhysical').hide();
            $('#Allow45DayVisionScreening').hide();
            $('#Allow45DayHearingScreening').hide();
            $('#Allow45DayDevelopmentalScreening').hide();
            $('#Allow90DayDentalScreening').hide();
            $('#ScreeningAcceptance').hide();
            $('#AllowSpeechScreening').hide();



            //End
            //end of auto suggest
            if ('@ViewBag.tabpage' != '') {

                if ('@ViewBag.tabpage' == '1') {
                    //removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#HouseholdRecord').addClass("active");
                    $('#HouseholdRecord').addClass("in");
                    $('#myTab li:eq(0) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '2') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#FamilyHouseholdRecord').addClass("active");
                    $('#FamilyHouseholdRecord').addClass("in");
                    $('#myTab li:eq(1) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '3') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#FamilyRecord').addClass("active");
                    $('#FamilyRecord').addClass("in");
                    $('#myTab li:eq(2) a').tab('show');

                }
                if ('@ViewBag.tabpage' == '4') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#ChildRecord').addClass("active");
                    $('#ChildRecord').addClass("in");
                    $('#myTab li:eq(3) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '5') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#OtherinHousehold').addClass("active");
                    $('#OtherinHousehold').addClass("in");
                    $('#myTab li:eq(4) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '7') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#EmergencyContacts').addClass("active");
                    $('#EmergencyContacts').addClass("in");
                    $('#myTab li:eq(6) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '8') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#RestrictedList').addClass("active");
                    $('#RestrictedList').addClass("in");
                    $('#myTab li:eq(7) a').tab('show');
                }
                if ('@ViewBag.tabpage' == '9') {
                    removeclasss();
                    $('#HouseholdRecord').removeClass("in");
                    $('#HouseholdRecord').removeClass("active");
                    $('#FamilyFileCabinet').addClass("active");
                    $('#FamilyFileCabinet').addClass("in");
                    $('#myTab li:eq(8) a').tab('show');
                }
            }
            else {

                $('#myTab a:first').tab('show');
            }
            if ('@ViewBag.result' == 'Sucess') {
                emptychild();
            }
            if ('@ViewBag.result' == 'Sucessemergency') {
                emptyemergencytab();
                AddphoneE1Grid();
            }
            if ('@ViewBag.result' == 'SucessOther') {
                emptyOther();
            }
            if ('@ViewBag.result' == 'SucessRestricted') {
                emptyrestricted();
            }
            $(document).on('click', '.panel-heading2 span.clickable', function (e) {
                $('.panel - body1').show();
                var $this = $(this);
                if (!$this.hasClass('panel-collapsed')) {
                    $this.parents('.panel2').find('.panel-body2').slideUp();
                    $this.addClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                } else {
                    $this.parents('.panel2').find('.panel-body').slideDown();
                    $this.removeClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                }
            });
            $(document).on('click', '.panel-heading1 span.clickable1', function (e) {
                $('.panel - body2').show();
                var $this = $(this);
                if (!$this.hasClass('panel-collapsed')) {
                    $this.parents('.panel1').find('.panel-body1').slideUp();
                    $this.addClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                } else {
                    $this.parents('.panel1').find('.panel-body1').slideDown();
                    $this.removeClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                }
            });
            $(document).on('click', '.panel-heading3 span.clickable3', function (e) {
                $('.panel - body3').show();
                var $this = $(this);
                if (!$this.hasClass('panel-collapsed')) {
                    $this.parents('.panel3').find('.panel-body3').slideUp();
                    $this.addClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                } else {
                    $this.parents('.panel3').find('.panel-body3').slideDown();
                    $this.removeClass('panel-collapsed');
                    $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                }
            });
            $('#myTab li:eq(0) a').on('click', function (e) {
                $('#BtnMsave').show();
            });
            $('#myTab li:eq(1) a').on('click', function (e) {
                $('#BtnMsave').show();
            });
            $('#myTab li:eq(2) a').on('click', function (e) {
                $('#BtnMsave').show();
            });
            $('#myTab li:eq(3) a').on('click', function (e) {
                $('#BtnMsave').show();
            });
            $('#myTab li:eq(4) a').on('click', function (e) {
                $('#BtnMsave').hide();
            });
            $('#myTab li:eq(5) a').on('click', function (e) {
                $('#BtnMsave').hide();
            });
            $('#myTab li:eq(6) a').on('click', function (e) {
                $('#BtnMsave').hide();
            });
            $('#myTab li:eq(7) a').on('click', function (e) {
                $('#BtnMsave').hide();
            });
            $('#myTab li:eq(8) a').on('click', function (e) {
                $('#BtnMsave').hide();
            });
            $("#mobileno").mask("(999) 999-9999");
            $("#P1phoneno").mask("(999) 999-9999");
            $("#Pphoneno").mask("(999) 999-9999");
            $("#CSSN").mask("999-99-9999");
            $("#ParentSSN1").mask("999-99-9999");
            $("#ParentSSN2").mask("999-99-9999");
            $("#ParentSSN3").mask("999-99-9999");
            $('#gridphone > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                if ($(this).find("td:eq(0)").find("input:hidden").val() == 0)
                    $(this).find('td:eq(0) :input').val("");

            });
            $('#gridphone1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                if ($(this).find("td:eq(0)").find("input:hidden").val() == 0)
                    $(this).find('td:eq(0) :input').val("");
            });
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                $(this).find('td:eq(0) :input').val("");
            });
            //rohit
            if ($('.Pfemale').prop("checked")) {
                $("#addquestion").show();
                if ($('#Pquestionyes').prop("checked")) {
                    if ('@Model.ExistPmprogram' > 0) {
                        $('#Pregnantmotherprogram').show();
                        if ($('#Pregnantmotherenrolled').prop("checked")) {

                            if ($('#MedicalhomePreg1').val() == 3 || $('#MedicalhomePreg1').val() == 4 || $('#MedicalhomePreg1').val() == 2) {
                                $('#addp1').show();
                            }
                            $("#Div3").show();
                        }
                        else {
                            $("#Div3").hide();
                        }
                    }
                }
            }
            if ($('.P1female').prop("checked")) {
                $("#addquestion1").show();
                if ($('#Pquestionyes1').prop("checked")) {
                    if ('@Model.ExistPmprogram' > 0) {
                        $('#Pregnantmotherprogram1').show();
                        if ($('#PregnantmotherenrolledP1').prop("checked")) {
                            if ('@Model.PMConditions' == '0') {
                                $('#PMConditions').val('');
                            }
                            $("#Divp3").show();
                            if ($('#MedicalhomePreg2').val() == 3 || $('#MedicalhomePreg2').val() == 4 || $('#MedicalhomePreg2').val() == 2) {
                                $('#addp2').show();
                            }
                        }
                        else {
                            $("#Divp3").hide();
                        }
                    }
                }
            }
            if ($('#FamilyType').prop('checked')) {
                $('#Pparentid1').removeClass("panel-collapsed");
                $(".panel1").hide();
                $('.panel-body2').attr('style', 'display: block;');
                $('#Pparentid1').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                $(".panel2").show();
                $('#married').hide();
            }
            if ($('#FamilyType1').prop('checked')) {
                $('#Pparentid1').removeClass("panel-collapsed");
                $('#pparentid2').removeClass("panel-collapsed");
                $('#Pparentid1').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                $('#pparentid2').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                $('.panel-body2').attr('style', 'display: block;');
                $('.panel-body1').attr('style', 'display: block;');
                $(".panel1").show();
                $(".panel2").show();
                $('#ParentRelatioship').find('option').remove().end().append('<option value="1">Parents (biological, adoptive, stepparents, etc.)</option>' +
                                '<option value="2">Grandparents</option><option value="3">Relatives other than grandparents</option><option value="4">Foster parents not including relatives</option>' +
                               '<option value="6">Other</option> ');
                $('#ParentRelatioship').val('');
                $('#divParentrelatioship').hide();
                $('#divrelationshipparent').show();
                if ('@Model.ParentRelatioship' != '0') {
                    $('#ParentRelatioship').val('@Model.ParentRelatioship');
                }
                if ('@Model.ParentRelatioship' == '6') {
                    $('#divParentrelatioship').show();
                }
                $('#married').show();

            }
            $('#CDOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#PDOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#P1DOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#ODOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#EDOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#PMDentalExamDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#PMDentalExamDate1').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });


            if ('@ViewBag.mode' == 0) {
                $('#InsuranceOption').val('');
                $('#PrimaryLanguauge').val('');
                $('#DdlPRole').val('');
                $('#DdlP1Role').val('');
                $('#CRace').val('');
                $('#CRaceSubCategory').val('');
                $('#CEthnicity').val('');
                $('#Medicalhome').val('');
                $('#CDentalhome').val('');
                $('#ImmunizationService').val('');
                $('#BMIStatus').val('');
                $('#ERelationwithchild').val('');
                $('#Medicalhome').val('');
                $('#Medicalhome').val('');
                $('#DdlPDegreeEarned').val('');
                $('#DdlP1DegreeEarned').val('');
                $('#CProgramType').val('');
                $('#DOBverifiedBy').val('');
                $('#SchoolDistrict').val('');
                $('#TrimesterEnrolled').val('');
                $('#TrimesterEnrolled1').val('');
                $('#Pregnantmotherprimaryinsurance').val('');
                $('#Pregnantmotherprimaryinsurance1').val('');
                $('#DdlClientAssignedTo').val('');//Changes
            }
            if ('@ViewBag.mode' == 1) {
                if ('@Model.ClientAssigned' == '') {
                    $('#DdlClientAssignedTo').val('');
                }
                if ('@Model.PrimaryLanguauge' == '') {
                    $('#PrimaryLanguauge').val('');
                }
                if ('@Model.PRole' == '') {
                    $('#DdlPRole').val('');
                }
                if ('@Model.PDegreeEarned' == '') {
                    $('#DdlPDegreeEarned').val('');
                }
                if ('@Model.P1Role' == '') {
                    $('#DdlP1Role').val('');
                }
                if ('@Model.P1DegreeEarned' == '') {
                    $('#DdlP1DegreeEarned').val('');
                }
                if ('@Model.Pregnantmotherprimaryinsurance' == '0') {
                    $('#Pregnantmotherprimaryinsurance').val('');
                }

                if ('@Model.TrimesterEnrolled' == '0') {
                    $('#TrimesterEnrolled').val('');
                }
                if ('@Model.MedicalhomePreg1' == '0') {
                    $('#MedicalhomePreg1').val('');
                }
                if ('@Model.Pregnantmotherprimaryinsurance1' == '0') {
                    $('#Pregnantmotherprimaryinsurance1').val('');
                }

                if ('@Model.TrimesterEnrolled1' == '0') {
                    $('#TrimesterEnrolled1').val('');
                }
                if ('@Model.MedicalhomePreg2' == '0') {
                    $('#MedicalhomePreg2').val('');
                }


                //resets emergency contact tabs//
               

                emptyemergencytab();
                AddphoneE1Grid();
                emptyOther();
                emptyrestricted();


                if ($('#ChildId').val() == "0" || $('#ChildId').val() == "") {
                    $('#CRace').val('');
                    $('#CRaceSubCategory').val('');
                    $('#CEthnicity').val('');
                    $('#Medicalhome').val('');
                    $('#CDentalhome').val('');
                    $('#ImmunizationService').val('');
                    $('#BMIStatus').val('');
                    $('#CProgramType').val('');
                    $('#DOBverifiedBy').val('');
                    $('#SchoolDistrict').val('');
                    $('#InsuranceOption').val('');
                    $('#FoodPantory').val('');
                    $('#DdlChildhungry').val('');
                    $('#DdlChildFeed').val('');
                    $('#DdlChildFormula').val('');
                    $('#ChildFeedCereal').val('');
                    $('#ChildFeedMarshfood').val('');
                    $('#ChildFeedChopedfood').val('');
                    $('#ChildFingerFood').val('');
                    $('#ChildFruitJuice').val('');
                    $('#ChildReferalCriteria').val('');
                    $('#Parentcity').val('');//Changes on 6Feb2017

                }
                if ($('#ParentID').val() == "0") {
                    $('#DdlPRole').val('');
                    $('#DdlPDegreeEarned').val('');
                }
                if ($('#ParentID1').val() == "0") {
                    $('#DdlP1Role').val('');
                    $('#DdlP1DegreeEarned').val('');
                }
            }
            if ($('#ParentID').val() != "0" && $('#ParentID1').val() != "0") {
                $('#btnremoveParent1').show();
                $('#btnremoveParent2').show();
            }
            if ($('#DdlPRole').val() == 6) {
                $('#addrow').show();
            }
            if ($('#DdlP1Role').val() == 6) {
                $('#addrow1').show();
            }


            if ('@Model.PrimaryLanguauge' == '12')
                $('#div2').show();
            else
                $('#div2').hide();
            //rohit
            $('#customChecklist input[type=checkbox]').change(function () {
                debugger;
                var exist1 = false;
                var exist2 = false;
                var programtype = null;
                $('#HSHealth').hide();
                $('#EHSHealth').hide();
                //Changes by Akansha on 19Dec2016
                $('#Nutrition').hide();
                $('#EhsNutrition1').hide();

                //End

                $('#customChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).attr("accesskey") == 1)
                            exist1 = true;
                        if ($(this).attr("accesskey") == 2)
                            exist2 = true;
                        programtype = $(this).attr("accesskey");
                    }
                });
                if (exist1 == true || exist2 == true) {
                    $('#Screening1').show();
                }
                else
                    $('#Screening1').hide();



                //added on 12-26-2016 rohit rawat

                $('.customallowscreening').each(function () {
                    if ($(this).attr("accesskey") == programtype) {
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });






                if (exist1 == true && exist2 == true) {
                    customAlert('Cannot select Head Start or Early Head Start program together.');
                    $(this).prop("checked", false);
                    exist1 = false;
                    exist2 = false;
                }
                if (exist1) {
                    $('#CDBRText').html('');
                    $('#CDCText').html('');
                    $('#CCHText').html('');
                    $('#CTCHText').html('');
                    $('#CDBRlist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#MedicalChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                }
                if (exist2) {
                    //03082016
                    $('#EHSCDBRText').html('');
                    $('#EHSCDCText').html('');
                    $('#EHSCHCText').html('');
                    $('#EHDCDCText').html('');
                    $('#EHSCCHText').html('');
                    $('#EHSCTCHText').html('');
                    $('#CDBRlist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#EHSChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#EHSCHCChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#MedicalChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        var value = $(this).val();
                        if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                            $(this).next('label').remove();
                            $(this).remove();
                        }
                        else
                            $(this).prop("checked", false);
                    });
                }
                $('#customChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).attr("accesskey") == 1)
                            $('#_childprogrefid').val("1");
                        if ($(this).attr("accesskey") == 2)
                            $('#_childprogrefid').val("2");
                    }
                });

                if (!(exist1 == true && exist2 == true) && $(this).is(':checked')) {

                    $.ajax({

                        url: '/AgencyUser/GetProgramDatesByProgram',
                        datatype: 'json',
                        type: 'post',
                        data: { programID: $(this).val() },
                        success: function (data) {
                           // console.log(data);

                            if (data.AllowFutureApplication && data.AllowCurrentApplication) {

                                $("#futureApplicationModal").find('#futureSpanYear').text(data.FutureProgramYear);
                                $("#futureApplicationModal").find('input[type=radio]').prop('checked', false);
                                $("#futureApplicationModal").modal({
                                    show: true,
                                    backdrop: 'static'
                                });
                                //  $("#futureApplicationModal").modal('show');
                            }
                            else if(data.AllowFutureApplication)
                            {
                                var isAllowFuture = (data.AllowFutureApplication) ? "True" : "False";

                                $('#customChecklist').find('#IsFutureApplication').val(isAllowFuture);
                            }
                            

                        },
                        error: function (data) {

                        },
                        complete: function (data) {

                        }
                    });
                }


            });
            $("#ParentSSN1").blur(function () {
                if (Parent1ssn != null) {
                    if ($('#ParentSSN1').val() == "") {
                        var res = Parent1ssn;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                        result = stars + res.substring(7);
                        $('#ParentSSN1').val(result);
                    }
                }
            });
            $("#ParentSSN2").blur(function () {
                if (Parent2ssn != null) {
                    if ($('#ParentSSN2').val() == "") {
                        var res = Parent2ssn;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                        result = stars + res.substring(7);
                        $('#ParentSSN2').val(result);
                    }
                }
            });
            if ($('#ParentID').val() != "0") {
                if ('@Model.ParentSSN1' != "") {
                    var res = '@Model.ParentSSN1';
                    len = res.length;
                    max = 11;
                    stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                    result = stars + res.substring(7);
                    $('#ParentSSN1').val(result);
                    Parent1ssn = '@Model.ParentSSN1';
                }

            }
            if ($('#ParentID1').val() != "0") {
                if ('@Model.ParentSSN2' != "") {
                    var res = '@Model.ParentSSN2';
                    len = res.length;
                    max = 11;
                    stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                    result = stars + res.substring(7);
                    $('#ParentSSN2').val(result);
                    Parent2ssn = '@Model.ParentSSN2';
                }

            }
            cloneimmunizationtable = $('#Imminizationclone').html();
            if ('@ViewBag.message' != '') {
                customAlert('@ViewBag.message');
            }
            if ('@TempData["message"]' != null && '@TempData["message"]' != '') {
                customAlert('@TempData["message"]');
            }
            $('#form1').submit(function () {
                //$('#BtnMsave').attr('disabled', 'disabled');
                //$('#btnother').attr('disabled', 'disabled'); btnRestricted
                //$('#btnEmergency').attr('disabled', 'disabled');
                //$('#btnRestricted').attr('disabled', 'disabled');
            });
            $('#btnExit').click(function () {
                window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnFamilyDetailExit').click(function () {

                removeclasss();
                $('#HouseholdRecord').addClass("active");
                $('#HouseholdRecord').addClass("in");
                $('#myTab li:eq(0) a').tab('show');
                //window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnExitchild').click(function () {
                removeclasss();
                $('#FamilyRecord').addClass("active");
                $('#FamilyRecord').addClass("in");
                $('#myTab li:eq(2) a').tab('show');
            });
            $('#btnParentExit').click(function () {
                removeclasss();
                $('#FamilyHouseholdRecord').addClass("active");
                $('#FamilyHouseholdRecord').addClass("in");
                $('#myTab li:eq(1) a').tab('show');
                //window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnExitother').click(function () {
                window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnExitemergency').click(function () {
                window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnrestrictedExit').click(function () {
                window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });
            $('#btnfileExit').click(function () {
                window.location.href = HostedDir + "/Home/AgencystaffDashboard";
            });


            var dateToday = new Date();
            var yrRange = "1950:" - (dateToday.getFullYear() - 20);
            $(".datecss").datetimepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '1964:1991',
                timepicker: false,
                format: 'm/d/Y'
            });


            $('.time').datetimepicker({
                datepicker: false,
                format: 'H:i',
                step: 15
            });
            $('.time').datetimepicker({
                datepicker: false,
                format: 'H:i',
                step: 15
            });

            $('.time').datetimepicker({
                datepicker: false,
                format: 'H:i',
                step: 15
            });

            $('.time').datetimepicker({
                datepicker: false,
                format: 'H:i',
                step: 15
            });
            $("#CSSN").blur(function () {
                if (ssnoriginalvalue != null) {

                    if ($('#CSSN').val() == "") {
                        var res = ssnoriginalvalue;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '***' : '*' : '';
                        result = stars + res.substring(7);
                        $('#CSSN').val(result);
                    }
                }
            });
            $("#ParentSSN3").blur(function () {
                if (ssnothervalue != null) {
                    if ($('#ParentSSN3').val() == "") {
                        var res = ssnothervalue;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '***' : '*' : '';
                        result = stars + res.substring(7);
                        $('#ParentSSN3').val(result);
                    }
                }
            });



            $('#spinner').hide();
            if ('@ViewBag.tabpage' == '1') {
                //removeclasss();
                $('#HouseholdRecord').removeClass("in");
                $('#HouseholdRecord').removeClass("active");
                $('#HouseholdRecord').addClass("active");
                $('#HouseholdRecord').addClass("in");
                $('#myTab li:eq(0) a').tab('show');
            }

            //30192016
            if ('@Model.EditAllowed' == "0") {
                $('#FamilyRecord').find('a').removeAttr('href').removeAttr('onclick');
                $('#FamilyRecord').find('a').click(function () { return false });
                $('#Qualifier').find('a').removeAttr('href').removeAttr('onclick');
                $('#Qualifier').find('a').click(function () { return false });
                $('#OtherinHousehold').find('a').removeAttr('href').removeAttr('onclick');
                $('#OtherinHousehold').find('a').click(function () { return false });
                $('#EmergencyContacts').find('a').removeAttr('href').removeAttr('onclick');
                $('#EmergencyContacts').find('a').click(function () { return false });
                $('#RestrictedList').find('a').removeAttr('href').removeAttr('onclick');
                $('#RestrictedList').find('a').click(function () { return false });
                $('#FamilyFileCabinet').find('a').removeAttr('href').removeAttr('onclick');
                $('#FamilyFileCabinet').find('a').click(function () { return false });
                $('#AddDoctor').find('a').removeAttr('href').removeAttr('onclick');
                $('#AddDoctor').find('a').click(function () { return false });
                $('#AddDentist').find('a').removeAttr('href').removeAttr('onclick');
                $('#AddDentist').find('a').click(function () { return false });
                $('#myTabContent :input').attr('disabled', 'disabled');
                $('#BtnMsave').hide();
                $('#Btnrequest').show();
                $('#Btnrequest').removeAttr('disabled');

            }
            else {
                $('#BtnMsave').show();
            }

            if ('@Model.YakkrId' != "" && '@Model.StaffId' != "") {
                var staff = '@Model.StaffId';
                // $('#DdlClientAssignedTo').removeAttr('disabled');
                $('#btnAssignapplication').removeAttr('disabled');
                $('#DdlClientAssignedTo').val(staff.toLocaleUpperCase());


                $('#DdlClientAssignedTo').focus();

            }


            if ('@Model.RequestAllowed' == "0") {
                $('#Btnrequest').hide();
            }



            $('.ZoomImage img').zoomify();

        });
        function GetAllgrid() {
            $.ajax({
                url: HostedDir + "/AgencyUser/ListAllGrid",
                type: "POST",
                data: {
                    HouseHoldId: $('#HouseholdId').val(),
                    ParentID1: $('#ParentID').val(),
                    ParentID2: $('#ParentID1').val(),
                    mode: 1
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    getEmergencyData(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });



        }

        function checkParentZipCode(inputTextObject) {

            if ($(inputTextObject).val() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;
                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckParentAddress(1);
                return ret;
            }
            else {

                $('#Parentcity').find('option').remove();
                $('#Parentstate').val('');
                // $('#County').val('');
            }
        }
        function CheckParentAddress(value) {

            var Zipcode = 0;
            if (value == 0)
                Zipcode = 0;
            else
                Zipcode = $('#Parentzipcode').val();



            if ($('#Parentzipcode').val().trim() != "") {

                $.ajax({
                    url: HostedDir + "/AgencyAdmin/Checkaddress",
                    type: "POST",
                    data: {
                        Address: $('#Parentzipcode').val(),
                        //HouseHoldId: $('#HouseholdId').val(),
                        Zipcode: Zipcode
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {

                        if (value == 1) {
                            if (response.Zipcodelist != null && response.Zipcodelist.length > 0) {
                                var option = "";
                                for (var i = 0; i < response.Zipcodelist.length; i++) {
                                    option = option + '<option value="' + response.Zipcodelist[i].City + '">' + response.Zipcodelist[i].City + '</option>';
                                }
                                $('#Parentcity').find('option').remove().end().append(option);
                                $('#Parentcity').val('');
                                $('#Parentstate').val(response.Zipcodelist[0].State);
                                // $('#CountyD').val(response.Zipcodelist[0].County);
                                $('#Parentzipcode').val(response.Zipcodelist[0].Zipcode);
                            }
                            else {
                                $('#Parentcity').find('option').remove().end();
                                $('#Parentcity').val('');
                                $('#Parentstate').val('');
                                $('#Parentzipcode').val('');
                                // $('#CountyD').val('');
                                customAlert("Could not find zipcode details.");

                            }
                        }
                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });
            }


        }

        function ucfirst(str, force) {
            str = force ? str.toLowerCase() : str;
            return str.replace(/(\b)([a-zA-Z])/,
                     function (firstLetter) {
                         return firstLetter.toUpperCase();
                     });
        }
        function Changefirstchar(value) {
            var cp_value = ucfirst($(value).val(), true);
            $(value).val(cp_value);
        }
        function isValidParentInfo() {
            cleanValidation();
            isValid = true;

            removeclasss();
            $('#ChildRecord').addClass("active");
            $('#ChildRecord').addClass("in");
            $('#myTab li:eq(3) a').tab('show');
            return isValid;
        }
        function checkdateOther(input) {

            isValiddob = true;
            var age = null;
            var now = null;
            var past = null;
            var nowYear = null;
            var pastYear = null;
            if ($('#ODOB')[0].value.trim() != "") {
                now = new Date();
                past = new Date($("#ODOB").val());
                nowYear = now.getFullYear();
                pastYear = past.getFullYear();
                age = nowYear - pastYear;
                if (age < 0 || age >= 18) {
                    isValiddob = false;
                    $('#Oemergencycontact').show();
                    $('#lblOemergencycontact').show();
                }
                else {
                    $('#Oemergencycontact').hide();
                    $('#lblOemergencycontact').hide();
                }


            }
            return isValiddob;
        }
        function copydata() {

            if ($('#OthersId').val() != "0") {
                if (!$('#Oemergencycontact').prop("checked")) {
                    BootstrapDialog.confirm('Do you want to remove this emergency contact ?', function (result) {
                        if (result) {
                            $('#Oemergencycontact').prop("checked", false);
                        }
                        else {
                            $('#Oemergencycontact').prop("checked", true);
                        }
                    });


                }

            }

        }


        function isValidOtherInfo() {

            var isValid = true;
            cleanValidation();
            if ($('#HouseholdId').val() == '0') {
                isValid = false;
                customAlert("Please add household record. ");
                return isValid;
            }
            if ($('#Ofirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Ofirstname');
                return isValid;
            }
            if ($('#Olastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Olastname');
                return isValid;
            }
            if ($('#ODOB')[0].value.trim() == "") {
                isValid = false;
                customAlert("Date of birth is required. ");
                plainValidation('#ODOB');
                return isValid;
            }
            if ($('#ODOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#ODOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth can't be greater than current date. ");
                    plainValidation('#ODOB');
                    return isValid;
                }

            }
            if (!$("input:radio[name='OGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }
            if (ssnothervalue != null) {
                if (ssnothervalue != $('#ParentSSN3').val()) {
                    if ($('#ParentSSN3').val() == "") {
                        $('#ParentSSN3').val(ssnothervalue);
                    }
                    else if ($('#ParentSSN3').val().indexOf("*") > 0) {
                        $('#ParentSSN3').val(ssnothervalue);
                    }
                }
            }
            return isValid;
        }
        //Added on 1Feb2017
        function AddOthersHousehold() {

            var IsEmergency = $('#Oemergencycontact').is(":checked");

            var formData = new FormData();

            formData.append("Fname", $('#Ofirstname').val());
            formData.append("Mname", $('#Omiddlename').val());
            formData.append("Lname", $('#Olastname').val());
            formData.append("OGender", $('input:radio[name=OGender]:checked').val());
            formData.append("ODOB", $('#ODOB').val());
            formData.append("SSN", $("#ParentSSN3").val());
            formData.append("OthersId", $('#OthersId').val());
            formData.append("HouseholdId", $('#HouseholdId').val());
            formData.append("IsEmer", $('#Oemergencycontact').is(":checked"));

            formData.append("HouseHoldAvatar", $('#HouseHoldAvatar')[0].files[0]);



            if (isValidOtherInfo()) {
                $.ajax({
                    url: HostedDir + "/AgencyUser/AddOthersHouseholdAjax",
                    type: "POST",
                    data: formData,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response != null) {

                            if (response.result == "1") {

                                if (IsEmergency == true) {

                                    $('#Efirstname').val($('#Ofirstname').val());
                                    $('#Emiddlename').val($('#Omiddlename').val());
                                    $('#Elastname').val($('#Olastname').val());
                                    $('#EDOB').val($('#ODOB').val());
                                    $('#HouseHoldAvatar').val('');
                                    $('#EmegencyId').val(response.EmegencyId);
                                    // $('#EGender').val($('input:radio[name=OGender]:checked').val());
                                    if ($('input:radio[name=OGender]:checked').val() == "1")
                                        $('#EGendermale').prop("checked", true);
                                    if ($('input:radio[name=OGender]:checked').val() == "2")
                                        $('#EGenderfemale').prop("checked", true);
                                    if ($('input:radio[name=OGender]:checked').val() == "3")
                                        $('#EGenderother').prop("checked", true);
                                    customAlert("Record added successfully. Please complete the emergency contact information. ");
                                }
                                else {
                                    customAlert("Record added successfully.");
                                }
                                drawOthergrid();
                                emptyOther();
                            }

                            else if (response.result == "2") {

                                if (IsEmergency == true) {
                                    $('#HouseHoldAvatar').val('');
                                    $('#Efirstname').val($('#Ofirstname').val());
                                    $('#Emiddlename').val($('#Omiddlename').val());
                                    $('#Elastname').val($('#Olastname').val());
                                    $('#EDOB').val($('#ODOB').val());
                                    //   $('#EGender').val($('input:radio[name=OGender]:checked').val());
                                    if ($('input:radio[name=OGender]:checked').val() == "1")
                                        $('#EGendermale').prop("checked", true);
                                    if ($('input:radio[name=OGender]:checked').val() == "2")
                                        $('#EGenderfemale').prop("checked", true);
                                    if ($('input:radio[name=OGender]:checked').val() == "3")
                                        $('#EGenderother').prop("checked", true);
                                    customAlert("Record updated successfully. Please complete the emergency contact information. ");
                                }
                                else {
                                    customAlert("Record updated successfully.");
                                }
                                // customAlert("Record updated successfully");
                                drawOthergrid();
                                emptyOther();
                            }
                            else if (response.result == "3") {
                                customAlert("Record already exists.");
                            }
                            else
                                customAlert(response);
                        }
                    },
                    error: function (response) { alert(response); }
                });
            }
        }

        function isValidagencyInfo() {
            isValid = true;
            cleanValidation();
            //if ($('#Street')[0].value.trim() == "") {

            //    isValid = false;
            //    customAlert("Address is required. ");
            //    plainValidation('#Street');
            //    return isValid;
            //}
            //if ($('#ZipCode')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("Zip Code is required. ");
            //    plainValidation('#ZipCode');
            //    return isValid;
            //}
            //if ($('#City')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("City is required. ");
            //    plainValidation('#City');

            //    return isValid;
            //}
            //if ($('#State')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("State is required. ");
            //    plainValidation('#State');

            //    return isValid;
            //}
            //if ($('#County')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("County is required. ");
            //    plainValidation('#County');

            //    return isValid;
            //}
            //if (!$('#AdresssverificationinPaper').prop("checked") && $('#HouseholdId').val() == '0') {
            //    if ($('#FileaddressAvatar')[0].value.trim() == "") {
            //        isValid = false;
            //        customAlert("Please upload address verification form. ");
            //        plainValidation('#FileaddressAvatar');
            //        return isValid;
            //    }
            //}
            //else {
            //    if ($('#HouseholdId').val() != '0' && $('#HFileName').val() == "" && !$('#AdresssverificationinPaper').prop("checked")) {
            //        isValid = false;
            //        customAlert("Please upload address verification form. ");
            //        plainValidation('#FileaddressAvatar');
            //        return isValid;
            //    }

            //}
            //removeclasss();
            $('#FamilyHouseholdRecord').addClass("active");
            $('#FamilyHouseholdRecord').addClass("in");
            $('#myTab li:eq(1) a').tab('show');
            return isValid;
        }
        function checkdate(input) {
            isValiddob = true;
            var age = null;
            var now = null;
            var past = null;
            var nowYear = null;
            var pastYear = null;
            if ($('#CDOB')[0].value.trim() != "") {
                if ($('#CProgramType').val() == "1") {
                    now = new Date();
                    past = new Date($("#CDOB").val());
                    nowYear = now.getFullYear();
                    pastYear = past.getFullYear();
                    age = nowYear - pastYear;
                    if (age < 0 || age > 3) {
                        isValiddob = false;
                        customAlert("If program type is early head start. Date of birth should be between 0 to 3 years. ");
                    }
                }
                else {
                    now = new Date();
                    past = new Date($("#CDOB").val());
                    nowYear = now.getFullYear();
                    pastYear = past.getFullYear();
                    age = nowYear - pastYear;
                    if (age < 0 || age > 5) {
                        isValiddob = false;
                        customAlert("If program type is  head start. Date of birth should be between 0 to 5 years. ");
                    }
                }
            }
            return isValiddob;
        }
        function validatedate(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                    $('#Oemergencycontact').hide();
                                    $('#lblOemergencycontact').hide();

                                }
                            });

                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }



        function validatedateChild(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                    $('#Oemergencycontact').hide();
                                    $('#lblOemergencycontact').hide();
                                }
                            });
                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }

        function validatedatenew(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(inputTextObject).val())) {
                    customAlert("Invalid date format. ");
                    $(inputTextObject).val('');
                    return false;
                }
            }
        }




        function validatedateemergency(inputTextObject) {

            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age < 18) {
                            customAlert("Minimum age must be 18 years. ");
                            $(inputTextObject).val('');
                            return false;
                        }
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                }
                            });

                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }



        function isValidfamilyInfo() {
            isValid = true;
            cleanValidation();
            //if (!$("input:radio[name='FamilyType']").is(":checked")) {
            //    isValid = false;
            //    customAlert("Family type is required. ");
            //    return isValid;
            //}
            //if (!$("input:radio[name='HomeType']").is(":checked")) {
            //    isValid = false;
            //    customAlert("Is family Homeless at this time is required. ");
            //    return isValid;
            //}
            //if ($('#FamilyType1').prop("checked")) {
            //    if ($("#ParentRelatioship").val() == null) {
            //        isValid = false;
            //        customAlert("Parent relatioship is required. ");
            //        plainValidation('#ParentRelatioship');
            //        return isValid;
            //    }
            //    if ($("#ParentRelatioship").val() == "6") {
            //        if ($("#ParentRelatioshipOther").val().trim() == "") {
            //            isValid = false;
            //            customAlert("Other relatioship is required. ");
            //            plainValidation('#ParentRelatioshipOther');
            //            return isValid;
            //        }
            //    }
            //}
            //if (!$('#chk input[type="checkbox"]').is(':checked')) {
            //    isValid = false;
            //    customAlert("Please select at least one federal or other Assistance. ");
            //    return isValid;
            //}
            //if ($("#PrimaryLanguauge").val() == null) {
            //    isValid = false;
            //    customAlert("Primarylanguauge is required. ");
            //    plainValidation('#PrimaryLanguauge');
            //    return isValid;
            //}
            //if ($("#PrimaryLanguauge").val() == 12) {
            //    if ($("#OtherLanguageDetail").val().trim() == "") {
            //        isValid = false;
            //        customAlert("Other Language Detail is required. ");
            //        plainValidation('#OtherLanguageDetail');
            //        return isValid;
            //    }
            //}
            //if (!$("input:radio[name='Interpretor']").is(":checked")) {
            //    isValid = false;
            //    customAlert("Interpretor is required. ");
            //    return isValid;
            //}
            //if ($("#InsuranceOption").val() == null) {
            //    isValid = false;
            //    customAlert("Primary insurance is required. ");
            //    plainValidation('#InsuranceOption');
            //    return isValid;
            //}
            //if ($("#MedicalNote").val() == "") {
            //    isValid = false;
            //    customAlert("Insurance notes is required .");
            //    plainValidation('#MedicalNote');
            //    return isValid;
            //}

            removeclasss();
            $('#FamilyRecord').addClass("active");
            $('#FamilyRecord').addClass("in");
            $('#myTab li:eq(2) a').tab('show');
            //if ($('#ParentID').val() != "0" && $('#ParentID1').val() != "0") {
            //    if ($('#FamilyType').prop('checked')) {
            //        $('#Pparentid1').removeClass("panel-collapsed");
            //        $('#pparentid2').removeClass("panel-collapsed");
            //        $('#Pparentid1').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            //        $('#pparentid2').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            //        $('.panel-body2').attr('style', 'display: block;');
            //        $('.panel-body1').attr('style', 'display: block;');
            //        $(".panel1").show();
            //        $(".panel2").show();
            //        isValid = false;
            //        customAlert("Single parent family selected. Please delete one parent from family.");
            //        removeclasss();
            //        $('#FamilyRecord').addClass("active");
            //        $('#FamilyRecord').addClass("in");
            //        $('#myTab li:eq(2) a').tab('show');
            //        return isValid;
            //    }

            //}
            return isValid;
        }



        function isValidscreening(ele, screenCommand) {
            isValid = true;
            cleanValidation();
            if ($('#Street')[0].value.trim() == "") {

                isValid = false;
                customAlert("Address is required. ");
                activehouseholdtab();
                plainValidation('#Street');
                return isValid;
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip Code is required. ");
                plainValidation('#ZipCode');
                activehouseholdtab();
                return isValid;
            }
            if ($('#City')[0].value.trim() == "") {
                isValid = false;
                customAlert("City is required. ");
                plainValidation('#City');
                activehouseholdtab();
                return isValid;
            }
            if ($('#State')[0].value.trim() == "") {
                isValid = false;
                customAlert("State is required. ");
                plainValidation('#State');
                activehouseholdtab();
                return isValid;
            }
            if ($('#County')[0].value.trim() == "") {
                isValid = false;
                customAlert("County is required. ");
                plainValidation('#County');
                activehouseholdtab();
                return isValid;
            }
            if ($('#Pfirstname')[0].value.trim() == "") {
                isValid = false;
                activefamilytab();
                customAlert("First name is required. ");
                plainValidation('#Pfirstname');
                return isValid;
            }
            if ($('#Plastname')[0].value.trim() == "") {
                isValid = false;
                activefamilytab();
                customAlert("Last name is required. ");
                plainValidation('#Plastname');
                return isValid;
            }
            if ($('#FamilyType1').prop("checked")) {

                if ($('#P1firstname')[0].value.trim() == "") {
                    isValid = false;
                    activefamilytab();
                    customAlert("First name is required. ");
                    plainValidation('#P1firstname');
                    return isValid;
                }
                if ($('#P1lastname')[0].value.trim() == "") {
                    isValid = false;
                    activefamilytab();
                    customAlert("Last name is required. ");
                    plainValidation('#P1lastname');
                    return isValid;
                }
            }

            if ($('#Cfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Cfirstname');
                $('#ApplicationScreening').modal('toggle');
                return isValid;
            }
            if ($('#Clastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Clastname');
                $('#ApplicationScreening').modal('toggle');
                return isValid;
            }
            if ($('#CDentalhome').val() == "") {
                isValid = false;
                customAlert("Dental Home is required. ");
                plainValidation('#CDentalhome');
                $('#ApplicationScreening').modal('toggle');
                return isValid;
            }

            if ($('#CDentalhome').val() == 2 || $('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4) {
                if ($('#Dentist').val() == 0) {
                    isValid = false;
                    customAlert("Dental Center is required. ");
                    plainValidation('#CDentist');
                    $('#ApplicationScreening').modal('toggle');
                    return isValid;
                }
            }
            if ($('#CDOB')[0].value.trim() == "") {
                isValid = false;
                customAlert("Date of birth is required. ");
                $('#ApplicationScreening').modal('toggle');
                plainValidation('#CDOB');
                return isValid;
            }
            if ($('#CDOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#CDOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth Can't be greater than current date. ");
                    plainValidation('#CDOB');
                    $('#ApplicationScreening').modal('toggle');
                    return isValid;
                }
                else if (!validatedateChild($('#CDOB'))) {
                    isValid = false;
                    plainValidation('#CDOB');
                    $('#ApplicationScreening').modal('toggle');
                    return isValid;
                }
            }
            if (!$("input:radio[name='CGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                $('#ApplicationScreening').modal('toggle');
                return isValid;
            }



            if (screenCommand == 1) {



                //Checks for Approval of Screening by parent//

                var allowScr = $('#ApplicationScreening').find('#AllowScreening');

                if (allowScr.find('#ScreenAcc').find('#ScreeningAccept').val() == '' && !allowScr.find('#ScreenAcc').find('#ScreeningAcceptance').is(':visible')
                    && !allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked')) {
                    isValid = false;
                    customAlert("Permission to screening form is required.");
                    //$('#ApplicationScreening').modal('toggle');
                    plainValidation('#ScreeningAccept');
                    return isValid;
                }

                if (!allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked')

                    && (allowScr.find('#ScreenAcc').find('#ScreeningAccept').val() == '' && !allowScr.find('#ScreenAcc').find('#ScreeningAcceptance').is(':visible'))) {
                    isValid = false;
                    customAlert("Please select parent");
                    allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').focus();
                    //   plainValidation('#ScreeningAcceptance');
                    return isValid;
                }

                if (allowScr.find('#ParentName').find('input:radio[name=radioScreeningParent]').is(':checked') && ($('#ParentSignature').val() == null || $('#ParentSignature').val() == '')) {
                    isValid = false;
                    customAlert("Parent signature is required.");
                    plainValidation('#scrSig');
                    $('.scr-signature-div').show('slow');
                    return isValid;
                }





                debugger;
                var errScr = 0;
                allowScr.find('.screening-approval-div').each(function (i, scr) {
                    debugger;
                    if (!$(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"]').is(':checked')) {
                        isValid = false;
                        customAlert('Please select Yes or No to allow screening.');
                        plainValidation($(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"]'));
                        errScr++;

                    }
                    else if (

                        $(scr).find('input:radio[name="ScreeningList[' + i + '].Approved"][value=1]').is(':checked') &&
                        $(scr).find('input:file[name="ScreeningList[' + i + '].ApprovedFile"]').val() == '' &&
                        !$(scr).find('#Allow_' + i).is(':visible') &&
                        !$(scr).find('input:checkbox[name="ScreeningList[' + i + '].NoDocument"]').is(':checked')) {
                        isValid = false;
                        customAlert('Please upload document for screening.');
                        plainValidation($(scr).find('input:file[name="ScreeningList[' + i + '].ApprovedFile"]'));
                        errScr++;

                    }

                    if (errScr > 0) {
                        return isValid;
                    }
                    else {

                    }
                });


                if (errScr > 0) {
                    return false;
                }
            }


            //var scrtabarr = [];
            //$('#ScreeningDiv').find('#myTab').find('li').filter(function () {
            //    return $(this).is(':visible') == true && $(this).index()>0;
            //}).each(function () {
            //    scrtabarr.push($(this).attr('id').substr(-1));
            //});

            //if (scrtabarr.length > 0)
            //{
            //    var qnerror = 0;


            //    for (var i = 0; i < scrtabarr.length; i++)
            //    {
            //        $.each($('#ScreeningDiv').find('#myTabContent').find('#add' + scrtabarr[i]+'').find('.qn-div'), function (j, qn) {

            //            var ackey = $(qn).children('label').attr('accesskey');

            //            if (ackey == '1' && j == 0) {
            //                if ($(qn).find('select').val() == null || $(qn).find('select').val() == '' || $(qn).find('select').val() == '0') {
            //                    qnerror++;
            //                    plainValidation($(qn).find('select'));
            //                }
            //            }

            //            else
            //            {
            //                var supLength=$(qn).children('label').contents().filter(function(){

            //                    return $(this)[0].nodeName=='SUP';}).length;

            //                if(supLength>0){


            //                    var nodeName = $(qn).find('.custscreeningquestin')[0].nodeName;

            //                    switch(nodeName)
            //                    {
            //                        case 'SELECT':
            //                            if($(qn).find('.custscreeningquestin').val()==null || $(qn).find('.custscreeningquestin').val()=='' || $(qn).find('.custscreeningquestin').val()=='0')
            //                            {
            //                                qnerror++;
            //                                plainValidation($(qn).find('.custscreeningquestin'));
            //                            }
            //                            break;

            //                        case 'INPUT':
            //                            if ($(qn).find('.custscreeningquestin').val() == null || $(qn).find('.custscreeningquestin').val() == '' || $(qn).find('.custscreeningquestin').val() == undefined) {
            //                                qnerror++;
            //                                plainValidation($(qn).find('.custscreeningquestin'));
            //                            }
            //                            break;




            //                    }
            //                }



            //            }



            //        });
            //        if (qnerror > 0) {

            //            $('#ScreeningDiv').find('#myTab').find('#tabid' + scrtabarr[i] + '').children('a').trigger('click');
            //            return false;
            //        }

            //    }




            //    //$.each(scrtabarr, function (tab, i) {

            //    //    $('#ScreeningDiv').find('#myTabContent').find('#add' + tab).find('.qn-div').each(function (qn,j) {

            //    //        var ackey=$(an).children('label first-child').attr('accesskey');

            //    //        if (ackey == '1' && j == 0) {
            //    //            if ($(qn).find('select').val() == null || $(qn).find('select').val() == '' || $(qn).find('select').val() == '0') {
            //    //                qnerror++;
            //    //                plainValidation($(qn).find('select'));
            //    //            }
            //    //        }


            //    //    });



            //    //});

            //    if(qnerror>0)
            //    {
            //        customAlert('Mandatory fields are required.');
            //        return false;

            //    }
            //}




            //End

            if (screenCommand == 2)
            {
                debugger;
                cleanValidation();
                var scrtabarr = [];

                var qnerror = 0;

                var tabid = $(ele).closest('.tab-pane').attr('id');

                $.each($('#ScreeningDiv').find('#myTabContent').find('#' + tabid).find('.qn-div'), function (j, qn) {

                    var ackey = $(qn).children('label').attr('accesskey');

                    if (ackey == '1' && j == 0) {
                        if ($(qn).find('select').val() == null || $(qn).find('select').val() == '' || $(qn).find('select').val() == '0') {
                            qnerror++;
                            plainValidation($(qn).find('select'));
                        }
                    }

                    else {
                        var supLength = $(qn).children('label').contents().filter(function () {

                            return $(this)[0].nodeName == 'SUP';
                        }).length;

                        if (supLength > 0) {


                            var nodeName = $(qn).find('.custscreeningquestin')[0].nodeName;

                            switch (nodeName) {
                                case 'SELECT':
                                    if ($(qn).find('.custscreeningquestin').val() == null || $(qn).find('.custscreeningquestin').val() == '' || $(qn).find('.custscreeningquestin').val() == '0') {
                                        qnerror++;
                                        plainValidation($(qn).find('.custscreeningquestin'));
                                    }
                                    break;

                                case 'INPUT':
                                    if ($(qn).find('.custscreeningquestin').val() == null || $(qn).find('.custscreeningquestin').val() == '' || $(qn).find('.custscreeningquestin').val() == undefined) {
                                        qnerror++;
                                        plainValidation($(qn).find('.custscreeningquestin'));
                                    }
                                    break;




                            }
                        }



                    }



                });
                if (qnerror > 0) {
                    customAlert('Mandatory fields are required.');
                    // $('#ScreeningDiv').find('#myTab').find('#tabid' + scrtabarr[i] + '').children('a').trigger('click');
                    return false;
                }






                //$.each(scrtabarr, function (tab, i) {

                //    $('#ScreeningDiv').find('#myTabContent').find('#add' + tab).find('.qn-div').each(function (qn,j) {

                //        var ackey=$(an).children('label first-child').attr('accesskey');

                //        if (ackey == '1' && j == 0) {
                //            if ($(qn).find('select').val() == null || $(qn).find('select').val() == '' || $(qn).find('select').val() == '0') {
                //                qnerror++;
                //                plainValidation($(qn).find('select'));
                //            }
                //        }


                //    });



                //});

                if (qnerror > 0) {
                    customAlert('Mandatory fields are required.');
                    return false;

                }




            }



            if (ssnoriginalvalue != null) {
                if (ssnoriginalvalue != $('#CSSN').val()) {
                    if ($('#CSSN').val() == "") {
                        $('#CSSN').val(ssnoriginalvalue);
                    }
                    else if ($('#CSSN').val().indexOf("*") > 0) {
                        $('#CSSN').val(ssnoriginalvalue);
                    }
                }
            }
            if (Parent1ssn != null) {
                if (Parent1ssn != $('#ParentSSN1').val()) {
                    if ($('#ParentSSN1').val() == "") {
                        $('#ParentSSN1').val(Parent1ssn);
                    }
                    else if ($('#ParentSSN1').val().indexOf("*") > 0) {
                        $('#ParentSSN1').val(Parent1ssn);
                    }
                }
            }
            if (Parent2ssn != null) {
                if (Parent2ssn != $('#ParentSSN2').val()) {
                    if ($('#ParentSSN2').val() == "") {
                        $('#ParentSSN2').val(Parent1ssn);
                    }
                    else if ($('#ParentSSN2').val().indexOf("8") > 0) {
                        $('#ParentSSN2').val(Parent1ssn);
                    }
                }
            }
            $('#spinner').show();
            $('#ApplicationStatusChild').val(1);
            $('#ApplicationStatusParent1').val(1);
            $('#ApplicationStatusParent2').val(0);
            if ($('#Street')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#City')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#State')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#County')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if (!$('#FamilyType').prop("checked") && !$('#FamilyType1').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if (!$('#HomeType1').prop("checked") && !$('#HomeType2').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#ParentRelatioship').val() == "") {
                SetApplicationStatus();
                SetApplicationStatusParent2(0);
            }
            else if ($('#ParentRelatioship').val() == "6" && $('#ParentRelatioshipOther').val() == "") {
                SetApplicationStatus();
            }

            if ($('#FamilyType1').prop("checked")) {
                if (!$('#Married').prop("checked") && !$('#Married1').prop("checked")) {
                    SetApplicationStatus(0);
                    SetApplicationStatusParent2(0);
                }

            }

            if (!$('#chk input[type="checkbox"]').is(':checked')) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#PrimaryLanguauge').val() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            else if ($('#PrimaryLanguauge').val() == "12" && $('#OtherLanguageDetail').val() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }

            if (!$('#Interpretor').prop("checked") && !$('#Interpretor1').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            //25082016 Parent1
            if ($('#Pfirstname')[0].value.trim() == "") {
                SetApplicationStatus(0);
            }
            if ($('#PDOB')[0].value.trim() == "") {
                SetApplicationStatus(0);
            }
            if ($('#Pemailid')[0].value.trim() == "" && !$('#Noemail1').prop("checked")) {
                SetApplicationStatus(0);
            }
            if ($("#DdlPRole").val() == null || $("#DdlPRole").val() == "") {
                SetApplicationStatus(0);
            }
            if ($("#DdlPDegreeEarned").val() == null || $("#DdlPDegreeEarned").val() == "") {
                SetApplicationStatus(0);
            }
            if (!$('.Pfemale').prop("checked") && !$('.Pmale').prop("checked") && !$('.Pother').prop("checked")) {
                SetApplicationStatus(0);
            }
            if (!$('#PMilitaryStatus1').prop("checked") && !$('#PMilitaryStatus2').prop("checked") && !$('PMilitaryStatus3').prop("checked")) {
                SetApplicationStatus(0);
            }
            if ($(".Pfemale").prop("checked")) {
                if (!$('#Pquestionyes').prop("checked") && !$('#Pquestionno').prop("checked")) {
                    SetApplicationStatus(0);
                }
            }
            if ($('#Pregnantmotherenrolled').prop("checked")) {
                if ($("#Pregnantmotherprimaryinsurance").val() == null || $("#Pregnantmotherprimaryinsurance").val() == "") {
                    SetApplicationStatus(0);
                }
                if ($("#TrimesterEnrolled").val() == null || $("#TrimesterEnrolled").val() == "") {
                    SetApplicationStatus(0);
                }

                if ($("#MedicalhomePreg1").val() == null || $("#MedicalhomePreg1").val() == "") {
                    SetApplicationStatus(0);
                }
                else if (($("#MedicalhomePreg1").val() == "2" || $("#MedicalhomePreg1").val() == "3" || $("#MedicalhomePreg1").val() == "4") && $("#CDoctorP1").val().trim() == "") {
                    SetApplicationStatus(0);
                }
                if (!$('#PCurrentlyWorking').prop("checked") && !$('#PCurrentlyWorking1').prop("checked")) {
                    SetApplicationStatus(0);
                }
                if (!$('#PEnrollment').prop("checked") && !$('#PEnrollment1').prop("checked")) {
                    SetApplicationStatus(0);
                }
                if ($('#PCurrentlyWorking').prop("checked") && $('#Span1').text() == "") {
                    SetApplicationStatus(0);
                }
                if ($('#gridphone > tbody tr').length > 0) {
                    var Phonetype = $("#gridphone > tbody tr:first").find('td:eq(0) :input');
                    var PrimaryPhone = $("#gridphone > tbody tr:first").find('td:eq(1) :input[type="text"]');
                    if ($(Phonetype).val() == null) {
                        SetApplicationStatus(0);
                    }
                    if ($(PrimaryPhone).val().trim() == "") {
                        SetApplicationStatus(0);
                    }
                    var length = 0;
                    $('#gridphone > tbody tr').each(function () {
                        if (length == 0) {
                            length = $(this).find('td:eq(2) :checkbox:checked').length;
                            if ($(this).find('td:eq(0) :input').val() == null)
                                length = 0;
                            if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                                length = 0;
                        }
                    });
                    if (length == 0) {
                        SetApplicationStatus(0);
                    }
                }
                if ($('#DdlPRole').val() == 6 && $('#Pnotesother').val().trim() == "") {
                    SetApplicationStatus(0);
                }
            }


            if ($('#FamilyType1').prop("checked")) {
                $('#ApplicationStatusParent2').val(1);
                if ($('#P1firstname')[0].value.trim() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($('#P1DOB')[0].value.trim() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($('#P1emailid')[0].value.trim() == "" && !$('#Noemail2').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if ($("#DdlP1Role").val() == null || $("#DdlP1Role").val() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($("#DdlP1DegreeEarned").val() == null || $("#DdlP1DegreeEarned").val() == "") {
                    SetApplicationStatusParent2(0);
                }
                if (!$('.P1female').prop("checked") && !$('.P1male').prop("checked") && !$('.P1other').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if (!$('#P1MilitaryStatus1').prop("checked") && !$('#P1MilitaryStatus2').prop("checked") && !$('P1MilitaryStatus3').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if ($(".P1female").prop("checked")) {
                    if (!$('#Pquestionyes1').prop("checked") && !$('#Pquestionno1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                }
                if ($('#PregnantmotherenrolledP1').prop("checked")) {
                    if ($("#Pregnantmotherprimaryinsurance1").val() == null || $("#Pregnantmotherprimaryinsurance1").val() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if ($("#TrimesterEnrolled1").val() == null || $("#TrimesterEnrolled1").val() == "") {
                        SetApplicationStatusParent2(0);
                    }

                    if ($("#MedicalhomePreg2").val() == null || $("#MedicalhomePreg2").val() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    else if (($("#MedicalhomePreg2").val() == "2" || $("#MedicalhomePreg2").val() == "3" || $("#MedicalhomePreg2").val() == "4") && $("#CDoctorP2").val().trim() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if (!$('#P1CurrentlyWorking').prop("checked") && !$('#P1CurrentlyWorking1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                    if (!$('#P1Enrollment').prop("checked") && !$('#P1Enrollment1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                    if ($('#P1CurrentlyWorking').prop("checked") && $('#Span1P2').text() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if ($('#gridphone1 > tbody tr').length > 0) {
                        var Phonetype = $("#gridphone1 > tbody tr:first").find('td:eq(0) :input');
                        var PrimaryPhone = $("#gridphone1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                        if ($(Phonetype).val() == null) {
                            SetApplicationStatusParent2(0);
                        }
                        if ($(PrimaryPhone).val().trim() == "") {
                            SetApplicationStatusParent2(0);
                        }
                        var length = 0;
                        $('#gridphone1 > tbody tr').each(function () {
                            if (length == 0) {
                                length = $(this).find('td:eq(2) :checkbox:checked').length;
                                if ($(this).find('td:eq(0) :input').val() == null)
                                    length = 0;
                                if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                                    length = 0;
                            }
                        });
                        if (length == 0) {
                            SetApplicationStatusParent2(0);
                        }
                    }
                    if ($('#DdlP1Role').val() == 6 && $('#P1notesother').val().trim() == "") {
                        SetApplicationStatusParent2(0);
                    }
                }
            }
            if ($('#Cfirstname').val() != "" && $('#Clastname').val() != "" && $('#CDOB').val() != "") {
                //25082016
                $('#ApplicationStatusChild').val(1);
                if ($('#CDOB').val().trim() == "") {
                    SetApplicationStatuschild(0);
                }
                //if ($('#DOBverifiedBy').val() == "" || $('#DOBverifiedBy').val() == null) {
                //    SetApplicationStatuschild(0);
                //}
                if (!$('#CGenderfemale').prop("checked") && !$('#CGendermale').prop("checked") && !$('#CGenderother').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CRace').val() == "" || $('#CRace').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CEthnicity').val() == "" || $('#CEthnicity').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#SchoolDistrict').val() == "" || $('#SchoolDistrict').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#Medicalhome').val() == "" || $('#Medicalhome').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#Medicalhome').val() == 2 || $('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4) {
                    if ($('#Doctor').val() == 0) {
                        SetApplicationStatuschild(0);
                    }
                }
                if ($('#CDentalhome').val() == "" || $('#CDentalhome').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CDentalhome').val() == 2 || $('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4) {
                    if ($('#Dentist').val() == 0) {
                        // SetApplicationStatuschild(0);
                    }
                }
                if ($('#InsuranceOption').val() == "" || $('#InsuranceOption').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#IsFoster1').prop("checked") && !$('#IsFoster2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }

                if (!$('#Inwalfareagency1').prop("checked") && !$('#Inwalfareagency2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#InDualcustody1').prop("checked") && !$('#InDualcustody2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#CParentdisable1').prop("checked") && !$('#CParentdisable2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if ($('#ImmunizationService').val() == "" || $('#ImmunizationService').val() == null) {
                    SetApplicationStatuschild(0);
                }
                //if ($('#BMIStatus').val() == "" || $('#BMIStatus').val() == null) {
                //    SetApplicationStatuschild(0);
                //}
                if (!$('#MedicalService1').prop("checked") && !$('#MedicalService2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }

                if ($('#ApplicationStatusParent1').val() == 0) {
                    $('#ApplicationStatusChild').val(0);
                    //      $('#ApplicationStatusParent2').val(0);
                }
            }


            var myform = document.getElementById("form1");
            var fd = new FormData(myform);
            $('#form1 input:file').each(function (a, b) {
                var fileInput = $(this);
                fd.append($(fileInput).attr("name"), fileInput);
            });

            fd.append('saveCommand', screenCommand);

            $.ajax({
                url: HostedDir + "/AgencyUser/SaveScreening",
                type: "POST",
                data: fd,
                dataType: "json",
                secureuri: false,
                processData: false,
                contentType: false,
                async: true,
                success: function (Data) {

                    if (Data.message == 2) {
                        customAlert("Record saved successfully.");
                        EditChild(Data.list);
                        SetCustomData(Data.list);
                        $('#ApplicationScreening').modal('hide');
                        $('#spinner').hide();
                    }
                    else {

                        customAlert("Error occurred. Please try again later.");
                        $('#spinner').hide();

                    }


                }
                   , error: function (Data) {

                       customAlert("Session Ended Log Onto The System Again.");
                       setTimeout(function () {
                           window.location.href = HostedDir + '/login/Loginagency';
                       }, 2000);
                   }
            });




        }
        function isValidnotall() {

            isValid = true;
            cleanValidation();
            if ($('#Street')[0].value.trim() == "") {

                isValid = false;
                customAlert("Address is required. ");
                activehouseholdtab();
                plainValidation('#Street');
                return isValid;
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip Code is required. ");
                plainValidation('#ZipCode');
                activehouseholdtab();
                return isValid;
            }
            if ($('#City')[0].value.trim() == "") {
                isValid = false;
                customAlert("City is required. ");
                plainValidation('#City');
                activehouseholdtab();
                return isValid;
            }
            if ($('#State')[0].value.trim() == "") {
                isValid = false;
                customAlert("State is required. ");
                plainValidation('#State');
                activehouseholdtab();
                return isValid;
            }
            if ($('#County')[0].value.trim() == "") {
                isValid = false;
                customAlert("County is required. ");
                plainValidation('#County');
                activehouseholdtab();
                return isValid;
            }
            if ($('#Pfirstname')[0].value.trim() == "") {
                isValid = false;
                activefamilytab();
                customAlert("First name is required. ");
                plainValidation('#Pfirstname');
                return isValid;
            }
            if ($('#Plastname')[0].value.trim() == "") {
                isValid = false;
                activefamilytab();
                customAlert("Last name is required. ");
                plainValidation('#Plastname');
                return isValid;
            }
            if ($('#FamilyType1').prop("checked")) {

                if ($('#P1firstname')[0].value.trim() == "") {
                    isValid = false;
                    activefamilytab();
                    customAlert("First name is required. ");
                    plainValidation('#P1firstname');
                    return isValid;
                }
                if ($('#P1lastname')[0].value.trim() == "") {
                    isValid = false;
                    activefamilytab();
                    customAlert("Last name is required. ");
                    plainValidation('#P1lastname');
                    return isValid;
                }
            }
            if ($('#Cfirstname')[0].value.trim() != "") {
                if ($('#Cfirstname')[0].value.trim() == "") {
                    isValid = false;
                    customAlert("First name is required. ");
                    plainValidation('#Cfirstname');
                    return isValid;
                }
                if ($('#Clastname')[0].value.trim() == "") {
                    isValid = false;
                    customAlert("Last name is required. ");
                    plainValidation('#Clastname');
                    return isValid;
                }
                if ($('#CDOB')[0].value.trim() == "") {
                    isValid = false;
                    customAlert("Date of birth is required. ");
                    plainValidation('#CDOB');
                    return isValid;
                }
                if ($('#CDOB')[0].value.trim() != "") {
                    var today = new Date();
                    if (Date.parse($("#CDOB").val()) > today) {
                        isValid = false;
                        customAlert("Date of birth Can't be greater than current date. ");
                        plainValidation('#CDOB');
                        return isValid;
                    }
                    else if (!validatedateChild($('#CDOB'))) {
                        isValid = false;
                        plainValidation('#CDOB');
                        return isValid;
                    }
                }
                if (!$("input:radio[name='CGender']").is(":checked")) {
                    isValid = false;
                    customAlert("Gender is required. ");
                    return isValid;
                }
            }
            if (ssnoriginalvalue != null) {
                if (ssnoriginalvalue != $('#CSSN').val()) {
                    if ($('#CSSN').val() == "") {
                        $('#CSSN').val(ssnoriginalvalue);
                    }
                    else if ($('#CSSN').val().indexOf("*") > 0) {
                        $('#CSSN').val(ssnoriginalvalue);
                    }
                }
            }
            if (Parent1ssn != null) {
                if (Parent1ssn != $('#ParentSSN1').val()) {
                    if ($('#ParentSSN1').val() == "") {
                        $('#ParentSSN1').val(Parent1ssn);
                    }
                    else if ($('#ParentSSN1').val().indexOf("*") > 0) {
                        $('#ParentSSN1').val(Parent1ssn);
                    }
                }
            }
            if (Parent2ssn != null) {
                if (Parent2ssn != $('#ParentSSN2').val()) {
                    if ($('#ParentSSN2').val() == "") {
                        $('#ParentSSN2').val(Parent1ssn);
                    }
                    else if ($('#ParentSSN2').val().indexOf("8") > 0) {
                        $('#ParentSSN2').val(Parent1ssn);
                    }
                }
            }
            $('#spinner').show();
            $('#ApplicationStatusChild').val(1);
            $('#ApplicationStatusParent1').val(1);
            $('#ApplicationStatusParent2').val(0);
            if ($('#Street')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#City')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#State')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#County')[0].value.trim() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if (!$('#FamilyType').prop("checked") && !$('#FamilyType1').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if (!$('#HomeType1').prop("checked") && !$('#HomeType2').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            //if ($('#ParentRelatioship').val() == "") {
            //  SetApplicationStatus();
            //   SetApplicationStatusParent2(0);
            // }
            // else if ($('#ParentRelatioship').val() == "6" && $('#ParentRelatioshipOther').val() == "") {
            //      SetApplicationStatus();
            //  }

            if ($('#FamilyType1').prop("checked")) {
                if (!$('#Married').prop("checked") && !$('#Married1').prop("checked")) {
                    SetApplicationStatus(0);
                    SetApplicationStatusParent2(0);
                }

            }

            if (!$('#chk input[type="checkbox"]').is(':checked')) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            if ($('#PrimaryLanguauge').val() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            else if ($('#PrimaryLanguauge').val() == "12" && $('#OtherLanguageDetail').val() == "") {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }

            if (!$('#Interpretor').prop("checked") && !$('#Interpretor1').prop("checked")) {
                SetApplicationStatus(0);
                SetApplicationStatusParent2(0);
            }
            //25082016 Parent1
            if ($('#Pfirstname')[0].value.trim() == "") {
                SetApplicationStatus(0);
            }
            if ($('#PDOB')[0].value.trim() == "") {
                SetApplicationStatus(0);
            }
            if ($('#Pemailid')[0].value.trim() == "" && !$('#Noemail1').prop("checked")) {
                SetApplicationStatus(0);
            }
            if ($("#DdlPRole").val() == null || $("#DdlPRole").val() == "") {
                SetApplicationStatus(0);
            }
            if ($("#DdlPDegreeEarned").val() == null || $("#DdlPDegreeEarned").val() == "") {
                SetApplicationStatus(0);
            }
            if (!$('.Pfemale').prop("checked") && !$('.Pmale').prop("checked") && !$('.Pother').prop("checked")) {
                SetApplicationStatus(0);
            }
            if (!$('#PMilitaryStatus1').prop("checked") && !$('#PMilitaryStatus2').prop("checked") && !$('PMilitaryStatus3').prop("checked")) {
                SetApplicationStatus(0);
            }

            //if (!$("input:radio[name='PPolicyCouncil']").is(":checked")) {
            //    SetApplicationStatus(0);
            //}

            if ($(".Pfemale").prop("checked")) {
                if (!$('#Pquestionyes').prop("checked") && !$('#Pquestionno').prop("checked")) {
                    SetApplicationStatus(0);
                }
            }
            if ($('#Pregnantmotherenrolled').prop("checked")) {
                if ($("#Pregnantmotherprimaryinsurance").val() == null || $("#Pregnantmotherprimaryinsurance").val() == "") {
                    SetApplicationStatus(0);
                }
                if ($("#TrimesterEnrolled").val() == null || $("#TrimesterEnrolled").val() == "") {
                    SetApplicationStatus(0);
                }

                if ($("#MedicalhomePreg1").val() == null || $("#MedicalhomePreg1").val() == "") {
                    SetApplicationStatus(0);
                }
                else if (($("#MedicalhomePreg1").val() == "2" || $("#MedicalhomePreg1").val() == "3" || $("#MedicalhomePreg1").val() == "4") && $("#CDoctorP1").val().trim() == "") {
                    SetApplicationStatus(0);
                }
                if (!$('#PCurrentlyWorking').prop("checked") && !$('#PCurrentlyWorking1').prop("checked")) {
                    SetApplicationStatus(0);
                }
                if (!$('#PEnrollment').prop("checked") && !$('#PEnrollment1').prop("checked")) {
                    SetApplicationStatus(0);
                }
                if ($('#PCurrentlyWorking').prop("checked") && $('#Span1').text() == "") {
                    SetApplicationStatus(0);
                }
                if ($('#gridphone > tbody tr').length > 0) {
                    var Phonetype = $("#gridphone > tbody tr:first").find('td:eq(0) :input');
                    var PrimaryPhone = $("#gridphone > tbody tr:first").find('td:eq(1) :input[type="text"]');
                    if ($(Phonetype).val() == null) {
                        SetApplicationStatus(0);
                    }
                    if ($(PrimaryPhone).val().trim() == "") {
                        SetApplicationStatus(0);
                    }
                    var length = 0;
                    $('#gridphone > tbody tr').each(function () {
                        if (length == 0) {
                            length = $(this).find('td:eq(2) :checkbox:checked').length;
                            if ($(this).find('td:eq(0) :input').val() == null)
                                length = 0;
                            if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                                length = 0;
                        }
                    });
                    if (length == 0) {
                        SetApplicationStatus(0);
                    }
                }
                if ($('#DdlPRole').val() == 6 && $('#Pnotesother').val().trim() == "") {
                    SetApplicationStatus(0);
                }
            }


            if ($('#FamilyType1').prop("checked")) {
                $('#ApplicationStatusParent2').val(1);
                if ($('#P1firstname')[0].value.trim() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($('#P1DOB')[0].value.trim() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($('#P1emailid')[0].value.trim() == "" && !$('#Noemail2').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if ($("#DdlP1Role").val() == null || $("#DdlP1Role").val() == "") {
                    SetApplicationStatusParent2(0);
                }
                if ($("#DdlP1DegreeEarned").val() == null || $("#DdlP1DegreeEarned").val() == "") {
                    SetApplicationStatusParent2(0);
                }
                if (!$('.P1female').prop("checked") && !$('.P1male').prop("checked") && !$('.P1other').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if (!$('#P1MilitaryStatus1').prop("checked") && !$('#P1MilitaryStatus2').prop("checked") && !$('P1MilitaryStatus3').prop("checked")) {
                    SetApplicationStatusParent2(0);
                }
                if ($(".P1female").prop("checked")) {
                    if (!$('#Pquestionyes1').prop("checked") && !$('#Pquestionno1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                }
                if ($('#PregnantmotherenrolledP1').prop("checked")) {
                    if ($("#Pregnantmotherprimaryinsurance1").val() == null || $("#Pregnantmotherprimaryinsurance1").val() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if ($("#TrimesterEnrolled1").val() == null || $("#TrimesterEnrolled1").val() == "") {
                        SetApplicationStatusParent2(0);
                    }

                    if ($("#MedicalhomePreg2").val() == null || $("#MedicalhomePreg2").val() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    else if (($("#MedicalhomePreg2").val() == "2" || $("#MedicalhomePreg2").val() == "3" || $("#MedicalhomePreg2").val() == "4") && $("#CDoctorP2").val().trim() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if (!$('#P1CurrentlyWorking').prop("checked") && !$('#P1CurrentlyWorking1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                    if (!$('#P1Enrollment').prop("checked") && !$('#P1Enrollment1').prop("checked")) {
                        SetApplicationStatusParent2(0);
                    }
                    if ($('#P1CurrentlyWorking').prop("checked") && $('#Span1P2').text() == "") {
                        SetApplicationStatusParent2(0);
                    }
                    if ($('#gridphone1 > tbody tr').length > 0) {
                        var Phonetype = $("#gridphone1 > tbody tr:first").find('td:eq(0) :input');
                        var PrimaryPhone = $("#gridphone1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                        if ($(Phonetype).val() == null) {
                            SetApplicationStatusParent2(0);
                        }
                        if ($(PrimaryPhone).val().trim() == "") {
                            SetApplicationStatusParent2(0);
                        }
                        var length = 0;
                        $('#gridphone1 > tbody tr').each(function () {
                            if (length == 0) {
                                length = $(this).find('td:eq(2) :checkbox:checked').length;
                                if ($(this).find('td:eq(0) :input').val() == null)
                                    length = 0;
                                if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                                    length = 0;
                            }
                        });
                        if (length == 0) {
                            SetApplicationStatusParent2(0);
                        }
                    }
                    if ($('#DdlP1Role').val() == 6 && $('#P1notesother').val().trim() == "") {
                        SetApplicationStatusParent2(0);
                    }
                }
            }
            if ($('#Cfirstname').val() != "" && $('#Clastname').val() != "" && $('#CDOB').val() != "") {
                //25082016
                $('#ApplicationStatusChild').val(1);
                if ($('#CDOB').val().trim() == "") {
                    SetApplicationStatuschild(0);
                }
                //if ($('#DOBverifiedBy').val() == "" || $('#DOBverifiedBy').val() == null) {
                //    SetApplicationStatuschild(0);
                //}
                if (!$('#CGenderfemale').prop("checked") && !$('#CGendermale').prop("checked") && !$('#CGenderother').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CRace').val() == "" || $('#CRace').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CEthnicity').val() == "" || $('#CEthnicity').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#SchoolDistrict').val() == "" || $('#SchoolDistrict').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#Medicalhome').val() == "" || $('#Medicalhome').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#Medicalhome').val() == 2 || $('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4) {
                    if ($('#Doctor').val() == 0) {
                        SetApplicationStatuschild(0);
                    }
                }
                if ($('#CDentalhome').val() == "" || $('#CDentalhome').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if ($('#CDentalhome').val() == 2 || $('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4) {
                    if ($('#Dentist').val() == 0) {
                        SetApplicationStatuschild(0);
                    }
                }
                if ($('#InsuranceOption').val() == "" || $('#InsuranceOption').val() == null) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#IsFoster1').prop("checked") && !$('#IsFoster2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }

                if (!$('#Inwalfareagency1').prop("checked") && !$('#Inwalfareagency2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#InDualcustody1').prop("checked") && !$('#InDualcustody2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if (!$('#CParentdisable1').prop("checked") && !$('#CParentdisable2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
                if ($('#ImmunizationService').val() == "" || $('#ImmunizationService').val() == null) {
                    SetApplicationStatuschild(0);
                }
                //if ($('#BMIStatus').val() == "" || $('#BMIStatus').val() == null) {
                //    SetApplicationStatuschild(0);
                //}
                if (!$('#MedicalService1').prop("checked") && !$('#MedicalService2').prop("checked")) {
                    SetApplicationStatuschild(0);
                }
               // if ($('#InChildCareSubsidy').prop("checked")==false) {
                //    SetApplicationStatuschild(0);
                //}
                //  if ($('#ApplicationStatusParent1').val() == 0) {
                //     $('#ApplicationStatusChild').val(0);
                //       $('#ApplicationStatusParent2').val(0);
                //  }
            }




        }


        function SetApplicationStatus(value) {
            $('#ApplicationStatusParent1').val(value);

        }
        function SetApplicationStatuschild(value) {
            $('#ApplicationStatusChild').val(value);
        }
        function SetApplicationStatusParent2(value) {
            $('#ApplicationStatusParent2').val(value);
        }


        function isValidChildInfo() {
            isValid = true;
            cleanValidation();

            //if (!isValidagencyInfo()) {
            //    isValid = false;
            //    activehouseholdtab();
            //    return isValid;
            //}
            //household check

            if ($('#Street')[0].value.trim() == "") {

                isValid = false;
                customAlert("Address is required. ");
                activehouseholdtab();
                plainValidation('#Street');
                return isValid;
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip Code is required. ");
                plainValidation('#ZipCode');
                activehouseholdtab();
                return isValid;
            }
            if ($('#City')[0].value.trim() == "") {
                isValid = false;
                customAlert("City is required. ");
                plainValidation('#City');
                activehouseholdtab();
                return isValid;
            }
            if ($('#State')[0].value.trim() == "") {
                isValid = false;
                customAlert("State is required. ");
                plainValidation('#State');
                activehouseholdtab();
                return isValid;
            }
            if ($('#County')[0].value.trim() == "") {
                isValid = false;
                customAlert("County is required. ");
                plainValidation('#County');
                activehouseholdtab();
                return isValid;
            }
            if (!$('#AdresssverificationinPaper').prop("checked") && $('#HouseholdId').val() == '0') {
                if ($('#FileaddressAvatar')[0].value.trim() == "") {
                    isValid = false;
                    customAlert("Please upload address verification form. ");
                    plainValidation('#FileaddressAvatar');
                    activehouseholdtab();
                    return isValid;
                }
            }
            else {
                if ($('#HouseholdId').val() != '0' && $('#HFileName').val() == "" && !$('#AdresssverificationinPaper').prop("checked")) {
                    isValid = false;
                    customAlert("Please upload address verification form. ");
                    plainValidation('#FileaddressAvatar');
                    activehouseholdtab();
                    return isValid;
                }

            }
            ///family house hold check
            if (!$("input:radio[name='FamilyType']").is(":checked")) {
                isValid = false;
                customAlert("Family type is required. ");
                activefamilyhouseholdtab();
                return isValid;
            }
            if (!$("input:radio[name='HomeType']").is(":checked")) {
                isValid = false;
                customAlert("Is family Homeless at this time is required. ");
                plainValidation('#HomeType');
                activefamilyhouseholdtab();
                return isValid;
            }
            //if (!$("input:radio[name='RentType']").is(":checked")) {
            //    isValid = false;
            //    customAlert("Rent type is required.");
            //    activefamilyhouseholdtab();
            //    return isValid;
            //}
            if (!$('#chk input[type="checkbox"]').is(':checked')) {
                isValid = false;
                customAlert("Please select at least one federal or other Assistance. ");
                activefamilyhouseholdtab();
                return isValid;
            }
            if ($("#PrimaryLanguauge").val() == null) {
                isValid = false;
                customAlert("Primarylanguauge is required. ");
                plainValidation('#PrimaryLanguauge');
                activefamilyhouseholdtab();
                return isValid;
            }
            if (!$("input:radio[name='Interpretor']").is(":checked")) {
                isValid = false;
                customAlert("Interpretor is required. ");
                activefamilyhouseholdtab();
                return isValid;
            }
            //if ($("#InsuranceOption").val() == null) {
            //    isValid = false;
            //    customAlert("Primary insurance is required. ");
            //    plainValidation('#InsuranceOption');
            //    activefamilyhouseholdtab();
            //    return isValid;
            //}
            //if ($("#MedicalNote").val() == "") {
            //    isValid = false;
            //    customAlert("Insurance notes is required .");
            //    plainValidation('#MedicalNote');
            //    activefamilyhouseholdtab();
            //    return isValid;
            //}
            ////////////////////////////////
            //Parent check
            if (!isValidParentInfo()) {
                isValid = false;
                activefamilytab();
                return isValid;
            }
            /////////
            if ($('#HouseholdId').val() != '0' && $('#Cfirstname').val() == "") {
                isValid = true;
                return isValid;
            }
            if ($('#Cfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Cfirstname');
                return isValid;
            }
            if ($('#Clastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Clastname');
                return isValid;
            }
            //if ($('#CProgramType')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("Program type is required. ");
            //    plainValidation('#CProgramType');
            //    return isValid;
            //}

            //if (!$("input:radio[name='FamilyType']").is(":checked")) {
            //    isValid = false;
            //    customAlert("Family type is required.");
            //    return isValid;
            //}
            //if ($('#CDOB')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("Date of birth is required. ");
            //    plainValidation('#CDOB');
            //    return isValid;
            //}
            if ($('#CDOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#CDOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth Can't be greater than current date. ");
                    plainValidation('#CDOB');
                    return isValid;
                }
            }
            //if ($('#DOBverifiedBy')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("DOB verified by is required. ");
            //    plainValidation('#DOBverifiedBy');
            //    return isValid;
            //}

            if (!$("input:radio[name='CGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }
            if ($('#CRace')[0].value.trim() == "") {
                isValid = false;
                customAlert("Race is required. ");
                plainValidation('#CRace');
                return isValid;
            }

            if ($('#CEthnicity')[0].value.trim() == "") {
                isValid = false;
                customAlert("Ethnicity is required. ");
                plainValidation('#CEthnicity');
                return isValid;
            }
            if ($('#SchoolDistrict')[0].value.trim() == "") {
                isValid = false;
                customAlert("School District is required. ");
                plainValidation('#SchoolDistrict');
                return isValid;
            }


            if ($('#Medicalhome')[0].value.trim() == "") {
                isValid = false;
                customAlert("Medical home is required. ");
                plainValidation('#Medicalhome');
                return isValid;
            }
            if ($('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4) {
                if ($('#Doctor').val() == 0) {
                    isValid = false;
                    customAlert("Doctor name is required. ");
                    plainValidation('#CDoctor');
                    return isValid;
                }
            }
            if ($('#CDentalhome')[0].value.trim() == "") {
                isValid = false;
                customAlert("Dental home is required .");
                plainValidation('#CDentalhome');
                return isValid;
            }
            if ($('#CDentalhome').val() == 2 || $('#CDentalhome').val() == 3) {
                if ($('#Dentist').val() == 0) {
                    isValid = false;
                    customAlert("Dentist name is required. ");
                    plainValidation('#CDentist');
                    return isValid;
                }
            }
            if ($('#ImmunizationService')[0].value.trim() == "") {
                isValid = false;
                customAlert("Immunization service is required. ");
                plainValidation('#ImmunizationService');
                return isValid;
            }
            if ($('#BMIStatus')[0].value.trim() == "") {
                isValid = false;
                customAlert("BMI status is required. ");
                plainValidation('#BMIStatus');
                return isValid;
            }
            if (!$("input:radio[name='MedicalService']").is(":checked")) {
                isValid = false;
                customAlert("Is this child up-to-date on a schedule of age-appropriate health care is required. ");
                return isValid;
            }

            debugger;

            if ($("input:radio[name='MedicalService']").is(":checked") &&
                $("input:radio[name='MedicalService']:checked").val() == '1' &&
                $('#customChecklist').find('input:checkbox[name="PostedPostedPrograms.ProgramID"]:checked').attr('accesskey')=='2'

                )
            {

                var $appScreening = $('#ApplicationScreening');

                var allowScreening = $appScreening.find('#AllowScreening');

                allowScreening.find('.table-main').children('div').each(function (i,scr) {

                    if ($(scr).attr('id') != 'ConsolidateHeading') {
                        if ($(scr).attr('id') == 'ScreenAcc' && $(scr).find('input[type=file]').val() == '') {
                            isValid = false;
                            customAlert('Permission document for screening is required');
                            return isValid;
                        }
                    }

                });

            }



            if (!$("input:radio[name='CParentdisable']").is(":checked")) {
                isValid = false;
                customAlert("Suspected or document of disabilty is required. ");
                return isValid;
            }
            if (!$("input:radio[name='IsFoster']").is(":checked")) {
                isValid = false;
                customAlert("Is foster child is required. ");
                return isValid;
            }
            if (!$("input:radio[name='Inwalfareagency']").is(":checked")) {
                isValid = false;
                customAlert("Is child referred by a child welfare agency is required. ");
                return isValid;
            }
            if (!$("input:radio[name='InDualcustody']").is(":checked")) {
                isValid = false;
                customAlert("Is child a dual custody child is required. ");
                return isValid;
            }

            if (!$('#DobverificationinPaper').prop("checked") && $('#ChildId').val() == '0') {
                if ($('#FiledobRAvatar')[0].value.trim() == "") {
                    isValid = false;
                    customAlert("Please upload DOB verification form. ");
                    plainValidation('#FiledobRAvatar');
                    return isValid;
                }
            }

            else {
                if ($('#ChildId').val() != '0' && $('#DobFileName').val() == "" && !$('#DobverificationinPaper').prop("checked")) {
                    isValid = false;
                    customAlert("Please upload DOB verification form. ");
                    plainValidation('#FiledobRAvatar');
                    return isValid;
                }

            }


            return isValid;
        }


        function activehouseholdtab() {
            removeclasss();
            $('#HouseholdRecord').addClass("active");
            $('#HouseholdRecord').addClass("in");
            $('#myTab li:eq(0) a').tab('show');
        }
        function activefamilyhouseholdtab() {
            removeclasss();
            $('#FamilyHouseholdRecord').addClass("active");
            $('#FamilyHouseholdRecord').addClass("in");
            $('#myTab li:eq(1) a').tab('show');
        }
        function activefamilytab() {
            removeclasss();
            $('#FamilyRecord').addClass("active");
            $('#FamilyRecord').addClass("in");
            $('#myTab li:eq(2) a').tab('show');
        }
        function activechildtab() {
            removeclasss();
            $('#ChildRecord').addClass("active");
            $('#ChildRecord').addClass("in");
            $('#myTab li:eq(3) a').tab('show');
        }
        function isValidEmergencyInfo() {
            var isValid = true;
            cleanValidation();
            if ($('#HouseholdId').val() == '0') {
                isValid = false;
                customAlert("Please add household record. ");
                return isValid;
            }
            if ($('#Efirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Efirstname');
                return isValid;
            }
            if ($('#Elastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Elastname');
                return isValid;
            }
            if ($('#EDOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#EDOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth Can't be greater than current date. ");
                    plainValidation('#EDOB');
                    return isValid;
                }
            }
            if (!$("input:radio[name='EGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }
            if ($('#EEmail')[0].value.trim() != "" && !validateEmail($('#EEmail')[0].value.trim())) {
                isValid = false;
                customAlert("Please enter valid email id. ");
                plainValidation('#EEmail');
                return isValid;
            }
            if ($('#ERelationwithchild').val() == null) {
                isValid = false;
                customAlert("Relation with child is required. ");
                plainValidation('#ERelationwithchild');
                return isValid;
            }
            if ($('#gridphoneE1 > tbody tr').length == 0) {
                isValid = false;
                customAlert("Please add contact no. ");
                return isValid;
            }
            if ($('#gridphoneE1 > tbody tr').length > 0) {
                var Phonetype = $("#gridphoneE1 > tbody tr:first").find('td:eq(0) :input');
                var PrimaryPhone = $("#gridphoneE1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                if ($(Phonetype).val() == null) {
                    isValid = false;
                    customAlert("Phone type is required. ");
                    plainValidation(Phonetype);
                    return isValid;
                }
                if ($(PrimaryPhone).val().trim() == "") {
                    isValid = false;
                    customAlert("Phone no is required .");
                    plainValidation(PrimaryPhone);
                    return isValid;
                }
                var length = 0;
                $('#gridphoneE1 > tbody tr').each(function () {
                    if (length == 0) {
                        length = $(this).find('td:eq(2) :checkbox:checked').length;
                        if ($(this).find('td:eq(0) :input').val() == null)
                            length = 0;
                        if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                            length = 0;
                    }
                });
                if (length == 0) {
                    isValid = false;
                    var checkbox = $("#gridphoneE1 > tbody tr:first").find('td:eq(2) :checkbox');
                    customAlert("Please check one primary no. ");
                    plainValidation(checkbox);
                    return isValid;
                }

            }
            return isValid;
        }


        //Changes on 2Feb2017
        function isValidRestrictedInfo() {
            var IsValid = true;
            cleanValidation();
            if ($('#HouseholdId').val() == '0') {
                isValid = false;
                customAlert("Please add household record. ");
                return isValid;
            }
            if ($('#Rfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Rfirstname');
                return isValid;
            }
            if ($('#Rlastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Rlastname');
                return isValid;
            }
            return IsValid;
        }
        //Changes on 2Feb2017
        function SaveRestrictedInfo() {

            if (isValidRestrictedInfo()) {
                var myform = document.getElementById("form1");
                var fd = new FormData(myform);
                $('#form1 input:file').each(function (a, b) {
                    var fileInput = $(this);
                    fd.append($(fileInput).attr("name"), fileInput);
                });
                $.ajax({
                    url: HostedDir + "/AgencyUser/AddRestrictedAjax",
                    type: "POST",
                    data: fd,
                    dataType: "json",
                    secureuri: false,
                    processData: false,
                    contentType: false,
                    async: true,
                    success: function (response) {
                        if (response != null) {

                            if (response.result == "1") {

                                $('#RAvatar').val("");
                                customAlert("Record added successfully.");
                                emptyrestricted();
                                drawRestrictedgrid();
                            }

                            else if (response.result == "2") {
                                $('#RAvatar').val("");
                                customAlert("Record updated successfully.");

                                // customAlert("Record updated successfully");
                                emptyrestricted();
                                drawRestrictedgrid();

                            }
                            else if (response.result == "3") {
                                customAlert("Record already exists.");
                            }
                            else
                                customAlert(response);
                        }
                    },
                    error: function (response) { alert(response); }
                });
            }
        }




        function ShowHideDivParentTwo1() {
            if ($('#ParentID1').val() != "0") {
                customAlert("Single parent family selected. Please delete one parent from family. ");
                $('#FamilyType').prop('checked', false);
                $('#FamilyType1').prop('checked', true);
                return;
            }
            $('#Pparentid1').removeClass("panel-collapsed");
            $(".panel1").hide();
            $('.panel-body2').attr('style', 'display: block;');
            $('#Pparentid1').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            $(".panel2").show();
            //$('#ParentRelatioship').find('option').remove().end().append('<option value="2">Mother (biological, adoptive, stepmother, etc.)</option>' +
            //    '<option value="1">Father (biological, adoptive, stepfather, etc.)</option><option value="3">Grandparent</option><option value="4">Relative other than grandparent</option>' +
            //   '<option value="6">Other</option> ');
            //$('#ParentRelatioship').val('');
            //$('#divParentrelatioship').hide();
            $('#divParentrelatioship').hide();
            $('#divrelationshipparent').hide();
            $('#married').hide();
        }
        function ShowHideDivParentTwo2() {
            $('#Pparentid1').removeClass("panel-collapsed");
            $('#pparentid2').removeClass("panel-collapsed");
            $('#Pparentid1').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            $('#pparentid2').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            $('.panel-body2').attr('style', 'display: block;');
            $('.panel-body1').attr('style', 'display: block;');
            $(".panel1").show();
            $(".panel2").show();
            $('#P1firstname').val('');
            $('#P1lastname').val('');
            $('#P1midddlename').val('');
            $('#P1DOB').val('');
            $('#P1emailid').val('');
            $('#DdlP1Role').val('');
            $('#DdlP1DegreeEarned').val('');
            $("input:radio[name='P1Gender']").prop("checked", false);
            $("input:radio[name='P1MilitaryStatus']").prop("checked", false);
            $("input:radio[name='P1CurrentlyWorking']").prop("checked", false);
            $("input:radio[name='P1Enrollment']").prop("checked", false);
            $('#gridphone1 > tbody tr').each(function () {
                $(this).find('td:eq(0) :input').val("");
                $(this).find('td:eq(1) :input[type="text"]').val("");
                $(this).find('td:eq(2) :checkbox').prop("checked", false);
                $(this).find('td:eq(3) :input[type="text"]').val("");
                $(this).find('td:eq(4) :checkbox').prop("checked", false);
            }
            );
            $('#ParentRelatioship').find('option').remove().end().append('<option value="1">Parents (biological, adoptive, stepparents, etc.)</option>' +
                '<option value="2">Grandparents</option><option value="3">Relatives other than grandparents</option><option value="4">Foster parents not including relatives</option>' +
               '<option value="6">Other</option> ');
            $('#ParentRelatioship').val('');
            $('#divParentrelatioship').hide();
            $('#divrelationshipparent').show();
            $('#married').show();

        }
        //function showdropdown() {
        //    $("#Dropdown").addClass("visible");
        //    $("#DdlBMIStatus").hide()
        //}
        function showlist() {
            $("#Dropdown").addClass("visible");
            $("#DdlBMIStatus").show()
        }
        var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInput(oInput) {
            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    // alert(oInput.files[0].size/1024/1024);
                    var valid_size = 3 * 1000 * 1000;
                    //   var v = oInput.files[0].size / 1024 / 1024;
                    var v = oInput.files[0].size;

                    // if (v <= 3)
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }
        var _validFileExtensions1 = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInputpdf(oInput) {
            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions1.length; j++) {
                            var sCurExtension = _validFileExtensions1[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                $('#AdresssverificationinPaper').prop("checked", false);
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            customAlertforlongtime("Only (pdf,jpg,jpeg,bmp,gif,png) of file type allowed.");

                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }
        var _validFileExtensions1 = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInputpdf2(oInput) {

            //Changes by Akansha on 12Dec2016
            if (oInput.id == "Physical") {
                $('#AddPhysical').prop("checked", true);
                $('#Physical').show();

            }
            if (oInput.id == "Vision") {
                $('#AddVision').prop("checked", true);
                $('#Vision').show();

            }
            if (oInput.id == "Hearing") {
                $('#AddHearing').prop("checked", true);
                $('#Hearing').show();
            }
            if (oInput.id == "Develop") {
                $('#AddDevelop').prop("checked", true);
                $('#Develop').show();
            }
            if (oInput.id == "Dental") {
                $('#AddDental').prop("checked", true);
                $('#Dental').show();
            }
            if (oInput.id == "Speech") {
                $('#AddSpeech').prop("checked", true);
                $('#Speech').show();
            }

            //End

            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    // alert(oInput.files[0].size / 1024 / 1024);
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    //  var v = oInput.files[0].size / 1024 / 1024;
                    // if (v <= 3)
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions1.length; j++) {
                            var sCurExtension = _validFileExtensions1[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                $('#DobverificationinPaper').prop("checked", false);
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        return false;

                    }

                }
            }
            return true;
        }



        function checkNoDocument(ele) {

            if ($(ele).is(':checked')) {
                $(ele).closest('.cont-sz').find('input[type=file]').val('').prop('disabled', true);
            }
            else {
                $(ele).closest('.cont-sz').find('input[type=file]').val('').prop('disabled', false);

            }


        }

        function clearcustomscreening() {
            $('.customscreeningradioallowed').prop("checked", false);
            $('.customscreeningdocunettag').hide();
            $('.custscreeningquestin').each(function () {

                if ($(this).attr("type") == "text")
                    $(this).val("");
                if ($(this).attr("type") == "radio" || $(this).attr("type") == "checkbox")
                    $(this).prop("checked", false);
                if ($(this).is("select")) {
                    $(this).val("");
                }
            });
            $('iframe').attr("src", "");
            $('iframe').hide();
            $('.customscreeningdiv img').attr("src", HostedDir + "/Content/img/NoImageAvailable.jpg");
            $('.customscreeningdiv').show();
            $('.customtabhide').hide().removeClass("active");
            $('.customtab').removeClass("active").removeClass("in");
            $('.customallowscreening').each(function () {
                $(this).show();
            });

        }

        function SetCustomData(data) {
            var filename = null;
            var fileextension = null;
            var filedata = null;
     
            var programtype = null;

            $('#customChecklist input[type=checkbox]').each(function () {
                if ($(this).prop("checked")) {
                    programtype = $(this).attr("accesskey");
                }
            });

            //if (programtype != null && (programtype == 1 || programtype == 2)) {
            //    $('.customallowscreening').each(function () {
            //        if ($(this).attr("accesskey") == programtype) {
            //            $(this).show();
            //        }
            //        else {
            //            $(this).hide();
            //        }
            //    });
            //}
            //if (data._CustomScreeningAlloweds != null && data._CustomScreeningAlloweds.length > 0) {
            //    for (var i = 0; i < data._CustomScreeningAlloweds.length; i++) {
            //        $('.customscreeningradioallowed').each(function () {
            //            var screeingid = $(this).attr("name").split("@@");
            //            if (data._CustomScreeningAlloweds[i].Screeningid == screeingid[0]) {
            //                if (data._CustomScreeningAlloweds[i].ScreeningAllowed == 1) {
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "101").prop("checked", true);
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "tabid").show();
            //                    //$('#add' + data._CustomScreeningAlloweds[i].ScreeningName ).show();
            //                    if (data._childscreenings != null && data._childscreenings.length > 0) {
            //                        for (var j = 0; j < data._childscreenings.length; j++) {
            //                            if (data._childscreenings[j].Screeningid == data._CustomScreeningAlloweds[i].Screeningid) {
            //                                var cusquesinputid = null;
            //                                if (data._childscreenings[j].optionid != "0")
            //                                    cusquesinputid = data._childscreenings[j].QuestionAcronym + "o" + data._childscreenings[j].optionid;
            //                                else
            //                                    cusquesinputid = data._childscreenings[j].QuestionAcronym;
            //                                if (cusquesinputid != null) {
            //                                    var input = $('#' + cusquesinputid);
            //                                    if ($(input).attr("type") == "text")
            //                                        $(input).val(data._childscreenings[j].Value);
            //                                    if ($(input).attr("type") == "radio" || $(input).attr("type") == "checkbox")
            //                                        $(input).prop("checked", true);
            //                                    if ($(input).is("select")) {
            //                                        $(input).val(data._childscreenings[j].Value);
            //                                    }
            //                                }

            //                                //Code to display document image or pdf
            //                                if (data._childscreenings[j].pdfpath != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').attr("src", HostedDir + data._childscreenings[j].pdfpath);
            //                                }
            //                                else if (data._childscreenings[j].Documentdata != "") {

            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').ZoomCrop(
            //                                         {
            //                                             image: "data:image/png;base64," + data._childscreenings[j].Documentdata,
            //                                             updated: function (size, crop, position) {
            //                                                 console.log(size, crop, position);
            //                                             }
            //                                         });
            //                                }
            //                                ///End of code
            //                            }
            //                        }
            //                    }
            //                }
            //                else {
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "102").prop("checked", true);
            //                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + "tabid").hide();
            //                    if (data._childscreenings != null && data._childscreenings.length > 0) {
            //                        for (var j = 0; j < data._childscreenings.length; j++) {
            //                            if (data._childscreenings[j].Screeningid == data._CustomScreeningAlloweds[i].Screeningid) {
            //                                //Code to display document image or pdf
            //                                if (data._childscreenings[j].pdfpath != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').attr("src", HostedDir + data._childscreenings[j].pdfpath);
            //                                }
            //                                else if (data._childscreenings[j].Documentdata != "") {
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').attr("href", HostedDir + "/Agencyuser/GetcustompdfimageScreening/" + data._CustomScreeningAlloweds[i].Screeningid + "," + $('#ChildId').val());
            //                                    $('#Allow' + data._CustomScreeningAlloweds[i].ScreeningName + data._CustomScreeningAlloweds[i].Screeningid + 'Screening').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').show();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_pdfdocument').hide();
            //                                    $('#' + data._CustomScreeningAlloweds[i].ScreeningName + '_imagedocument').ZoomCrop(
            //                                         {
            //                                             image: "data:image/png;base64," + data._childscreenings[j].Documentdata,
            //                                             updated: function (size, crop, position) {
            //                                                 console.log(size, crop, position);
            //                                             }
            //                                         });
            //                                }
            //                                ///End of code
            //                            }
            //                        }
            //                    }
            //                }
            //            }
            //        });
            //    }
            //}
        }

        var sortOrder = '';
        var sortDirection = '';
        var imgID = '';
        var direction = '';
        var pageSize = 50;
        var requestedPage = 0;
        var pageLoadedFirst = true;
        var totalRecords = 0;
        var numOfPages = 0;
        var StartIndex = 0;
        var LastIndex = 0;
        var search = '';
        var listAgency = null;
        var listEmergencyContact = null;
        var listRestricted = null;
        $('#gridViewAgency > thead > tr > th').click(function () {
            getList();
            bindGridUser(listAgency, $("#gridViewAgency").find('tr')[0].cells.length);
        });

        function getList() {
            $.ajax({
                url: HostedDir + "/AgencyUser/listChildDetails",
                type: "POST",
                data: {
                    Householdid: $('#HouseholdId').val(),
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    getData(data);
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }
        function getData(dataAgency) {
            listAgency = dataAgency;
        }
        function drawgrid() {

            getList();
            bindGridUser(listAgency, $("#gridViewAgency").find('tr')[0].cells.length);

        }

        function bindGridUser(data, num_cols) {
            $('#gridViewAgency > tbody > tr').remove();
            if (data.list.length == 0) {
                $('#div1').show();
            }
            else {
                $('#div1').hide();
                $('#divPaging').show();
                var tbody = $('#gridViewAgency > tbody');
                @*if ('@TempData["Clientresult"]' == 1) {
                    for (var i = 0; i < data.list.length; i++) {
                        var tr = "";
                        tr += "<tr>";
                        tr += "<td><a href='#' onclick='Getchild(this);' accesskey=" + data.list[i].ChildId + ">" + ((typeof (data.list[i].Cfirstname) != 'undefined') && (data.list[i].Cfirstname != null) ? data.list[i].Cfirstname + ' ' + data.list[i].Cmiddlename + ' ' + data.list[i].Clastname : '') + "</td>";
                        if (data.list[i].Imagejson == "")
                            tr += "<td><img height='50' class='roundimage' width='50' src='" + HostedDir + "/Content/img/download.jpg' /></td>";
                        else
                            tr += "<td><img height='50' class='roundimage' width='100' src='data:image/png;base64," + data.list[i].Imagejson + "' /></td>";
                        tr += "<td>" + ((typeof (data.list[i].CDOB) != 'undefined') && (data.list[i].CDOB != null) ? data.list[i].CDOB : '') + "</td>";
                        tr += "<td>" + ((typeof (data.list[i].CGender) != 'undefined') && (data.list[i].CGender != null) ? data.list[i].CGender : '') + "</td>";
                        tr += "<td><a href='#' onclick='deletechild(this);' accesskey=" + data.list[i].ChildId + ">Delete</td>";
                        tr += "</tr>";
                        $('#gridViewAgency > tbody').append(tr);
                        $('#gridViewAgency > tbody tr:first').find('td:eq(0)').find('a').click();


                    }
                }*@
                //else {
                //for (var i = 0; i < data.list.length; i++) {
                //    var tr = "";
                //    tr += "<tr>";
                //    tr += "<td><a href='#' onclick='Getchild(this);' accesskey=" + data.list[i].ChildId + ">" + ((typeof (data.list[i].Cfirstname) != 'undefined') && (data.list[i].Cfirstname != null) ? data.list[i].Cfirstname + ' ' + data.list[i].Cmiddlename + ' ' + data.list[i].Clastname : '') + "</td>";
                //    if (data.list[i].Imagejson == "")
                //        tr += "<td style='text-align: center;'><img height='50' class='roundimage' width='50' src='" + HostedDir + "/Content/img/download.jpg' /></td>";
                //    else
                //        tr += "<td style='text-align: center;'><img height='50' class='roundimage' width='50' src='data:image/png;base64," + data.list[i].Imagejson + "' /></td>";
                //    tr += "<td style='text-align: center;'>" + ((typeof (data.list[i].CDOB) != 'undefined') && (data.list[i].CDOB != null) ? data.list[i].CDOB : '') + "</td>";
                //    tr += "<td style='text-align: center;'>" + ((typeof (data.list[i].CGender) != 'undefined') && (data.list[i].CGender != null) ? data.list[i].CGender : '') + "</td>";
                //    tr += "<td style='text-align: center;'><a href='#' onclick='deletechild(this);' accesskey=" + data.list[i].ChildId + ">Delete</td>";
                //    tr += "</tr>";
                //    $('#gridViewAgency > tbody').append(tr);
                //}
            }
            //}
        }
        function Getchild(value) {

            $.ajax({
                url: HostedDir + "/AgencyUser/Getchild",
                type: "POST",
                data: {
                    Childid: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: true,
                success: function (data) {

                    EditChild(data);
                    SetCustomData(data);

                    $('html,body').animate({
                        scrollTop: 0
                    },
       'slow');

                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });

        }

        function deletechild(value) {
            if ($('#ChildId').val() != "0") {
                customAlert("Cannot delete the record in edit mode.");
                return;
            }
            BootstrapDialog.confirm('Do you want to delete this child ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deletechild",
                        type: "POST",
                        data: {
                            childid: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Child deleted successfully. ");
                                $(value).closest('tr').remove();
                                if ($('#gridViewAgency > tbody tr').length == 0)
                                    $('#div1').show();
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }
        function emptychild() {
            $('#Cfirstname')[0].value = "";
            $('#Clastname')[0].value = "";
            $('#Cmiddlename')[0].value = "";
            $('#Clastname')[0].value = "";
            $('#CDOB').val("");
            $('#CSSN').val("");
            $('#CGendermale').prop("checked", false);
            $('#CGenderfemale').prop("checked", false);
            $('#CGenderother').prop("checked", false);
            $('#CParentdisable1').prop("checked", false);
            $('#CParentdisable2').prop("checked", false);
            $('#MedicalService1').prop("checked", false);
            $('#MedicalService2').prop("checked", false);
            $('#DobverificationinPaper').prop("checked", false);
            $("input:radio[name='IsFoster']").prop("checked", false);
            $("input:radio[name='Inwalfareagency']").prop("checked", false);
            $("input:radio[name='InDualcustody']").prop("checked", false);
            $('#ImmunizationinPaper').prop("checked", false);
            $('#CFileName').val("");
            $('#CFileExtension').val("");
            $('#HouseholdRecord').removeClass("in");
            $('#HouseholdRecord').removeClass("active");
            $('#ChildId').val(0);
            $('#CProgramType').val('');
            $('#DOBverifiedBy').val('');
            $('#CRace').val('');
            $('#CEthnicity').val('');
            $('#CRaceSubCategory').val('');
            $('#Medicalhome').val('');
            $('#CDentalhome').val('');
            $('#ImmunizationService').val('');
            $('#BMIStatus').val('');
            $('#Doctor').val(0);
            $('#Dentist').val(0);
            $('#MedicalNote').val('');
            $('#BMIStatus2').val('');
        }

        function emptyemergencytab() {
            $('#EmegencyId').val(0);
            $('#Efirstname').val("");
            $('#Emiddlename').val("");
            $('#Elastname').val("");
            $('#DOBverifiedBy').val("");
            $('#EGendermale').prop("checked", false);
            $('#EGenderfemale').prop("checked", false);
            $('#EGenderother').prop("checked", false);
            $('#EDOB').val("");
            $('#EEmail').val("");
            $('#Enotes').val("");
            $('#EFileName').val("");
            $('#EFileExtension').val("");
            $('#EImagejson').val("");
            $('#ERelationwithchild').val("");

            $('#gridphoneE1').find('tbody').find("tr").remove();

        }
        //Changes by Akansha on 19Dec2016
        function EditChild(data) {

            $('#ScreeningDiv').find('input:text,select').each(function (j, element) {
                $(element).val('');
            });
            $('#Health').hide();
            $('#hsmpplanDiv').hide();
            $('#EHSHealth').hide();
            $('#HSHealth').hide();
            // $('#Nutrition').hide();
            $('#Nutrition').hide();
            $('#EhsNutrition1').hide();
            $('#ChildId').val(data.ChildId);
            $('#Cfirstname').val(data.Cfirstname);
            $('#Cmiddlename').val(data.Cmiddlename);
            $('#Clastname').val(data.Clastname);
            $('#Physical').hide();
            $('#Vision').hide();
            $('#Hearing').hide();
            $('#Develop').hide();
            $('#Dental').hide();
            $('#Speech').hide();
            $('#childnameheading').text(data.Cfirstname + (data.Cmiddlename == "" ? " " + data.Clastname : " " + data.Cmiddlename + " " + data.Clastname));
            //Changes Transportation
            if (data.CTransport != null && data.CTransport != "") {
                if (data.CTransport == true)
                    $('#ChildTransport').show();
                else
                    $('#ChildTransport').hide();
            }
            else {
                $('#ChildTransport').hide();
            }

            if (data.CTransportNeeded != null) {
                if (data.CTransportNeeded == true)
                    $('#CTransportNeeded1').prop("checked", true);

                else
                    $('#CTransportNeeded2').prop("checked", true);

            }
            else {
                $('#CTransportNeeded1').prop("checked", false);
                $('#CTransportNeeded2').prop("checked", false);
            }
            //End
            $('.panel - body3').show();
            var $this = $('.clickable3');
            $this.parents('.panel3').find('.panel-body3').slideDown();
            $this.removeClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            $('#customChecklist input[type=checkbox]').each(function () {
                $(this).prop("checked", false);
                $('#Screening1').hide();
            });

            var isfuture = (data.IsFutureApplication) ? "True" : "False";
            $('#customChecklist').find('#IsFutureApplication').val(isfuture);

            if (data.AvailableProgram != null && data.AvailableProgram.length > 0) {
                var isEHsScreening = false;

                for (var i = 0; i < data.AvailableProgram.length; i++) {
                    if (data.AvailableProgram[i].ReferenceId == 1) {
                        $('#Screening1').show();
                        $('#_childprogrefid').val("1");
                        isEHsScreening = true;
                    }
                    if (data.AvailableProgram[i].ReferenceId == 2) {
                        $('#Screening1').show();
                        $('#_childprogrefid').val("2");
                        isEHsScreening = false;
                    }
                    $('#customChecklist input[type=checkbox]').each(function () {
                        if ($(this).val() == data.AvailableProgram[i].Id)
                            $(this).prop("checked", true);
                    });
                }

                $('#cutomCheckList').find('#IsFutureApplication').val(data.IsFutureApplication);






            }



            if ($('#_childprogrefid').val() == "1") {
                if (data.EhsChildBorn == 1)
                    $('#EhsChildBorn1').prop("checked", true);
                else if (data.EhsChildBorn == 2)
                    $('#EhsChildBorn2').prop("checked", true);
                else if (data.EhsChildBorn == 3)
                    $('#EhsChildBorn3').prop("checked", true);
                else {
                    $('#EhsChildBorn1').prop("checked", false);
                    $('#EhsChildBorn2').prop("checked", false);
                    $('#EhsChildBorn3').prop("checked", false);
                }
                $('#EhsChildBirthWt').val(data.EhsChildBirthWt);
                $('#EhsChildLength').val(data.EhsChildLength);
                if (data.EhsChildProblm == 1) {
                    $('#EhsChildProblm1').prop("checked", true);
                    $('#EHSBabyOrMotherProblems').val(data.EHSBabyOrMotherProblems);

                    $('#DivEhsChildProblm').show();
                }
                else if (data.EhsChildProblm == 2) {
                    $('#EhsChildProblm2').prop("checked", true);
                    $('#EHSBabyOrMotherProblems').val(data.EHSBabyOrMotherProblems);
                    $('#DivEhsChildProblm').hide();
                }
                else {
                    $('#EhsChildProblm1').prop("checked", false);
                    $('#EhsChildProblm2').prop("checked", false);
                    $('#EHSBabyOrMotherProblems').val("");
                    $('#DivEhsChildProblm').hide();

                }
                if (data.EhsMedication == 1) {
                    $('#EhsMedication1').prop("checked", true);
                    $('#EHSChildMedication').val(data.EHSChildMedication);

                    $('#DivEhsMedication').show();
                    $('#mpplanDiv').show();
                }
                else if (data.EhsMedication == 2) {
                    $('#EhsMedication2').prop("checked", true);
                    $('#EHSChildMedication').val("");
                    $('#DivEhsMedication').hide();
                    $('#mpplanDiv').hide();
                    $('#EHSmpplanComment2').hide();
                    $('#EHSmpplanComment').val('');
                    $('#EHSmpplan1')[0].checked = false;
                    $('#EHSmpplan2')[0].checked = false;

                }
                else {
                    $('#EhsMedication1').prop("checked", false);
                    $('#EhsMedication2').prop("checked", false);
                    $('#EHSChildMedication').val("");
                    $('#DivEhsMedication').hide();
                }
                if (data.EHSmpplan == 1) {

                    $('#EHSmpplanComment')[0].checked = true;
                    $('#EHSmpplan2')[0].checked = false;
                    $('#EHSmpplanComment2').show();
                    $('#EHSmpplanComment').val(data.EHSmpplanComment);
                }
                else {
                    $('#EHSmpplanComment2').hide();
                    $('#EHSmpplanComment').val('');
                    $('#EHSmpplan1')[0].checked = false;
                    $('#EHSmpplan2')[0].checked = false;
                }
                if (data.EHSmpplan == 2) {
                    $('#EHSmpplanComment')[0].checked = false;
                    $('#EHSmpplan2')[0].checked = false;
                    $('#EHSmpplanComment2').hide();
                }

                $('#EhsComment').val(data.EhsComment);
                //08032016
                $('#EHSCDBRText').html('');
                $('#EHSCDCText').html('');
                $('#EHSCHCText').html('');
                $('#EHDCDCText').html('');
                $('#EHSCCHText').html('');
                $('#EHSCTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#CDBRText').html('');
                $('#CDCText').html('');
                $('#CCHText').html('');
                $('#CTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });

                ///ChildDirectBloodRelative Popup
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#CDBRlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "1") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#CDBRlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDBRText').append(div);
                    }
                });
                //Diagnosed Conditions pop
                var count = 0;
                $('#DivEHSAllergy').hide();
                $('#DivEHSEpiPen').hide();
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "2") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#DiagnoseChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                    if (data._Childhealthnutrition[i].MasterId == 1)
                                        count = 1;
                                });
                            }
                        }
                    }
                    if (count == 1) {
                        $('#DivEHSAllergy').show();
                        $('#DivEHSEpiPen').show();
                        $('#EHSAllergy').val(data.EHSAllergy);
                        if (data.EHSEpiPen == 1) {
                            $('#EHSEpiPen1').prop("checked", true);
                        }
                        else if (data.EHSEpiPen == 2) {
                            $('#EHSEpiPen2').prop("checked", true);
                        }
                        else {
                            $('#EHSEpiPen1').prop("checked", false);
                            $('#EHSEpiPen2').prop("checked", false);
                        }
                    }

                }
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDCText').append(div);
                    }
                });
                // received medical treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#EHSChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "6") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#EHSChildChecklist').append('<br><input  name="PostedPostedMedicalEHS.ChildEHSID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#EHSChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#EHSChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCHCText').append(div);
                    }
                });
                // receiving treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#EHSCHCChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "5") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#EHSCHCChildChecklist').append('<br><input  name="PostedPostedEHS.ChildEHSID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#EHSCHCChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHDCDCText').append(div);
                    }
                });
                //Medical Treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#MedicalChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "4") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#MedicalChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCCHText').append(div);
                    }
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCTCHText').append(div);
                    }
                });
                //receive treatment pop
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#ChronicChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "3") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChronicChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                }
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCTCHText').append(div);
                    }
                });
            }
            if ($('#_childprogrefid').val() == "2") {

                if (data.HsChildBorn == 1)
                    $('#ChildBorn1').prop("checked", true);
                else if (data.HsChildBorn == 2)
                    $('#ChildBorn2').prop("checked", true);
                else if (data.HsChildBorn == 3)
                    $('#ChildBorn3').prop("checked", true);
                else {
                    $('#ChildBorn1').prop("checked", false);
                    $('#ChildBorn2').prop("checked", false);
                    $('#ChildBorn3').prop("checked", false);
                }
                $('#ChildBirthWt').val(data.HsChildBirthWt);
                $('#ChildLength').val(data.HsChildLength);
                if (data.HsChildProblm == 1) {
                    $('#ChildProblm1').prop("checked", true);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').show();

                }
                else if (data.HsChildProblm == 2) {
                    $('#ChildProblm2').prop("checked", true);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').hide();
                }
                else {
                    $('#ChildProblm1').prop("checked", false);
                    $('#ChildProblm2').prop("checked", false);
                    $('#HSBabyOrMotherProblems').val(data.HSBabyOrMotherProblems);
                    $('#DivHSBabyOrMotherProblems').hide();
                }
                if (data.HsMedication == 1) {
                    $('#Medication1').prop("checked", true);
                    $('#HsMedicationName').val(data.HsMedicationName);
                    $('#Dosage').val(data.HsDosage);
                    $('#HSChildMedication').val(data.HSChildMedication);
                    $('#MedicationName').show();
                    $('#DosageMedication').show();
                    $('#DivSChildMedication').show();
                    $('#hsmpplanDiv').show();

                }
                else if (data.HsMedication == 2) {
                    $('#Medication2').prop("checked", true);
                    $('#HsMedicationName').val("");
                    $('#HsDosage').val("");
                    $('#HSChildMedication').val("");
                    $('#MedicationName').hide();
                    $('#DosageMedication').hide();
                    $('#DivSChildMedication').hide();
                    $('#hsmpplanDiv').hide();

                }
                else {
                    $('#Medication1').prop("checked", false);
                    $('#Medication2').prop("checked", false);
                    $('#HsMedicationName').val("");
                    $('#HsDosage').val("");
                    $('#HSChildMedication').val("");
                    $('#MedicationName').hide();
                    $('#DosageMedication').hide();
                    $('#DivSChildMedication').hide();
                    $('#hsmpplanDiv').hide();
                }
                //$('#Comment').val(data.HsComment);
                if (data.HSmpplan == 1) {
                    $('#HSmpplan1')[0].checked = true;
                    $('#HSmpplan2')[0].checked = false;
                    $('#HSmpplanComment2').show();
                    $('#HSmpplanComment').val(data.HSmpplanComment);
                }
                else {
                    $('#HSmpplan1')[0].checked = false;
                    $('#HSmpplan2')[0].checked = false;
                    $('#HSmpplanComment2').show();
                    $('#HSmpplanComment').val("");
                }
                if (data.HsChildDentalCare == 1) {
                    $('#ChildDentalCare1').prop("checked", true);

                    $('#HSPreventativeDentalCare').val(data.HSPreventativeDentalCare);
                    $('#DivHsChildDentalCare').show();
                }
                else if (data.HsChildDentalCare == 2) {
                    $('#ChildDentalCare2').prop("checked", true);
                    $('#HSPreventativeDentalCare').val("");
                    $('#DivHsChildDentalCare').hide();
                }
                else {
                    $('#ChildDentalCare1').prop("checked", false);
                    $('#ChildDentalCare2').prop("checked", false);
                    $('#HSPreventativeDentalCare').val("");
                    $('#DivHsChildDentalCare').hide();
                }
                if (data.HsDentalExam == 1) {
                    $('#DentalExam1').prop("checked", true);
                    $('#ChildDentalExam').hide();
                    $('#DivHsDentalExam').show();

                    $('#HSProfessionalDentalExam').val(data.HSProfessionalDentalExam);
                }
                else if (data.HsDentalExam == 2) {
                    $('#DentalExam2').prop("checked", true);
                    $('#ChildDentalExam').show();
                    if (data.ChildProfessionalDentalExam == 1) {
                        $('#ChildProfessionalDentalExam1').prop("checked", true);
                        $('#ChildProfessionalDentalExam2').prop("checked", false);
                    }
                    else if (data.ChildProfessionalDentalExam == 2) {
                        $('#ChildProfessionalDentalExam1').prop("checked", false);
                        $('#ChildProfessionalDentalExam2').prop("checked", true);
                    }
                    else {
                        $('#ChildProfessionalDentalExam1').prop("checked", false);
                        $('#ChildProfessionalDentalExam2').prop("checked", false);
                    }
                    $('#HSProfessionalDentalExam').val("");
                    $('#DivHsDentalExam').hide();
                }
                else {
                    $('#DentalExam1').prop("checked", false);
                    $('#DentalExam2').prop("checked", false);
                    $('#HSProfessionalDentalExam').val("");
                    $('#DivHsDentalExam').hide();
                }
                $('#RecentDentalExam').val(data.HsRecentDentalExam);
                if (data.HsChildNeedDentalTreatment == 1) {
                    $('#ChildNeedDentalTreatment1').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val(data.HSNeedingDentalTreatment);
                    $('#DivHSNeedingDentalTreatment').show();
                }
                else if (data.HsChildNeedDentalTreatment == 2) {
                    $('#ChildNeedDentalTreatment2').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                else if (data.HsChildNeedDentalTreatment == 3) {
                    $('#ChildNeedDentalTreatment3').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                else {
                    $('#ChildNeedDentalTreatment1').prop("checked", false);
                    $('#ChildNeedDentalTreatment2').prop("checked", false);
                    $('#ChildNeedDentalTreatment3').prop("checked", false);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSNeedingDentalTreatment').hide();
                }
                if (data.HsChildRecievedDentalTreatment == 1) {
                    $('#ChildRecievedDentalTreatment1').prop("checked", true);
                    $('#DivHSChildReceivedDentalTreatment').show();
                    $('#HSChildReceivedDentalTreatment').val(data.HSChildReceivedDentalTreatment);

                }
                else if (data.HsChildRecievedDentalTreatment == 2) {
                    $('#ChildRecievedDentalTreatment2').prop("checked", true);
                    $('#HSChildReceivedDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                else if (data.HsChildRecievedDentalTreatment == 3) {
                    $('#ChildRecievedDentalTreatment3').prop("checked", true);
                    $('#HSNeedingDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                else {

                    $('#ChildRecievedDentalTreatment1').prop("checked", false);
                    $('#ChildRecievedDentalTreatment2').prop("checked", false);
                    $('#ChildRecievedDentalTreatment3').prop("checked", false);
                    $('#HSChildReceivedDentalTreatment').val("");
                    $('#DivHSChildReceivedDentalTreatment').hide();
                }
                $('#CDBRText').html('');
                $('#CDCText').html('');
                $('#CCHText').html('');
                $('#CTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCDBRText').html('');
                $('#EHSCDCText').html('');
                $('#EHSCHCText').html('');
                $('#EHDCDCText').html('');
                $('#EHSCCHText').html('');
                $('#EHSCTCHText').html('');
                $('#CDBRlist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#MedicalChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                $('#ChronicChildChecklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#CDBRlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "1") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#CDBRlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }

                    $('#CDBRlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDBRText').append(div);
                        }
                    });

                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "2") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#DiagnoseChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#DiagnoseChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDCText').append(div);
                        }
                    });

                    $('#MedicalChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "4") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#MedicalChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#MedicalChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CCHText').append(div);
                        }
                    });
                    $('#ChronicChildChecklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "5") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChronicChildChecklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChronicChildChecklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CTCHText').append(div);
                        }
                    });
                }
            }
            $('#CDOB').val(data.CDOB);
            $('#DOBverifiedBy').val(data.DOBverifiedBy);
            if (data != null && data.CSSN != null && data.CSSN != '') {
                var res = data.CSSN;
                len = res.length;
                max = 11;
                stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                result = stars + res.substring(7);
                $('#CSSN').val(result);
                ssnoriginalvalue = data.CSSN;
            }
            else {
                $('#CSSN').val('');

            }
            if (data.CGender == "1")
                $('#CGendermale').prop("checked", true);
            if (data.CGender == "2")
                $('#CGenderfemale').prop("checked", true);
            if (data.CGender == "3")
                $('#CGenderother').prop("checked", true);
            $('#CRace').val(data.CRace);
            bindsubcategory();
            $('#CRaceSubCategory').val(data.CRaceSubCategory);
            $('#CEthnicity').val(data.CEthnicity);
            $('#Medicalhome').val(data.Medicalhome);
            $('#CDentalhome').val(data.CDentalhome);
            $('#ImmunizationService').val(data.ImmunizationService);
            if (data.MedicalService == 1)
                $('#MedicalService1').prop("checked", true);
            else if (data.MedicalService == 2)
                $('#MedicalService2').prop("checked", true);
            else {
                $('#MedicalService1').prop("checked", false);
                $('#MedicalService2').prop("checked", false);
            }
            $('#BMIStatus').val(data.BMIStatus);
            $('#BMIStatus2').val(data.BMIStatus);
            if (data.CParentdisable == 1)
                $('#CParentdisable1').prop("checked", true);
            else if (data.CParentdisable == 2)
                $('#CParentdisable2').prop("checked", true);
            else {
                $('#CParentdisable1').prop("checked", false);
                $('#CParentdisable2').prop("checked", false);
            }
            $('#CFileName').val(data.CFileName);
            $('#CFileExtension').val(data.CFileExtension);
            $('#Imagejson').val(data.Imagejson);
            if ($('#Medicalhome').val() == 3 || $('#Medicalhome').val() == 4 || $('#Medicalhome').val() == 2) {
                $('#addrowC1').show();
                $('#CDoctor').val(data.CDoctor);
                $('#Dentist').val(data.Dentist);
            }
            else
                $('#addrowC1').hide();
            if ($('#CDentalhome').val() == 3 || $('#CDentalhome').val() == 4 || $('#CDentalhome').val() == 2) {
                $('#addrowDentist').show();
                $('#CDentist').val(data.CDentist);
                $('#Doctor').val(data.Doctor);
            }
            else
                $('#addrowDentist').hide();
            if (data.DobverificationinPaper)
                $('#DobverificationinPaper').prop("checked", true);
            else
                $('#DobverificationinPaper').prop("checked", false);
            $('#DobFileName').val(data.DobFileName);
            $('#SchoolDistrict').val(data.SchoolDistrict);
            if (data.IsFoster == 1) {
                $('#IsFoster1').prop("checked", true);
                $('.FosterFormChoose').removeClass('hidden');
            }

            else if (data.IsFoster == 2) {
                $('#IsFoster2').prop("checked", true);
                $('.FosterFormChoose').addClass('hidden');
            }

            else {
                $('#IsFoster1').prop("checked", false);
                $('#IsFoster2').prop("checked", false);
            }
            if (data.Inwalfareagency == 1)
                $('#Inwalfareagency1').prop("checked", true);
            else if (data.Inwalfareagency == 2)
                $('#Inwalfareagency2').prop("checked", true);
            else {
                $('#Inwalfareagency1').prop("checked", false);
                $('#Inwalfareagency2').prop("checked", false);
            }
            if (data.InDualcustody == 1)
                $('#InDualcustody1').prop("checked", true);
            else if (data.InDualcustody == 2)
                $('#InDualcustody2').prop("checked", true);
            else {
                $('#InDualcustody1').prop("checked", false);
                $('#InDualcustody2').prop("checked", false);
            }


            if (data.InChildCareSubsidy == 1)
                $('#InChildCareSubsidy1').prop("checked", true);
            else if (data.InChildCareSubsidy == 2)
                $('#InChildCareSubsidy2').prop("checked", true);
            else {
                $('#InChildCareSubsidy1').prop("checked", false);
                $('#InChildCareSubsidy2').prop("checked", false);
            }
            $('#ImmunizationFileName').val(data.ImmunizationFileName);
            if (data.ImmunizationinPaper)
                $('#ImmunizationinPaper').prop("checked", true);
            else
                $('#ImmunizationinPaper').prop("checked", false);
            $('#InsuranceOption').val(data.InsuranceOption);
            $('#MedicalNote').val(data.MedicalNote);
            if ($('#CRace').val() == "1e5304d3-6182-483a-8b27-5269a2dd9936") {
                $('#divRaceother').show();
                $('#Raceother').val(data.Raceother);
            }
            else {
                $('#Raceother').val('');
            }
            //Nutrition data
            if ($('#_childprogrefid').val() == "1") {

                $('#EhsCvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#EhsCDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#EhsCDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.EhsPersistentNausea == 1) {
                    $('#EhsPersistentNausea1').prop("checked", true);

                    $('#EhsNauseaorVomitingcomment').val(data.EhsNauseaorVomitingcomment);
                    $('#divEhsNauseaorVomitingcomment').show();
                }
                else if (data.EhsPersistentNausea == 2) {
                    $('#EhsPersistentNausea2').prop("checked", true);
                    $('#divEhsNauseaorVomitingcomment').hide();
                    $('#EhsNauseaorVomitingcomment').val('');

                }
                else {
                    $('#EhsPersistentNausea1').prop("checked", false);
                    $('#EhsPersistentNausea2').prop("checked", false);
                    $('#EhsNauseaorVomitingcomment').val('');
                    $('#divEhsNauseaorVomitingcomment').hide();
                }
                if (data.EhsPersistentDiarrhea == 1) {
                    $('#EhsPersistentDiarrhea1').prop("checked", true);
                    $('#divEhsdiarrheacomment').show();
                    $('#EhsDiarrheaComment').val(data.EhsDiarrheaComment);

                }
                else if (data.EhsPersistentDiarrhea == 2) {
                    $('#EhsPersistentDiarrhea2').prop("checked", true);
                    $('#EhsDiarrheaComment').val('');
                    $('#divEhsdiarrheacomment').hide();
                }
                else {
                    $('#EhsPersistentDiarrhea1').prop("checked", false);
                    $('#EhsPersistentDiarrhea2').prop("checked", false);
                    $('#EhsDiarrheaComment').val('');
                    $('#divEhsdiarrheacomment').hide();
                }
                if (data.EhsPersistentConstipation == 1) {
                    $('#EhsPersistentConstipation1').prop("checked", true);
                    $('#divEhsPersistentConstipation').show();
                    $('#EhsConstipationcomment').val(data.EhsConstipationcomment);

                }
                else if (data.EhsPersistentConstipation == 2) {
                    $('#EhsPersistentConstipation2').prop("checked", true);
                    $('#EhsConstipationcomment').val('');
                    $('#divEhsPersistentConstipation').hide();

                }
                else {
                    $('#EhsPersistentConstipation1').prop("checked", false);
                    $('#EhsPersistentConstipation2').prop("checked", false);
                    $('#EhsConstipationcomment').val('');
                    $('#divEhsPersistentConstipation').hide();
                }
                if (data.EhsDramaticWeight == 1) {
                    $('#EhsDramaticWeight1').prop("checked", true);
                    $('#divEhsDramaticWeightchange').show();
                    $('#EhsDramaticWeightchangecomment').val(data.EhsDramaticWeightchangecomment);
                }
                else if (data.EhsDramaticWeight == 2) {
                    $('#EhsDramaticWeight2').prop("checked", true);
                    $('#EhsDramaticWeightchangecomment').val('');
                    $('#divEhsDramaticWeightchange').hide();

                }
                else {
                    $('#EhsDramaticWeight1').prop("checked", false);
                    $('#EhsDramaticWeight2').prop("checked", false);
                    $('#EhsDramaticWeightchangecomment').val('');
                    $('#divEhsDramaticWeightchange').hide();
                }
                if (data.EhsRecentSurgery == 1) {
                    $('#EhsRecentSurgery1').prop("checked", true);
                    $('#divEhsRecentSurgery').show();
                    $('#EhsRecentSurgerycomment').val(data.EhsRecentSurgerycomment);


                }
                else if (data.EhsRecentSurgery == 2) {
                    $('#EhsRecentSurgery2').prop("checked", true);
                    $('#EhsRecentSurgerycomment').val('');
                    $('#divEhsRecentSurgery').hide();
                }
                else {
                    $('#EhsRecentSurgery1').prop("checked", false);
                    $('#EhsRecentSurgery2').prop("checked", false);
                    $('#EhsRecentSurgerycomment').val('');
                    $('#divEhsRecentSurgery').hide();
                }
                if (data.EhsRecentHospitalization == 1) {
                    $('#EhsRecentHospitalization1').prop("checked", true);
                    $('#EhsRecentHospitalizationComment').val(data.EhsRecentHospitalizationComment);
                    $('#divEhsRecentHospitalization').show();

                }
                else if (data.EhsRecentHospitalization == 2) {
                    $('#EhsRecentHospitalization2').prop("checked", true);

                    $('#divEhsRecentHospitalization').hide();
                    $('#EhsRecentHospitalizationComment').val('');
                }
                else {
                    $('#EhsRecentHospitalization1').prop("checked", false);
                    $('#EhsRecentHospitalization2').prop("checked", false);
                    $('#EhsRecentHospitalizationComment').val('');
                    $('#divEhsRecentHospitalization').hide();
                }
                if (data.EhsChildSpecialDiet == 1) {
                    $('#EhsChildSpecialDiet1').prop("checked", true);
                    $('#divEhsChildSpecialDiet').show();
                    $('#EhsSpecialDietComment').val(data.EhsSpecialDietComment);
                }
                else if (data.EhsChildSpecialDiet == 2) {
                    $('#EhsChildSpecialDiet2').prop("checked", true);
                    $('#EhsSpecialDietComment').val('');
                    $('#divEhsChildSpecialDiet').hide();

                }
                else {
                    $('#EhsChildSpecialDiet1').prop("checked", false);
                    $('#EhsChildSpecialDiet2').prop("checked", false);
                    $('#EhsSpecialDietComment').val('');
                    $('#divEhsChildSpecialDiet').hide();
                }
                if (data.EhsFoodAllergies == 1) {
                    $('#EhsFoodAllergies1').prop("checked", true);
                    $('#divEhsFoodAllergies').show();
                    $('#EhsFoodAllergiesComment').val(data.EhsFoodAllergiesComment);
                }
                else if (data.EhsFoodAllergies == 2) {
                    $('#EhsFoodAllergies2').prop("checked", true);
                    $('#EhsFoodAllergiesComment').val('');
                    $('#divEhsFoodAllergies').hide();


                }
                else {
                    $('#EhsFoodAllergies1').prop("checked", false);
                    $('#EhsFoodAllergies2').prop("checked", false);
                    $('#EhsFoodAllergiesComment').val('');
                    $('#divEhsFoodAllergies').hide();


                }
                if (data.EhsNutritionalConcern == 1) {
                    $('#EhsNutritionalConcern1').prop("checked", true);
                    $('#divEhsNutritionalConcern').show();
                    $('#EhsNutritionAlconcernsComment').val(data.EhsNutritionAlconcernsComment);

                }
                else if (data.EhsNutritionalConcern == 2) {
                    $('#EhsNutritionalConcern2').prop("checked", true);
                    $('#EhsNutritionAlconcernsComment').val('');
                    $('#divEhsNutritionalConcern').hide();
                }
                else {
                    $('#EhsNutritionalConcern1').prop("checked", false);
                    $('#EhsNutritionalConcern2').prop("checked", false);
                    $('#EhsNutritionAlconcernsComment').val('');
                    $('#divEhsNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#EhsFoodPantory').val(data.EhsFoodPantory);
                if (data.EhschildTrouble == 1) {
                    $('#EhschildTrouble1').prop("checked", true);
                    $('#divEhschildTrouble').show();
                    $('#EhsChewingorSwallowingcomment').val(data.EhsChewingorSwallowingcomment);

                }
                else if (data.EhschildTrouble == 2) {
                    $('#EhschildTrouble2').prop("checked", true);
                    $('#EhsChewingorSwallowingcomment').val('');
                    $('#divEhschildTrouble').hide();
                }
                else {
                    $('#EhschildTrouble1').prop("checked", false);
                    $('#EhschildTrouble2').prop("checked", false);
                    $('#EhsChewingorSwallowingcomment').val('');
                    $('#divEhschildTrouble').hide();
                }
                if (data.Ehsspoon == 1) {
                    $('#Ehsspoon1').prop("checked", true);
                    $('#divEhsSpoonorForkComment').hide();
                    $('#EhsSpoonorForkComment').val('');
                }
                else if (data.Ehsspoon == 2) {
                    $('#Ehsspoon2').prop("checked", true);
                    $('#EhsSpoonorForkComment').val(data.EhsSpoonorForkComment);
                    $('#divEhsSpoonorForkComment').show();
                }
                else {
                    $('#Ehsspoon1').prop("checked", false);
                    $('#Ehsspoon2').prop("checked", false);
                    $('#EhsSpoonorForkComment').val('');
                    $('#divEhsSpoonorForkComment').hide();
                }
                if (data.Ehsfeedingtube == 1) {
                    $('#Ehsfeedingtube1').prop("checked", true);
                    $('#divEhsSpecialFeedingComment').show();
                    $('#EhsSpecialFeedingComment').val(data.EhsSpecialFeedingComment);

                }
                else if (data.Ehsfeedingtube == 2) {
                    $('#Ehsfeedingtube2').prop("checked", true);
                    $('#EhsSpecialFeedingComment').val('');
                    $('#divEhsSpecialFeedingComment').hide();
                }
                else {
                    $('#Ehsfeedingtube1').prop("checked", false);
                    $('#Ehsfeedingtube2').prop("checked", false);
                    $('#EhsSpecialFeedingComment').val('');
                    $('#divEhsSpecialFeedingComment').hide();
                }
                if (data.EhschildThin == 1)
                    $('#EhschildThin1').prop("checked", true);
                else if (data.EhschildThin == 2)
                    $('#EhschildThin2').prop("checked", true);
                else if (data.EhschildThin == 3)
                    $('#EhschildThin3').prop("checked", true);
                else if (data.EhschildThin == 4)
                    $('#EhschildThin4').prop("checked", true);
                else if (data.EhschildThin == 5)
                    $('#EhschildThin5').prop("checked", true);
                else {
                    $('#EhschildThin1').prop("checked", false);
                    $('#EhschildThin2').prop("checked", false);
                    $('#EhschildThin3').prop("checked", false);
                    $('#EhschildThin4').prop("checked", false);
                    $('#EhschildThin5').prop("checked", false);
                }
                if (data.EhsTakebottle == 1) {
                    $('#EhsTakebottle1').prop("checked", true);
                    $('#divEhsBottleComment').show();

                    $('#EhsBottleComment').val(data.EhsBottleComment);

                }
                else if (data.EhsTakebottle == 2) {
                    $('#EhsTakebottle2').prop("checked", true);
                    $('#EhsBottleComment').val('');
                    $('#divEhsBottleComment').hide();
                }
                else {
                    $('#EhsTakebottle1').prop("checked", false);
                    $('#EhsTakebottle2').prop("checked", false);
                    $('#EhsBottleComment').val('');
                    $('#divEhsBottleComment').hide();
                }
                if (data.Ehschewanything == 1) {
                    $('#Ehschewanything1').prop("checked", true);
                    $('#divEhschewanything').show();
                    $('#EhsEatOrChewComment').val(data.EhsEatOrChewComment);
                }
                else if (data.Ehschewanything == 2) {
                    $('#Ehschewanything2').prop("checked", true);
                    $('#EhsEatOrChewComment').val(data.EhsEatOrChewComment);
                    $('#divEhschewanything').hide();
                }
                else {
                    $('#Ehschewanything1').prop("checked", false);
                    $('#Ehschewanything2').prop("checked", false);
                    $('#EhsEatOrChewComment').val("");
                    $('#divEhschewanything').hide();
                }
                if (data.EhsChildFruitJuicevitaminc == "1") {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", true);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.EhsChildFruitJuicevitaminc == "2") {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", true);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.EhsChildFruitJuicevitaminc == "3") {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", true);
                }
                else {
                    $('#EhsChildFruitJuicevitaminc1').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc2').prop("checked", false);
                    $('#EhsChildFruitJuicevitaminc3').prop("checked", false);
                }
                if (data.EhsChildWater == "1") {
                    $('#EhsChildWater1').prop("checked", true);
                    $('#EhsChildWater2').prop("checked", false);
                    $('#EhsChildWater3').prop("checked", false);
                }
                else if (data.EhsChildWater == "2") {
                    $('#EhsChildWater1').prop("checked", false);
                    $('#EhsChildWater2').prop("checked", true);
                    $('#EhsChildWater3').prop("checked", false);
                }
                else {
                    $('#EhsChildWater1').prop("checked", false);
                    $('#EhsChildWater2').prop("checked", false);
                    $('#EhsChildWater3').prop("checked", true);
                }

                if (data.EhsNA)
                    $('#EhsNA').prop("checked", true);
                else
                    $('#EhsNA').prop("checked", false);

                if (data.EhsBreakfast)
                    $('#EhsBreakfast').prop("checked", true);
                else
                    $('#EhsBreakfast').prop("checked", false);

                if (data.EhsDinner)
                    $('#EhsDinner').prop("checked", true);
                else
                    $('#EhsDinner').prop("checked", false);

                if (data.EhsLunch)
                    $('#EhsLunch').prop("checked", true);
                else
                    $('#EhsLunch').prop("checked", false);

                if (data.EhsSnack)
                    $('#EhsSnack').prop("checked", true);
                else
                    $('#EhsSnack').prop("checked", false);

                if (data.EhsRestrictFood == "1") {
                    $('#EhsRestrictFood1').prop("checked", true);
                    $('#EhsRestrictFood2').prop("checked", false);

                }
                else if (data.EhsRestrictFood == "2") {
                    $('#EhsRestrictFood1').prop("checked", false);
                    $('#EhsRestrictFood2').prop("checked", true);
                }
                else {
                    $('#EhsRestrictFood1').prop("checked", false);
                    $('#EhsRestrictFood2').prop("checked", false);

                }
                if (data.EhsChildVitaminSupplment == "1") {
                    $('#EhsChildVitaminSupplment1').prop("checked", true);
                    $('#EhsChildVitaminSupplment2').prop("checked", false);

                }
                else if (data.EhsChildVitaminSupplment == "2") {
                    $('#EhsChildVitaminSupplment1').prop("checked", false);
                    $('#EhsChildVitaminSupplment2').prop("checked", true);

                }
                else {
                    $('#EhsChildVitaminSupplment1').prop("checked", false);
                    $('#EhsChildVitaminSupplment2').prop("checked", false);

                }

                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }
                //Questions


                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#EhsCDRinkText').append(div);
                        }
                    });
                }
                //End

            }
            else if ($('#_childprogrefid').val() == "2") {
                $('#Cvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.PersistentNausea == 1) {
                    $('#PersistentNausea1').prop("checked", true);

                    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
                    $('#divNauseaorVomitingcomment').show();
                }
                else if (data.PersistentNausea == 2) {
                    $('#PersistentNausea2').prop("checked", true);
                    $('#divNauseaorVomitingcomment').hide();
                    $('#NauseaorVomitingcomment').val('');

                }
                else {
                    $('#PersistentNausea1').prop("checked", false);
                    $('#PersistentNausea2').prop("checked", false);
                    $('#NauseaorVomitingcomment').val('');
                    $('#divNauseaorVomitingcomment').hide();
                }
                if (data.PersistentDiarrhea == 1) {
                    $('#PersistentDiarrhea1').prop("checked", true);
                    $('#divdiarrheacomment').show();
                    $('#DiarrheaComment').val(data.DiarrheaComment);

                }
                else if (data.PersistentDiarrhea == 2) {
                    $('#PersistentDiarrhea2').prop("checked", true);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                else {
                    $('#PersistentDiarrhea1').prop("checked", false);
                    $('#PersistentDiarrhea2').prop("checked", false);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                if (data.PersistentConstipation == 1) {
                    $('#PersistentConstipation1').prop("checked", true);
                    $('#divPersistentConstipation').show();
                    $('#Constipationcomment').val(data.Constipationcomment);

                }
                else if (data.PersistentConstipation == 2) {
                    $('#PersistentConstipation2').prop("checked", true);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();

                }
                else {
                    $('#PersistentConstipation1').prop("checked", false);
                    $('#PersistentConstipation2').prop("checked", false);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();
                }
                if (data.DramaticWeight == 1) {
                    $('#DramaticWeight1').prop("checked", true);
                    $('#divDramaticWeightchange').show();
                    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
                }
                else if (data.DramaticWeight == 2) {
                    $('#DramaticWeight2').prop("checked", true);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();

                }
                else {
                    $('#DramaticWeight1').prop("checked", false);
                    $('#DramaticWeight2').prop("checked", false);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();
                }
                if (data.RecentSurgery == 1) {
                    $('#RecentSurgery1').prop("checked", true);
                    $('#divRecentSurgery').show();
                    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


                }
                else if (data.RecentSurgery == 2) {
                    $('#RecentSurgery2').prop("checked", true);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                else {
                    $('#RecentSurgery1').prop("checked", false);
                    $('#RecentSurgery2').prop("checked", false);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                if (data.RecentHospitalization == 1) {
                    $('#RecentHospitalization1').prop("checked", true);
                    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
                    $('#divRecentHospitalization').show();

                }
                else if (data.RecentHospitalization == 2) {
                    $('#RecentHospitalization2').prop("checked", true);

                    $('#divRecentHospitalization').hide();
                    $('#RecentHospitalizationComment').val('');
                }
                else {
                    $('#RecentHospitalization1').prop("checked", false);
                    $('#RecentHospitalization2').prop("checked", false);
                    $('#RecentHospitalizationComment').val('');
                    $('#divRecentHospitalization').hide();
                }
                if (data.ChildSpecialDiet == 1) {
                    $('#ChildSpecialDiet1').prop("checked", true);
                    $('#divChildSpecialDiet').show();
                    $('#SpecialDietComment').val(data.SpecialDietComment);
                }
                else if (data.ChildSpecialDiet == 2) {
                    $('#ChildSpecialDiet2').prop("checked", true);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();

                }
                else {
                    $('#ChildSpecialDiet1').prop("checked", false);
                    $('#ChildSpecialDiet2').prop("checked", false);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();
                }
                if (data.FoodAllergies == 1) {
                    $('#FoodAllergies1').prop("checked", true);
                    $('#divFoodAllergies').show();
                    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
                }
                else if (data.FoodAllergies == 2) {
                    $('#FoodAllergies2').prop("checked", true);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                else {
                    $('#FoodAllergies1').prop("checked", false);
                    $('#FoodAllergies2').prop("checked", false);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                if (data.NutritionalConcern == 1) {
                    $('#NutritionalConcern1').prop("checked", true);
                    $('#divNutritionalConcern').show();
                    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

                }
                else if (data.NutritionalConcern == 2) {
                    $('#NutritionalConcern2').prop("checked", true);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                else {
                    $('#NutritionalConcern1').prop("checked", false);
                    $('#NutritionalConcern2').prop("checked", false);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#FoodPantory').val(data.FoodPantory);
                if (data.childTrouble == 1) {
                    $('#childTrouble1').prop("checked", true);
                    $('#divchildTrouble').show();
                    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

                }
                else if (data.childTrouble == 2) {
                    $('#childTrouble2').prop("checked", true);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                else {
                    $('#childTrouble1').prop("checked", false);
                    $('#childTrouble2').prop("checked", false);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                if (data.spoon == 1) {
                    $('#spoon1').prop("checked", true);
                    $('#divSpoonorForkComment').hide();
                    $('#SpoonorForkComment').val('');
                }
                else if (data.spoon == 2) {
                    $('#spoon2').prop("checked", true);
                    $('#SpoonorForkComment').val(data.SpoonorForkComment);
                    $('#divSpoonorForkComment').show();
                }
                else {
                    $('#spoon1').prop("checked", false);
                    $('#spoon2').prop("checked", false);
                    $('#SpoonorForkComment').val('');
                    $('#divSpoonorForkComment').hide();
                }
                if (data.feedingtube == 1) {
                    $('#feedingtube1').prop("checked", true);
                    $('#divSpecialFeedingComment').show();
                    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

                }
                else if (data.feedingtube == 2) {
                    $('#feedingtube2').prop("checked", true);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                else {
                    $('#feedingtube1').prop("checked", false);
                    $('#feedingtube2').prop("checked", false);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                if (data.childThin == 1)
                    $('#childThin1').prop("checked", true);
                else if (data.childThin == 2)
                    $('#childThin2').prop("checked", true);
                else if (data.childThin == 3)
                    $('#childThin3').prop("checked", true);
                else if (data.childThin == 4)
                    $('#childThin4').prop("checked", true);
                else if (data.childThin == 5)
                    $('#childThin5').prop("checked", true);
                else {
                    $('#childThin1').prop("checked", false);
                    $('#childThin2').prop("checked", false);
                    $('#childThin3').prop("checked", false);
                    $('#childThin4').prop("checked", false);
                    $('#childThin5').prop("checked", false);
                }
                if (data.Takebottle == 1) {
                    $('#Takebottle1').prop("checked", true);
                    $('#divBottleComment').show();

                    $('#BottleComment').val(data.BottleComment);

                }
                else if (data.Takebottle == 2) {
                    $('#Takebottle2').prop("checked", true);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                else {
                    $('#Takebottle1').prop("checked", false);
                    $('#Takebottle2').prop("checked", false);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                if (data.chewanything == 1) {
                    $('#chewanything1').prop("checked", true);
                    $('#divchewanything').show();
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                }
                else if (data.chewanything == 2) {
                    $('#chewanything2').prop("checked", true);
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                    $('#divchewanything').hide();
                }
                else {
                    $('#chewanything1').prop("checked", false);
                    $('#chewanything2').prop("checked", false);
                    $('#EatOrChewComment').val("");
                    $('#divchewanything').hide();
                }

                if (data.ChildFruitJuicevitaminc == "1") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", true);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.ChildFruitJuicevitaminc == "2") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", true);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", true);
                }
                if (data.ChildWater == "1") {
                    $('#ChildWater1').prop("checked", true);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", false);
                }
                else if (data.ChildWater == "2") {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", true);
                    $('#ChildWater3').prop("checked", false);
                }
                else if (data.EhsChildWater == "3") {
                    $('#EhsChildWater1').prop("checked", false);
                    $('#EhsChildWater2').prop("checked", false);
                    $('#EhsChildWater3').prop("checked", true);
                }
                else {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", false);
                }

                if (data.NA)
                    $('#NA').prop("checked", true);
                else
                    $('#NA').prop("checked", false);

                if (data.Breakfast)
                    $('#Breakfast').prop("checked", true);
                else
                    $('#Breakfast').prop("checked", false);

                if (data.Dinner)
                    $('#Dinner').prop("checked", true);
                else
                    $('#Dinner').prop("checked", false);

                if (data.Lunch)
                    $('#Lunch').prop("checked", true);
                else
                    $('#Lunch').prop("checked", false);

                if (data.Snack)
                    $('#Snack').prop("checked", true);
                else
                    $('#Snack').prop("checked", false);

                if (data.RestrictFood == "1") {
                    $('#RestrictFood1').prop("checked", true);
                    $('#RestrictFood2').prop("checked", false);

                }
                else if (data.RestrictFood == "2") {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", true);
                }
                else {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", false);

                }
                if (data.ChildVitaminSupplment == "1") {
                    $('#ChildVitaminSupplment1').prop("checked", true);
                    $('#ChildVitaminSupplment2').prop("checked", false);
                    $('#divVitaminPopup').show();

                }
                else if (data.ChildVitaminSupplment == "2") {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", true);
                    $('#divVitaminPopup').hide();//Changes on 21Dec2016
                }
                else {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", false);
                    $('#divVitaminPopup').hide();//Changes on 21Dec2016
                }

                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }
                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#Cvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDRinkText').append(div);
                        }
                    });
                }
                //End

            }
            else {
                $('#Cvstext').html('');
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDText').html('');
                $('#ChildDietlist input:checked').each(function () {
                    $(this).prop("checked", false);
                });
                $('#CDRinkText').html('');
                $('#ChildDrinklist input:checked').each(function () {
                    var value = $(this).val();
                    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                        $(this).next('label').remove();
                        $(this).remove();
                    }
                    else
                        $(this).prop("checked", false);
                });
                if (data.PersistentNausea == 1) {
                    $('#PersistentNausea1').prop("checked", true);

                    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
                    $('#divNauseaorVomitingcomment').show();
                }
                else if (data.PersistentNausea == 2) {
                    $('#PersistentNausea2').prop("checked", true);
                    $('#divNauseaorVomitingcomment').hide();
                    $('#NauseaorVomitingcomment').val('');

                }
                else {
                    $('#PersistentNausea1').prop("checked", false);
                    $('#PersistentNausea2').prop("checked", false);
                    $('#NauseaorVomitingcomment').val('');
                    $('#divNauseaorVomitingcomment').hide();
                }
                if (data.PersistentDiarrhea == 1) {
                    $('#PersistentDiarrhea1').prop("checked", true);
                    $('#divdiarrheacomment').show();
                    $('#DiarrheaComment').val(data.DiarrheaComment);

                }
                else if (data.PersistentDiarrhea == 2) {
                    $('#PersistentDiarrhea2').prop("checked", true);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                else {
                    $('#PersistentDiarrhea1').prop("checked", false);
                    $('#PersistentDiarrhea2').prop("checked", false);
                    $('#DiarrheaComment').val('');
                    $('#divdiarrheacomment').hide();
                }
                if (data.PersistentConstipation == 1) {
                    $('#PersistentConstipation1').prop("checked", true);
                    $('#divPersistentConstipation').show();
                    $('#Constipationcomment').val(data.Constipationcomment);

                }
                else if (data.PersistentConstipation == 2) {
                    $('#PersistentConstipation2').prop("checked", true);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();

                }
                else {
                    $('#PersistentConstipation1').prop("checked", false);
                    $('#PersistentConstipation2').prop("checked", false);
                    $('#Constipationcomment').val('');
                    $('#divPersistentConstipation').hide();
                }
                if (data.DramaticWeight == 1) {
                    $('#DramaticWeight1').prop("checked", true);
                    $('#divDramaticWeightchange').show();
                    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
                }
                else if (data.DramaticWeight == 2) {
                    $('#DramaticWeight2').prop("checked", true);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();

                }
                else {
                    $('#DramaticWeight1').prop("checked", false);
                    $('#DramaticWeight2').prop("checked", false);
                    $('#DramaticWeightchangecomment').val('');
                    $('#divDramaticWeightchange').hide();
                }
                if (data.RecentSurgery == 1) {
                    $('#RecentSurgery1').prop("checked", true);
                    $('#divRecentSurgery').show();
                    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


                }
                else if (data.RecentSurgery == 2) {
                    $('#RecentSurgery2').prop("checked", true);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                else {
                    $('#RecentSurgery1').prop("checked", false);
                    $('#RecentSurgery2').prop("checked", false);
                    $('#RecentSurgerycomment').val('');
                    $('#divRecentSurgery').hide();
                }
                if (data.RecentHospitalization == 1) {
                    $('#RecentHospitalization1').prop("checked", true);
                    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
                    $('#divRecentHospitalization').show();

                }
                else if (data.RecentHospitalization == 2) {
                    $('#RecentHospitalization2').prop("checked", true);

                    $('#divRecentHospitalization').hide();
                    $('#RecentHospitalizationComment').val('');
                }
                else {
                    $('#RecentHospitalization1').prop("checked", false);
                    $('#RecentHospitalization2').prop("checked", false);
                    $('#RecentHospitalizationComment').val('');
                    $('#divRecentHospitalization').hide();
                }
                if (data.ChildSpecialDiet == 1) {
                    $('#ChildSpecialDiet1').prop("checked", true);
                    $('#divChildSpecialDiet').show();
                    $('#SpecialDietComment').val(data.SpecialDietComment);
                }
                else if (data.ChildSpecialDiet == 2) {
                    $('#ChildSpecialDiet2').prop("checked", true);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();

                }
                else {
                    $('#ChildSpecialDiet1').prop("checked", false);
                    $('#ChildSpecialDiet2').prop("checked", false);
                    $('#SpecialDietComment').val('');
                    $('#divChildSpecialDiet').hide();
                }
                if (data.FoodAllergies == 1) {
                    $('#FoodAllergies1').prop("checked", true);
                    $('#divFoodAllergies').show();
                    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
                }
                else if (data.FoodAllergies == 2) {
                    $('#FoodAllergies2').prop("checked", true);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                else {
                    $('#FoodAllergies1').prop("checked", false);
                    $('#FoodAllergies2').prop("checked", false);
                    $('#FoodAllergiesComment').val('');
                    $('#divFoodAllergies').hide();


                }
                if (data.NutritionalConcern == 1) {
                    $('#NutritionalConcern1').prop("checked", true);
                    $('#divNutritionalConcern').show();
                    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

                }
                else if (data.NutritionalConcern == 2) {
                    $('#NutritionalConcern2').prop("checked", true);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                else {
                    $('#NutritionalConcern1').prop("checked", false);
                    $('#NutritionalConcern2').prop("checked", false);
                    $('#NutritionAlconcernsComment').val('');
                    $('#divNutritionalConcern').hide();
                }
                if (data.WICNutrition)
                    $('#WICNutrition').prop("checked", true);
                else
                    $('#WICNutrition').prop("checked", false);
                if (data.FoodStamps)
                    $('#FoodStamps').prop("checked", true);
                else
                    $('#FoodStamps').prop("checked", false);
                if (data.NoNutritionProg)
                    $('#NoNutritionProg').prop("checked", true);
                else
                    $('#NoNutritionProg').prop("checked", false);
                $('#FoodPantory').val(data.FoodPantory);
                if (data.childTrouble == 1) {
                    $('#childTrouble1').prop("checked", true);
                    $('#divchildTrouble').show();
                    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

                }
                else if (data.childTrouble == 2) {
                    $('#childTrouble2').prop("checked", true);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                else {
                    $('#childTrouble1').prop("checked", false);
                    $('#childTrouble2').prop("checked", false);
                    $('#ChewingorSwallowingcomment').val('');
                    $('#divchildTrouble').hide();
                }
                if (data.spoon == 1) {
                    $('#spoon1').prop("checked", true);
                    $('#divSpoonorForkComment').hide();
                    $('#SpoonorForkComment').val('');
                }
                else if (data.spoon == 2) {
                    $('#spoon2').prop("checked", true);
                    $('#SpoonorForkComment').val(data.SpoonorForkComment);
                    $('#divSpoonorForkComment').show();
                }
                else {
                    $('#spoon1').prop("checked", false);
                    $('#spoon2').prop("checked", false);
                    $('#SpoonorForkComment').val('');
                    $('#divSpoonorForkComment').hide();
                }
                if (data.feedingtube == 1) {
                    $('#feedingtube1').prop("checked", true);
                    $('#divSpecialFeedingComment').show();
                    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

                }
                else if (data.feedingtube == 2) {
                    $('#feedingtube2').prop("checked", true);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                else {
                    $('#feedingtube1').prop("checked", false);
                    $('#feedingtube2').prop("checked", false);
                    $('#SpecialFeedingComment').val('');
                    $('#divSpecialFeedingComment').hide();
                }
                if (data.childThin == 1)
                    $('#childThin1').prop("checked", true);
                else if (data.childThin == 2)
                    $('#childThin2').prop("checked", true);
                else if (data.childThin == 3)
                    $('#childThin3').prop("checked", true);
                else if (data.childThin == 4)
                    $('#childThin4').prop("checked", true);
                else if (data.childThin == 5)
                    $('#childThin5').prop("checked", true);
                else {
                    $('#childThin1').prop("checked", false);
                    $('#childThin2').prop("checked", false);
                    $('#childThin3').prop("checked", false);
                    $('#childThin4').prop("checked", false);
                    $('#childThin5').prop("checked", false);
                }
                if (data.Takebottle == 1) {
                    $('#Takebottle1').prop("checked", true);
                    $('#divBottleComment').show();

                    $('#BottleComment').val(data.BottleComment);

                }
                else if (data.Takebottle == 2) {
                    $('#Takebottle2').prop("checked", true);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                else {
                    $('#Takebottle1').prop("checked", false);
                    $('#Takebottle2').prop("checked", false);
                    $('#BottleComment').val('');
                    $('#divBottleComment').hide();
                }
                if (data.chewanything == 1) {
                    $('#chewanything1').prop("checked", true);
                    $('#divchewanything').show();
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                }
                else if (data.chewanything == 2) {
                    $('#chewanything2').prop("checked", true);
                    $('#EatOrChewComment').val(data.EatOrChewComment);
                    $('#divchewanything').hide();
                }
                else {
                    $('#chewanything1').prop("checked", false);
                    $('#chewanything2').prop("checked", false);
                    $('#EatOrChewComment').val("");
                    $('#divchewanything').hide();
                }

                if (data.ChildFruitJuicevitaminc == "1") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", true);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else if (data.ChildFruitJuicevitaminc == "2") {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", true);
                    $('#ChildFruitJuicevitaminc3').prop("checked", false);
                }
                else {
                    $('#ChildFruitJuicevitaminc1').prop("checked", false);
                    $('#ChildFruitJuicevitaminc2').prop("checked", false);
                    $('#ChildFruitJuicevitaminc3').prop("checked", true);
                }
                if (data.ChildWater == "1") {
                    $('#ChildWater1').prop("checked", true);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", false);
                }
                else if (data.ChildWater == "2") {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", true);
                    $('#ChildWater3').prop("checked", false);
                }
                else {
                    $('#ChildWater1').prop("checked", false);
                    $('#ChildWater2').prop("checked", false);
                    $('#ChildWater3').prop("checked", true);
                }

                if (data.NA)
                    $('#NA').prop("checked", true);
                else
                    $('#NA').prop("checked", false);

                if (data.Breakfast)
                    $('#Breakfast').prop("checked", true);
                else
                    $('#Breakfast').prop("checked", false);

                if (data.Dinner)
                    $('#Dinner').prop("checked", true);
                else
                    $('#Dinner').prop("checked", false);

                if (data.Lunch)
                    $('#Lunch').prop("checked", true);
                else
                    $('#Lunch').prop("checked", false);

                if (data.Snack)
                    $('#Snack').prop("checked", true);
                else
                    $('#Snack').prop("checked", false);

                if (data.RestrictFood == "1") {
                    $('#RestrictFood1').prop("checked", true);
                    $('#RestrictFood2').prop("checked", false);

                }
                else if (data.RestrictFood == "2") {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", true);
                }
                else {
                    $('#RestrictFood1').prop("checked", false);
                    $('#RestrictFood2').prop("checked", false);

                }
                if (data.ChildVitaminSupplment == "1") {
                    $('#ChildVitaminSupplment1').prop("checked", true);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }
                else if (data.ChildVitaminSupplment == "2") {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", true);

                }
                else {
                    $('#ChildVitaminSupplment1').prop("checked", false);
                    $('#ChildVitaminSupplment2').prop("checked", false);

                }

                //questions
                if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
                    $('#divEhsVitaminPopup').show();
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "7") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildVitaminSupplementlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#Cvstext').append(div);
                        }
                    });


                    //Child Diet Pop

                    $('#ChildDietlist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "8") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDietlist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDietlist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDText').append(div);
                        }
                    });

                    //Child Drink Pop

                    $('#ChildDrinklist input:checked').each(function () {
                        $(this).prop("checked", false);
                    });
                    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
                        if (data._Childhealthnutrition[i].Questionid == "9") {
                            if (data._Childhealthnutrition[i].MasterId == "") {
                                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
                            }
                            else {
                                $('#ChildDrinklist input[type=checkbox]').each(function () {
                                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
                                        $(this).prop("checked", true);
                                });
                            }
                        }
                    }
                    $('#ChildDrinklist input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                            $('#CDRinkText').append(div);
                        }
                    });
                }
                //End



                if (data.NotHealthStaff) {
                    $('#NotHealthStaff').prop("checked", true);
                    $('#ChildReferalCriteria').attr("disabled", true);
                }
                else {

                    $('#NotHealthStaff').prop("checked", false);
                    $('#ChildReferalCriteria').attr("disabled", false);
                }


            }
            //$('#Cvstext').html('');
            //$('#ChildVitaminSupplementlist input:checked').each(function () {
            //    $(this).prop("checked", false);
            //});
            //$('#CDText').html('');
            //$('#ChildDietlist input:checked').each(function () {
            //    $(this).prop("checked", false);
            //});
            //$('#CDRinkText').html('');
            //$('#ChildDrinklist input:checked').each(function () {
            //    var value = $(this).val();
            //    if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
            //        $(this).next('label').remove();
            //        $(this).remove();
            //    }
            //    else
            //        $(this).prop("checked", false);
            //});
            //if (data.PersistentNausea == 1) {
            //    $('#PersistentNausea1').prop("checked", true);

            //    $('#NauseaorVomitingcomment').val(data.NauseaorVomitingcomment);
            //    $('#divNauseaorVomitingcomment').show();
            //}
            //else if (data.PersistentNausea == 2) {
            //    $('#PersistentNausea2').prop("checked", true);
            //    $('#divNauseaorVomitingcomment').hide();
            //    $('#NauseaorVomitingcomment').val('');

            //}
            //else {
            //    $('#PersistentNausea1').prop("checked", false);
            //    $('#PersistentNausea2').prop("checked", false);
            //    $('#NauseaorVomitingcomment').val('');
            //    $('#divNauseaorVomitingcomment').hide();
            //}
            //if (data.PersistentDiarrhea == 1) {
            //    $('#PersistentDiarrhea1').prop("checked", true);
            //    $('#divdiarrheacomment').show();
            //    $('#DiarrheaComment').val(data.DiarrheaComment);

            //}
            //else if (data.PersistentDiarrhea == 2) {
            //    $('#PersistentDiarrhea2').prop("checked", true);
            //    $('#DiarrheaComment').val('');
            //    $('#divdiarrheacomment').hide();
            //}
            //else {
            //    $('#PersistentDiarrhea1').prop("checked", false);
            //    $('#PersistentDiarrhea2').prop("checked", false);
            //    $('#DiarrheaComment').val('');
            //    $('#divdiarrheacomment').hide();
            //}
            //if (data.PersistentConstipation == 1) {
            //    $('#PersistentConstipation1').prop("checked", true);
            //    $('#divPersistentConstipation').show();
            //    $('#Constipationcomment').val(data.Constipationcomment);

            //}
            //else if (data.PersistentConstipation == 2) {
            //    $('#PersistentConstipation2').prop("checked", true);
            //    $('#Constipationcomment').val('');
            //    $('#divPersistentConstipation').hide();

            //}
            //else {
            //    $('#PersistentConstipation1').prop("checked", false);
            //    $('#PersistentConstipation2').prop("checked", false);
            //    $('#Constipationcomment').val('');
            //    $('#divPersistentConstipation').hide();
            //}
            //if (data.DramaticWeight == 1) {
            //    $('#DramaticWeight1').prop("checked", true);
            //    $('#divDramaticWeightchange').show();
            //    $('#DramaticWeightchangecomment').val(data.DramaticWeightchangecomment);
            //}
            //else if (data.DramaticWeight == 2) {
            //    $('#DramaticWeight2').prop("checked", true);
            //    $('#DramaticWeightchangecomment').val('');
            //    $('#divDramaticWeightchange').hide();

            //}
            //else {
            //    $('#DramaticWeight1').prop("checked", false);
            //    $('#DramaticWeight2').prop("checked", false);
            //    $('#DramaticWeightchangecomment').val('');
            //    $('#divDramaticWeightchange').hide();
            //}
            //if (data.RecentSurgery == 1) {
            //    $('#RecentSurgery1').prop("checked", true);
            //    $('#divRecentSurgery').show();
            //    $('#RecentSurgerycomment').val(data.RecentSurgerycomment);


            //}
            //else if (data.RecentSurgery == 2) {
            //    $('#RecentSurgery2').prop("checked", true);
            //    $('#RecentSurgerycomment').val('');
            //    $('#divRecentSurgery').hide();
            //}
            //else {
            //    $('#RecentSurgery1').prop("checked", false);
            //    $('#RecentSurgery2').prop("checked", false);
            //    $('#RecentSurgerycomment').val('');
            //    $('#divRecentSurgery').hide();
            //}
            //if (data.RecentHospitalization == 1) {
            //    $('#RecentHospitalization1').prop("checked", true);
            //    $('#RecentHospitalizationComment').val(data.RecentHospitalizationComment);
            //    $('#divRecentHospitalization').show();

            //}
            //else if (data.RecentHospitalization == 2) {
            //    $('#RecentHospitalization2').prop("checked", true);

            //    $('#divRecentHospitalization').hide();
            //    $('#RecentHospitalizationComment').val('');
            //}
            //else {
            //    $('#RecentHospitalization1').prop("checked", false);
            //    $('#RecentHospitalization2').prop("checked", false);
            //    $('#RecentHospitalizationComment').val('');
            //    $('#divRecentHospitalization').hide();
            //}
            //if (data.ChildSpecialDiet == 1) {
            //    $('#ChildSpecialDiet1').prop("checked", true);
            //    $('#divChildSpecialDiet').show();
            //    $('#SpecialDietComment').val(data.SpecialDietComment);
            //}
            //else if (data.ChildSpecialDiet == 2) {
            //    $('#ChildSpecialDiet2').prop("checked", true);
            //    $('#SpecialDietComment').val('');
            //    $('#divChildSpecialDiet').hide();

            //}
            //else {
            //    $('#ChildSpecialDiet1').prop("checked", false);
            //    $('#ChildSpecialDiet2').prop("checked", false);
            //    $('#SpecialDietComment').val('');
            //    $('#divChildSpecialDiet').hide();
            //}
            //if (data.FoodAllergies == 1) {
            //    $('#FoodAllergies1').prop("checked", true);
            //    $('#divFoodAllergies').show();
            //    $('#FoodAllergiesComment').val(data.FoodAllergiesComment);
            //}
            //else if (data.FoodAllergies == 2) {
            //    $('#FoodAllergies2').prop("checked", true);
            //    $('#FoodAllergiesComment').val('');
            //    $('#divFoodAllergies').hide();


            //}
            //else {
            //    $('#FoodAllergies1').prop("checked", false);
            //    $('#FoodAllergies2').prop("checked", false);
            //    $('#FoodAllergiesComment').val('');
            //    $('#divFoodAllergies').hide();


            //}
            //if (data.NutritionalConcern == 1) {
            //    $('#NutritionalConcern1').prop("checked", true);
            //    $('#divNutritionalConcern').show();
            //    $('#NutritionAlconcernsComment').val(data.NutritionAlconcernsComment);

            //}
            //else if (data.NutritionalConcern == 2) {
            //    $('#NutritionalConcern2').prop("checked", true);
            //    $('#NutritionAlconcernsComment').val('');
            //    $('#divNutritionalConcern').hide();
            //}
            //else {
            //    $('#NutritionalConcern1').prop("checked", false);
            //    $('#NutritionalConcern2').prop("checked", false);
            //    $('#NutritionAlconcernsComment').val('');
            //    $('#divNutritionalConcern').hide();
            //}
            //if (data.WICNutrition)
            //    $('#WICNutrition').prop("checked", true);
            //else
            //    $('#WICNutrition').prop("checked", false);
            //if (data.FoodStamps)
            //    $('#FoodStamps').prop("checked", true);
            //else
            //    $('#FoodStamps').prop("checked", false);
            //if (data.NoNutritionProg)
            //    $('#NoNutritionProg').prop("checked", true);
            //else
            //    $('#NoNutritionProg').prop("checked", false);
            //$('#FoodPantory').val(data.FoodPantory);
            //if (data.childTrouble == 1) {
            //    $('#childTrouble1').prop("checked", true);
            //    $('#divchildTrouble').show();
            //    $('#ChewingorSwallowingcomment').val(data.ChewingorSwallowingcomment);

            //}
            //else if (data.childTrouble == 2) {
            //    $('#childTrouble2').prop("checked", true);
            //    $('#ChewingorSwallowingcomment').val('');
            //    $('#divchildTrouble').hide();
            //}
            //else {
            //    $('#childTrouble1').prop("checked", false);
            //    $('#childTrouble2').prop("checked", false);
            //    $('#ChewingorSwallowingcomment').val('');
            //    $('#divchildTrouble').hide();
            //}
            //if (data.spoon == 1) {
            //    $('#spoon1').prop("checked", true);
            //    $('#divSpoonorForkComment').hide();
            //    $('#SpoonorForkComment').val('');
            //}
            //else if (data.spoon == 2) {
            //    $('#spoon2').prop("checked", true);
            //    $('#SpoonorForkComment').val(data.SpoonorForkComment);
            //    $('#divSpoonorForkComment').show();
            //}
            //else {
            //    $('#spoon1').prop("checked", false);
            //    $('#spoon2').prop("checked", false);
            //    $('#SpoonorForkComment').val('');
            //    $('#divSpoonorForkComment').hide();
            //}
            //if (data.feedingtube == 1) {
            //    $('#feedingtube1').prop("checked", true);
            //    $('#divSpecialFeedingComment').show();
            //    $('#SpecialFeedingComment').val(data.SpecialFeedingComment);

            //}
            //else if (data.feedingtube == 2) {
            //    $('#feedingtube2').prop("checked", true);
            //    $('#SpecialFeedingComment').val('');
            //    $('#divSpecialFeedingComment').hide();
            //}
            //else {
            //    $('#feedingtube1').prop("checked", false);
            //    $('#feedingtube2').prop("checked", false);
            //    $('#SpecialFeedingComment').val('');
            //    $('#divSpecialFeedingComment').hide();
            //}
            //if (data.childThin == 1)
            //    $('#childThin1').prop("checked", true);
            //else if (data.childThin == 2)
            //    $('#childThin2').prop("checked", true);
            //else if (data.childThin == 3)
            //    $('#childThin3').prop("checked", true);
            //else if (data.childThin == 4)
            //    $('#childThin4').prop("checked", true);
            //else if (data.childThin == 5)
            //    $('#childThin5').prop("checked", true);
            //else {
            //    $('#childThin1').prop("checked", false);
            //    $('#childThin2').prop("checked", false);
            //    $('#childThin3').prop("checked", false);
            //    $('#childThin4').prop("checked", false);
            //    $('#childThin5').prop("checked", false);
            //}
            //if (data.Takebottle == 1) {
            //    $('#Takebottle1').prop("checked", true);
            //    $('#divBottleComment').show();

            //    $('#BottleComment').val(data.BottleComment);

            //}
            //else if (data.Takebottle == 2) {
            //    $('#Takebottle2').prop("checked", true);
            //    $('#BottleComment').val('');
            //    $('#divBottleComment').hide();
            //}
            //else {
            //    $('#Takebottle1').prop("checked", false);
            //    $('#Takebottle2').prop("checked", false);
            //    $('#BottleComment').val('');
            //    $('#divBottleComment').hide();
            //}
            //if (data.chewanything == 1) {
            //    $('#chewanything1').prop("checked", true);
            //    $('#divchewanything').show();
            //    $('#EatOrChewComment').val(data.EatOrChewComment);
            //}
            //else if (data.chewanything == 2) {
            //    $('#chewanything2').prop("checked", true);
            //    $('#EatOrChewComment').val(data.EatOrChewComment);
            //    $('#divchewanything').hide();
            //}
            //else {
            //    $('#chewanything1').prop("checked", false);
            //    $('#chewanything2').prop("checked", false);
            //    $('#EatOrChewComment').val("");
            //    $('#divchewanything').hide();
            //}
            //if (data.NotHealthStaff)
            //{
            //    $('#NotHealthStaff').prop("checked", true);
            //    $('#ChildReferalCriteria').attr("disabled",true);
            //}
            //else
            //{

            //    $('#NotHealthStaff').prop("checked", false);
            //    $('#ChildReferalCriteria').attr("disabled", false);
            //}












            //0410
            $('#AHeight').val(data.AHeight);
            $('#AWeight').val(data.AWeight);
            $('#HeadCircle').val(data.HeadCircle);
            $('#AssessmentDate').val(data.AssessmentDate);
            if (data.HWInput == 1)
                $('#HWInput1').prop("checked", true);
            else if (data.HWInput == 2)
                $('#HWInput2').prop("checked", true);
            else {
                $('#HWInput1').prop("checked", false);
                $('#HWInput2').prop("checked", false);
            }
            if (data.ChangeinAppetite == 1)
                $('#ChangeinAppetite1').prop("checked", true);
            else if (data.ChangeinAppetite == 2)
                $('#ChangeinAppetite2').prop("checked", true);
            else if (data.ChangeinAppetite == 3)
                $('#ChangeinAppetite3').prop("checked", true);
            else {
                $('#ChangeinAppetite1').prop("checked", false);
                $('#ChangeinAppetite2').prop("checked", false);
                $('#ChangeinAppetite3').prop("checked", false);
            }
            $('[name=ChildHungry]').val(data.ChildHungry);
            $('#DdlChildFeed').val(data.ChildFeed);
            $('#DdlChildFormula').val(data.ChildFeed);
            $('#ChildFeedCereal').val(data.ChildFeedCereal);
            $('#ChildFeedMarshfood').val(data.ChildFeedMarshfood);
            $('#ChildFeedChopedfood').val(data.ChildFeedChopedfood);
            $('#ChildFingerFood').val(data.ChildFingerFood);
            if (data.ChildFingerFEDFood == 1)
                $('#ChildFingerFEDFood1').prop("checked", true);
            else if (data.ChildFingerFEDFood == 2)
                $('#ChildFingerFEDFood2').prop("checked", true);
            else if (data.ChildFingerFEDFood == 3)
                $('#ChildFingerFEDFood3').prop("checked", true);
            else {
                $('#ChildFingerFEDFood1').prop("checked", false);
                $('#ChildFingerFEDFood2').prop("checked", false);
                $('#ChildFingerFEDFood3').prop("checked", false);
            }
            $('#ChildFruitJuice').val(data.ChildFruitJuice);
            if (data.ChildFruitJuicevitaminc == 1)
                $('#ChildFruitJuicevitaminc1').prop("checked", true);
            else if (data.ChildFruitJuicevitaminc == 2)
                $('#ChildFruitJuicevitaminc2').prop("checked", true);
            else if (data.ChildFruitJuicevitaminc == 3)
                $('#ChildFruitJuicevitaminc3').prop("checked", true);
            else {
                $('#ChildFruitJuicevitaminc1').prop("checked", false);
                $('#ChildFruitJuicevitaminc2').prop("checked", false);
                $('#ChildFruitJuicevitaminc3').prop("checked", false);
            }
            if (data.ChildWater == 1)
                $('#ChildWater1').prop("checked", true);
            else if (data.ChildWater == 2)
                $('#ChildWater2').prop("checked", true);
            else if (data.ChildWater == 3)
                $('#ChildWater3').prop("checked", true);
            else {
                $('#ChildWater1').prop("checked", false);
                $('#ChildWater2').prop("checked", false);
                $('#ChildWater3').prop("checked", false);
            }
            if (data.Breakfast)
                $('#Breakfast').prop("checked", true);
            else
                $('#Breakfast').prop("checked", false);
            if (data.Lunch)
                $('#Lunch').prop("checked", true);
            else
                $('#Lunch').prop("checked", false);
            if (data.Snack)
                $('#Snack').prop("checked", true);
            else
                $('#Snack').prop("checked", false);
            if (data.NA)
                $('#NA').prop("checked", true);
            else
                $('#NA').prop("checked", false);
            if (data.Dinner)
                $('#Dinner').prop("checked", true);
            else
                $('#Dinner').prop("checked", false);
            $('#ChildReferalCriteria').val(data.ChildReferalCriteria);
            $('#DdlChildFormula').val(data.ChildFormula);


            $('#Clientbminame').text($('#Cfirstname').val() + ' ' + $('#Cmiddlename').val() + ' ' + $('#Clastname').val());
            $('#ClientDob').text($('#CDOB').val());
            //if (data._Childhealthnutrition != null && data._Childhealthnutrition.length > 0) {
            //    $('#ChildVitaminSupplementlist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "7") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildVitaminSupplementlist').append('<br><input  name="PostedPostedChildVitamin.CDietInfoID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildVitaminSupplementlist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildVitaminSupplementlist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#Cvstext').append(div);
            //        }
            //    });


            //    //Child Diet Pop

            //    $('#ChildDietlist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "8") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildDietlist').append('<br><input  name="PostedPostedChildDietFull.CDietInfoID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildDietlist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildDietlist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#CDText').append(div);
            //        }
            //    });

            //    //Child Drink Pop

            //    $('#ChildDrinklist input:checked').each(function () {
            //        $(this).prop("checked", false);
            //    });
            //    for (var i = 0; i < data._Childhealthnutrition.length; i++) {
            //        if (data._Childhealthnutrition[i].Questionid == "9") {
            //            if (data._Childhealthnutrition[i].MasterId == "") {
            //                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
            //    'type="checkbox" checked value="$' + data._Childhealthnutrition[i].Description + '?"><label>' + data._Childhealthnutrition[i].Description + '</label>');
            //            }
            //            else {
            //                $('#ChildDrinklist input[type=checkbox]').each(function () {
            //                    if ($(this).val() == data._Childhealthnutrition[i].MasterId)
            //                        $(this).prop("checked", true);
            //                });
            //            }
            //        }
            //    }
            //    $('#ChildDrinklist input:checked').each(function () {
            //        if ($(this).prop("checked")) {
            //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
            //            $('#CDRinkText').append(div);
            //        }
            //    });
            //}
            // $('#Health').show();
            if (data.ImmunizationRecords != null && data.ImmunizationRecords.length > 0) {
                $('#Immunization > tbody > tr').remove();
                var tr = "";
                var immunizatiocount = 0;
                for (var i = 0; i < data.ImmunizationRecords.length; i++) {
                    tr = "";
                    tr = tr + '<tr><td width="200px">' + data.ImmunizationRecords[i].Dose + '<input type="hidden" value="' + data.ImmunizationRecords[i].Dose + '" name="imminization[' + immunizatiocount + '].dose" />' +
                               '<input type="hidden" value="' + data.ImmunizationRecords[i].ImmunizationId + '"  name="Imminization[' + immunizatiocount + '].ImmunizationId" /><input type="hidden" value="' + data.ImmunizationRecords[i].ImmunizationmasterId + '" name="Imminization[' + immunizatiocount + '].ImmunizationmasterId" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose1 + '" name="Imminization[' + immunizatiocount + '].Dose1" /></td>';
                    if (data.ImmunizationRecords[i].Preempt1)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt1" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt1" /></td>';
                    if (data.ImmunizationRecords[i].Exempt1)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt1" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt1" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose2 + '" name="Imminization[' + immunizatiocount + '].Dose2" /></td>';
                    if (data.ImmunizationRecords[i].Preempt2)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt2" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt2" /></td>';
                    if (data.ImmunizationRecords[i].Exempt2)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt2" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt2" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose3 + '" name="Imminization[' + immunizatiocount + '].Dose3" /></td>';
                    if (data.ImmunizationRecords[i].Preempt3)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt3" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt3" /></td>';
                    if (data.ImmunizationRecords[i].Exempt3)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt3" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt3" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose4 + '" name="Imminization[' + immunizatiocount + '].Dose4" /></td>';
                    if (data.ImmunizationRecords[i].Preempt4)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt4" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt4" /></td>';
                    if (data.ImmunizationRecords[i].Exempt4)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt4" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt4" /></td>';
                    tr = tr + '<td><input type="text" onblur="return validatedateChilddateofbirth(this);" placeholder="MM/DD/YYYY" value="' + data.ImmunizationRecords[i].Dose5 + '" name="Imminization[' + immunizatiocount + '].Dose5" /></td>';
                    if (data.ImmunizationRecords[i].Preempt5)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Preempt5" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Preempt5" /></td>';
                    if (data.ImmunizationRecords[i].Exempt5)
                        tr = tr + '<td align="center"><input type="checkbox" value="true" checked="checked" name="Imminization[' + immunizatiocount + '].Exempt5" /></td>';
                    else
                        tr = tr + '<td align="center"><input type="checkbox" value="true" name="Imminization[' + immunizatiocount + '].Exempt5" /></td>';
                    $('#Immunization > tbody').append(tr);
                    immunizatiocount = immunizatiocount + 1;
                }

                $('#Immunization > tbody tr').each(function () {
                    var end = new Date();
                    $(this).find(':input[type="text"]').each(function () {
                        $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                    });

                });
            }




            //$('#Physical').removeClass("active");
            //$('#Vision').removeClass("active");
            //$('#Hearing').removeClass("active");
            //$('#Develop').removeClass("active");
            //$('#Dental').removeClass("active");
            //$('#Speech').removeClass("active");
            //$('#Screeningallowed').removeClass("active");
            //$('#Screeningallowed').addClass("active");


            //$('#addPhysical').removeClass("active").removeClass("in");
            //$('#addVision').removeClass("active").removeClass("in");
            //$('#addHearing').removeClass("active").removeClass("in");
            //$('#addDevelop').removeClass("active").removeClass("in");
            //$('#addDental').removeClass("active").removeClass("in");
            //$('#addSpeech').removeClass("active").removeClass("in");
            //$('#AllowScreening').removeClass("active").removeClass("in");
            //$('#AllowScreening').addClass("active").addClass("in");





            //if (data._Screening != null) {

            //    $('#F001physicalDate').val(data._Screening.F001physicalDate)
            //    $('#F002physicalResults').val(data._Screening.F002physicalResults)
            //    $('#F003physicallFOReason').val(data._Screening.F003physicallFOReason)
            //    $('#F004medFollowup').val(data._Screening.F004medFollowup)
            //    $('#F005MedFOComments').val(data._Screening.F005MedFOComments)
            //    $('#F006bpResults').val(data._Screening.F006bpResults)
            //    $('#F007hgDate').val(data._Screening.F007hgDate)
            //    $('#FhgStatus').val(data._Screening.F008hgStatus)
            //    $('#F009hgResults').val(data._Screening.F009hgResults)
            //    $('#F010hgReferralDate').val(data._Screening.F010hgReferralDate)
            //    $('#F011hgComments').val(data._Screening.F011hgComments)
            //    $('#F012hgDate2').val(data._Screening.F012hgDate2)
            //    $('#F013hgResults2').val(data._Screening.F013hgResults2)
            //    $('#F014hgFOStatus').val(data._Screening.F014hgFOStatus)
            //    $('#F015leadDate').val(data._Screening.F015leadDate)
            //    $('#F016leadResults').val(data._Screening.F016leadResults)
            //    $('#F017leadReferDate').val(data._Screening.F017leadReferDate)
            //    $('#F018leadComments').val(data._Screening.F018leadComments)
            //    $('#F019leadDate2').val(data._Screening.F019leadDate2)
            //    $('#F020leadResults2').val(data._Screening.F020leadResults2)
            //    $('#F021leadFOStatus').val(data._Screening.F021leadFOStatus)
            //    $('#v022date').val(data._Screening.v022date)
            //    $('#v023results').val(data._Screening.v023results)
            //    $('#v024comments').val(data._Screening.v024comments)
            //    $('#v025dateR1').val(data._Screening.v025dateR1)
            //    $('#v026resultsR1').val(data._Screening.v026resultsR1)
            //    $('#v027commentsR1').val(data._Screening.v027commentsR1)
            //    $('#v028dateR2').val(data._Screening.v028dateR2)
            //    $('#v029resultsR2').val(data._Screening.v029resultsR2)
            //    $('#v030commentsR2').val(data._Screening.v030commentsR2)
            //    $('#v031ReferralDate').val(data._Screening.v031ReferralDate)
            //    $('#v032Treatment').val(data._Screening.v032Treatment)
            //    $('#v033TreatmentComments').val(data._Screening.v033TreatmentComments)
            //    $('#v034Completedate').val(data._Screening.v034Completedate)
            //    $('#v035ExamStatus').val(data._Screening.v035ExamStatus)
            //    $('#h036Date').val(data._Screening.h036Date)
            //    $('#h037Results').val(data._Screening.h037Results)
            //    $('#h038Comments').val(data._Screening.h038Comments)
            //    $('#h039DateR1').val(data._Screening.h039DateR1)
            //    $('#h040ResultsR1').val(data._Screening.h040ResultsR1)
            //    $('#h041CommentsR1').val(data._Screening.h041CommentsR1)
            //    $('#h042DateR2').val(data._Screening.h042DateR2)
            //    $('#h043ResultsR2').val(data._Screening.h043ResultsR2)
            //    $('#h044CommentsR2').val(data._Screening.h044CommentsR2)
            //    $('#h045ReferralDate').val(data._Screening.h045ReferralDate)
            //    $('#h046Treatment').val(data._Screening.h046Treatment)
            //    $('#h047TreatmentComments').val(data._Screening.h047TreatmentComments)
            //    $('#h048CompleteDate').val(data._Screening.h048CompleteDate)
            //    $('#h049ExamStatus').val(data._Screening.h049ExamStatus)
            //    $('#d050evDate').val(data._Screening.d050evDate)
            //    $('#d051NameDEV').val(data._Screening.d051NameDEV)
            //    $('#d052evResults').val(data._Screening.d052evResults)
            //    $('#d053evResultsDetails').val(data._Screening.d053evResultsDetails)
            //    $('#d054evDate2').val(data._Screening.d054evDate2)
            //    $('#d055evResults2').val(data._Screening.d055evResults2)
            //    $('#d056evReferral').val(data._Screening.d056evReferral)
            //    $('#d057evFOStatus').val(data._Screening.d057evFOStatus)
            //    $('#d058evComments').val(data._Screening.d058evComments)
            //    $('#d059evTool').val(data._Screening.d059evTool)
            //    $('#E060denDate').val(data._Screening.E060denDate)
            //    $('#E061denResults').val(data._Screening.E061denResults)
            //    $('#E062denPrevent').val(data._Screening.E062denPrevent)
            //    $('#E063denReferralDate').val(data._Screening.E063denReferralDate)
            //    $('#E064denTreatment').val(data._Screening.E064denTreatment)
            //    $('#E065denTreatmentComments').val(data._Screening.E065denTreatmentComments)
            //    $('#E066denTreatmentReceive').val(data._Screening.E066denTreatmentReceive)
            //    $('#s067Date').val(data._Screening.s067Date)
            //    $('#s068NameTCR').val(data._Screening.s068NameTCR)
            //    $('#s069Details').val(data._Screening.s069Details)
            //    $('#s070Results').val(data._Screening.s070Results)
            //    $('#s071RescreenTCR').val(data._Screening.s071RescreenTCR)
            //    $('#s072RescreenTCRDate').val(data._Screening.s072RescreenTCRDate)
            //    $('#s073RescreenTCRResults').val(data._Screening.s073RescreenTCRResults)
            //    $('#s074ReferralDC').val(data._Screening.s074ReferralDC)
            //    $('#s075ReferDate').val(data._Screening.s075ReferDate)
            //    $('#s076DCDate').val(data._Screening.s076DCDate)
            //    $('#s077NameDC').val(data._Screening.s077NameDC)
            //    $('#s078DetailDC').val(data._Screening.s078DetailDC)
            //    $('#s079DCDate2').val(data._Screening.s079DCDate2)
            //    $('#s080DetailDC2').val(data._Screening.s080DetailDC2)
            //    $('#s081FOStatus').val(data._Screening.s081FOStatus)

            //    if (data._Screening.Parentname != null)
            //        $('#Parentscreening').val(data._Screening.Parentname);
            //    else
            //        $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val())



            //    if (data._Screening.AddPhysical == "1") {
            //        $('#AddPhysical').prop("checked", true);
            //        $('#Physical').show();
            //    }
            //    else if (data._Screening.AddPhysical == "2") {
            //        $('#AddPhysical1').prop("checked", true);
            //        $('#Physical').hide();
            //    }
            //    else {
            //        $('#AddPhysical').prop("checked", false);
            //        $('#AddPhysical1').prop("checked", false);
            //        $('#Physical').hide();
            //    }
            //    if (data._Screening.AddVision == "1") {
            //        $('#AddVision').prop("checked", true);
            //        $('#Vision').show();
            //    }
            //    else if (data._Screening.AddVision == "2") {
            //        $('#AddVision1').prop("checked", true);
            //        $('#Vision').hide();
            //    }
            //    else {
            //        $('#AddVision').prop("checked", false);
            //        $('#AddVision1').prop("checked", false);
            //        $('#Vision').hide();
            //    }
            //    if (data._Screening.AddHearing == "1") {
            //        $('#AddHearing').prop("checked", true);
            //        $('#Hearing').show();

            //    }
            //    else if (data._Screening.AddHearing == "2") {
            //        $('#AddHearing1').prop("checked", true);
            //        $('#Hearing').hide();
            //    }
            //    else {
            //        $('#AddHearing').prop("checked", false);
            //        $('#AddHearing1').prop("checked", false);
            //        $('#Hearing').hide();
            //    }
            //    if (data._Screening.AddDental == "1") {
            //        $('#AddDental').prop("checked", true);
            //        $('#Dental').show();
            //    }
            //    else if (data._Screening.AddDental == "2") {
            //        $('#AddDental1').prop("checked", true);
            //        $('#Dental').hide();
            //    }
            //    else {
            //        $('#AddDental').prop("checked", false);
            //        $('#AddDental1').prop("checked", false);
            //        $('#Dental').hide();
            //    }
            //    if (data._Screening.AddDevelop == "1") {
            //        $('#AddDevelop').prop("checked", true);
            //        $('#Develop').show();
            //    }
            //    else if (data._Screening.AddDevelop == "2") {
            //        $('#AddDevelop1').prop("checked", true);
            //        $('#Develop').hide();
            //    }
            //    else {
            //        $('#AddDevelop').prop("checked", false);
            //        $('#AddDevelop1').prop("checked", false);
            //        $('#Develop').hide();
            //    }
            //    if (data._Screening.AddSpeech == "1") {
            //        $('#AddSpeech').prop("checked", true);
            //        $('#Speech').show();
            //    }
            //    else if (data._Screening.AddSpeech == "2") {
            //        $('#AddSpeech1').prop("checked", true);
            //        $('#Speech').hide();
            //    }
            //    else {
            //        $('#AddSpeech').prop("checked", false);
            //        $('#AddSpeech1').prop("checked", false);
            //        $('#Speech').hide();
            //    }

            //    //18-11-2016

            //    if (data._Screening.PhysicalFileName != "" && data._Screening.PhysicalFileName != null) {
            //        $('#Allow30DayPhysical').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/1," + data._Screening.ParentAppID);
            //        $('#Allow30DayPhysical').show();
            //        if (data._Screening.PhysicalFileExtension == ".pdf") {

            //            $('#Phyimagedocument').hide();
            //            $('#Phypdfdocument').show();
            //            $('#Phypdfdocument').attr("src", HostedDir + data._Screening.PhysicalImagejson);
            //        }
            //        else {
            //            $('#Phyimagedocument').show();
            //            $('#Phypdfdocument').hide();
            //            $('#Phyimagedocument').ZoomCrop(
            //                {
            //                    image: "data:image/png;base64," + data._Screening.PhysicalImagejson,
            //                    updated: function (size, crop, position) {

            //                    }
            //                });
            //        }


            //    }
            //    else {
            //        $('#Allow30DayPhysical').hide();
            //        $('#Phyimagedocument').show();
            //        $('#Phypdfdocument').hide();
            //        $('#Phyimagedocument').ZoomCrop(
            //    {
            //        image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //        updated: function (size, crop, position) {

            //        }
            //    });
            //    }
            //    if (data._Screening.VisionFileName != "" && data._Screening.VisionFileName != null) {
            //        $('#Allow45DayVisionScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/2," + data._Screening.ParentAppID);
            //        $('#Allow45DayVisionScreening').show();
            //        if (data._Screening.VisionFileExtension == ".pdf") {
            //            $('#Visimagedocument').hide();
            //            $('#Vispdfdocument').show();
            //            $('#Vispdfdocument').attr("src", HostedDir + data._Screening.VisionImagejson);
            //        }
            //        else {
            //            $('#Visimagedocument').show();
            //            $('#Vispdfdocument').hide();
            //            $('#Visimagedocument').ZoomCrop(
            //                 {
            //                     image: "data:image/png;base64," + data._Screening.VisionImagejson,
            //                     updated: function (size, crop, position) {

            //                     }
            //                 });
            //        }
            //    }
            //    else {
            //        $('#Visimagedocument').show();
            //        $('#Vispdfdocument').hide();
            //        $('#Visimagedocument').ZoomCrop(
            //          {
            //              image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //              updated: function (size, crop, position) {

            //              }
            //          });
            //        $('#Allow45DayVisionScreening').hide();
            //    }
            //    if (data._Screening.HearingFileName != "" && data._Screening.HearingFileName != null) {
            //        $('#Allow45DayHearingScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/3," + data._Screening.ParentAppID);
            //        $('#Allow45DayHearingScreening').show();
            //        if (data._Screening.HearingFileExtension == ".pdf") {
            //            $('#Hearimagedocument').hide();
            //            $('#Hearpdfdocument').show();
            //            $('#Hearpdfdocument').attr("src", HostedDir + data._Screening.HearingImagejson);
            //        }
            //        else {
            //            $('#Hearimagedocument').show();
            //            $('#Hearpdfdocument').hide();

            //            $('#Hearimagedocument').ZoomCrop(
            //               {
            //                   image: "data:image/png;base64," + data._Screening.HearingImagejson,
            //                   updated: function (size, crop, position) {

            //                   }
            //               });


            //        }
            //    }
            //    else {

            //        $('#Hearimagedocument').show();
            //        $('#Hearpdfdocument').hide();
            //        $('#Hearimagedocument').ZoomCrop(
            //            {
            //                image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //                updated: function (size, crop, position) {

            //                }
            //            });
            //        $('#Allow45DayHearingScreening').hide();
            //    }
            //    if (data._Screening.DevelopFileName != "" && data._Screening.DevelopFileName != null) {
            //        $('#Allow45DayDevelopmentalScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/4," + data._Screening.ParentAppID);
            //        $('#Allow45DayDevelopmentalScreening').show();

            //        if (data._Screening.DevelopFileExtension == ".pdf") {
            //            $('#Devimagedocument').hide();
            //            $('#Devpdfdocument').show();
            //            $('#Devpdfdocument').attr("src", HostedDir + data._Screening.DevelopImagejson);
            //        }
            //        else {
            //            $('#Devimagedocument').show();
            //            $('#Devpdfdocument').hide();
            //            $('#Devimagedocument').ZoomCrop(
            //               {
            //                   image: "data:image/png;base64," + data._Screening.DevelopImagejson,
            //                   updated: function (size, crop, position) {

            //                   }
            //               });

            //        }
            //    }
            //    else {

            //        $('#Devimagedocument').show();
            //        $('#Devpdfdocument').hide();
            //        $('#Devimagedocument').ZoomCrop(
            //            {
            //                image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //                updated: function (size, crop, position) {

            //                }
            //            });
            //        $('#Allow45DayDevelopmentalScreening').hide();
            //    }
            //    if (data._Screening.DentalFileName != "" && data._Screening.DentalFileName != null) {
            //        $('#Allow90DayDentalScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/5," + data._Screening.ParentAppID);
            //        $('#Allow90DayDentalScreening').show();


            //        if (data._Screening.DentalFileExtension == ".pdf") {
            //            $('#Dentimagedocument').hide();
            //            $('#Dentpdfdocument').show();
            //            $('#Dentpdfdocument').attr("src", HostedDir + data._Screening.DentalImagejson);
            //        }
            //        else {
            //            $('#Dentimagedocument').show();
            //            $('#Dentpdfdocument').hide();
            //            $('#Dentimagedocument').ZoomCrop(
            //              {
            //                  image: "data:image/png;base64," + data._Screening.DentalImagejson,
            //                  updated: function (size, crop, position) {

            //                  }
            //              });


            //        }
            //    }
            //    else {

            //        $('#Dentimagedocument').show();
            //        $('#Dentpdfdocument').hide();
            //        $('#Dentimagedocument').ZoomCrop(
            //         {
            //             image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //             updated: function (size, crop, position) {

            //             }
            //         });
            //        $('#Allow90DayDentalScreening').hide();
            //    }
            //    if (data._Screening.SpeechFileName != "" && data._Screening.SpeechFileName != null) {
            //        $('#AllowSpeechScreening').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/6," + data._Screening.ParentAppID);
            //        $('#AllowSpeechScreening').show();

            //        if (data._Screening.SpeechFileExtension == ".pdf") {
            //            $('#Speechimagedocument').hide();
            //            $('#Speechpdfdocument').show();
            //            $('#Speechpdfdocument').attr("src", HostedDir + data._Screening.SpeechImagejson);
            //        }
            //        else {
            //            $('#Speechimagedocument').show();
            //            $('#Speechpdfdocument').hide();
            //            $('#Speechimagedocument').ZoomCrop(
            //           {
            //               image: "data:image/png;base64," + data._Screening.SpeechImagejson,
            //               updated: function (size, crop, position) {

            //               }
            //           });

            //        }


            //    }
            //    else {
            //        $('#Speechimagedocument').show();
            //        $('#Speechpdfdocument').hide();
            //        $('#Speechimagedocument').ZoomCrop(
            //            {
            //                image: HostedDir + "/Content/img/NoImageAvailable.jpg",
            //                updated: function (size, crop, position) {

            //                }
            //            });

            //        $('#AllowSpeechScreening').hide();
            //    }
            //    if (data._Screening.ScreeningAcceptFileName != "" && data._Screening.ScreeningAcceptFileName != null) {
            //        $('#ScreeningAcceptance').attr("href", HostedDir + "/Agencyuser/getpdfimageScreening/7," + data._Screening.ParentAppID);
            //        $('#ScreeningAcceptance').show();
            //    }
            //    else {
            //        $('#ScreeningAcceptance').hide();
            //    }
            //    $('#PhysicalFileName').val(data._Screening.PhysicalFileName);
            //    $('#VisionFileName').val(data._Screening.VisionFileName);
            //    $('#HearingFileName').val(data._Screening.HearingFileName);
            //    $('#DevelopFileName').val(data._Screening.DevelopFileName);
            //    $('#DentalFileName').val(data._Screening.DentalFileName);
            //    $('#SpeechFileName').val(data._Screening.SpeechFileName);
            //    $('#ScreeningAcceptFileName').val(data._Screening.ScreeningAcceptFileName);
            //    $('#ParentAppID').val(data._Screening.ParentAppID);
            //}
            //else {
            //    $('#Allow30DayPhysical').hide();
            //    $('#Allow45DayVisionScreening').hide();
            //    $('#Allow45DayHearingScreening').hide();
            //    $('#Allow45DayDevelopmentalScreening').hide();
            //    $('#Allow90DayDentalScreening').hide();
            //    $('#ScreeningAcceptance').hide();
            //    $('#AllowSpeechScreening').hide();
            //    $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val());
            //}



            var isEhsScreenn = false;

            if (data.AvailableProgram != null && data.AvailableProgram.length > 0) {

                debugger;
                for (var i = 0; i < data.AvailableProgram.length; i++) {
                    if (data.AvailableProgram[i].ReferenceId == 1) {

                        isEhsScreenn = true;
                    }
                    if (data.AvailableProgram[i].ReferenceId == 2) {

                        isEhsScreenn = false;
                    }

                }

                if (isEhsScreenn) {
                    $('#AllowScreening').find('.table-main').children('div').hide()
                    $('#AllowScreening').find('#ConsolidateHeading').show();
                    $('#AllowScreening').find('#ParentName').show();
                    //$('#AllowScreening').find('#wellBabyScreening').show();
                }

                else {
                    $('#AllowScreening').find('.table-main').children('div').show();
                    //$('#AllowScreening').find('#wellBabyScreening').hide();
                }
            }




            $('#IsIFSP')[0].checked = false;
            $('#IsIEP')[0].checked = false;
            $('#IsExpired')[0].checked = false;
            var IsProgramchecked = false;
            var isEHS = false;
            if ($('#CParentdisable1')[0].checked) {
                $('[name="PostedPostedPrograms.ProgramID"]').each(function (i) {
                    if ($('[name="PostedPostedPrograms.ProgramID"]')[i].checked) {

                        IsProgramchecked = true;
                        if ($('[name="PostedPostedPrograms.ProgramID"]')[i].accessKey == "1") {
                            isEHS = true;
                        }
                    }
                });

            } else {
                $('#disablity').hide();
            }
            if (!IsProgramchecked) {
                $('#disablity').hide();
            }
            else {
                $('#disablity').show();
                if (isEHS) {
                    $('#forehs').show();
                    $('#forhs').hide();
                }
                else {
                    $('#forehs').hide();
                    $('#forhs').show();
                }
            }

            $('#IsIFSP')[0].checked = data.IsIFSP;
            $('#IsIEP')[0].checked = data.IsIEP;
            $('#IsExpired')[0].checked = data.IsExpired;

            if ($('#IsIEP')[0].checked || $('#IsIFSP')[0].checked) {
                $('#forexpire').show();
            } else {
                $('#forexpire').hide();
            }


            $('#spinner').hide();
        }



        function getEmergencyList() {

            $.ajax({
                url: HostedDir + "/AgencyUser/listEmergencyContactDetails",
                type: "POST",
                data: {
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    getEmergencyData(data);
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }

        function getEmergencyData(dataEmergency) {
            listEmergencyContact = dataEmergency;
        }
        function drawEmergencygrid() {
            getEmergencyList();
            bindGridEmergencyUser(listEmergencyContact, $("#gridViewEmergencyContact").find('tr')[0].cells.length);

        }

        function bindGridEmergencyUser(dataEmergencyContact, num_cols) {
            $('#gridViewEmergencyContact > tbody > tr').remove();
            if (dataEmergencyContact.listEmergencyContact.length == 0) {

                $('#divE1').show();
            }
            else {
                $('#divE1').hide();
                $('#divPaging').show();
                var tbody = $('#gridViewEmergencyContact > tbody');
                for (var i = 0; i < dataEmergencyContact.listEmergencyContact.length; i++) {
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    tr += "<td height='70'><a href='#' onclick='Getemergencycontact(this);' accesskey=" + dataEmergencyContact.listEmergencyContact[i].EmegencyId + ">" + dataEmergencyContact.listEmergencyContact[i].Efirstname + "</td>";
                    if (dataEmergencyContact.listEmergencyContact[i].EImagejson != "" && dataEmergencyContact.listEmergencyContact[i].EImagejson != null)
                        tr += "<td height='70' style='text-align:center;'><img height='50' data-action='zoom' width='50' class='roundimage' alt='Image not available' width='100' src='data:image/png;base64," + dataEmergencyContact.listEmergencyContact[i].EImagejson + "' /></td>";
                    else
                        tr += "<td height='70' style='text-align:center;'><img height='50' data-action='zoom' width='50' class='roundimage' alt='Image not available'  src='" + HostedDir + "/Content/img/download.jpg' /></td>";

                    tr += "<td height='70' style='text-align:center;'>" + ((typeof (dataEmergencyContact.listEmergencyContact[i].EDOB) != 'undefined') && (dataEmergencyContact.listEmergencyContact[i].EDOB != null) ? dataEmergencyContact.listEmergencyContact[i].EDOB : '') + "</td>";
                    tr += "<td height='70' style='text-align:center;'>" + ((typeof (dataEmergencyContact.listEmergencyContact[i].ERelationwithchild) != 'undefined') && (dataEmergencyContact.listEmergencyContact[i].ERelationwithchild != null) ? dataEmergencyContact.listEmergencyContact[i].ERelationwithchild : '') + "</td>";
                    tr += "<td height='70' ><a href='#' onclick='deleteEmergencycontact(this);' accesskey=" + dataEmergencyContact.listEmergencyContact[i].EmegencyId + ">Delete</td>";
                    tr += "</tr>";
                    $('#gridViewEmergencyContact > tbody').append(tr);

                }

                $('#gridViewEmergencyContact img').zoomify();
            }
        }
        function Getemergencycontact(value) {
            $.ajax({
                url: HostedDir + "/AgencyUser/Getemergencycontact",
                type: "POST",
                data: {
                    Emergencyid: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditEmergencycontact(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }
        function deleteEmergencycontact(value) {
            if ($('#EmegencyId').val() != "0") {
                customAlert("Cannot delete the record in edit mode. ");
                return;
            }
            BootstrapDialog.confirm('Do you want to delete this emergency contact ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deleteemergencycontact",
                        type: "POST",
                        data: {
                            EmergencyId: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Emergency contact deleted successfully. ");
                                $(value).closest('tr').remove();
                                if ($('#gridViewEmergencyContact > tbody tr').length == 0)
                                    $('#divE1').show();
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }
        function EditEmergencycontact(data) {
            round = 0;
            $("#gridphoneE1 tbody tr").remove();
            $('#EmegencyId').val(data.EmegencyId);
            $('#Efirstname').val(data.Efirstname);
            $('#Emiddlename').val(data.Emiddlename);
            $('#Elastname').val(data.Elastname);
            if (data.EGender == "1")
                $('#EGendermale').prop("checked", true);
            if (data.EGender == "2")
                $('#EGenderfemale').prop("checked", true);
            if (data.EGender == "3")
                $('#EGenderother').prop("checked", true);
            $('#EDOB').val(data.EDOB);
            $('#EEmail').val(data.EEmail);
            $('#ERelationwithchild').val(data.ERelationwithchild);
            $('#Enotes').val(data.Enotes);
            $('#EFileName').val(data.EFileName);
            $('#EFileExtension').val(data.EFileExtension);
            $('#EImagejson').val(data.EImagejson);
            for (var i = 0; i < data.phoneList.length; i++) {

                var phonetype = "PhoneNos[" + round + "].PhoneType";
                var phoneno = "PhoneNos[" + round + "].PhoneNo";
                var primarycontact = "PhoneNos[" + round + "].IsPrimary";
                var notes = "PhoneNos[" + round + "].Notes";
                var sms = "PhoneNos[" + round + "].IsSms";
                var Phoneid = "PhoneNos[" + round + "].PhoneId";
                $('#gridphoneE1').show();
                var tr = "";
                tr += "<tr><style='text-align:center;'>";
                if (data.phoneList[i].PhoneType == "1") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option selected="selected" value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';

                    tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + sms + ' value="true"/></td>';


                }
                if (data.phoneList[i].PhoneType == "2") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option  value="1">Home</option><option selected="selected" value="2">Mobile</option><option value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';
                    if (data.phoneList[i].IsSms) {
                        tr = tr + '<td><input style="width:50%;" type="checkbox" checked=checked name=' + sms + ' value="true"/></td>';
                    }
                    else {
                        tr = tr + '<td><input style="width:50%;" type="checkbox" name=' + sms + ' value="true"/></td>';
                    }

                }
                if (data.phoneList[i].PhoneType == "3") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option  value="1">Home</option><option value="2">Mobile</option><option selected="selected" value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';

                    tr = tr + '<td><input style="width:50%;" type="checkbox" disabled="disabled" name=' + sms + ' value="true"/></td>';


                }
                tr = tr + '<td><input type="hidden"  name="' + Phoneid + '" value="' + data.phoneList[i].PhoneId + '" />  <a href="javascript:void(0)" onclick="RemovePhoneE1(this);" accesskey="' + data.phoneList[i].PhoneId + '" style=" text-decoration:underline;">Delete</a></td></tr>';
                $('#gridphoneE1 > tbody').append(tr);
                $('#gridphoneE1 > tbody tr').each(function () {
                    var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                });
                round = round + 1;
            }
        }
        function RemovePhoneE1(value) {
            //if ($(value).attr("accesskey")) {
            //    BootstrapDialog.confirm('Do you want to delete this contact?', function (result) {
            //        if (result) {
            //            $.ajax({
            //                url: HostedDir + "/Agencyuser/Deletecontact",
            //                type: "POST",
            //                data: {
            //                    phoneId: $(value).attr("accesskey"),
            //                    HouseHoldId: $('#HouseholdId').val()
            //                },
            //                dataType: "json",
            //                secureuri: false,
            //                async: false,
            //                success: function (response) {

            //                    if (response == 1) {
            //                        customAlert("Contact deleted successfully.");
            //                        $(value).closest('tr').remove();
            //                        if ($('#gridphoneE1 > tbody tr').length == 0) {
            //                            $('#gridphoneE1').hide();
            //                        }
            //                    }
            //                }
            //            , error: function (response) {
            //                customAlert("Error occured please try again later .");
            //            }
            //            });
            //        }
            //    });

            //}
            //else {


            //    $(value).closest('tr').remove();
            //    if ($('#gridphoneE1 > tbody tr').length == 0) {
            //        $('#gridphoneE1').hide();
            //    }
            //}

            if ($(value).attr("accesskey")) {
                if ($('#gridphoneE1 > tbody tr').length > 1) {
                    BootstrapDialog.confirm('Do you want to delete this contact number?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deletecontact",
                                type: "POST",
                                data: {
                                    phoneId: $(value).attr("accesskey"),
                                    HouseHoldId: $('#HouseholdId').val(),
                                    EmergencyId: $('#EmegencyId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Contact number deleted successfully. ");
                                        round = 0;
                                        if ($('#gridphoneE1 > tbody tr').length > 1) {
                                            $(value).closest('tr').remove();
                                        }
                                        $('#gridphoneE1 > tbody tr').each(function () {
                                            var PhoneTypeP = "PhoneNos[" + round + "].PhoneType";
                                            var phonenoP = "PhoneNos[" + round + "].PhoneNo";
                                            var StateP = "PhoneNos[" + round + "].IsPrimary";
                                            var notesP = "PhoneNos[" + round + "].Notes";
                                            var SmsP = "PhoneNos[" + round + "].IsSms";
                                            var Phoneid = "PhoneNos[" + round + "].PhoneId";
                                            $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                                            $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                                            $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                                            $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                                            $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                                            $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                                            round = round + 1;
                                        });
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }

            }
            else {
                round = 0;
                if ($('#gridphoneE1 > tbody tr').length > 1) {
                    $(value).closest('tr').remove();
                }
                $('#gridphoneE1 > tbody tr').each(function () {
                    var PhoneTypeP = "PhoneNos[" + round + "].PhoneType";
                    var phonenoP = "PhoneNos[" + round + "].PhoneNo";
                    var StateP = "PhoneNos[" + round + "].IsPrimary";
                    var notesP = "PhoneNos[" + round + "].Notes";
                    var SmsP = "PhoneNos[" + round + "].IsSms";
                    var Phoneid = "PhoneNos[" + round + "].PhoneId";
                    $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                    $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                    $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                    $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                    $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                    $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                    round = round + 1;
                });
            }
        }
        function getRestrictedList() {
            $.ajax({
                url: HostedDir + "/AgencyUser/listRestrictedDetails",
                type: "POST",
                dataType: "json",
                data: {
                    Householdid: $('#HouseholdId').val()
                },
                secureuri: false,
                async: false,
                success: function (data) {
                    getRestrictedData(data);

                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }

        function getRestrictedData(dataRestricted) {

            listRestricted = dataRestricted;
        }

        function drawRestrictedgrid() {

            getRestrictedList();
            bindGridRestrictedUser(listRestricted, $("#gridViewRestrictedlist").find('tr')[0].cells.length);

        }
        function bindGridRestrictedUser(dataRestrictedDetail, num_cols) {
            $('#gridViewRestrictedlist > tbody > tr').remove();
            if (dataRestrictedDetail.listRestricted.length == 0) {
                $('#divR1').show();
            }
            else {
                $('#divR1').hide();
                $('#divPaging').show();
                var tbody = $('#gridViewRestrictedlist > tbody');
                for (var i = 0; i < dataRestrictedDetail.listRestricted.length; i++) {
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    tr += "<td height='70'><a href='#' onclick='GetRestricted(this);' accesskey=" + dataRestrictedDetail.listRestricted[i].RestrictedId + ">" + ((typeof (dataRestrictedDetail.listRestricted[i].Rfirstname) != 'undefined') && (dataRestrictedDetail.listRestricted[i].Rfirstname != null) ? dataRestrictedDetail.listRestricted[i].Rfirstname + ' ' + dataRestrictedDetail.listRestricted[i].Rlastname : '') + "</td>";

                    if (dataRestrictedDetail.listRestricted[i].RImagejson != "" && dataRestrictedDetail.listRestricted[i].RImagejson != null)
                        tr += "<td height='70' style='text-align:center;'><img height='50' class='roundimage'  data-action='zoom'  alt='Image not available' width='50' src='data:image/png;base64," + dataRestrictedDetail.listRestricted[i].RImagejson + "' /></td>";
                    else
                        tr += "<td height='70' style='text-align:center;'><img height='50' data-action='zoom' class='roundimage' width='50' alt='Image not available'  src='" + HostedDir + "/Content/img/download.jpg' /></td>";
                    //  tr += "<td height='70'><img height='100' width='100' src='data:image/png;base64," + dataRestrictedDetail.listRestricted[i].RImagejson + "' /></td>";
                    tr += "<td height='70' style='text-align:center;'>" + ((typeof (dataRestrictedDetail.listRestricted[i].RDescription) != 'undefined') && (dataRestrictedDetail.listRestricted[i].RDescription != null) ? dataRestrictedDetail.listRestricted[i].RDescription : '') + "</td>";
                    tr += "<td height='70'><a href='#' onclick='deleteRestricted(this);' accesskey=" + dataRestrictedDetail.listRestricted[i].RestrictedId + ">Delete</td>";
                    tr += "</tr>";
                    $('#gridViewRestrictedlist > tbody').append(tr);

                }
                $('#gridViewRestrictedlist img').zoomify();


            }
        }
        function GetRestricted(value) {

            $.ajax({
                url: HostedDir + "/AgencyUser/GetRestrictedlist",
                type: "POST",
                data: {
                    RestrictedId: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditRestricted(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }

        function deleteRestricted(value) {
            if ($('#RestrictedId').val() != "0") {
                customAlert("Cannot delete the record in edit mode. ");
                return;
            }
            BootstrapDialog.confirm('Do you want to delete this record ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deleterestricted",
                        type: "POST",
                        data: {
                            RestrictedId: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Record deleted successfully. ");
                                $(value).closest('tr').remove();
                                if ($('#gridViewRestrictedlist > tbody tr').length == 0)
                                    $('#divR1').show();
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }
        function addcontact(value) {

            if ($(value).val() == 2) {
                $(value).closest('tr').find('td:eq(4) :input[type="checkbox"]').prop("disabled", false).prop("checked", false);
            }
            else {
                $(value).closest('tr').find('td:eq(4) :input[type="checkbox"]').prop("disabled", true).prop("checked", false);
            }
        }
        function Addphone() {
            var PhoneTypeP = "ParentPhone1[" + rounds + "].PhoneTypeP";
            var phonenoP = "ParentPhone1[" + rounds + "].phonenoP";
            var StateP = "ParentPhone1[" + rounds + "].StateP";
            var notesP = "ParentPhone1[" + rounds + "].notesP";
            var SmsP = "ParentPhone1[" + rounds + "].SmsP";
            var tr = '<tr><td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                     ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                      '</select></td><td ><input class = "form-control" name=' + phonenoP + ' type="text"  ></td><td><input  type="checkbox"  value="true" name=' + StateP + ' data-val="true"  class="chcktbl" onchange="uncheckParentother(this);"/></td><td ><input class = "form-control" type="text" id="Pnotes" data-val="true" name=' + notesP + ' name="Pnotes" maxlength="100"></td> <td><input  type="checkbox" style="width:50%;" disabled="disabled" id="PSms" name=' + SmsP + ' value="true" class="chcktbl"  /></td><td><a href="javascript:void(0)" onclick="RemovePhone(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphone > tbody').append(tr);
            $('#gridphone > tbody tr').each(function () {
                var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphone > tbody tr:last').find('td:eq(0) :input').val("");
            rounds = rounds + 1;
        }
        function Addphone1() {

            var PhoneTypeP1 = "ParentPhoneNos1[" + round1 + "].PhoneTypeP1";
            var phonenoP1 = "ParentPhoneNos1[" + round1 + "].phonenoP1";
            var StateP1 = "ParentPhoneNos1[" + round1 + "].StateP1";
            var notesP1 = "ParentPhoneNos1[" + round1 + "].notesP1";
            var SmsP1 = "ParentPhoneNos1[" + round1 + "].SmsP1";
            $('#gridphone1').show();
            var tr = '<tr><td><select class="form-control" style="width:100%;"  name=' + PhoneTypeP1 + ' onchange="addcontact(this);" id="P1phoneType"  >' +
                      ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                       '</select></td><td><input class = "form-control" id="addPPhone1" name=' + phonenoP1 + ' type="text" ></td> <td><input  type="checkbox" onchange="uncheckParent1other(this);"  name=' + StateP1 + ' data-val="true" id="P1State"/></td><td ><input class = "form-control" type="text" id="P1notes"  data-val="true" name=' + notesP1 + ' maxlength="100" ></td><td><input type="checkbox" disabled="disabled" style="width:50%;" id="P1Sms" name=' + SmsP1 + ' value="true"  /></td><td><a href="javascript:void(0)" onclick="RemovePhone1(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphone1 > tbody').append(tr);

            $('#gridphone1 > tbody tr').each(function () {
                var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphone1 > tbody tr:last').find('td:eq(0) :input').val("");
            round1 = round1 + 1;
        }
        function RemovePhone(value) {
            if ($(value).attr("accesskey")) {
                if ($('#gridphone > tbody tr').length > 1) {
                    BootstrapDialog.confirm('Do you want to delete this contact number?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/DeleteParentContact",
                                type: "POST",
                                data: {
                                    phoneId: $(value).attr("accesskey"),
                                    HouseHoldId: $('#HouseholdId').val(),
                                    Parentid: $('#ParentID').val(),
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Contactnumber  deleted successfully. ");
                                        rounds = 0;

                                        if ($('#gridphone > tbody tr').length > 1) {

                                            $(value).closest('tr').remove();
                                        }
                                        $('#gridphone > tbody tr').each(function () {
                                            var PhoneTypeP = "ParentPhone1[" + rounds + "].PhoneTypeP";
                                            var phonenoP = "ParentPhone1[" + rounds + "].phonenoP";
                                            var StateP = "ParentPhone1[" + rounds + "].StateP";
                                            var notesP = "ParentPhone1[" + rounds + "].notesP";
                                            var SmsP = "ParentPhone1[" + rounds + "].SmsP";
                                            var Phoneid = "ParentPhone1[" + rounds + "].PPhoneId";
                                            $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                                            $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                                            $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                                            $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                                            $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                                            $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                                            rounds = rounds + 1;
                                        });
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }

            }
            else {
                rounds = 0;
                if ($('#gridphone > tbody tr').length > 1) {
                    $(value).closest('tr').remove();
                }
                $('#gridphone > tbody tr').each(function () {
                    var PhoneTypeP = "ParentPhone1[" + rounds + "].PhoneTypeP";
                    var phonenoP = "ParentPhone1[" + rounds + "].phonenoP";
                    var StateP = "ParentPhone1[" + rounds + "].StateP";
                    var notesP = "ParentPhone1[" + rounds + "].notesP";
                    var SmsP = "ParentPhone1[" + rounds + "].SmsP";
                    var Phoneid = "ParentPhone1[" + rounds + "].PPhoneId";
                    $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                    $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                    $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                    $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                    $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                    $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                    rounds = rounds + 1;
                });
            }

        }
        function RemovePhone1(value) {
            if ($(value).attr("accesskey")) {
                if ($('#gridphone1 > tbody tr').length > 1) {
                    BootstrapDialog.confirm('Do you want to delete this contact number?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/DeleteParent1Contact",
                                type: "POST",
                                data: {
                                    phoneId: $(value).attr("accesskey"),
                                    HouseHoldId: $('#HouseholdId').val(),
                                    Parentid1: $('#ParentID1').val(),
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Contact number deleted successfully. ");
                                        round1 = 0;
                                        if ($('#gridphone1 > tbody tr').length > 1) {
                                            $(value).closest('tr').remove();
                                        }
                                        $('#gridphone1 > tbody tr').each(function () {
                                            var PhoneTypeP1 = "ParentPhoneNos1[" + round1 + "].PhoneTypeP1";
                                            var phonenoP1 = "ParentPhoneNos1[" + round1 + "].phonenoP1";
                                            var StateP1 = "ParentPhoneNos1[" + round1 + "].StateP1";
                                            var notesP1 = "ParentPhoneNos1[" + round1 + "].notesP1";
                                            var SmsP1 = "ParentPhoneNos1[" + round1 + "].SmsP1";
                                            var PPhoneId1 = "ParentPhoneNos1[" + round1 + "].PPhoneId1";
                                            $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP1);
                                            $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP1);
                                            $(this).find('td:eq(2)').find(':input').attr('name', StateP1);
                                            $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP1);
                                            $(this).find('td:eq(4)').find(':input').attr('name', SmsP1);
                                            $(this).find('td:eq(5)').find(':input').attr('name', PPhoneId1);
                                            round1 = round1 + 1;
                                        });
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }

            }
            else {
                round1 = 0;
                if ($('#gridphone1 > tbody tr').length > 1) {
                    $(value).closest('tr').remove();
                }
                $('#gridphone1 > tbody tr').each(function () {
                    var PhoneTypeP1 = "ParentPhoneNos1[" + round1 + "].PhoneTypeP1";
                    var phonenoP1 = "ParentPhoneNos1[" + round1 + "].phonenoP1";
                    var StateP1 = "ParentPhoneNos1[" + round1 + "].StateP1";
                    var notesP1 = "ParentPhoneNos1[" + round1 + "].notesP1";
                    var SmsP1 = "ParentPhoneNos1[" + round1 + "].SmsP1";
                    var PPhoneId1 = "ParentPhoneNos1[" + round1 + "].PPhoneId1";
                    $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP1);
                    $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP1);
                    $(this).find('td:eq(2)').find(':input').attr('name', StateP1);
                    $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP1);
                    $(this).find('td:eq(4)').find(':input').attr('name', SmsP1);
                    $(this).find('td:eq(5)').find(':input').attr('name', PPhoneId1);
                    round1 = round1 + 1;
                });
            }
        }

        function AddParent() {
            if ($('#DdlPRole').val() == 6) {
                $('#addrow').show();
            }
            else {
                $('#addrow').hide();
            }

            if ($('.Pmale').prop("checked")) {
                if ($('#DdlPRole').val() == 2) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }
            if ($('.Pfemale').prop("checked")) {
                if ($('#DdlPRole').val() == 1) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }
            if ($('.Pother').prop("checked")) {
                if ($('#DdlPRole').val() == 1 || $('#DdlPRole').val() == 2) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }


        }
        function AddParent1() {
            if ($('#DdlP1Role').val() == 6) {
                $('#addrow1').show();
            }
            else {
                $('#addrow1').hide();
            }

            if ($('.P1male').prop("checked")) {
                if ($('#DdlP1Role').val() == 2) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }
            if ($('.P1female').prop("checked")) {
                if ($('#DdlP1Role').val() == 1) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }
            if ($('.P1other').prop("checked")) {
                if ($('#DdlP1Role').val() == 1 || $('#DdlP1Role').val() == 2) {
                    customAlert("Please select valid parent/guardian. ");
                }
            }
        }
        function AddphoneE1() {
            var phonetype = "PhoneNos[" + round + "].PhoneType";
            var phoneno = "PhoneNos[" + round + "].PhoneNo";
            var primarycontact = "PhoneNos[" + round + "].IsPrimary";
            var notes = "PhoneNos[" + round + "].Notes";
            var sms = "PhoneNos[" + round + "].IsSms";
            $('#gridphoneE1').show();
            var tr = '<tr><td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                      ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                       '</select></td><td><input  name=' + phoneno + ' class = "form-control" type="text" ></td> <td><input onchange="uncheckother(this);" class="chcketbl" value="true" name=' + primarycontact + '  type="checkbox" data-val="true" /></td><td ><input data-val="true" maxlength="100" class = "form-control" type="text" name=' + notes + '></td><td><input style="width:50%;" disabled="disabled" type="checkbox" class="chcketbl" name=' + sms + ' value="true"/></td><td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphoneE1 > tbody').append(tr);
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphoneE1 > tbody tr:last').find('td:eq(0) :input').val("");
            round = round + 1;
        }
        function uncheckother(value) {
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(2) :checkbox').prop("checked", false);
            });
            $(value).prop("checked", true);

        }
        function AddQuestion() {
            $('#Pquestionyes').prop('checked', false);
            $('#Pquestionno').prop('checked', false);
            $("#Pregnantmotherprogram").hide();
            $('#addrow').hide();
            $("#addquestion").show();
            $("#DdlQuestion").show();
            $("#lblQuestion").show();
            $('#Pregnantmotherenrolled').prop("checked", false);
            if ($('#DdlPRole').val() !== "" && $('#DdlPRole').val() == 1) {
                customAlert("Please select valid parent/guardian. ");
            }


        }
        function RemoveQuestion() {
            $('#Pquestionyes').prop('checked', false);
            $('#Pquestionno').prop('checked', false);
            $("#Pregnantmotherprogram").hide();
            $('#addrow').hide();
            $("#addquestion").hide();
            $("#DdlQuestion").hide();
            $("#lblQuestion").hide();
            $("#Div3").hide();
            $('#Pregnantmotherenrolled').prop("checked", false);
            if ($('#DdlPRole').val().trim() != "" && $('#DdlPRole').val() == 2) {
                customAlert("Please select valid parent/guardian. ");
            }


        }
        function RemoveQuestionOther() {
            $('#Pquestionyes').prop('checked', false);
            $('#Pquestionno').prop('checked', false);
            $("#addquestion").hide();
            $("#DdlQuestion").hide();
            $("#lblQuestion").hide();
            $("#Pregnantmotherprogram").hide();
            $('#Pregnantmotherenrolled').prop("checked", false);
            $("#Div3").hide();
            if ($('#DdlPRole').val().trim() !== "" && ($('#DdlPRole').val() == 2 || $('#DdlPRole').val() == 1)) {
                customAlert("Please select valid parent/guardian. ");
            }
            if ($('#DdlPRole').val().trim() == 1) {
                customAlert("Please select valid parent/guardian. ");
            }


        }
        function AddQuestion1() {
            $('#Pquestionyes1').prop('checked', false);
            $('#Pquestionno1').prop('checked', false);
            $('#PregnantmotherenrolledP1').prop("checked", false);
            $("#Pregnantmotherprogram1").hide();
            $("#Divp3").hide();
            $('#addrow1').hide();
            $("#addquestion1").show();
            $("#DdlQuestion1").show();
            $("#lblQuestion1").show();
            if ($('#DdlP1Role').val() !== "" && $('#DdlP1Role').val() == 1) {
                customAlert("Please select valid parent/guardian. ");
            }
        }
        function RemoveQuestion1() {
            $('#Pquestionyes1').prop('checked', false);
            $('#Pquestionno1').prop('checked', false);
            $('#PregnantmotherenrolledP1').prop("checked", false);
            $("#Pregnantmotherprogram1").hide();
            $("#Divp3").hide();
            $('#addrow1').hide();
            $("#addquestion1").hide();
            $("#DdlQuestion1").hide();
            $("#lblQuestion1").hide();
            if ($('#DdlP1Role').val().trim() != "" && $('#DdlP1Role').val() == 2) {
                customAlert("Please select valid parent/guardian. ");
            }
        }
        function RemoveQuestionOther1() {
            $('#Pquestionyes1').prop('checked', false);
            $('#Pquestionno1').prop('checked', false);
            $('#PregnantmotherenrolledP1').prop("checked", false);
            $("#Pregnantmotherprogram1").hide();
            $("#Divp3").hide();
            $("#addquestion1").hide();
            $("#DdlQuestion1").hide();
            $("#lblQuestion1").hide();
            if ($('#DdlP1Role').val().trim() !== "" && ($('#DdlP1Role').val() == 2 || $('#DdlP1Role').val() == 1)) {
                customAlert("Please select valid parent/guardian. ");
            }
            if ($('#DdlP1Role').val().trim() == 1) {
                customAlert("Please select valid parent/guardian. ");
            }
        }
        function emptyrestricted() {
            $('#RestrictedId').val("0");
            $('#Rfirstname')[0].value = "";
            $('#Rlastname')[0].value = "";
            $('#RDescription')[0].value = "";
            $('#RFileName').val("");
            $('#RFileExtension').val("");
            $('#RImagejson').val("");
        }
        function EditRestricted(data) {

            $('#RestrictedId').val(data.RestrictedId);
            $('#Rfirstname').val(data.Rfirstname);
            $('#Rlastname').val(data.Rlastname);
            $('#RDescription').val(data.RDescription);


        }
        function getPhoneListParent1() {

            $.ajax({

                url: HostedDir + "/AgencyUser/listParentPhoneDetails1",
                type: "POST",
                dataType: "json",
                data: {
                    ParentID: $('#ParentID').val(),
                    HouseHoldId: $('#HouseholdId').val()
                },
                secureuri: false,
                async: false,
                success: function (data) {
                    getPhoneData(data);

                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }
        function getPhoneListParent2() {

            $.ajax({

                url: HostedDir + "/AgencyUser/listParentPhoneDetails2",
                type: "POST",
                dataType: "json",
                data: {
                    ParentID: $('#ParentID1').val(),
                    HouseHoldId: $('#HouseholdId').val()
                },
                secureuri: false,
                async: false,
                success: function (data) {
                    getPhoneData1(data);

                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });
        }
        function getPhoneData(dataPhone) {

            listPhone = dataPhone;
        }
        function getPhoneData1(dataPhone) {

            listPhone = dataPhone;
        }
        function drawParent1phonelist() {
            getPhoneListParent1();
            bindGridPhone(listPhone, $("#gridphone").find('tr')[0].cells.length);
        }
        function drawParent2phonelist() {
            getPhoneListParent2();
            bindGridPhone1(listPhone, $("#gridphone1").find('tr')[0].cells.length);
        }
        function bindGridPhone(dataPhoneDetail, num_cols) {
            rounds = 0;
            if (dataPhoneDetail.listPhone.length == 0) {
                $('#divP1').show();
            }
            else {
                $('#divP1').hide();
                var tbody = $('#gridphone > tbody');
                $('#gridphone > tbody > tr').remove();
                for (var i = 0; i < dataPhoneDetail.listPhone.length; i++) {
                    var PhoneTypeP = "ParentPhone1[" + rounds + "].PhoneTypeP";
                    var phonenoP = "ParentPhone1[" + rounds + "].phonenoP";
                    var StateP = "ParentPhone1[" + rounds + "].StateP";
                    var notesP = "ParentPhone1[" + rounds + "].notesP";
                    var SmsP = "ParentPhone1[" + rounds + "].SmsP";
                    var Phoneid = "ParentPhone1[" + rounds + "].PPhoneId";
                    $('#gridphone').show();
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "1") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                              ' <option selected="selected" value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                             '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';

                        tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + SmsP + ' value="true"/></td>';
                    }
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "2") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                                     ' <option  value="1">Home</option><option selected="selected" value="2">Mobile</option><option value="3">Work</option> ' +
                                    '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';
                        if (dataPhoneDetail.listPhone[i].SmsP) {
                            tr = tr + '<td><input style="width:50%;" type="checkbox" checked=checked name=' + SmsP + ' value="true"/></td>';
                        }
                        else {
                            tr = tr + '<td><input style="width:50%;" type="checkbox" name=' + SmsP + ' value="true"/></td>';
                        }
                    }
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "3") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                                ' <option  value="1">Home</option><option value="2">Mobile</option><option selected="selected" value="3">Work</option> ' +
                               '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParentother(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';

                        tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + SmsP + ' value="true"/></td>';

                    }
                    tr = tr + '<td><input type="hidden"  name="' + Phoneid + '" value="' + dataPhoneDetail.listPhone[i].PPhoneId + '" /><a href="javascript:void(0)" onclick="RemovePhone(this);" accesskey="' + dataPhoneDetail.listPhone[i].PPhoneId + '" style=" text-decoration:underline;">Delete</a></td></tr>';
                    $('#gridphone > tbody').append(tr);
                    $('#gridphone > tbody tr').each(function () {
                        var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                    });
                    rounds = rounds + 1;
                }
            }
        }
        function bindGridPhone1(dataPhoneDetail, num_cols) {
            round1 = 0;
            if (dataPhoneDetail.listPhone.length > 0) {
                $('#gridphone1 > tbody > tr').remove();
                var tbody = $('#gridphone1 > tbody');
                for (var i = 0; i < dataPhoneDetail.listPhone.length; i++) {

                    var PhoneTypeP = "ParentPhoneNos1[" + round1 + "].PhoneTypeP1";
                    var phonenoP = "ParentPhoneNos1[" + round1 + "].phonenoP1";
                    var StateP = "ParentPhoneNos1[" + round1 + "].StateP1";
                    var notesP = "ParentPhoneNos1[" + round1 + "].notesP1";
                    var SmsP = "ParentPhoneNos1[" + round1 + "].SmsP1";
                    var Phoneid = "ParentPhoneNos1[" + round1 + "].PPhoneId1";
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "1") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                              ' <option selected="selected" value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                             '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';

                        tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + SmsP + ' value="true"/></td>';
                    }
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "2") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                                     ' <option  value="1">Home</option><option selected="selected" value="2">Mobile</option><option value="3">Work</option> ' +
                                    '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';
                        if (dataPhoneDetail.listPhone[i].SmsP) {
                            tr = tr + '<td><input style="width:50%;" type="checkbox" checked=checked name=' + SmsP + ' value="true"/></td>';
                        }
                        else {
                            tr = tr + '<td><input style="width:50%;" type="checkbox" name=' + SmsP + ' value="true"/></td>';
                        }

                    }
                    if (dataPhoneDetail.listPhone[i].PhoneTypeP == "3") {
                        tr = tr + '<td><select class="form-control" style="width:100%;" name=' + PhoneTypeP + ' onchange="addcontact(this);" >' +
                                ' <option  value="1">Home</option><option value="2">Mobile</option><option selected="selected" value="3">Work</option> ' +
                               '</select></td>';
                        tr = tr + '<td><input  name=' + phonenoP + ' class = "form-control" type="text" value="' + dataPhoneDetail.listPhone[i].phonenoP + '" ></td>';
                        if (dataPhoneDetail.listPhone[i].StateP) {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true" checked=checked /></td>';
                        }
                        else {
                            tr = tr + '<td><input value="true" onchange="uncheckParent1other(this);" name=' + StateP + '  type="checkbox" data-val="true"  /></td>';
                        }
                        tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notesP + ' value="' + dataPhoneDetail.listPhone[i].notesP + '"></td>';

                        tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + SmsP + ' value="true"/></td>';

                    }
                    tr = tr + '<td><input type="hidden"  name="' + Phoneid + '" value="' + dataPhoneDetail.listPhone[i].PPhoneId + '" /><a href="javascript:void(0)" onclick="RemovePhone1(this);" accesskey="' + dataPhoneDetail.listPhone[i].PPhoneId + '" style=" text-decoration:underline;">Delete</a></td></tr>';
                    $('#gridphone1 > tbody').append(tr);
                    $('#gridphone1 > tbody tr').each(function () {
                        var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                    });
                    round1 = round1 + 1;
                }
            }

        }
        function getOtherList() {

            $.ajax({
                url: HostedDir + "/AgencyUser/listOtherDetails",
                type: "POST",
                data: {
                    Householdid: $('#HouseholdId').val(),
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    getOtherData(data);
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }
        function getOtherData(dataOther) {

            listOther = dataOther;
        }
        function drawOthergrid() {
            getOtherList();
            bindGridOther(listOther, $("#gridViewOther").find('tr')[0].cells.length);
        }
        function bindGridOther(dataOther, num_cols) {

            $('#gridViewOther > tbody > tr').remove();
            if (dataOther.listOther.length == 0) {

                $('#divO1').show();
            }
            else {

                $('#divO1').hide();
                $('#divPaging').show();
                var tbody = $('#gridViewOther > tbody');
                for (var i = 0; i < dataOther.listOther.length; i++) {
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    tr += "<td style='text-align:center;'><a href='#' onclick='GetOther(this);' accesskey=" + dataOther.listOther[i].OthersId + ">" + ((typeof (dataOther.listOther[i].Ofirstname) != 'undefined') && (dataOther.listOther[i].Ofirstname != null) ? dataOther.listOther[i].Ofirstname + ' ' + dataOther.listOther[i].Omiddlename + ' ' + dataOther.listOther[i].Olastname : '') + "</td>";

                    if (dataOther.listOther[i].HouseHoldImagejson == "") {
                        tr += "<td height='70' style='text-align:center;'><img height='50' class='roundimage ZoomImage' width='50' src='/Content/img/download.jpg'></td>";
                    }
                    else {
                        tr += "<td height='70' style='text-align:center;'><img height='50' class='roundimage ZoomImage' width='50' src='data:image/jpg;base64," + dataOther.listOther[i].HouseHoldImagejson + "'></td>";

                    }

                    //  tr += "<td height='70' style='text-align:center;'><img height='50' class='roundimage ZoomImage' width='50' src='" + dataOther.listOther[i].HouseHoldImageJson + "'></td>";
                    tr += "<td style='text-align:center;'>" + ((typeof (dataOther.listOther[i].OGender) != 'undefined') && (dataOther.listOther[i].OGender != null) ? dataOther.listOther[i].OGender : '') + "</td>";
                    tr += "<td style='text-align:center;'>" + ((typeof (dataOther.listOther[i].ODOB) != 'undefined') && (dataOther.listOther[i].ODOB != null) ? dataOther.listOther[i].ODOB : '') + "</td>";
                    tr += "<td style='text-align:center;'>" + ((typeof (dataOther.listOther[i].CSSN) != 'undefined') && (dataOther.listOther[i].CSSN != null) ? dataOther.listOther[i].CSSN : '') + "</td>";
                    tr += "<td><a href='#' onclick='deleteother(this);' accesskey=" + dataOther.listOther[i].OthersId + ">Delete</td>";
                    tr += "</tr>";
                    $('#gridViewOther > tbody').append(tr);

                }
            }
        }

        function GetOther(value) {

            $.ajax({
                url: HostedDir + "/AgencyUser/GetOther",
                type: "POST",
                data: {
                    OthersId: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditOther(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }

        function deleteother(value) {
            if ($('#OthersId').val() != "0") {
                customAlert("Cannot delete the record in edit mode. ");
                return;
            }

            BootstrapDialog.confirm('Do you want to delete this record ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/DeleteOther",
                        type: "POST",
                        data: {
                            OthersId: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Record deleted successfully. ");
                                $(value).closest('tr').remove();
                                if ($('#gridViewOther > tbody tr').length == 0)
                                    $('#divO1').show();
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }
        function emptyOther() {
            $('#Ofirstname')[0].value = "";
            $('#Olastname')[0].value = "";
            $('#Omiddlename')[0].value = "";
            $('#Olastname')[0].value = "";
            $('#ODOB').val("");
            $('input:radio[name=OGender]:checked').prop('checked', false);
            $('#Alreadyemergencycontact').val(0);
            $('#Oemergencycontact').prop('checked', false);
            $('#ParentSSN3').val('');
            $('#OtherinHousehold').find('#HouseHoldAvatar').val('')
        }
        function EditOther(data) {
            $('#OthersId').val(data.OthersId);
            $('#Ofirstname').val(data.Ofirstname);
            $('#Omiddlename').val(data.Omiddlename);
            $('#Olastname').val(data.Olastname);
            $('#ODOB').val(data.ODOB);
            if (data.OGender == "1")
                $('#OGendermale').prop("checked", true);
            if (data.OGender == "2")
                $('#OGenderfemale').prop("checked", true);
            if (data.OGender == "3")
                $('#OGenderother').prop("checked", true);
            var age = null;
            var now = null;
            var past = null;
            var nowYear = null;
            var pastYear = null;
            now = new Date();
            past = new Date(data.ODOB);
            nowYear = now.getFullYear();
            pastYear = past.getFullYear();
            age = nowYear - pastYear;
            if (age < 0 || age >= 18) {
                $('#Oemergencycontact').show();
                $('#lblOemergencycontact').show();
                if (data.Oemergencycontact != null && data.Oemergencycontact == true) {
                    $('#Oemergencycontact').prop('checked', true);
                    $('#Alreadyemergencycontact').val(1);
                }
            }
            else {
                $('#Oemergencycontact').hide();
                $('#lblOemergencycontact').hide();
            }

            if (data.ParentSSN3 != "") {
                var res = data.ParentSSN3;
                len = res.length;
                max = 11;
                stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                result = stars + res.substring(7);
                $('#ParentSSN3').val(result);
                ssnothervalue = data.ParentSSN3;

            }
            else {
                $('#ParentSSN3').val("");
                ssnothervalue = null;

            }





        }
        function deleteParent(value) {
            if ($('#ParentID').val() != "0" && $('#ParentID1').val() != "0") {
                if ($(value).attr("accesskey") == "Parent1") {
                    BootstrapDialog.confirm('Do you want to delete this parent/guardian ?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deleteparent1",
                                type: "POST",
                                data: {
                                    parentid: $('#ParentID').val(),
                                    HouseHoldId: $('#HouseholdId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        window.location.href = HostedDir + "/Agencyuser/FamilyDetails/" + $('#Encrypthouseholid').val();
                                    }
                                    if (response == 2) {
                                        customAlert("Parent/Guardian already successfully. ");
                                        window.location.href = HostedDir + "/Agencyuser/FamilyDetails/" + $('#Encrypthouseholid').val();
                                    }

                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }
                if ($(value).attr("accesskey") == "Parent2") {
                    BootstrapDialog.confirm('Do you want to delete this parent/guardian ?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deleteparent1",
                                type: "POST",
                                data: {
                                    parentid: $('#ParentID1').val(),
                                    HouseHoldId: $('#HouseholdId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        window.location.href = HostedDir + "/Agencyuser/FamilyDetails/" + $('#Encrypthouseholid').val();
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }
            }
        }

        function emptyParent1() {
            $('#Pfirstname')[0].value = "";
            $('#Plastname')[0].value = "";
            $('#Pmidddlename')[0].value = "";
            $('#Pemailid')[0].value = "";
            $('#PDOB').val("");
        }

        function deleteParent2(value) {
            BootstrapDialog.confirm('Do you want to delete parent 2 ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deleteparent2",
                        type: "POST",
                        data: {
                            // childid: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {

                                customAlert("Parent 1 deleted successfully. ");
                                emptyParent2();
                                //$(value).closest('tr').remove();
                                //if ($('#gridViewAgency > tbody tr').length == 0)
                                //    $('#div1').show();
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });
        }
        function emptyParent2() {
            $('#P1firstname')[0].value = "";
            $('#P1lastname')[0].value = "";
            $('#P1midddlename')[0].value = "";
            $('#P1emailid')[0].value = "";
            $('#P1DOB').val("");
        }
        function uncheckParentother(value) {
            $('#gridphone > tbody tr').each(function () {
                $(this).find('td:eq(2) :checkbox').prop("checked", false);
            });
            $(value).prop("checked", true);
        }
        function uncheckParent1other(value) {
            $('#gridphone1 > tbody tr').each(function () {
                $(this).find('td:eq(2) :checkbox').prop("checked", false);
            });
            $(value).prop("checked", true);
        }
        function AddDoctor() {
            if ($('#Medicalhome').val() == 3) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else if ($('#Medicalhome').val() == 4) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else if ($('#Medicalhome').val() == 2) {
                $('#addrowC1').show();
                $('#CDoctor').val('');
            }
            else {
                $('#addrowC1').hide();
                $('#Doctor').val(0);
            }

        }
        function AddDoctorP1() {
            if ($('#MedicalhomePreg1').val() == 2 || $('#MedicalhomePreg1').val() == 3 || $('#MedicalhomePreg1').val() == 4) {
                $('#addp1').show();

            }
            else {
                $('#addp1').hide();
            }

        }
        function AddDoctorP2() {
            if ($('#MedicalhomePreg2').val() == 2 || $('#MedicalhomePreg2').val() == 3 || $('#MedicalhomePreg2').val() == 4) {
                $('#addp2').show();

            }
            else {
                $('#addp2').hide();
            }

        }


        function AddDentist() {

            if ($('#CDentalhome').val() == 3) {
                $('#addrowDentist').show();
            }
            else if ($('#CDentalhome').val() == 4) {
                $('#addrowDentist').show();
            }
            else if ($('#CDentalhome').val() == 2) {
                $('#addrowDentist').show();
            }
            else {
                $('#addrowDentist').hide();
                $('#Dentist').val(0);
            }
        }
        function uncheckdata() {
            if ($('#None').prop("checked")) {
                $('#TANF').prop("checked", false);
                $('#SSI').prop("checked", false);
                $('#WIC').prop("checked", false);
                $('#SNAP').prop("checked", false);
                //  $('#OGendermale').prop("checked", false);

            }
        }
        function uncheckdataNone() {
            if (($('#TANF').prop("checked")) || ($('#SSI').prop("checked")) || ($('#WIC').prop("checked")) || ($('#SNAP').prop("checked"))) {
                $('#None').prop("checked", false);

                //  $('#OGendermale').prop("checked", false);

            }
        }


        function checkZipCode(inputTextObject) {

            if ($(inputTextObject).val() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;
                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckAddress(1);
                return ret;
            }
            else {

                $('#City').find('option').remove();
                $('#State').val('');
                $('#County').val('');
            }
        }

        //function CheckAddress() {
        //    if ($('#Street').val().trim()) {
        //        $.ajax({
        //            url: HostedDir + "/Agencyuser/Checkaddress",
        //            type: "POST",
        //            data: {
        //                Address: $('#Street').val() + $('#StreetName').val() + $('#ZipCode').val(),
        //                HouseHoldId: $('#HouseholdId').val()
        //            },
        //            dataType: "json",
        //            secureuri: false,
        //            async: false,
        //            success: function (response) {
        //                if (response == 1) {
        //                    BootstrapDialog.confirm('Address already exists. Do you want to continue?', function (result) {
        //                        if (!result) {
        //                            $('#Street').val("");
        //                            $('#StreetName').val("");
        //                            $('#ZipCode').val("");
        //                        }
        //                    });
        //                }
        //            }
        //                , error: function (response) {
        //                    customAlert("Error occured please try again later. ");
        //                }
        //        });
        //    }
        //}

        function CheckAddress(value) {
            var Zipcode = 0;
            if (value == 0)
                Zipcode = 0;
            else
                Zipcode = $('#ZipCode').val();

            if (value == 0 && $('#State').val().trim() != "") {
                $.ajax({
                    url: HostedDir + "/Agencyuser/Checkaddress",
                    type: "POST",
                    data: {
                        Address: $('#Street').val() + $('#StreetName').val() + $('#ZipCode').val(),
                        HouseHoldId: $('#HouseholdId').val(),
                        Zipcode: Zipcode
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        if (response.Result == 1) {
                            BootstrapDialog.confirm('Address already exists. Do you want to continue?', function (result) {
                                if (!result) {
                                    $('#Street').val("");
                                    $('#StreetName').val("");
                                    $('#ZipCode').val("");
                                    $('#City').find('option').remove().end();
                                    $('#City').val('');
                                    $('#State').val('');
                                    $('#County').val('');
                                }
                            });
                        }
                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });


            }
            else {
                if ($('#ZipCode').val().trim() != "") {

                    $.ajax({
                        url: HostedDir + "/Agencyuser/Checkaddress",
                        type: "POST",
                        data: {
                            Address: $('#Street').val() + $('#StreetName').val() + $('#ZipCode').val(),
                            HouseHoldId: $('#HouseholdId').val(),
                            Zipcode: Zipcode
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {
                            if (value == 1) {
                                if (response.Zipcodelist != null && response.Zipcodelist.length > 0) {
                                    var option = "";
                                    for (var i = 0; i < response.Zipcodelist.length; i++) {
                                        option = option + '<option value="' + response.Zipcodelist[i].City + '">' + response.Zipcodelist[i].City + '</option>';
                                    }
                                    $('#City').find('option').remove().end().append(option);
                                    $('#City').val('');
                                    $('#State').val(response.Zipcodelist[0].State);
                                    $('#County').val(response.Zipcodelist[0].County);
                                    $('#ZipCode').val(response.Zipcodelist[0].Zipcode);
                                }
                                else {
                                    $('#City').find('option').remove().end();
                                    $('#City').val('');
                                    $('#State').val('');
                                    $('#ZipCode').val('');
                                    $('#County').val('');
                                    customAlert("Could not find zipcode details.");

                                }
                            }
                            if (response.Result == 1) {
                                BootstrapDialog.confirm('Address already exists. Do you want to continue?', function (result) {
                                    if (!result) {
                                        $('#Street').val("");
                                        $('#StreetName').val("");
                                        $('#ZipCode').val("");
                                        $('#City').find('option').remove().end();
                                        $('#City').val('');
                                        $('#State').val('');
                                        $('#County').val('');
                                    }
                                });
                            }
                        }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                    });
                }


            }


        }


        function clearuploader() {

            $('#FiledobRAvatar').val("");
        }
        function radiochange1() {
            $('.FosterFormChoose').removeClass('hidden');
        }
        function radiochange2() {
            $('.FosterFormChoose').addClass('hidden');
        }


        function Showotherlanguage() {
            $('#OtherLanguageDetail').val("");
            if ($('#PrimaryLanguauge').val() == 12)
                $('#div2').show();
            else
                $('#div2').hide();
        }

        function CheckPregenancy() {

            if ('@Model.ExistPmprogram' > 0)
                $('#Pregnantmotherprogram').show();

        }
        function CheckPregenancy1() {
            if ('@Model.ExistPmprogram' > 0)
                $('#Pregnantmotherprogram1').show();

        }
        function HidePregenancy() {
            $("#Div3").hide();
            $('#Pregnantmotherprogram').hide();
            $('#Pregnantmotherenrolled').prop("checked", false);
        }
        function HidePregenancy1() {
            $("#Divp3").hide();
            $('#Pregnantmotherprogram1').hide();
            $('#PregnantmotherenrolledP1').prop("checked", false);
        }

        function ShowdivParentotherrelationship() {
            $('#ParentRelatioshipOther').val('');
            if ($('#ParentRelatioship').val() == 6)
                $('#divParentrelatioship').show();

            else
                $('#divParentrelatioship').hide();
        }

        function getIsAllowFuturePreg(ele) {
            $.ajax({

                url: '/AgencyUser/GetAllowFutureForPM',
                datatype: 'json',
                type: 'post',
                beforSend: function () { $('#spinner').show() },
                success: function (data) {
                    $('#spinner').hide();

                    if (data != null) {
                        if (data.AllowFutureApplication) {

                            $('#futureApplicationModalPreg').find('#futureSpanYear').text(data.FutureProgramYear);
                            $("#futureApplicationModalPreg").find('input[type=radio]').prop('checked', false);
                            $('#futureApplicationModalPreg').find('#btnClosefuturePreg').attr('enc', ele);
                            $("#futureApplicationModalPreg").modal({
                                show: true,
                                backdrop: 'static'
                            });
                        }
                        else {
                            if (ele == 'PregnantmotherenrolledP1') {

                                $('#' + ele + '').siblings('#IsFutureIntakePregEnrolled1').val('False');
                            }

                            if (ele == 'PregnantmotherenrolledP') {

                                $('#' + ele + '').siblings('#IsFutureIntakePregEnrolled').val('False');
                            }
                        }





                    }
                },
                error: function (data) {
                    $('#spinner').hide();






                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                },
                complete: function (data) {

                }



            });
        }

        function Pregnantmotherenrolled1() {
            if ('@Model.ExistPmprogram' > 0) {
                if ($('#Pregnantmotherenrolled').prop("checked")) {
                    getIsAllowFuturePreg('Pregnantmotherenrolled');
                    $("#Div3").show();
                }
                else {

                    BootstrapDialog.confirm('All qualifier data for this guardian will be lost. Do you want to continue?', function (result) {
                        if (result) {
                            $('#Pregnantmotherenrolled').siblings('#IsFutureIntakePregEnrolled').val('False');

                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deletepmmother",
                                type: "POST",
                                data: {
                                    ParentId: $('#ParentID').val(),
                                    HouseHoldId: $('#HouseholdId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Record deleted successfully. ");
                                        $('#Pregnantmotherprimaryinsurance').val('');
                                        $('#Pregnantmotherprimaryinsurancenotes').val('');
                                        $('#TrimesterEnrolled').val('');
                                        $('#MedicalhomePreg1').val('');
                                        $('#CDoctorP1').val('');
                                        $('#P1Doctor').val(0);
                                        window.location.href = HostedDir + "/AgencyUser/FamilyDetails?Id=" + $('#Encrypthouseholid').val();
                                    }
                                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                            });
                            $("#Div3").hide();


                        }
                        else {

                            $('#Pregnantmotherenrolled').prop("checked", true);

                        }
                    });


                }
            }
        }




        function Pregnantmotherenrolled2() {
            if ('@Model.ExistPmprogram' > 0) {
                if ($('#PregnantmotherenrolledP1').prop("checked")) {

                    getIsAllowFuturePreg('PregnantmotherenrolledP1');
                    $("#Divp3").show();
                }
                else {

                    BootstrapDialog.confirm('All qualifier data for this guardian will be lost. Do you want to continue?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deletepmmother",
                                type: "POST",
                                data: {
                                    ParentId: $('#ParentID1').val(),
                                    HouseHoldId: $('#HouseholdId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        customAlert("Record deleted successfully. ");
                                        $('#Pregnantmotherprimaryinsurance1').val('');
                                        $('#Pregnantmotherprimaryinsurancenotes1').val('');
                                        $('#TrimesterEnrolled1').val('');
                                        $('#MedicalhomePreg2').val('');
                                        $('#CDoctorP2').val('');
                                        $('#P2Doctor').val(0);
                                        window.location.href = HostedDir + "/AgencyUser/FamilyDetails?Id=" + $('#Encrypthouseholid').val();


                                    }
                                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                            });
                            $("#Divp3").hide();
                        }
                        else {
                            $('#PregnantmotherenrolledP1').prop("checked", true);

                        }
                    });


                }
            }
        }
        function Custodychange1() {
            $('#Dualcustody').hide();
        }
        function Custodychange() {
            $('#Dualcustody').show();
            //if ($('#Cfirstname')[0].value.trim() == "") {
            //    isValid = false;
            //    customAlert("First name is required.");
            //    plainValidation('#Cfirstname');
            //    $(val).prop("checked", false);
            //    return isValid;
            //}
            //else {

            //BootstrapDialog.confirm('Do you want search child in associated family?', function (result) {
            //    if (result) {
            //        $.ajax({
            //            url: HostedDir + "/Agencyuser/Getassociatefamily",
            //            type: "POST",
            //            data: {
            //                childname: $('#CRace').val()
            //            },
            //            dataType: "json",
            //            secureuri: false,
            //            async: false,
            //            success: function (response) {
            //                if (response.length > 0) {
            //                    var option = "";
            //                    for (var i = 0; i < response.length; i++) {
            //                        option = option + '<option value="' + response[i].RaceSubCategoryID + '">' + response[i].Name + '</option>';

            //                    }
            //                    $('#CRaceSubCategory').find('option').remove().end().append(option);
            //                    $('#CRaceSubCategory').val('');
            //                }
            //                else {
            //                    $('#CRaceSubCategory').find('option').remove();

            //                }


            //            }
            //    , error: function (response) {
            //        customAlert("Error occured please try again later. ");
            //    }
            //        });
            //    }
            //});

        }

        function Searchparent() {
            isValid = true;
            if ($('#Parentfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required.");
                plainValidation('#Parentfirstname');
                return isValid;
            }
            if ($('#ParentLastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required.");
                plainValidation('#ParentLastname');
                return isValid;
            }
            if ($('#ParentStrretaddress')[0].value.trim() == "") {
                isValid = false;
                customAlert("Address is required.");
                plainValidation('#ParentStrretaddress');
                return isValid;
            }
            if ($('#Parentzipcode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip code is required.");
                plainValidation('#Parentzipcode');
                return isValid;
            }
            if ($('#Parentcity')[0].value.trim() == "") {
                isValid = false;
                customAlert("City is required.");
                plainValidation('#Parentcity');
                return isValid;
            }
            if ($('#Parentstate')[0].value.trim() == "") {
                isValid = false;
                customAlert("State is required.");
                plainValidation('#Parentstate');
                return isValid;
            }
            cleanValidation();
            $.ajax({
                url: HostedDir + "/Agencyuser/Getassociatefamily",
                type: "POST",
                data: {
                    Firstname: $('#Parentfirstname').val(),
                    Lastname: $('#ParentLastname').val(),
                    Address: $('#ParentStrretaddress').val(),
                    ZipCode: $('#Parentzipcode').val(),
                    City: $('#Parentcity').val(),
                    State: $('#Parentstate').val(),
                    mode: 0
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {

                    if (response == 1) {
                        $('#Dualcustodyparent').text(ucwords($('#ParentLastname').val()) + ' Household');
                        $('#Dualcustodyparent1').text(ucwords($('#ParentLastname').val()) + ' Household');
                    }
                    if (response == 0) {
                        $('#Dualcustodyparent').text('');
                        $('#Dualcustodyparent').text('');
                        BootstrapDialog.confirm('No record found. Do you want to add new record?', function (result) {
                            if (result) {
                                addparentindualtable();
                            }
                        });
                    }



                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
            });

        }
        function ucwords(str) {
            return (str + '').replace(/^([a-z])|\s+([a-z])/g, function ($1) {
                return $1.toUpperCase();
            });
        }
        function addparentindualtable() {
            $.ajax({
                url: HostedDir + "/Agencyuser/Getassociatefamily",
                type: "POST",
                data: {
                    Firstname: $('#Parentfirstname').val(),
                    Lastname: $('#ParentLastname').val(),
                    Address: $('#ParentStrretaddress').val(),
                    ZipCode: $('#Parentzipcode').val(),
                    City: $('#Parentcity').val(),
                    State: $('#Parentstate').val(),
                    mode: 1
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response == 1) {
                        customAlert("Record added successfully. ");
                    }
                    if (response == 2) {
                        customAlert("Address already exist. ");
                    }
                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
            });

        }

        function SaveNotes() {
            if ($('#Applicationidnotes').val().trim() == "") {
                isValid = false;
                plainValidation('#Applicationidnotes');
                return isValid;
            }
            else {
                $.ajax({
                    url: HostedDir + "/Agencyuser/SaveNotes",
                    type: "POST",
                    data: {
                        HouseHoldId: $('#HouseholdId').val(),
                        Notes: $('#Applicationidnotes').val(),
                        mode: 0
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        if (response.result == 1) {
                            customAlert("Record added successfully. ");
                            $('#Applicationidnotes').val('');
                            bindnotes(response.noteslist);

                        }

                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });
            }

        }


        function getNotes() {
            $.ajax({
                url: HostedDir + "/Agencyuser/SaveNotes",
                type: "POST",
                data: {
                    HouseHoldId: $('#HouseholdId').val(),
                    mode: 1
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    bindnotes(response.noteslist);
                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
            });
        }
        function bindnotes(data) {
            $('#gridViewfilenotes > tbody > tr').remove();
            if (data.length == 0) {

                $('#divnotes').show();
            }
            else {
                $('#divnotes').hide();
                var tbody = $('#gridViewfilenotes > tbody');
                for (var i = 0; i < data.length; i++) {
                    var tr = "";
                    tr += "<tr><style='text-align:center;'>";
                    tr += "<td '>" + ((typeof (data[i].notes) != 'undefined') && (data[i].notes != null) ? data[i].notes : '') + "</td>";
                    tr += "<td '>" + ((typeof (data[i].Name) != 'undefined') && (data[i].Name != null) ? data[i].Name : '') + "</td>";
                    tr += "<td '>" + ((typeof (data[i].CreatedOn) != 'undefined') && (data[i].CreatedOn != null) ? data[i].CreatedOn : '') + "</td>";
                    tr += "</tr>";
                    $('#gridViewfilenotes > tbody').append(tr);

                }
            }

        }

        function bindsubcategory() {
            if ($('#CRace').val() == '1e5304d3-6182-483a-8b27-5269a2dd9936')
                $('#divRaceother').show();
            else
                $('#divRaceother').hide();
            $.ajax({
                url: HostedDir + "/Agencyuser/getsubcategory",
                type: "POST",
                data: {
                    Raceid: $('#CRace').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].RaceSubCategoryID + '">' + response[i].Name + '</option>';
                        }
                        $('#CRaceSubCategory').find('option').remove().end().append(option);
                        $('#CRaceSubCategory').val('');
                    }
                    else {
                        $('#CRaceSubCategory').find('option').remove();
                    }
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });





        }
        function CalculatePercentage(el) {

            var ex = /^(100([\.][0]{1,})?$|[0-9]{1,2}([\.][0-9]{1,})?)$/;
            if (ex.test(el.value) == false) {
                el.value = "";
                $('#Amountqca1').val('');
                $('#Childincome').val($('#Amountqca2').val());
            }
            else {
                if ($('#C1').val().trim() != "" && $('#percage1').val().trim() != "") {
                    $('#Amountqca1').val(Math.round((Math.round($('#C1').val()) * parseFloat($('#percage1').val())) / 100));
                    if ($('#Amountqca1').val().trim() != "" && $('#Amountqca2').length > 0 && $('#Amountqca2').val().trim() != "") {
                        $('#Childincome').val(parseInt($('#Amountqca1').val()) + parseInt($('#Amountqca2').val()));
                    }
                    else if ($('#Amountqca1').val().trim() != "") {
                        $('#Childincome').val($('#Amountqca1').val());
                    }
                    else if ($('#Amountqca2').length > 0 && $('#Amountqca2').val().trim() != "") {
                        $('#Childincome').val($('#Amountqca2').val());
                    }
                    else if ($('#Amountqca1').val().trim() == "" && $('#Amountqca2').val().trim() == "") {
                        $('#Childincome').val('');
                    }
                }
            }
            if ($('#Childincome').val() != "")
                CalculatePoverty();
        }
        function CalculatePercentage1(el) {
            var ex = /^(100([\.][0]{1,})?$|[0-9]{1,2}([\.][0-9]{1,})?)$/;
            if (ex.test(el.value) == false) {
                el.value = "";
                $('#Amountqca2').val('');
                $('#Childincome').val($('#Amountqca1').val());
            }
            else {
                if ($('#Cp1').val().trim() != "" && $('#percage2').val().trim() != "") {

                    $('#Amountqca2').val(Math.round((Math.round($('#Cp1').val()) * parseFloat($('#percage2').val())) / 100));
                    if ($('#Amountqca1').length > 0 && $('#Amountqca1').val().trim() != "" && $('#Amountqca2').val().trim() != "") {
                        $('#Childincome').val(parseInt($('#Amountqca1').val()) + parseInt($('#Amountqca2').val()));
                    }
                    else if ($('#Amountqca2').val().trim() != "") {
                        $('#Childincome').val($('#Amountqca2').val());
                    }
                    else if ($('#Amountqca1').length > 0 && $('#Amountqca1').val().trim() != "") {
                        $('#Childincome').val($('#Amountqca1').val());
                    }
                    else if ($('#Amountqca1').length > 0 && $('#Amountqca1').val().trim() == "" && $('#Amountqca2').val().trim() == "") {
                        $('#Childincome').val('');
                    }

                }
            }
            if ($('#Childincome').val() != "")
                CalculatePoverty();
        }
        var value = null;
        function CalculatePoverty() {
            if ($('#Childincome').val().trim() != "") {
                $.ajax({
                    url: HostedDir + "/Agencyuser/GetPovertyCalculation",
                    type: "POST",
                    data: {
                        HouseHoldId: $('#HouseholdId').val(),
                        PovertyPercentage: $('#Childincome').val(),
                        Totalhousehold: $('#Peopleinhousehold').val()
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        $('#PovertyPercentage').val(response);
                    }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                });
            }
            else {
                customAlert("Child income is required.");
                plainValidation('#Childincome');



            }
        }
        function Showpoverty() {

            if ($('#Amountqca1').val().trim() != "$") {
                $.ajax({
                    url: HostedDir + "/Agencyuser/SavePovertyCalculation",
                    type: "POST",
                    data: {
                        HouseHoldId: $('#HouseholdId').val(),
                        clientid: $(value).attr("accesskey"),
                        Parentid1: $('#ParentID').val(),
                        Parentid2: $('#ParentID1').val(),
                        Percentage1: $('#percage1').val(),
                        Percentage2: $('#percage2').val(),
                        Amount1: $('#Amountqca1').val(),
                        Amount2: $('#Amountqca2').val(),
                        ChildIncome: $('#Childincome').val(),
                        PovertyPercentage: $('#PovertyPercentage').val(),
                        mode: 0

                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        if (response.result == 1)
                            customAlert("Record added successfully.");
                        if (response.result == 2)
                            customAlert("Record updated successfully.");



                    }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                });
                if (value != null) {
                    $(value).html($('#PovertyPercentage').val() + ' % <i class="fa fa-arrow-up"></i>');
                    if ($('#PovertyPercentage').val().trim() != "" && parseInt($('#PovertyPercentage').val()) > 100) {
                        $(value).css("color", "orange");

                    }
                    else {
                        $(value).css("color", "#337ab7");

                    }
                }
                $('#PovertyPercentage').val('');
                $('#MyQualifier').modal('toggle');
            }
            else {
                customAlert("Income Verification must be entered for Guardian.");
                plainValidation('#PovertyPercentage');

            }


        }
        function SetPoverty(item,mode) {
            value = item;
            $.ajax({
                url: HostedDir + "/Agencyuser/SavePovertyCalculation",
                type: "POST",
                data: {
                    HouseHoldId: $('#HouseholdId').val(),
                    clientid: $(value).attr("accesskey"),
                    Parentid1: $('#ParentID').val(),
                    Parentid2: $('#ParentID1').val(),
                    Percentage1: $('#percage1').val(),
                    Percentage2: $('#percage2').val(),
                    Amount1: $('#Amountqca1').val(),
                    Amount2: $('#Amountqca2').val(),
                    ChildIncome: $('#Childincome').val(),
                    PovertyPercentage: $('#PovertyPercentage').val(),
                    mode: 1
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    //$('#percage1').val(100); $('#percage2').val(100);
                    //if ($('#C1').val().trim() != "" && $('#percage1').val().trim() != "") {
                    //    $('#Amountqca1').val(Math.round((Math.round($('#C1').val()) * parseFloat($('#percage1').val())) / 100));
                    //    if ($('#Amountqca1').val().trim() != "" && $('#Amountqca2').val().trim() != "") {
                    //        $('#Childincome').val(parseInt($('#Amountqca1').val()) + parseInt($('#Amountqca2').val()));
                    //    }
                    //    else if ($('#Amountqca1').val().trim() != "") {
                    //        $('#Childincome').val($('#Amountqca1').val());
                    //    }
                    //    else if ($('#Amountqca2').val().trim() != "") {
                    //        $('#Childincome').val($('#Amountqca2').val());
                    //    }
                    //    else if ($('#Amountqca1').val().trim() == "" && $('#Amountqca2').val().trim() == "") {
                    //        $('#Childincome').val('');
                    //    }
                    //}
                    //if ($('#Cp1').val().trim() != "" && $('#percage2').val().trim() != "") {

                    //    $('#Amountqca2').val(Math.round((Math.round($('#Cp1').val()) * parseFloat($('#percage2').val())) / 100));
                    //    if ($('#Amountqca1').val().trim() != "" && $('#Amountqca2').val().trim() != "") {
                    //        $('#Childincome').val(parseInt($('#Amountqca1').val()) + parseInt($('#Amountqca2').val()));
                    //    }
                    //    else if ($('#Amountqca2').val().trim() != "") {
                    //        $('#Childincome').val($('#Amountqca2').val());
                    //    }
                    //    else if ($('#Amountqca1').val().trim() != "") {
                    //        $('#Childincome').val($('#Amountqca1').val());
                    //    }
                    //    else if ($('#Amountqca1').val().trim() == "" && $('#Amountqca2').val().trim() == "") {
                    //        $('#Childincome').val('');
                    //    }

                    //}
                    //rohit
                    if (response.PovertyCalculation != null && response.PovertyCalculation.PovertyCalculated != null && response.PovertyCalculation.PovertyCalculated != null) {
                        $('#percage1').val(response.PovertyCalculation.Percentage1);
                        $('#percage2').val(response.PovertyCalculation.Percentage2);
                        $('#Amountqca1').val(response.PovertyCalculation.Amount1);
                        $('#Amountqca2').val(response.PovertyCalculation.Amount2);
                        $('#PovertyPercentage').val(response.PovertyCalculation.PovertyCalculated);
                        $('#Childincome').val(response.PovertyCalculation.ChildIncome);
                    }
                    else {
                        // changed by shambhu, set value of childincome to 0 incase guradian income is zero.
                        $('#Childincome').val('0');
                    }
                    $('#percage1').blur();
                    $('#percage2').blur();
                    if (mode == 1) {
                        $('#percage1').prop('disabled', false);
                        $('#povertybtnSave').show();
                    }
                    else {
                        $('#percage1').prop('disabled', true);

                        $('#povertybtnSave').hide();
                    }


                    if ($('#Childincome').val() != "")
                        CalculatePoverty();

                    //if (value != null) {
                    //    $(value).html($('#PovertyPercentage').val() + ' % <i class="fa fa-arrow-up"></i>');
                    //    if ($('#PovertyPercentage').val().trim() != "" && parseInt($('#PovertyPercentage').val()) > 100) {
                    //        $(value).css("color", "orange");

                    //    }
                    //    else {
                    //        $(value).css("color", "#337ab7");

                    //    }
                    //}

                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
            });


        }
        var selectionobject = null;

        function getselectionpoint(value,mode) {
            selectionobject = value;
            $.ajax({
                url: HostedDir + "/Agencyuser/getselectionpoints",
                type: "POST",
                data: {
                    Programid: $(value).attr("accesskey"),
                    clientid: $(value).attr("clientdid"),
                    householdid: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {

                    bindselectiontablePoint(response, $(value).attr("clientype"));

                    if (mode == 1) {
                        $('#btnSaveSelectionPoint').show();

                    }
                    else {
                        $('#btnSaveSelectionPoint').hide();
                    }
                }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
            });
        }

        function AskForAlert(arg) {
            var prev = $(arg).data('val');
           // alert(prev);
            if (advocate != "") {
                BootstrapDialog.confirm('You are trying to change the advocate for this family. Please click OK to confirm', function (result) {
                    if (!result) {
                        if (CenterType == 1) {
                            $('#selAssignFSW').val(advocate);
                        }
                        else {
                            $('#selAssignHV').val(advocate);
                        }
                    }


                });
            }
        }
        var CenterType = 0;
        var advocate="";
        function LoadFSWorHVList(centerid, type) {
            var index = -1;
            CenterType = type;
            $('#AssignFSW').show();
            $('.DivHide').hide();
            $.ajax({
                url: HostedDir + "/Home/GetFSWOrHVList",
                type: "POST",
                data: {
                    ClientId: $(AcceptProcessobject).attr("accesskey"),
                    CenterId: centerid,
                    ListType: type
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    //console.log(data);

                    if (data != null && data.length > 0) {

                        var option = '';
                        if (type == 1)
                            option = option + '<option  value="0">Select FSW</option>';
                        else
                            option = option + '<option  value="0">Select HV</option>';

                        for (var i = 0; i < data.length; i++) {
                            if (data[i].IsSelected === true)
                                index = i;
                            option = option + '<option value="' + data[i].userId + '">' + data[i].Name + '</option>';
                        }


                        if (type == 1) {
                            $('#selAssignFSW').find('option').remove();
                            $('#selAssignFSW').find('option').remove().end().append(option);
                            $('#DivForFSW').show();
                            if (index == -1)
                                $('#selAssignFSW').val('0');
                            else {
                                advocate = data[index].userId;
                                $('#selAssignFSW').val(data[index].userId);
                            }



                        }
                        else {
                            $('#selAssignHV').find('option').remove();
                            $('#selAssignHV').find('option').remove().end().append(option);
                            $('#DivForHV').show();
                            if (index == -1)
                                $('#selAssignHV').val('0');
                            else {
                                advocate = data[index].userId;
                                $('#selAssignHV').val(data[index].userId);
                            }

                        }

                    }
                    else {
                        $('#selAssignFSW').find('option').remove();
                        $('#selAssignHV').find('option').remove();
                    }
                }
    , error: function (data) {
        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
    }
            });
        }

        var AcceptProcessobject = null;
        var familyAdvocate = "";
        function AcceptProcess(value) {
            AcceptProcessobject = value;
            $('#ddlnurse').find('option').remove()
            $("#DivCenterlist > tbody >tr").each(function () {
                $(this).find('input:radio').prop("checked", false);
            });
            $('#DivForFSW').hide();
            $('#DivForHV').hide();
            $.ajax({
                url: HostedDir + "/Agencyuser/Checkallmanadatoryfield",
                type: "POST",
                data: {
                    Householid: $('#HouseholdId').val(),
                    Clientid: $(AcceptProcessobject).attr("accesskey")
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response != null) {
                        Data = response;
                    }
                }
           , error: function (response) {
               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
           }
            });

            if (Data != null) {
                if (Valiadateallfieldwaitinglist(Data)) {
                    if (value != null) {
                        if ($(value).closest('tr').find('td:eq(3) a').text().trim() == "0") {
                            customAlert("Selection Points can't be zero. ");
                        }
                        else {

                            if ($(value).parent('td').parent('tr').children('td:eq(1)').html() == 'PM') {
                                $('#AcceptanceProcess').find('#DivCenterlist').find('tr[ackey=False]').hide();
                            }
                            else {
                                $('#AcceptanceProcess').find('#DivCenterlist').find('tr[ackey=False]').show();

                            }
                            $('#AcceptanceProcess').modal('show');
                        }

                    }

                }
            }
        }

        function SaveAcceptanceprocess() {

            cleanValidation();
            if (AcceptProcessobject != null) {

                var centrerselected = 0;
                var centerid = 0;
                $("#DivCenterlist > tbody >tr").each(function () {
                    if ($(this).find('input:radio').prop("checked")) {
                        centrerselected = 1;
                        centerid = $(this).find('input:radio').val();
                        return false;
                    }
                });
                if (centrerselected == 0) {
                    customAlert("Please select center. ");
                }
                else if ($('#DivForFSW').is(':visible')===true && $('#selAssignFSW').val() == "0" ) {
                        customAlert("Please choose any one FSW");
                        plainValidation('#selAssignFSW');
                }
                else if ($('#DivForHV').is(':visible')===true &&  $('#selAssignHV').val() == "0") {
                    customAlert("Please choose any one HV");
                    plainValidation('#selAssignHV');
                }
                else {
                    var fswid
                    if (CenterType == 1 && $('#DivForFSW').is(':visible') === true)
                        fswid = $('#selAssignFSW').val();
                    else
                        fswid = $('#selAssignHV').val();

                    BootstrapDialog.confirm('Click OK to move client to acceptance process', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/SaveAcceptanceprocess",
                                type: "POST",
                                data: {
                                    Clientid: $(AcceptProcessobject).attr("accesskey"),
                                    UserFSWId: fswid,
                                    householdid: $('#HouseholdId').val(),
                                    centerid: centerid,
                                    Programid: $(AcceptProcessobject).attr("Programid")
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        customAlert("Record saved successfully.");
                                        $('#ddlnurse').find('option').remove();
                                        $('#DivForFSW').hide();
                                        $('#DivForHV').hide();
                                        $("#DivCenterlist > tbody >tr").each(function () {
                                            $(this).find('input:radio').prop("checked", false);
                                        });
                                        $('#AcceptanceProcess').modal('toggle');
                                        $(AcceptProcessobject).removeAttr("data-target");
                                        $(AcceptProcessobject).removeAttr("onclick");
                                        $(AcceptProcessobject).removeAttr("style");
                                        $(AcceptProcessobject).attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(AcceptProcessobject).prev('a').removeAttr("onclick");
                                        $(AcceptProcessobject).prev('a').removeAttr("style");
                                        $(AcceptProcessobject).prev('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(AcceptProcessobject).closest('tr').find("td:eq(2)").find('a').removeAttr("style");
                                        $(AcceptProcessobject).closest('tr').find("td:eq(2)").find('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(AcceptProcessobject).closest('tr').find("td:eq(3)").find('a').removeAttr("style");
                                        $(AcceptProcessobject).closest('tr').find("td:eq(3)").find('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");




                                    }
                                    if (response == 2) {
                                        customAlert("No available slots. Please contact your administrator for assistance.");
                                    }
                                }
                       , error: function (response) {
                           customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                       }
                            });
                        }
                    });
                }
            }
        }
        function bindselectiontablePoint(Data, programid) {
            if (Data != null) {
                var tbody = "";
                $('#selectionpoint > tbody > tr').remove();
                if ($('#FamilyType').prop("checked") && Data._Selectionpoints.SingleParent != 0) {
                    tbody = tbody + "<tr><td>Single Parent Family</td><td>" + Data._Selectionpoints.SingleParent + "</td></tr>";
                }
                if ($('#FamilyType1').prop("checked") && Data._Selectionpoints.TwoParent != 0) {
                    tbody = tbody + "<tr><td>Two Parent Family</td><td>" + Data._Selectionpoints.TwoParent + "</td></tr>";
                }
                if ($('#HomeType1').prop("checked") && Data._Selectionpoints.HomelessYes != 0) {
                    tbody = tbody + "<tr><td>Is family Homeless at this time: Yes</td><td>" + Data._Selectionpoints.HomelessYes + "</td></tr>";
                }
                if ($('#HomeType2').prop("checked") && Data._Selectionpoints.HomelessNo != 0) {
                    tbody = tbody + "<tr><td>Is family Homeless at this time: No</td><td>" + Data._Selectionpoints.HomelessNo + "</td></tr>";
                }
                if ($('#TANF').prop("checked") && Data._Selectionpoints.TANF != 0) {
                    tbody = tbody + "<tr><td>TANF</td><td>" + Data._Selectionpoints.TANF + "</td></tr>";
                }
                if ($('#SSI').prop("checked") && Data._Selectionpoints.SSI != 0) {
                    tbody = tbody + "<tr><td>SSI</td><td>" + Data._Selectionpoints.SSI + "</td></tr>";
                }
                if ($('#SNAP').prop("checked") && Data._Selectionpoints.SNAP != 0) {
                    tbody = tbody + "<tr><td>SNAP</td><td>" + Data._Selectionpoints.SNAP + "</td></tr>";
                }
                if ($('#WIC').prop("checked") && Data._Selectionpoints.WIC != 0) {
                    tbody = tbody + "<tr><td>WIC</td><td>" + Data._Selectionpoints.WIC + "</td></tr>";
                }
                if ($('#NONE').prop("checked") && Data._Selectionpoints.NONE != 0) {
                    tbody = tbody + "<tr><td>NONE</td><td>" + Data._Selectionpoints.NONE + "</td></tr>";
                }
                if ($('#PrimaryLanguauge').val() == 1 && Data._Selectionpoints.English != 0) {
                    tbody = tbody + "<tr><td>Primary Language Spoken: English</td><td>" + Data._Selectionpoints.English + "</td></tr>";
                }
                if ($('#PrimaryLanguauge').val() == 12 && Data._Selectionpoints.Other != 0) {
                    tbody = tbody + "<tr><td>Primary Language Spoken: Other</td><td>" + Data._Selectionpoints.Other + "</td></tr>";
                }
                //Parent1
                if ($('#PDOB').val() != "" && $('#PDOB').val() != "MM/DD/YYYY") {
                    isValiddob = true;
                    var age = null;
                    var now = null;
                    var past = null;
                    var nowYear = null;
                    var pastYear = null;
                    now = new Date();
                    past = new Date($("#PDOB").val());
                    nowYear = now.getFullYear();
                    pastYear = past.getFullYear();
                    age = nowYear - pastYear;
                    if (age < 18 && Data._Selectionpoints.Teenager != 0) {
                        tbody = tbody + "<tr><td>Guardian1: Teenager</td><td>" + Data._Selectionpoints.Teenager + "</td></tr>";
                    }
                    if (age > 20 && age < 30 && Data._Selectionpoints.Age20 != 0) {
                        tbody = tbody + "<tr><td>Guardian1: Age 20 to 30</td><td>" + Data._Selectionpoints.Age20 + "</td></tr>";
                    }
                    if (age > 30 && Data._Selectionpoints.Age30over != 0) {
                        tbody = tbody + "<tr><td>Guardian1: Age above 30</td><td>" + Data._Selectionpoints.Age30over + "</td></tr>";
                    }
                }
                if ($('#PMilitaryStatus1').prop("checked") && Data._Selectionpoints.MilitaryStatusNone != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Military Status: None</td><td>" + Data._Selectionpoints.MilitaryStatusNone + "</td></tr>";
                }
                if ($('#PMilitaryStatus2').prop("checked") && Data._Selectionpoints.MilitaryStatusActive != 0) {
                    tbody = tbody + "<tr><td>Guardian1  Military Status: Active</td><td>" + Data._Selectionpoints.MilitaryStatusActive + "</td></tr>";
                }
                if ($('#PMilitaryStatus3').prop("checked") && Data._Selectionpoints.MilitaryStatusVeteran != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Military Status: Veteran</td><td>" + Data._Selectionpoints.MilitaryStatusVeteran + "</td></tr>";
                }
                if ($('#PCurrentlyWorking').prop("checked") && Data._Selectionpoints.CurrentlyWorkYes != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Currently Working: Yes</td><td>" + Data._Selectionpoints.CurrentlyWorkYes + "</td></tr>";
                }
                if ($('#PCurrentlyWorking1').prop("checked") && Data._Selectionpoints.CurrentlyWorkNo != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Currently Working: No</td><td>" + Data._Selectionpoints.CurrentlyWorkNo + "</td></tr>";
                }
                if ($('#PEnrollment').prop("checked") && Data._Selectionpoints.CurrentlyWorkYes != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Currently enrolled in job training/school: Yes</td><td>" + Data._Selectionpoints.CurrentlyWorkYes + "</td></tr>";
                }
                if ($('#PEnrollment1').prop("checked") && Data._Selectionpoints.CurrentlyWorkNo != 0) {
                    tbody = tbody + "<tr><td>Guardian1 Currently enrolled in job training/school: No</td><td>" + Data._Selectionpoints.CurrentlyWorkNo + "</td></tr>";
                }

                ///////Parent2
                if ($('#P1DOB').val() != "" && $('#P1DOB').val() != "MM/DD/YYYY") {
                    isValiddob = true;
                    var age = null;
                    var now = null;
                    var past = null;
                    var nowYear = null;
                    var pastYear = null;
                    now = new Date();
                    past = new Date($("#P1DOB").val());
                    nowYear = now.getFullYear();
                    pastYear = past.getFullYear();
                    age = nowYear - pastYear;
                    if (age < 18 && Data._Selectionpoints.G2Teenager) {
                        tbody = tbody + "<tr><td>Guardian2: Teenager</td><td>" + Data._Selectionpoints.G2Teenager + "</td></tr>";
                    }
                    if (age > 20 && age < 30 && Data._Selectionpoints.G2Age20) {
                        tbody = tbody + "<tr><td>Guardian2: Age 20 to 30</td><td>" + Data._Selectionpoints.G2Age20 + "</td></tr>";
                    }
                    if (age > 30 && Data._Selectionpoints.G2Age30over) {
                        tbody = tbody + "<tr><td>Guardian2: Age above 30</td><td>" + Data._Selectionpoints.G2Age30over + "</td></tr>";
                    }
                }
                if ($('#P1MilitaryStatus1').prop("checked") && Data._Selectionpoints.G2MilitaryStatusNone != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Military Status: None</td><td>" + Data._Selectionpoints.G2MilitaryStatusNone + "</td></tr>";
                }
                if ($('#P1MilitaryStatus2').prop("checked") && Data._Selectionpoints.G2MilitaryStatusActive != 0) {
                    tbody = tbody + "<tr><td>Guardian2  Military Status: Active</td><td>" + Data._Selectionpoints.G2MilitaryStatusActive + "</td></tr>";
                }
                if ($('#P1MilitaryStatus3').prop("checked") && Data._Selectionpoints.G2MilitaryStatusVeteran != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Military Status: Veteran</td><td>" + Data._Selectionpoints.G2MilitaryStatusVeteran + "</td></tr>";
                }
                if ($('#P1CurrentlyWorking').prop("checked") && Data._Selectionpoints.G2CurrentlyWorkYes != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Currently Working: Yes</td><td>" + Data._Selectionpoints.G2CurrentlyWorkYes + "</td></tr>";
                }
                if ($('#P1CurrentlyWorking1').prop("checked") && Data._Selectionpoints.G2CurrentlyWorkNo != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Currently Working: No</td><td>" + Data._Selectionpoints.G2CurrentlyWorkNo + "</td></tr>";
                }
                if ($('#P1Enrollment').prop("checked") && Data._Selectionpoints.G2JobTrainingyes != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Currently enrolled in job training/school: Yes</td><td>" + Data._Selectionpoints.G2JobTrainingyes + "</td></tr>";
                }
                if ($('#P1Enrollment1').prop("checked") && Data._Selectionpoints.G2JobTrainingno != 0) {
                    tbody = tbody + "<tr><td>Guardian2 Currently enrolled in job training/school: No</td><td>" + Data._Selectionpoints.G2JobTrainingno + "</td></tr>";
                }
                if (programid == 0) {
                    if (Data.Medicalhome == 4) {
                        if (Data._Selectionpoints.PMMedicalHomeNo != 0)
                            tbody = tbody + "<tr><td>Medical Home: No</td><td>" + Data._Selectionpoints.PMMedicalHomeNo + "</td></tr>";
                    }
                    if (Data.Medicalhome == 2 || Data.Medicalhome == 3) {
                        if (Data._Selectionpoints.PMMedicalHomeYes != 0)
                            tbody = tbody + "<tr><td>Medical Home: Yes</td><td>" + Data._Selectionpoints.PMMedicalHomeYes + "</td></tr>";
                    }
                    if (Data.Pregnantmotherprimaryinsurance == 2) {
                        if (Data._Selectionpoints.PMInsuranceNo != 0)
                            tbody = tbody + "<tr><td>Primary Insurance: No</td><td>" + Data._Selectionpoints.PMInsuranceNo + "</td></tr>";
                    }
                    if (Data.Pregnantmotherprimaryinsurance == 1 || Data.Pregnantmotherprimaryinsurance == 3 || Data.Pregnantmotherprimaryinsurance == 4 || Data.Pregnantmotherprimaryinsurance == 5) {
                        if (Data._Selectionpoints.PMInsuranceYes != 0)
                            tbody = tbody + "<tr><td>Primary Insurance: Yes</td><td>" + Data._Selectionpoints.PMInsuranceYes + "</td></tr>";
                    }
                    if (Data.TrimesterEnrolled == 1 && Data._Selectionpoints.Trimester1 != 0) {
                        tbody = tbody + "<tr><td>Trimester Enrolled </td><td>" + Data._Selectionpoints.Trimester1 + "</td></tr>";
                    }
                    if (Data.TrimesterEnrolled == 2 && Data._Selectionpoints.Trimester2 != 0) {
                        tbody = tbody + "<tr><td>Trimester Enrolled </td><td>" + Data._Selectionpoints.Trimester2 + "</td></tr>";
                    }
                    if (Data.TrimesterEnrolled == 3 && Data._Selectionpoints.Trimester3 != 0) {
                        tbody = tbody + "<tr><td>Trimester Enrolled </td><td>" + Data._Selectionpoints.Trimester3 + "</td></tr>";
                    }
                    if (Data.Povertypercentage != "" && !($('#SSI').prop("checked")) && !($('#TANF').prop("checked")) && !($('#HomeType1').prop("checked"))) {
                        var percentage = parseFloat(Data.Povertypercentage);
                        if (percentage < 26 && Data._Selectionpoints.poverty0to25 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty0to25 + "</td></tr>";
                        if (percentage >= 26 && percentage <= parseFloat("50.99") && Data._Selectionpoints.poverty26to50 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty26to50 + "</td></tr>";
                        if (percentage >= 51 && percentage <= parseFloat("75.99") && Data._Selectionpoints.poverty51to75 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty51to75 + "</td></tr>";
                        if (percentage >= 76 && percentage <= 100 && Data._Selectionpoints.poverty76to100 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty76to100 + "</td></tr>";
                        if (percentage >= parseFloat("100.01") && percentage <= 130 && Data._Selectionpoints.poverty100to130 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty100to130 + "</td></tr>";
                        if (percentage > 130 && Data._Selectionpoints.povertygreater130 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.povertygreater130 + "</td></tr>";
                    }
                }
                else {
                    if (Data.CParentdisable != 0) {
                        //Santosh 27march
                        if (Data.CParentdisable == 1 && Data._Selectionpoints.SuspecteddisabiltyYes != 0)
                            tbody = tbody + "<tr><td>Suspected disabilty: Yes</td><td>" + Data._Selectionpoints.SuspecteddisabiltyYes + "</td></tr>";
                        if (Data.CParentdisable == 2 && Data._Selectionpoints.SuspecteddisabiltyNo != 0)
                            tbody = tbody + "<tr><td>Suspected disabilty: No</td><td>" + Data._Selectionpoints.SuspecteddisabiltyNo + "</td></tr>";
                        if (Data.CParentdisable == 1 && Data._Selectionpoints.DocumentofdisabiltyYes != 0 && (Data.IsIEP == true || Data.IsIFSP == true))
                            tbody = tbody + "<tr><td>Document for disabilty: Yes</td><td>" + Data._Selectionpoints.DocumentofdisabiltyYes + "</td></tr>";
                        if (Data.CParentdisable == 2 && Data._Selectionpoints.DocumentofdisabiltyNo != 0 && (Data.IsIEP == false || Data.IsIFSP == false))
                            tbody = tbody + "<tr><td>Document for disabilty: No</td><td>" + Data._Selectionpoints.DocumentofdisabiltyNo + "</td></tr>";
                    }
                    if (Data.IsFoster != 0) {
                        if (Data.IsFoster == 1 && Data._Selectionpoints.FosterChildYes != 0)
                            tbody = tbody + "<tr><td>Is Foster Child: Yes</td><td>" + Data._Selectionpoints.FosterChildYes + "</td></tr>";
                        if (Data.IsFoster == 2 && Data._Selectionpoints.SuspecteddocumentofdisabiltyNo != 0)
                            tbody = tbody + "<tr><td>Is Foster Child: No</td><td>" + Data._Selectionpoints.FosterChildNo + "</td></tr>";
                    }
                    if (Data.Inwalfareagency != 0) {
                        if (Data.Inwalfareagency == 1 && Data._Selectionpoints.ChildWlfareYes != 0)
                            tbody = tbody + "<tr><td>Is child referred by a child welfare agency: Yes</td><td>" + Data._Selectionpoints.ChildWlfareYes + "</td></tr>";
                        if (Data.Inwalfareagency == 2 && Data._Selectionpoints.ChildWlfareNo != 0)
                            tbody = tbody + "<tr><td>Is child referred by a child welfare agency: No</td><td>" + Data._Selectionpoints.ChildWlfareNo + "</td></tr>";
                    }
                    if (Data.InDualcustody != 0) {
                        if (Data.InDualcustody == 1 && Data._Selectionpoints.DualCustYes != 0)
                            tbody = tbody + "<tr><td>Is child a dual custody child: Yes</td><td>" + Data._Selectionpoints.DualCustYes + "</td></tr>";
                        if (Data.InDualcustody == 2 && Data._Selectionpoints.DualCustNo != 0)
                            tbody = tbody + "<tr><td>Is child a dual custody child: No</td><td>" + Data._Selectionpoints.DualCustNo + "</td></tr>";
                    }
                    if (Data.Medicalhome == 1) {
                        if (Data._Selectionpoints.MedicalHomeNo != 0)
                            tbody = tbody + "<tr><td>Medical Home: No</td><td>" + Data._Selectionpoints.MedicalHomeNo + "</td></tr>";
                    }
                    if (Data.Medicalhome == 2 || Data.Medicalhome == 3) {
                        if (Data._Selectionpoints.MedicalHomeYes != 0)
                            tbody = tbody + "<tr><td>Medical Home: Yes</td><td>" + Data._Selectionpoints.MedicalHomeYes + "</td></tr>";
                    }
                    if (Data.CDentalhome == 1) {
                        if (Data._Selectionpoints.DentalHomeNo != 0)
                            tbody = tbody + "<tr><td>Dental Home: No</td><td>" + Data._Selectionpoints.DentalHomeNo + "</td></tr>";
                    }
                    if (Data.CDentalhome == 2 || Data.CDentalhome == 3) {
                        if (Data._Selectionpoints.DentalHomeYes != 0)
                            tbody = tbody + "<tr><td>Dental Home: Yes</td><td>" + Data._Selectionpoints.DentalHomeYes + "</td></tr>";
                    }
                    if (Data.InsuranceOption == 2) {
                        if (Data._Selectionpoints.InsuranceNo != 0)
                            tbody = tbody + "<tr><td>Primary Insurance: No</td><td>" + Data._Selectionpoints.InsuranceNo + "</td></tr>";
                    }
                    if (Data.InsuranceOption == 1 || Data.InsuranceOption == 3 || Data.InsuranceOption == 4 || Data.InsuranceOption == 5) {
                        if (Data._Selectionpoints.InsuranceYes != 0)
                            tbody = tbody + "<tr><td>Primary Insurance: Yes</td><td>" + Data._Selectionpoints.InsuranceYes + "</td></tr>";
                    }
                    if (Data.CDOB != "") {
                        var age = null;
                        var ageday = null;
                        var agemonth = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var nowMonth = null;
                        var nowDay = null;
                        var pastYear = null;
                        var pastMonth = null;
                        var pastDay = null;
                        now = new Date();
                        past = new Date(Data.CDOB);
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        nowMonth = now.getMonth();
                        nowDay = now.getDate();
                        pastMonth = past.getMonth();
                        pastDay = past.getDate();
                        age = nowYear - pastYear
                        ageMonth = nowMonth - pastMonth;
                        ageDay = nowDay - pastDay;
                        if (nowDay < pastDay) {
                            ageMonth = ageMonth - 1
                        }
                        if (nowMonth < pastMonth - 1) {
                            age = age - 1;
                        }

                        if (pastMonth - 1 == nowMonth && nowDay < pastDay) {
                            age = age - 1;
                        }


                        if (ageMonth <= 2 && age == 0 && Data._Selectionpoints.Ageless10weeks != 0)
                            tbody = tbody + "<tr><td>Child Age: Less Than 10 Weeks</td><td>" + Data._Selectionpoints.Ageless10weeks + "</td></tr>";
                        if (ageMonth == 2 && ageDay < 15 && age == 0 && Data._Selectionpoints.Ageless10weeks != 0)
                            tbody = tbody + "<tr><td>Child Age: Less Than 10 Weeks</td><td>" + Data._Selectionpoints.Ageless10weeks + "</td></tr>";
                        if ((ageMonth == 2 && ageDay > 14 && age == 0) && Data._Selectionpoints.Agegreater10weeks != 0)
                            tbody = tbody + "<tr><td>Child Age: Between 10 Weeks - 3 Months </td><td>" + Data._Selectionpoints.Agegreater10weeks + "</td></tr>";
                        if ((ageMonth >= 3 && ageMonth < 6 && age == 0) && Data._Selectionpoints.Age3Months != 0)
                            tbody = tbody + "<tr><td>Child Age: Between 3-6 Months </td><td>" + Data._Selectionpoints.Age3Months + "</td></tr>";
                        if (age == 1 && Data._Selectionpoints.Age1yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 1yr</td><td>" + Data._Selectionpoints.Age1yr + "</td></tr>";
                        if ((ageMonth >= 6 && age < 1) && Data._Selectionpoints.Age6Months != 0)
                            tbody = tbody + "<tr><td>Child Age: Between 6-12 Months </td><td>" + Data._Selectionpoints.Age6Months + "</td></tr>";
                        if (age == 2 && Data._Selectionpoints.Age2yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 2yr</td><td>" + Data._Selectionpoints.Age2yr + "</td></tr>";
                        if (age == 3 && Data._Selectionpoints.Age3yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 3yr</td><td>" + Data._Selectionpoints.Age3yr + "</td></tr>";
                        if (age == 4 && Data._Selectionpoints.Age4yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 4yr</td><td>" + Data._Selectionpoints.Age4yr + "</td></tr>";
                        if (age == 5 && Data._Selectionpoints.Age5yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 5yr</td><td>" + Data._Selectionpoints.Age5yr + "</td></tr>";
                        if (age == 6 && Data._Selectionpoints.Age6yr != 0)
                            tbody = tbody + "<tr><td>Child Age: 6yr</td><td>" + Data._Selectionpoints.Age6yr + "</td></tr>";
                        if (age > 6 && Data._Selectionpoints.Age6yrorgreater != 0)
                            tbody = tbody + "<tr><td>Child Age: Greather than 6yr</td><td>" + Data._Selectionpoints.Age6yrorgreater + "</td></tr>";
                    }

                    if (Data.Povertypercentage != "" && !($('#SSI').prop("checked")) && !($('#TANF').prop("checked")) && !($('#HomeType1').prop("checked"))) {
                        var percentage = parseFloat(Data.Povertypercentage);
                        if (percentage < 26 && Data._Selectionpoints.poverty0to25 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty0to25 + "</td></tr>";
                        if (percentage >= 26 && percentage <= parseFloat("50.99") && Data._Selectionpoints.poverty26to50 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty26to50 + "</td></tr>";
                        if (percentage >= 51 && percentage <= parseFloat("75.99") && Data._Selectionpoints.poverty51to75 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty51to75 + "</td></tr>";
                        if (percentage >= 76 && percentage <= 100 && Data._Selectionpoints.poverty76to100 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty76to100 + "</td></tr>";
                        if (percentage >= parseFloat("100.01") && percentage <= 130 && Data._Selectionpoints.poverty100to130 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.poverty100to130 + "</td></tr>";
                        if (percentage > 130 && Data._Selectionpoints.povertygreater130 > 0)
                            tbody = tbody + "<tr><td>Poverty Percentage Level </td><td>" + Data._Selectionpoints.povertygreater130 + "</td></tr>";
                    }
                }
                $("#selectionpoint > tbody").append(tbody);
                var point = 0;
                $("#selectionpoint > tbody >tr").each(function () {

                    point = point + parseInt($(this).find('td:eq(1)').text());
                    $(this).find('td:eq(1)').css('text-align', 'right');

                });
                $('#Totalselectionpoint').val(point);

                if ($("#selectionpoint > tbody >tr").length <= 0)
                    $('#divselectionpoint').show();
                else
                    $('#divselectionpoint').hide();
                $('#Totalselectionpoint').css('text-align', 'right');

                if (Data.CustomQues != null && Data.CustomQues.length > 0) {
                    $('#Hidecustomquestion').show();
                    $("#Custompoint > tbody >tr").remove();
                    $('#Totalcustompoint').val("");
                    var tbody = "";
                    for (var i = 0; i < Data.CustomQues.length; i++) {

                        if (Data.CustomQues[i].QuesYes == Data.CustomQues[i].point)
                            tbody = tbody + "<tr><td >" + Data.CustomQues[i].Question + "</td><td><input accesskey='" + Data.CustomQues[i].CQID + "' checked='checked' onchange='setPoint(this," + Data.CustomQues[i].QuesYes + ")' value= '" + Data.CustomQues[i].QuesYes + "'  name='Points" + i + "' type='radio'>Yes" +
                                   "&nbsp;&nbsp;<input name='Points" + i + "' onchange='setPoint(this," + Data.CustomQues[i].QuesNo + ")' value= '" + Data.CustomQues[i].QuesNo + "' type='radio'>No</td><td>" + Data.CustomQues[i].point + "</td>";
                        else if (Data.CustomQues[i].QuesNo == Data.CustomQues[i].point)
                            tbody = tbody + "<tr><td >" + Data.CustomQues[i].Question + "</td><td><input accesskey='" + Data.CustomQues[i].CQID + "' onchange='setPoint(this," + Data.CustomQues[i].QuesYes + ")' value= '" + Data.CustomQues[i].QuesYes + "'  name='Points" + i + "' type='radio'>Yes" +
                                       "&nbsp;&nbsp;<input name='Points" + i + "' checked='checked' onchange='setPoint(this," + Data.CustomQues[i].QuesNo + ")' value= '" + Data.CustomQues[i].QuesNo + "' type='radio'>No</td><td>" + Data.CustomQues[i].point + "</td>";
                        else
                            tbody = tbody + "<tr><td >" + Data.CustomQues[i].Question + "</td><td><input accesskey='" + Data.CustomQues[i].CQID + "' onchange='setPoint(this," + Data.CustomQues[i].QuesYes + ")' value= '" + Data.CustomQues[i].QuesYes + "'  name='Points" + i + "' type='radio'>Yes" +
                                       "&nbsp;&nbsp;<input name='Points" + i + "' onchange='setPoint(this," + Data.CustomQues[i].QuesNo + ")' value= '" + Data.CustomQues[i].QuesNo + "' type='radio'>No</td><td>" + Data.CustomQues[i].point + "</td>";



                    }
                    $("#Custompoint> tbody").append(tbody);
                    if ($("#selectionpoint > tbody >tr").length <= 0)
                        $('#divquestionpoint').show();
                    else
                        $('#divquestionpoint').hide();
                }
                else {

                    $('#Hidecustomquestion').hide();
                    $("#Custompoint > tbody >tr").remove();

                }
                var point = 0;
                $("#Custompoint > tbody >tr").each(function () {
                    $(this).find('td:eq(1)').find('input:text').css('width', '23%');
                    point = point + parseInt(($(this).find('td:eq(2)').text()) == "" ? 0 : $(this).find('td:eq(2)').text());
                    $(this).find('td:eq(2)').css('text-align', 'right');

                });
                $('#Totalcustompoint').val(point);
                $('#Totalcustompoint').css('text-align', 'right');
                $('#Grandpoint').val(($('#Totalselectionpoint').val() == "" ? 0 : parseInt($('#Totalselectionpoint').val())) + ($('#Totalcustompoint').val() == "" ? 0 : parseInt($('#Totalcustompoint').val())));
                $('#Grandpoint').css('text-align', 'right');

            }
        }
        function setPoint(object, value) {

            $(object).parent().next('td').text(value);
            var point = 0;
            $("#Custompoint > tbody >tr").each(function () {
                point = point + parseInt(($(this).find('td:eq(2)').text()) == "" ? 0 : $(this).find('td:eq(2)').text());
                $(this).find('td:eq(2)').css('text-align', 'right');

            });
            $('#Totalcustompoint').val(point);
            $('#Totalcustompoint').css('text-align', 'right');
            $('#Grandpoint').val(($('#Totalselectionpoint').val() == "" ? 0 : parseInt($('#Totalselectionpoint').val())) + ($('#Totalcustompoint').val() == "" ? 0 : parseInt($('#Totalcustompoint').val())));
            $('#Grandpoint').css('text-align', 'right');
        }

        function Saveselectionpoint() {
            //rohit
            if (selectionobject != null) {

                if ($('#selectionpoint > tbody > tr').length > 0) {


                    $(selectionobject).html($('#Grandpoint').val() + ' <i class="fa fa-arrow-up"></i>');
                    var custompoints = [];
                    var _custompoint = [];
                    $("#Custompoint > tbody >tr").each(function () {
                        var td = $(this).find('td:eq(1)').children()[0];
                        _custompoint = {
                            Question: $(this).find('td:eq(0)').text(),
                            CQID: $(this).find('td:eq(1)').children().first().attr("accesskey"),
                            QuesYes: $(this).find('td:eq(1)').children().first().val(),
                            QuesNo: $(this).find('td:eq(1)').children().eq(1).val(),
                            point: $(this).find('td:eq(2)').text(),
                            ProgramType: 0
                        };
                        custompoints.push(_custompoint);
                    });
                    //custompoints = JSON.stringify({ 'custompoints': custompoints });

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        url: HostedDir + "/Agencyuser/SaveSelectionPoint",
                        type: "POST",
                        data:
                            JSON.stringify({
                                'custompoints': custompoints,
                                'Totalselectionpoint': $('#Totalselectionpoint').val(),
                                'Totalcustompoint': $('#Totalcustompoint').val(),
                                'Grandpoint': $('#Grandpoint').val(),
                                'clientid': $(selectionobject).attr("clientdid"),
                                'householdid': $('#HouseholdId').val()
                            }),
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response1) {

                            if (response1 == 1) {
                                customAlert("Record saved successfully.");
                                $(selectionobject).closest('tr').find('td:eq(4) a').text('Complete');
                                $(selectionobject).closest('tr').find('td:eq(4) a').attr("style", "color:#337ab7 ;text-decoration: underline; ");
                            } else {

                            }
                            //bindselectiontablePoint(response, $(value).attr("clientype"));

                        }
                       , error: function (response) {
                           customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                       }
                    });
                }
                else {
                    customAlert("No record to save. ");

                }
            }
        }
        //Changes by Akansha on 14Dec2016
        function SetResource(value, resource) {
            popupid = value;
            popupname = resource;
            if (popupid == 1 || popupid == 3 || popupid == 4) {
                // $('#Resourece1').text("Doctor Information");
                $('#Resourece1').text("Medical Center");
                // $('#Resourece2').text("Doctor");
                $('#ddlDoctor').show(); //Added by Akansha on 14Dec2016
                $('#ddlDentist').hide();
                $('#AddDoctorBtn').show();
                $('#AddDentistBtn').hide();
                $('#Resourece3').text("Add New Medical Center");
                //Changes

                $('#DdlCommunityList').prop('selectedIndex', 1);
                $("#DdlCommunityList").attr("disabled", "disabled");
                //Added on 31Jan2017
                $('#DoctorCheck').show();
                $('#DentistCheck').hide();
                $('#txtFnameD').val("");
                $('#txtLnameD').val("");
                $('#CityD').val("");//1Feb2017
                $('#StateD').val("");
                $('#CountyD').val("");
                $('#ZipCodeD').val("");
                $('#DocCheck')[0].value = "";
                $('#DenCheck')[0].value = "";
                //End
                $('#divmedicalCenter').show();
                $('#divmedicalnotes').show();
                $('#divdentalCenter').hide();
                $('#divdentalnotes').hide();

                AddDoctorCenter(1);
            }
            if (popupid == 2) {
                // $('#Resourece1').text("Dentist Information");
                $('#Resourece1').text("Dental Center");
                $('#Resourece2').text("Dentist");
                $('#ddlDentist').show(); //Added by Akansha on 14Dec2016
                $('#AddDentistBtn').show();
                $('#AddDoctorBtn').hide();
                $('#ddlDoctor').hide();
                $('#Resourece3').text("Add New Dental Center");
                //Added on 31Jan2017
                $('#DoctorCheck').hide();
                $('#DentistCheck').show();
                $('#txtFnameD').val("");
                $('#txtLnameD').val("");
                $('#CityD').val("");//1Feb2017
                $('#StateD').val("");
                $('#CountyD').val("");
                $('#ZipCodeD').val("");
                $('#DocCheck')[0].value = "";
                $('#DenCheck')[0].value = "";
                //End
                //Changes
                $('#DdlCommunityList').prop('selectedIndex', 0);
                $("#DdlCommunityList").attr("disabled", "disabled");
                //Added by Akansha on 14Dec2016
                $('#divdentalCenter').show();
                $('#divdentalnotes').show();
                $('#divmedicalCenter').hide();
                $('#divmedicalnotes').hide();

                AddDoctorCenter(2);
            }

        }
        //Added by Akansha on 14Dec2016
        function AddDoctorCenter(community) {
            $.ajax({
                url: HostedDir + "/AgencyUser/FillCommunity",
                type: "POST",
                data: {
                    Community: community,
                    //HouseHoldId: $('#HouseholdId').val(),

                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (community == "1") {
                        if (response.doctorList != null && response.doctorList.length > 0) {
                            var option = "";
                            for (var i = 0; i < response.doctorList.length; i++) {
                                option = option + '<option value="' + response.doctorList[i].Id + '">' + response.doctorList[i].Name + '</option>';
                            }
                            $('#Username').find('option').remove().end().append(option);
                            $('#Username').val('');

                        }
                    }
                    if (community == "2") {
                        if (response.doctorList != null && response.doctorList.length > 0) {
                            var option = "";
                            for (var i = 0; i < response.doctorList.length; i++) {
                                option = option + '<option value="' + response.doctorList[i].Id + '">' + response.doctorList[i].Name + '</option>';
                            }
                            $('#UsernameDentist').find('option').remove().end().append(option);
                            $('#UsernameDentist').val('');

                        }
                    }

                }
                      , error: function (response) {
                          customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                      }
            });
        }
        //End

        function checkbacktolist() {

            BootstrapDialog.confirm('Any unsaved data will be lost.Click OK to continue', function (result) {
                if (result) {
                    window.location.href = HostedDir + "/AgencyUser/viewfamilydetails";
                }
            });
        }
        function Disableparentemail(object) {
            if ($(object).prop("checked")) {
                $('#Pemailid').attr("readonly", true);
                $('#Pemailid').val('');
            }
            else
                $('#Pemailid').attr("readonly", false);
        }
        function Disableparentemail1(object) {
            if ($(object).prop("checked")) {
                $('#P1emailid').attr("readonly", true);
                $('#P1emailid').val('');
            }
            else
                $('#P1emailid').attr("readonly", false);
        }
        function calculategrandtotalpoint() {
            $('#Grandpoint').val(($('#Totalselectionpoint').val() == "" ? 0 : parseInt($('#Totalselectionpoint').val())) + ($('#Totalcustompoint').val() == "" ? 0 : parseInt($('#Totalcustompoint').val())));
        }
        function Clearchild(object) {


            //rohit

            if ($('#Cfirstname').val() != "" && $('#Clastname').val() != "" && $('#CDOB').val() != "") {
                BootstrapDialog.confirm('Are you sure want to discard changes?', function (result) {
                    if (result) {
                        $('#Health').hide();
                        $('#ScreeningDiv').find('input:text,select').each(function (j, element) {
                            $(element).val('');
                        });
                        $('#Screening1').hide();
                        $('#Cfirstname')[0].value = "";
                        $('#Clastname')[0].value = "";
                        $('#Cmiddlename')[0].value = "";
                        $('#Clastname')[0].value = "";
                        $('#CDOB').val("");
                        $('#CSSN').val("");
                        ssnoriginalvalue = null;
                        $('#CGendermale').prop("checked", false);
                        $('#CGenderfemale').prop("checked", false);
                        $('#CGenderother').prop("checked", false);
                        $('#CParentdisable1').prop("checked", false);
                        $('#CParentdisable2').prop("checked", false);
                        $('#MedicalService1').prop("checked", false);
                        $('#MedicalService2').prop("checked", false);
                        $('#DobverificationinPaper').prop("checked", false);
                        $("input:radio[name='IsFoster']").prop("checked", false);
                        $("input:radio[name='Inwalfareagency']").prop("checked", false);
                        $("input:radio[name='InDualcustody']").prop("checked", false);
                        $("input:radio[name='InChildCareSubsidy']").prop("checked", false);
                        $('#ImmunizationinPaper').prop("checked", false);
                        $('#CFileName').val("");
                        $('#CFileExtension').val("");
                        $('#HouseholdRecord').removeClass("in");
                        $('#HouseholdRecord').removeClass("active");
                        $('#ChildId').val(0);
                        $('#CProgramType').val('');
                        $('#DOBverifiedBy').val('');
                        $('#CRace').val('');
                        $('#CEthnicity').val('');
                        $('#CRaceSubCategory').val('');
                        $('#Medicalhome').val('');
                        $('#CDentalhome').val('');
                        $('#ImmunizationService').val('');
                        $('#SchoolDistrict').val('');
                        $('#BMIStatus').val('');
                        $('#BMIStatus2').val('');
                        $('#Doctor').val(0);
                        $('#Dentist').val(0);
                        $('#CDoctor').val('');
                        $('#CDentist').val('');
                        $('#MedicalNote').val('');
                        $('#addrowC1').hide();
                        $('#addrowDentist').hide();
                        $('#InsuranceOption').val('');
                        $('#Imagejson').val('');
                        //04082016
                        $('#EHSHealth').hide();
                        $('#HSHealth').hide();
                        $('#Nutrition').hide();
                        $('#EhsChildBorn1').prop("checked", false);
                        $('#EhsChildBorn2').prop("checked", false);
                        $('#EhsChildBorn3').prop("checked", false);
                        $('#EhsChildBirthWt').val('');
                        $('#EhsChildLength').val('');
                        $('#EhsChildProblm1').prop("checked", false);
                        $('#EhsChildProblm2').prop("checked", false);
                        $('#EhsMedication1').prop("checked", false);
                        $('#EhsMedication2').prop("checked", false);
                        $('#EHSCDBRText').html('');
                        $('#EHSCDCText').html('');
                        $('#EHSCHCText').html('');
                        $('#EHDCDCText').html('');
                        $('#EHSCCHText').html('');
                        $('#EHSCTCHText').html('');
                        $('#AHeight').val("");
                        $('#AWeight').val("");
                        $('#HeadCircle').val("");
                        $('#AssessmentDate').val("");
                        $('#HWInput1').prop("checked", false);
                        $('#HWInput2').prop("checked", false);
                        clearcustomscreening();
                        $('#CTransportNeeded1').prop("checked", false);
                        $('#CTransportNeeded2').prop("checked", false);

                        $('#CDBRlist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#DiagnoseChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#EHSChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#EHSCHCChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#MedicalChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#ChronicChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#CDBRText').html('');
                        $('#CDCText').html('');
                        $('#CCHText').html('');
                        $('#CTCHText').html('');
                        $('#CDBRlist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#DiagnoseChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#MedicalChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#ChronicChildChecklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#ChildBorn1').prop("checked", false);
                        $('#ChildBorn2').prop("checked", false);
                        $('#ChildBorn3').prop("checked", false);
                        $('#ChildBirthWt').val('');
                        $('#ChildLength').val('');
                        $('#ChildProblm1').prop("checked", false);
                        $('#ChildProblm2').prop("checked", false);
                        $('#Medication1').prop("checked", false);
                        $('#Medication2').prop("checked", false);
                        $('#Comment').val('');
                        $('#ChildDentalCare1').prop("checked", false);
                        $('#ChildDentalCare2').prop("checked", false);
                        $('#DentalExam1').prop("checked", false);
                        $('#DentalExam2').prop("checked", false);
                        $('#ChildNeedDentalTreatment1').prop("checked", false);
                        $('#ChildNeedDentalTreatment2').prop("checked", false);
                        $('#ChildNeedDentalTreatment3').prop("checked", false);
                        $('#ChildRecievedDentalTreatment1').prop("checked", false);
                        $('#ChildRecievedDentalTreatment2').prop("checked", false);
                        $('#ChildRecievedDentalTreatment3').prop("checked", false);
                        $('#Cvstext').html('');
                        $('#ChildVitaminSupplementlist input:checked').each(function () {
                            $(this).prop("checked", false);
                        });
                        $('#CDText').html('');
                        $('#ChildDietlist input:checked').each(function () {
                            $(this).prop("checked", false);
                        });
                        $('#CDRinkText').html('');
                        $('#ChildDrinklist input:checked').each(function () {
                            var value = $(this).val();
                            if (value != null && value.slice(0, 1) == "$" && value.slice(-1) == "?") {
                                $(this).next('label').remove();
                                $(this).remove();
                            }
                            else
                                $(this).prop("checked", false);
                        });
                        $('#PersistentNausea1').prop("checked", false);
                        $('#PersistentNausea2').prop("checked", false);
                        $('#PersistentDiarrhea1').prop("checked", false);
                        $('#PersistentDiarrhea2').prop("checked", false);
                        $('#PersistentConstipation1').prop("checked", false);
                        $('#PersistentConstipation2').prop("checked", false);
                        $('#DramaticWeight1').prop("checked", false);
                        $('#DramaticWeight2').prop("checked", false);
                        $('#RecentSurgery1').prop("checked", false);
                        $('#RecentSurgery2').prop("checked", false);
                        $('#RecentHospitalization1').prop("checked", false);
                        $('#RecentHospitalization2').prop("checked", false);
                        $('#ChildSpecialDiet1').prop("checked", false);
                        $('#ChildSpecialDiet2').prop("checked", false);
                        $('#FoodAllergies1').prop("checked", false);
                        $('#FoodAllergies2').prop("checked", false);
                        $('#NutritionalConcern1').prop("checked", false);
                        $('#NutritionalConcern2').prop("checked", false);
                        $('#WICNutrition').prop("checked", false);
                        $('#FoodStamps').prop("checked", false);
                        $('#NoNutritionProg').prop("checked", false);
                        $('#FoodPantory').val('');
                        $('#childTrouble1').prop("checked", false);
                        $('#childTrouble2').prop("checked", false);
                        $('#spoon1').prop("checked", false);
                        $('#spoon2').prop("checked", false);
                        $('#feedingtube1').prop("checked", false);
                        $('#feedingtube2').prop("checked", false);
                        $('#childThin1').prop("checked", false);
                        $('#childThin2').prop("checked", false);
                        $('#childThin3').prop("checked", false);
                        $('#childThin4').prop("checked", false);
                        $('#childThin5').prop("checked", false);
                        $('#Takebottle1').prop("checked", false);
                        $('#Takebottle2').prop("checked", false);
                        $('#chewanything1').prop("checked", false);
                        $('#chewanything2').prop("checked", false);
                        $('#ChangeinAppetite1').prop("checked", false);
                        $('#ChangeinAppetite2').prop("checked", false);
                        $('#ChangeinAppetite3').prop("checked", false);
                        $('[name=ChildHungry]').val('');
                        $('#DdlChildFeed').val('');
                        $('#DdlChildFormula').val('');
                        $('#ChildFeedCereal').val('');
                        $('#ChildFeedMarshfood').val('');
                        $('#ChildFeedChopedfood').val('');
                        $('#ChildFingerFood').val('');
                        $('#ChildFingerFEDFood1').prop("checked", false);
                        $('#ChildFingerFEDFood2').prop("checked", false);
                        $('#ChildFingerFEDFood3').prop("checked", false);
                        $('#ChildFruitJuicevitaminc1').prop("checked", false);
                        $('#ChildFruitJuicevitaminc2').prop("checked", false);
                        $('#ChildFruitJuicevitaminc3').prop("checked", false);
                        $('#ChildWater1').prop("checked", false);
                        $('#ChildWater2').prop("checked", false);
                        $('#ChildWater3').prop("checked", false);
                        $('#Breakfast').prop("checked", false);
                        $('#Lunch').prop("checked", false);
                        $('#Snack').prop("checked", false);
                        $('#NA').prop("checked", false);
                        $('#Dinner').prop("checked", false);
                        $('#ChildReferalCriteria').val('');
                        $('#DdlChildFormula').val('');
                        $('#ChildFruitJuice').val('');
                        //changes screening
                        $('#AddPhysical').prop("checked", false);
                        $('#AddPhysical1').prop("checked", false);
                        $('#AddVision').prop("checked", false);
                        $('#AddVision1').prop("checked", false);
                        $('#AddHearing').prop("checked", false);
                        $('#AddHearing1').prop("checked", false);
                        $('#AddDental').prop("checked", false);
                        $('#AddDental1').prop("checked", false);
                        $('#AddDevelop').prop("checked", false);
                        $('#AddDevelop1').prop("checked", false);
                        $('#AddSpeech').prop("checked", false);
                        $('#AddSpeech1').prop("checked", false);
                        $('#Consolidated1').prop("checked", false);
                        $('#Consolidated2').prop("checked", false);
                        $('#Parentscreening').val($('#Pfirstname').val() + ' ' + $('#Plastname').val())
                        $('#Allow30DayPhysical').hide();
                        $('#Allow45DayVisionScreening').hide();
                        $('#Allow45DayHearingScreening').hide();
                        $('#Allow45DayDevelopmentalScreening').hide();
                        $('#Allow90DayDentalScreening').hide();
                        $('#ScreeningAcceptance').hide();
                        $('#AllowSpeechScreening').hide();
                        //end
                        $('#DiarrheaComment').val('');
                        $('#Constipationcomment').val('');
                        $('#DramaticWeightchangecomment').val('');
                        $('#RecentSurgerycomment').val('');
                        $('#RecentHospitalizationComment').val('');
                        $('#SpecialDietComment').val('');
                        $('#FoodAllergiesComment').val('');
                        $('#NutritionAlconcernsComment').val('');
                        $('#ChewingorSwallowingcomment').val('');
                        $('#SpoonorForkComment').val('');
                        $('#SpecialFeedingComment').val('');
                        $('#BottleComment').val('');
                        $('#EatOrChewComment').val('');
                        $('#divNauseaorVomitingcomment').hide();
                        $('#divdiarrheacomment').hide();
                        $('#divPersistentConstipation').hide();
                        $('#divDramaticWeightchange').hide();
                        $('#divRecentSurgery').hide();
                        $('#divRecentHospitalization').hide();
                        $('#divChildSpecialDiet').hide();
                        $('#divFoodAllergies').hide();
                        $('#divNutritionalConcern').hide();
                        $('#divchildTrouble').hide();
                        $('#divSpoonorForkComment').hide();
                        $('#divSpecialFeedingComment').hide();
                        $('#divBottleComment').hide();
                        $('#divchewanything').hide();
                        $('#HSBabyOrMotherProblems').val('');
                        $('#HsMedicationName').val('');
                        $('#Dosage').val('');
                        $('#HSChildMedication').val('');
                        $('#HSPreventativeDentalCare').val('');
                        $('#HSProfessionalDentalExam').val('');
                        $('#HSNeedingDentalTreatment').val('');
                        $('#HSChildReceivedDentalTreatment').val('');
                        $('#DivEhsChildProblm').hide();
                        $('#DivEhsMedication').hide();
                        $('#DivHSBabyOrMotherProblems').hide();
                        $('#MedicationName').hide();
                        $('#DosageMedication').hide();
                        $('#DivSChildMedication').hide();
                        $('#DivHsChildDentalCare').hide();
                        $('#DivHsDentalExam').hide();
                        $('#DivHSNeedingDentalTreatment').hide();
                        $('#DivHSChildReceivedDentalTreatment').hide();
                        $('#Physical').hide();
                        $('#Vision').hide();
                        $('#Hearing').hide();
                        $('#Develop').hide();
                        $('#Dental').hide();
                        $('#Speech').hide();
                        $('#Phyimagedocument').show();
                        $('#Phypdfdocument').show();
                        $('#Phyimagedocument').ZoomCrop(
               {
                   image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                   updated: function (size, crop, position) {

                   }
               });
                        $('#Visimagedocument').show();
                        $('#Vispdfdocument').hide();
                        $('#Visimagedocument').ZoomCrop(
                        {
                            image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                            updated: function (size, crop, position) {

                            }
                        });
                        $('#Hearimagedocument').show();
                        $('#Hearpdfdocument').hide();
                        $('#Hearimagedocument').ZoomCrop(
                     {
                         image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                         updated: function (size, crop, position) {

                         }
                     });
                        $('#Devimagedocument').show();
                        $('#Devpdfdocument').hide();
                        $('#Devimagedocument').ZoomCrop(
                       {
                           image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                           updated: function (size, crop, position) {

                           }
                       });
                        $('#Dentimagedocument').show();
                        $('#Dentpdfdocument').hide();
                        $('#Dentimagedocument').ZoomCrop(
                        {
                            image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                            updated: function (size, crop, position) {

                            }
                        });
                        $('#Speechimagedocument').show();
                        $('#Speechpdfdocument').hide();
                        $('#Speechimagedocument').ZoomCrop(
                          {
                              image: HostedDir + "/Content/img/NoImageAvailable.jpg",
                              updated: function (size, crop, position) {

                              }
                          });


                        $('#Physical').removeClass("active");
                        $('#Vision').removeClass("active");
                        $('#Hearing').removeClass("active");
                        $('#Develop').removeClass("active");
                        $('#Dental').removeClass("active");
                        $('#Speech').removeClass("active");
                        $('#Screeningallowed').removeClass("active");
                        $('#Screeningallowed').addClass("active");


                        $('#addPhysical').removeClass("active").removeClass("in");
                        $('#addVision').removeClass("active").removeClass("in");
                        $('#addHearing').removeClass("active").removeClass("in");
                        $('#addDevelop').removeClass("active").removeClass("in");
                        $('#addDental').removeClass("active").removeClass("in");
                        $('#addSpeech').removeClass("active").removeClass("in");
                        $('#AllowScreening').removeClass("active").removeClass("in");
                        $('#AllowScreening').addClass("active").addClass("in");


                        $('#childnameheading').empty().append('<a style="cursor:pointer;" id="Clicknamechild" onclick="clickchild();">Add New Child <i class="fa fa-plus-square"></i></a>');
                        $('#customChecklist input[type=checkbox]').each(function () {
                            $(this).prop("checked", false);
                        });
                        $('#Imminizationclone').empty().append(cloneimmunizationtable);
                        var $this = $('.clickable3');
                        $this.removeClass('panel-collapsed');
                        $this.parents('.panel3').find('.panel-body3').slideUp();
                        $this.addClass('panel-collapsed');
                        $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');


                    }
                });
            }
            else {
                var $this = $('.clickable3');
                $this.removeClass('panel-collapsed');
                $this.parents('.panel3').find('.panel-body3').slideUp();
                $this.addClass('panel-collapsed');
                $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                $('#Health').hide();
                $('#ScreeningDiv').find('input:text,select').each(function (j, element) {
                    $(element).val('');
                });
                $('#Screening1').hide();
                $('#customChecklist input[type=checkbox]').each(function () {
                    $(this).prop("checked", false);
                });
            }
        }
        function Showhealth() {
            if ($("#Health").is(':visible'))
                $('#Health').hide();
            else
                $('#Health').show();
        }

        function clickchild() {
            $('#Childpanelid').click();

        }
        function ShowhealthHistory() {

            var exist1 = false;
            var exist2 = false;
            $('#customChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    if ($(this).attr("accesskey") == 1)
                        exist1 = true;
                    if ($(this).attr("accesskey") == 2)
                        exist2 = true;
                }
            });
            if (exist1 == false && exist2 == false) {
                customAlert('Please select Head Start or Early Head Start from program type.');
                exist1 = false;
                exist2 = false;
            }
            else {
                if (exist1) {
                    if ($("#EHSHealth").is(':visible'))
                        $('#EHSHealth').hide();
                    else
                        $('#EHSHealth').show();
                }
                if (exist2) {
                    if ($("#HSHealth").is(':visible'))
                        $('#HSHealth').hide();
                    else
                        $('#HSHealth').show();
                }







            }


        }
        //function ShowNutrition() {

        //    if ($("#Nutrition").is(':visible'))
        //        $('#Nutrition').hide();
        //    else
        //        $('#Nutrition').show();
        //}

        //Changes on 16Dec2016
        function ShowNutrition() {

            //if ($("#Nutrition").is(':visible'))
            //    $('#Nutrition').hide();
            //else
            //    $('#Nutrition').show();



            var exist1 = false;
            var exist2 = false;
            $('#customChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    if ($(this).attr("accesskey") == 1)
                        exist1 = true;
                    if ($(this).attr("accesskey") == 2)
                        exist2 = true;
                }
                else {
                    $('#EhsNutrition1').hide();
                    $('#Nutrition').hide();
                }
            });
            if (exist1 == false && exist2 == false) {
                customAlert('Please select Head Start or Early Head Start from program type.');
                exist1 = false;
                exist2 = false;
                $('#EhsNutrition1').hide();
                $('#Nutrition').hide();
            }
            else {
                if (exist1) {
                    if ($("#EhsNutrition1").is(':visible'))
                        $('#EhsNutrition1').hide();
                    else
                        $('#EhsNutrition1').show();
                }
                if (exist2) {
                    if ($("#Nutrition").is(':visible'))
                        $('#Nutrition').hide();
                    else
                        $('#Nutrition').show();
                }







            }
        }
        function ShowQuestion() {


            if ($('.ChildProblm1').prop("checked", true)) {
                $('#divQuestion').show();

            }

        }
        function HideQuestion() {


            if ($('.ChildProblm2').prop("checked", true)) {
                $('#divQuestion').hide();

            }

        }
        function ShowMedicationName() {


            if ($('.Medication1').prop("checked", true)) {
                $('#hsmpplanDiv').show();
                $('#MedicationName').show();
                $('#DosageMedication').show();
                $('#DivSChildMedication').show();
            }

        }
        function HideMedicationName() {
            if ($('.Medication2').prop("checked", false)) {
                $('#hsmpplanDiv').hide();
                $('#MedicationName').hide();
                $('#DosageMedication').hide();
                $('#DivSChildMedication').hide();
                $('#HSmpplanComment2').val('');
                $('#HSmpplan1')[0].checked = false;
                $('#HSmpplan2')[0].checked = false;
            }
        }
        function ShowhsplanComment() {
            if ($('#HSmpplan1')[0].checked == true) {
                $('#HSmpplanComment2').show();
            }
        }
        function HidehsplanComment() {
            if ($('#HSmpplan2')[0].checked == true) {
                $('#HSmpplanComment2').hide();
                $('#HSmpplanComment2').val('');
            }

        }




        function AddOtherConditions() {
            if ($('#HSHealth').is(':visible')) {
                $('#CDBRText').show();
                $('#CDBRText').empty();
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDBRText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCDBRText').show();
                $('#EHSCDBRText').empty();
                $('#CDBRlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDBRText').append(div);
                    }
                });
            }
        }






        function PMServiceConditions() {
            $('#PMServiceText').show();
            $('#PMServiceText').empty();
            $('#PMChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#PMServiceText').append(div);
                }
            });
        }


        function PMPrblmConditions() {
            $('#PMPrblmText').show();
            $('#PMPrblmText').empty();
            $('#PMPrblmChecklist input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#PMPrblmText').append(div);
                }
            });
        }

        function PMServiceConditions1() {
            $('#PMServiceText1').show();
            $('#PMServiceText1').empty();
            $('#PMChecklist1 input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#PMServiceText1').append(div);
                }
            });
        }


        function PMPrblmConditions1() {
            $('#PMPrblmText1').show();
            $('#PMPrblmText1').empty();
            $('#PMPrblmChecklist1 input:checked').each(function () {
                if ($(this).prop("checked")) {
                    var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                    $('#PMPrblmText1').append(div);
                }
            });
        }







        function AddOtherdiagnosedConditions() {

            var count = 0;
            if ($('#HSHealth').is(':visible')) {
                $('#CDCText').show();
                $('#CDCText').empty();
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDCText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCDCText').show();
                $('#EHSCDCText').empty();
                $('#DiagnoseChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        if ($(this).val() == 1) {
                            count = 1;
                        }

                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCDCText').append(div);
                    }
                });
                if (count == 1) {
                    $('#DivEHSAllergy').show();
                    $('#DivEHSEpiPen').show();
                }
                else {
                    $('#DivEHSAllergy').hide();
                    $('#DivEHSEpiPen').hide();
                    $('#EHSAllergy').val('');
                    $('#EHSEpiPen1').prop("checked", false);
                    $('#EHSEpiPen1').prop("checked", false);



                }
            }
        }




        function AddEhsOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCHCText').show();
                $('#EHSCHCText').empty();
                $('#EHSChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCHCText').append(div);
                    }
                });
            }
        }

        function AddEhsCHCOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHDCDCText').show();
                $('#EHDCDCText').empty();
                $('#EHSCHCChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHDCDCText').append(div);
                    }
                });
            }
        }
        function AddMedicalOtherConditions() {
            if ($('#EHSHealth').is(':visible')) {
                $('#EHSCCHText').show();
                $('#EHSCCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCCHText').append(div);
                    }
                });
            }
            if ($('#HSHealth').is(':visible')) {
                $('#CCHText').show();
                $('#CCHText').empty();
                $('#MedicalChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CCHText').append(div);
                    }
                });
            }
        }
        function AddOtherHealthConditions() {

            if ($('#HSHealth').is(':visible')) {
                $('#CTCHText').show();
                $('#CTCHText').empty();
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CTCHText').append(div);
                    }
                });
            }
            if ($('#EHSHealth').is(':visible')) {


                $('#EHSCTCHText').show();
                $('#EHSCTCHText').empty();
                $('#ChronicChildChecklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EHSCTCHText').append(div);
                    }
                });
            }
        }
        function AddOtherChildDrinkConditions() {
            if ($('#healthChecklist input[type=checkbox]:checked').length > 0) {
                for (var i = 0; i < ($('#healthChecklist input[type=checkbox]:checked').length) ; i++) {
                    var _check3 = $('#healthChecklist input[type=checkbox]:checked')[i].value;
                    var _text3 = $('#healthChecklist input[type=checkbox]:checked').next('label').text();
                }

            }
            $('#CTCHText').show();
            var div = '<div style="padding:24px;"><label>' + _text3 + '</label></div>'
            $('#CTCHText').append(div);
        }

        function GetNurse(value) {

            $.ajax({
                url: HostedDir + "/Agencyuser/GetNurse",
                type: "POST",
                data: {
                    Centerid: value
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].userId + '">' + response[i].Name + '</option>';
                        }
                        $('#ddlnurse').find('option').remove().end().append(option);
                        $('#ddlnurse').val('');
                    }
                    else {
                        $('#ddlnurse').find('option').remove();
                    }
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });
        }



        function Getallcenter(value) {
            var mode = 0;
            var text = 'Do you want to see only your centers?';
            var ishome = false;
            ishome = $(value).attr('ackey') == '1';
            if ($(value).prop("checked")) {
                mode = 1;
                text = 'Do you want to see all centers? ';
            }
            BootstrapDialog.confirm(text, function (result) {
                if (result) {

                    $.ajax({
                        url: HostedDir + "/Agencyuser/Getallcenter",
                        type: "POST",
                        data: {
                            mode: mode,
                            homebased:ishome
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {
                            if (response.length > 0) {
                                $('#DivWaitinglist tbody tr').remove();
                                var tr = '';
                                for (var i = 0; i < response.length; i++) {
                                    tr += '<tr><td>' + response[i].Name + '<input onchange="Clearselect(this);" name="Accept" value="' + response[i].CenterId + '" type="checkbox" /></td>' +
                                    '<td>' + response[i].Address + '</td><td>' + response[i].Zip + '</td><td>' + response[i].SeatsAvailable + '</td>' +
                                    '<td><select ><option value="1">1</option><option value="2">2</option><option value="3">3</option></select></td><td><input type="text" style="width:100% !important;" maxlength="60" class="form-control" /></td></tr>';
                                }
                                $('#DivWaitinglist tbody').append(tr);

                                $("#DivWaitinglist > tbody >tr").each(function () {
                                    $(this).find('td:eq(4) :input').val("");
                                });

                            }

                        }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
                    });
                }
                else {
                    if ($(value).prop("checked")) {
                        $(value).prop("checked", false);
                        return;
                    }
                    if (!$(value).prop("checked"))
                        $(value).prop("checked", true);
                }

            });
        }
        var Acceptwaitingobject = null;
        var HealthObject = null;

        function HealthreviewPopup(value) {
            HealthObject = value;
            $('#ddlassignto').find('option').remove();
            $('#ddlcentername').val('');
            $('#ClientName').text($(value).closest('tr').find('td:eq(0)').text());
            $('#HealthReview').modal('toggle');
        }


        function Acceptwaitinglist(value) {
            Acceptwaitingobject = value;
            var Data = null;
            $("#DivWaitinglist > tbody >tr").each(function () {
                $(this).find('input[type=checkbox]').prop("checked", false);
                $(this).find('select').val('');
                $(this).find('input:text').val('');
                cleanValidation();
            });

            $.ajax({
                url: HostedDir + "/Agencyuser/Checkallmanadatoryfield",
                type: "POST",
                data: {
                    Householid: $('#HouseholdId').val(),
                    Clientid: $(Acceptwaitingobject).attr("accesskey")
                },
                beforeSend:function(){$('#spinner').show()},
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    $('#spinner').hide();
                    if (response != null) {
                        Data = response;
                    }
                }
           , error: function (response) {
               $('#spinner').hide();
               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
           }
            });

            if (Data != null) {
                if (Valiadateallfieldwaitinglist(Data)) {
                    if (value != null) {
                        if ($(value).closest('tr').find('td:eq(3) a').text().trim() == "0") {
                            customAlert("Selection Points can't be zero. ");
                        }
                        else {

                            var ishomBased = 0;
                            if ($(value).parent('td').parent('tr').children('td:eq(1)').html() == "PM") {

                                $('#Waitinglist').find('#DivWaitinglist').find('tr[ackey=False]').hide();
                                ishomBased=1
                            }
                            else {
                                $('#Waitinglist').find('#DivWaitinglist').find('tr[ackey=False]').show();
                                ishomBased = 0;
                            }
                            $('#Waitinglist').find('#centerall').attr('ackey', ishomBased);
                            $('#Waitinglist').modal('show');

                        }
                    }
                }
            }
        }


        function ApplicationStatus(value) {
            //26082016

            Acceptwaitingobject = value;
            var Data = null;
            $.ajax({
                url: HostedDir + "/Agencyuser/Checkallmanadatoryfield",
                type: "POST",
                data: {
                    Householid: $('#HouseholdId').val(),
                    Clientid: $(Acceptwaitingobject).attr("accesskey")
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response != null) {

                        Data = response;
                    }
                }
           , error: function (response) {
               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
           }
            });
            if (Data != null) {
                if (Valiadateallfieldwaitinglist(Data)) {
                    if (value != null) {

                        if ($(value).closest('tr').find('td:eq(2) a').text().trim() == "%") {
                            customAlert("Poverty Percentage not Calculated");
                        }
                        else if ($(value).closest('tr').find('td:eq(3) a').text().trim() == "0") {
                            customAlert("Selection Points can't be zero. ");
                        }
                        else if ($('#Childincome').val() == "") {
                            customAlert("Guaridan Income is required. ");
                        }
                        else {



                            $(value).text('Complete');
                            $(value).attr("style", "color:#337ab7;text-decoration:underline;");
                        }
                    }
                }



            }
        }



        function ShowAllMandatoryFields(Data) {
            cleanValidation();
            if (Data.Street == "" || Data.Street == null)
                plainValidation('#Street');
            if (Data.ZipCode == "" || Data.ZipCode == null)
                plainValidation('#ZipCode');
            if (Data.City == "" || Data.City == null)
                plainValidation('#City');
            if (Data.State == "" || Data.State == null)
                plainValidation('#State');
            if (Data.County == "" || Data.County == null)
                plainValidation('#County');
            if (Data.FamilyType != "1" && (Data.ParentRelatioship == "" || Data.ParentRelatioship == null))
                plainValidation('#ParentRelatioship');
            if (Data.ParentRelatioship == "6" && (Data.ParentRelatioshipOther == "" || Data.ParentRelatioshipOther == null))
                plainValidation('#ParentRelatioshipOther');
            if (Data.PrimaryLanguauge == "" || Data.PrimaryLanguauge == null)
                plainValidation('#PrimaryLanguauge');
            if (Data.PrimaryLanguauge == "12" && (Data.OtherLanguageDetail == "" || Data.OtherLanguageDetail == null))
                plainValidation('#OtherLanguageDetail');
            if (Data.PDOB == "" || Data.PDOB == null)
                plainValidation('#PDOB');
            if (!Data.Noemail1 && (Data.Pemailid == "" || Data.Pemailid == null))
                plainValidation('#Pemailid');
            if (Data.PRole == "" || Data.PRole == null)
                plainValidation('#DdlPRole');
            if (Data.PDegreeEarned == "" || Data.PDegreeEarned == null)
                plainValidation('#DdlPDegreeEarned');
            if (Data.Pregnantmotherenrolled) {
                if (Data.Pregnantmotherprimaryinsurance == "0" || Data.Pregnantmotherprimaryinsurance == null || Data.Pregnantmotherprimaryinsurance == "") {
                    plainValidation('#Pregnantmotherprimaryinsurance');
                }
                if (Data.TrimesterEnrolled == "0" || Data.TrimesterEnrolled == null || Data.TrimesterEnrolled == "") {
                    plainValidation('#TrimesterEnrolled');
                }
                if (Data.MedicalhomePreg1 == "0" || Data.MedicalhomePreg1 == null || Data.MedicalhomePreg1 == "") {
                    plainValidation('#MedicalhomePreg1');
                }
                else if ((Data.MedicalhomePreg1 == "2" || Data.MedicalhomePreg1 == "3" || Data.MedicalhomePreg1 == "4") && Data.P1Doctor == "0") {
                    plainValidation('#CDoctorP1');
                }
            }

            var parentphone = 0;
            var phonetype = 0;
            var phoneno = 0;
            var IsprimaryContact = 0;
            for (var i = 0; i < Data.phoneListParent.length; i++) {
                if (Data.phoneListParent[i].Parents == "0")
                    parentphone = 1;
                if (Data.phoneListParent[i].PhoneTypeP != "" && Data.phoneListParent[i].Parents == "0")
                    phonetype = 1;
                if (Data.phoneListParent[i].phonenoP != "" && Data.phoneListParent[i].Parents == "0")
                    phoneno = 1;
                if (Data.phoneListParent[i].StateP && Data.phoneListParent[i].Parents == "0")
                    IsprimaryContact = 1;
            }

            if (phonetype == 0) {
                var Phonetype = $("#gridphone > tbody tr:first").find('td:eq(0) :input');
                plainValidation(Phonetype);
            }
            if (phoneno == 0) {
                var PrimaryPhone = $("#gridphone > tbody tr:first").find('td:eq(1) :input[type="text"]');
                plainValidation(PrimaryPhone);
            }
            if (IsprimaryContact == 0) {
                var checkbox = $("#gridphone > tbody tr:first").find('td:eq(2) :checkbox');
                plainValidation(checkbox);
            }

            if ($('#FamilyType1').prop("checked")) {
                if (Data.P1DOB == "" || Data.P1DOB == null) {
                    plainValidation('#P1DOB');
                }
                if (!Data.Noemail2 && (Data.P1emailid == "" || Data.P1emailid == null)) {
                    plainValidation('#P1emailid');
                }
                if (Data.P1Role == "" || Data.P1Role == null) {
                    plainValidation('#DdlP1Role');
                }
                if (Data.P1DegreeEarned == "" || Data.P1DegreeEarned == null) {
                    plainValidation('#DdlP1DegreeEarned');
                }
                if (Data.PregnantmotherenrolledP1) {
                    if (Data.Pregnantmotherprimaryinsurance1 == "0" || Data.Pregnantmotherprimaryinsurance1 == null || Data.Pregnantmotherprimaryinsurance1 == "") {
                        plainValidation('#Pregnantmotherprimaryinsurance1');
                    }
                    if (Data.TrimesterEnrolled1 == "0" || Data.TrimesterEnrolled1 == null || Data.TrimesterEnrolled1 == "") {
                        plainValidation('#TrimesterEnrolled1');
                    }
                    if (Data.MedicalhomePreg2 == "0" || Data.MedicalhomePreg2 == null || Data.MedicalhomePreg2 == "") {
                        plainValidation('#MedicalhomePreg2');
                    }
                    else if ((Data.MedicalhomePreg2 == "2" || Data.MedicalhomePreg2 == "3" || Data.MedicalhomePreg2 == "4") && Data.P2Doctor == "0") {
                        plainValidation('#CDoctorP2');
                    }
                }

                var parentphone = 0;
                var phonetype = 0;
                var phoneno = 0;
                var IsprimaryContact = 0;
                for (var i = 0; i < Data.phoneListParent.length; i++) {
                    if (Data.phoneListParent[i].Parents == "1")
                        parentphone = 1;
                    if (Data.phoneListParent[i].PhoneTypeP != "" && Data.phoneListParent[i].Parents == "1")
                        phonetype = 1;
                    if (Data.phoneListParent[i].phonenoP != "" && Data.phoneListParent[i].Parents == "1")
                        phoneno = 1;
                    if (Data.phoneListParent[i].StateP && Data.phoneListParent[i].Parents == "1")
                        IsprimaryContact = 1;
                }
                if (phonetype == 0) {
                    var Phonetype = $("#gridphone1 > tbody tr:first").find('td:eq(0) :input');
                    plainValidation(Phonetype);
                }
                if (phoneno == 0) {
                    var PrimaryPhone = $("#gridphone1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                    plainValidation(PrimaryPhone);
                }
                if (IsprimaryContact == 0) {
                    $(checkbox).focus();
                }
            }
            $('#Health').show();
            if (Data.ChildId != 0) {
                //if (Data.DOBverifiedBy == "0" || Data.DOBverifiedBy == null || Data.DOBverifiedBy == "") {
                //    plainValidation('#DOBverifiedBy');
                //}
                if (Data.CRace == "0" || Data.CRace == null || Data.CRace == "") {
                    plainValidation('#CRace');
                }
                if (Data.CEthnicity == "0" || Data.CEthnicity == null || Data.CEthnicity == "") {
                    plainValidation('#CEthnicity');
                }
                if (Data.SchoolDistrict == "0" || Data.SchoolDistrict == null || Data.SchoolDistrict == "") {
                    plainValidation('#SchoolDistrict');
                }
                if (Data.Medicalhome == "0" || Data.Medicalhome == null || Data.Medicalhome == "") {
                    plainValidation('#Medicalhome');
                }
                else if ((Data.Medicalhome == "2" || Data.Medicalhome == "3" || Data.Medicalhome == "4") && Data.Doctor == "0") {
                    plainValidation('#CDoctor');
                }
                if (Data.CDentalhome == "0" || Data.CDentalhome == null || Data.CDentalhome == "") {
                    plainValidation('#CDentalhome');
                }
                else if ((Data.CDentalhome == "2" || Data.CDentalhome == "3" || Data.CDentalhome == "4") && Data.Dentist == "0") {
                    plainValidation('#CDentist');
                }
                if (Data.InsuranceOption == "0" || Data.InsuranceOption == null || Data.InsuranceOption == "") {
                    plainValidation('#InsuranceOption');
                }
                if (Data.ImmunizationService == "0" || Data.ImmunizationService == null || Data.ImmunizationService == "") {
                    plainValidation('#ImmunizationService');
                }

                //if (Data.BMIStatus == "0" || Data.BMIStatus == null || Data.BMIStatus == "") {
                //    plainValidation('#BMIStatus');
                //}
            }
        }




        function Valiadateallfieldwaitinglist(Data) {

            isValid = true;
            cleanValidation();
            $.ajax({
                url: HostedDir + "/AgencyUser/Getchild1",
                type: "POST",
                data: {
                    Childid: Data.ChildId,
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditChild(data);
                }
                 , error: function (response) {
                     customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                 }
            });
            if (Data.Street == "" || Data.Street == null) {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Address is required. ");
                activehouseholdtab();
                plainValidation('#Street');
                $('#TabId').val(1);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.ZipCode == "" || Data.ZipCode == null) {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Zip Code is required. ");
                plainValidation('#ZipCode');
                activehouseholdtab();
                $('#TabId').val(1);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.City == "" || Data.City == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("City is required. ");
                plainValidation('#City');
                activehouseholdtab();
                ShowAllMandatoryFields(Data);
                $('#TabId').val(1);
                return isValid;
            }
            if (Data.State == "" || Data.State == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("State is required. ");
                plainValidation('#State');
                activehouseholdtab();
                ShowAllMandatoryFields(Data);
                $('#TabId').val(1);
                return isValid;
            }
            if (Data.County == "" || Data.County == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("County is required. ");
                plainValidation('#County');
                activehouseholdtab();
                $('#TabId').val(1);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.HomeType == "0" || Data.HomeType == null) {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Is family Homeless at this time is required. ");
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.FamilyType != "1" && (Data.ParentRelatioship == "" || Data.ParentRelatioship == null)) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Parent Relationship is required. ");
                plainValidation('#ParentRelatioship');
                activefamilyhouseholdtab();
                ShowAllMandatoryFields(Data);
                $('#TabId').val(2);
                return isValid;
            }
            if (Data.ParentRelatioship == "6" && (Data.ParentRelatioshipOther == "" || Data.ParentRelatioshipOther == null)) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Other Relationship is required. ");
                plainValidation('#ParentRelatioshipOther');
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if ($('#FamilyType1').prop("checked")) {
                if (Data.Married == "0" || Data.Married == null || Data.Married == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Married is required. ");
                    activefamilyhouseholdtab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }

            }


            if ((Data.TANF == "0" || Data.TANF == null) && (Data.SSI == "0" || Data.SSI == null) &&
                (Data.WIC == "0" || Data.WIC == null) && (Data.SNAP == "0" || Data.SNAP == null) && (Data.NONE == "0" || Data.NONE == null)) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Please select at least one federal or other Assistance. ");
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PrimaryLanguauge == "" || Data.PrimaryLanguauge == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Primarylanguauge is required. ");
                plainValidation('#PrimaryLanguauge');
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PrimaryLanguauge == "12" && (Data.OtherLanguageDetail == "" || Data.OtherLanguageDetail == null)) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Other Language Detail is required. ");
                plainValidation('#OtherLanguageDetail');
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            //added by santosh31 march
            if (Data.Interpretor == "0") {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Does family need interpreter is required. ");
                plainValidation('#Interpretor');
                activefamilyhouseholdtab();
                $('#TabId').val(2);
                ShowAllMandatoryFields(Data);
                return isValid;
            }


            if (Data.PDOB == "" || Data.PDOB == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Date of birth is required. ");
                plainValidation('#PDOB');
                $('#TabId').val(3);
                activefamilytab();
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (!Data.Noemail1 && (Data.Pemailid == "" || Data.Pemailid == null)) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Email id is required. ");
                plainValidation('#Pemailid');
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PRole == "" || Data.PRole == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Parent/Guardian is required. ");
                plainValidation('#DdlPRole');
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PDegreeEarned == "" || Data.PDegreeEarned == null) {
                isValid = false;
                $('#BtnMsave').show();
                customAlert("Highest degree earned is required. ");
                plainValidation('#DdlPDegreeEarned');
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PGender == "0" || Data.PGender == null || Data.PGender == "") {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Parent1 gender is required. ");
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }

            if (Data.PMilitaryStatus == "0" || Data.PMilitaryStatus == null || Data.PMilitaryStatus == "") {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Military Status is required. ");
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PCurrentlyWorking == "0" || Data.PCurrentlyWorking == null || Data.PCurrentlyWorking == "") {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Currently working is required. ");
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PEnrollment == "0" || Data.PEnrollment == null || Data.PEnrollment == "") {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Currently enrolled in job training/school is required. ");
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            if (Data.PGender == "2") {
                if (Data.PQuestion == "0" || Data.PQuestion == null || Data.PQuestion == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Are you currently pregnant is required. ");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
            }

            if (Data.Pregnantmotherenrolled) {
                if (Data.Pregnantmotherprimaryinsurance == "0" || Data.Pregnantmotherprimaryinsurance == null || Data.Pregnantmotherprimaryinsurance == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Primary Insurance is required. ");
                    activefamilytab();
                    plainValidation('#Pregnantmotherprimaryinsurance');
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.TrimesterEnrolled == "0" || Data.TrimesterEnrolled == null || Data.TrimesterEnrolled == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Trimester Enrolled is required. ");
                    activefamilytab();
                    plainValidation('#TrimesterEnrolled');
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.MedicalhomePreg1 == "0" || Data.MedicalhomePreg1 == null || Data.MedicalhomePreg1 == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Medical Home is required. ");
                    activefamilytab();
                    plainValidation('#MedicalhomePreg1');
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                else if ((Data.MedicalhomePreg1 == "2" || Data.MedicalhomePreg1 == "3" || Data.MedicalhomePreg1 == "4") && Data.P1Doctor == "0") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Doctor information is required. ");
                    activefamilytab();
                    plainValidation('#CDoctorP1');
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                //23082016
            }

            if (Data.phoneListParent.length < 1) {
                $('#BtnMsave').show();
                isValid = false;
                customAlert("Guardian 1 contact no is required.");
                activefamilytab();
                $('#TabId').val(3);
                ShowAllMandatoryFields(Data);
                return isValid;
            }
            else {
                //26082016

                var parentphone = 0;
                var phonetype = 0;
                var phoneno = 0;
                var IsprimaryContact = 0;
                for (var i = 0; i < Data.phoneListParent.length; i++) {
                    if (Data.phoneListParent[i].Parents == "0")
                        parentphone = 1;
                    if (Data.phoneListParent[i].PhoneTypeP != "" && Data.phoneListParent[i].Parents == "0")
                        phonetype = 1;
                    if (Data.phoneListParent[i].phonenoP != "" && Data.phoneListParent[i].Parents == "0")
                        phoneno = 1;
                    if (Data.phoneListParent[i].StateP && Data.phoneListParent[i].Parents == "0")
                        IsprimaryContact = 1;

                }
                if (parentphone == 0) {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Guardian 1 contact no is required.");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }

                if (phonetype == 0) {
                    var Phonetype = $("#gridphone > tbody tr:first").find('td:eq(0) :input');
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Phone type is required. ");
                    plainValidation(Phonetype);
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (phoneno == 0) {
                    var PrimaryPhone = $("#gridphone > tbody tr:first").find('td:eq(1) :input[type="text"]');
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Phone no is required. ");
                    plainValidation(PrimaryPhone);
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (IsprimaryContact == 0) {

                    var checkbox = $("#gridphone > tbody tr:first").find('td:eq(2) :checkbox');
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Please check one primary no. ");
                    plainValidation(checkbox);
                    activefamilytab();
                    $(checkbox).focus();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
            }
            if ($('#FamilyType1').prop("checked")) {
                if (Data.P1DOB == "" || Data.P1DOB == null) {
                    isValid = false;
                    $('#BtnMsave').show();
                    customAlert("Date of birth is required. ");
                    plainValidation('#P1DOB');
                    activefamilytab();
                    $('#TabId').val(3);
                    $('#P1DOB').focus();
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (!Data.Noemail2 && (Data.P1emailid == "" || Data.P1emailid == null)) {
                    isValid = false;
                    $('#BtnMsave').show();
                    customAlert(" Email id is required. ");
                    plainValidation('#P1emailid');
                    activefamilytab();
                    $('#P1emailid').focus();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1Role == "" || Data.P1Role == null) {
                    isValid = false;
                    $('#BtnMsave').show();
                    customAlert("Parent/Guardian is required. ");
                    plainValidation('#DdlP1Role');
                    activefamilytab();
                    $('#DdlP1Role').focus();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1DegreeEarned == "" || Data.P1DegreeEarned == null) {
                    isValid = false;
                    $('#BtnMsave').show();
                    customAlert("Highest degree earned is required. ");
                    plainValidation('#DdlP1DegreeEarned');
                    activefamilytab();
                    $('#DdlP1DegreeEarned').focus();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1Gender == "0" || Data.P1Gender == null || Data.P1Gender == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Parent2 gender is required. ");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1MilitaryStatus == "0" || Data.P1MilitaryStatus == null || Data.P1MilitaryStatus == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Parent2 military status is required. ");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1CurrentlyWorking == "0" || Data.P1CurrentlyWorking == null || Data.P1CurrentlyWorking == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Parent2 currently working is required. ");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1Enrollment == "0" || Data.P1Enrollment == null || Data.P1Enrollment == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Parent2 currently enrolled in job training/school is required. ");
                    activefamilytab();
                    $('#TabId').val(3);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.P1Gender == "2") {
                    if (Data.P1Question == "0" || Data.P1Question == null || Data.P1Question == "") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Are you currently pregnant in parent2 is required. ");
                        activefamilytab();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                }
                if (Data.PregnantmotherenrolledP1) {
                    if (Data.Pregnantmotherprimaryinsurance1 == "0" || Data.Pregnantmotherprimaryinsurance1 == null || Data.Pregnantmotherprimaryinsurance1 == "") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Primary Insurance is required. ");
                        activefamilytab();
                        plainValidation('#Pregnantmotherprimaryinsurance1');
                        $('#Pregnantmotherprimaryinsurance1').focus();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (Data.TrimesterEnrolled1 == "0" || Data.TrimesterEnrolled1 == null || Data.TrimesterEnrolled1 == "") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Trimester Enrolled is required. ");
                        activefamilytab();
                        plainValidation('#TrimesterEnrolled1');
                        $('#TrimesterEnrolled1').focus();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (Data.MedicalhomePreg2 == "0" || Data.MedicalhomePreg2 == null || Data.MedicalhomePreg2 == "") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Medical Home is required. ");
                        activefamilytab();
                        plainValidation('#MedicalhomePreg2');
                        $('#TabId').val(3);
                        $('#MedicalhomePreg2').focus();
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    else if ((Data.MedicalhomePreg2 == "2" || Data.MedicalhomePreg2 == "3" || Data.MedicalhomePreg2 == "4") && Data.P2Doctor == "0") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Doctor information is required. ");
                        activefamilytab();
                        plainValidation('#CDoctorP2');
                        $('#TabId').val(3);
                        $('#CDoctorP2').focus();
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (Data.P1CurrentlyWorking == 1 && $('#Span1P2').text() == "") {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Guardian 2 income is required. ");
                        activefamilytab();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    var parentphone = 0;
                    var phonetype = 0;
                    var phoneno = 0;
                    var IsprimaryContact = 0;
                    for (var i = 0; i < Data.phoneListParent.length; i++) {
                        if (Data.phoneListParent[i].Parents == "1")
                            parentphone = 1;
                        if (Data.phoneListParent[i].PhoneTypeP != "" && Data.phoneListParent[i].Parents == "1")
                            phonetype = 1;
                        if (Data.phoneListParent[i].phonenoP != "" && Data.phoneListParent[i].Parents == "1")
                            phoneno = 1;
                        if (Data.phoneListParent[i].StateP && Data.phoneListParent[i].Parents == "1")
                            IsprimaryContact = 1;
                    }
                    if (parentphone == 0) {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Guardian 2 contact no is required.");
                        activefamilytab();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (phonetype == 0) {
                        var Phonetype = $("#gridphone1 > tbody tr:first").find('td:eq(0) :input');
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Phone type is required. ");
                        plainValidation(Phonetype);
                        activefamilytab();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (phoneno == 0) {
                        var PrimaryPhone = $("#gridphone1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Phone no is required. ");
                        plainValidation(PrimaryPhone);
                        activefamilytab();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                    if (IsprimaryContact == 0) {
                        var checkbox = $("#gridphone1 > tbody tr:first").find('td:eq(2) :checkbox');
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Please check one primary no. ");
                        plainValidation(checkbox);
                        activefamilytab();
                        $(checkbox).focus();
                        $('#TabId').val(3);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }

                }   //24082016
            }
            if (Data.ChildId != 0) {
                //Done by Atul for DOBVarified as non required field
                //if (Data.DOBverifiedBy == "0" || Data.DOBverifiedBy == null || Data.DOBverifiedBy == "") {
                //    $('#BtnMsave').show();
                //    //isValid = false;
                //    //customAlert("DOB Verified by is required. ");
                //    activechildtab();
                //    //plainValidation('#DOBverifiedBy');
                //    //$('#DOBverifiedBy').focus();
                //    //$('#TabId').val(4);
                //    ShowAllMandatoryFields(Data);
                //    //return isValid;
                //}

                if (Data.CRace == "0" || Data.CRace == null || Data.CRace == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Race is required. ");
                    activechildtab();
                    plainValidation('#CRace');
                    $('#CRace').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }

                if (Data.CEthnicity == "0" || Data.CEthnicity == null || Data.CEthnicity == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Ethnicity is required. ");
                    activechildtab();
                    plainValidation('#CEthnicity');
                    $('#CEthnicity').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                //if (Data.CRaceSubCategory == "0" || Data.CRaceSubCategory == null || Data.CRaceSubCategory == "") {
                //    $('#BtnMsave').show();
                //    isValid = false;
                //    customAlert("Cultural Category is required. ");
                //    activechildtab();
                //    plainValidation('#CRaceSubCategory');
                //    $('#CRaceSubCategory').focus();
                //    $('#TabId').val(4);
                //    return isValid;
                //}
                if (Data.SchoolDistrict == "0" || Data.SchoolDistrict == null || Data.SchoolDistrict == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("School District is required. ");
                    activechildtab();
                    plainValidation('#SchoolDistrict');
                    $('#SchoolDistrict').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }


                if (Data.Medicalhome == "0" || Data.Medicalhome == null || Data.Medicalhome == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Medical Home is required. ");
                    activechildtab();
                    plainValidation('#Medicalhome');
                    $('#Medicalhome').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                else if ((Data.Medicalhome == "2" || Data.Medicalhome == "3" || Data.Medicalhome == "4") && Data.Doctor == "0") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Doctor information is required. ");
                    activechildtab();
                    plainValidation('#CDoctor');
                    $('#CDoctor').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }


                if (Data.CDentalhome == "0" || Data.CDentalhome == null || Data.CDentalhome == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Medical Home is required. ");
                    activechildtab();
                    plainValidation('#CDentalhome');
                    $('#CDentalhome').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                else if ((Data.CDentalhome == "2" || Data.CDentalhome == "3" || Data.CDentalhome == "4") && Data.CDentalhome == "0") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Dentist information is required. ");
                    activechildtab();
                    plainValidation('#Dentist');
                    $('#Dentist').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }

                if (Data.InsuranceOption == "0" || Data.InsuranceOption == null || Data.InsuranceOption == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Primary Insurance is required. ");
                    activechildtab();
                    plainValidation('#InsuranceOption');
                    $('#InsuranceOption').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.IsFoster == "0" || Data.IsFoster == null || Data.IsFoster == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Is Foster Child is required. ");
                    activechildtab();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                //comment
                //if ($('#FiledobRAvatar').val() == "")
                //{
                //    isValid = false;
                //    customAlert("File Data required. ");
                //    return isValid;
                //}


                if (Data.Inwalfareagency == "0" || Data.Inwalfareagency == null || Data.Inwalfareagency == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Is child referred by a child welfare agency is required. ");
                    activechildtab();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                if (Data.InDualcustody == "0" || Data.InDualcustody == null || Data.InDualcustody == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Is child a dual custody is required. ");
                    activechildtab();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
              //  if (Data.InChildCareSubsidy == "0" || Data.InChildCareSubsidy == null || Data.InChildCareSubsidy == "") {
//
              //      isValid = false;
               //     customAlert("Is child in child care subsidy? ");
               //     activechildtab();
               //     $('#TabId').val(4);
               //     ShowAllMandatoryFields(Data);
               //     return isValid;
               // }
                if (Data.CParentdisable == "0" || Data.CParentdisable == null || Data.CParentdisable == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Suspected or document of disabilty is required. ");
                    activechildtab();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                //24082016
                if (Data.CTransport) {
                    if (!$('#CTransportNeeded1').prop("checked") && !$('#CTransportNeeded2').prop("checked")) {
                        $('#BtnMsave').show();
                        isValid = false;
                        customAlert("Is Transportation Needed is required. ");
                        activechildtab();
                        $('#TabId').val(4);
                        ShowAllMandatoryFields(Data);
                        return isValid;
                    }
                }
                $('#Health').show();
                if (Data.ImmunizationService == "0" || Data.ImmunizationService == null || Data.ImmunizationService == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Immunization Status is required. ");
                    activechildtab();
                    plainValidation('#ImmunizationService');
                    $('#ImmunizationService').focus();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }
                //if (Data.BMIStatus == "0" || Data.BMIStatus == null || Data.BMIStatus == "") {
                //    $('#BtnMsave').show();
                //    isValid = false;
                //    customAlert("BMI Status is required. ");
                //    activechildtab();
                //    plainValidation('#BMIStatus');
                //    $('#BMIStatus').focus();
                //    $('#TabId').val(4);
                //    ShowAllMandatoryFields(Data);
                //    return isValid;
                //}
                if (Data.MedicalService == "0" || Data.MedicalService == null || Data.MedicalService == "") {
                    $('#BtnMsave').show();
                    isValid = false;
                    customAlert("Is this child up-to-date on a schedule of age-appropriate health care is required. ");
                    activechildtab();
                    $('#TabId').val(4);
                    ShowAllMandatoryFields(Data);
                    return isValid;
                }

                debugger;
                if ($("input:radio[name='MedicalService']").is(":checked") &&
                    $("input:radio[name='MedicalService']:checked").val() == '1' &&

                    $('#customChecklist').find('input:checkbox[name="PostedPostedPrograms.ProgramID"]:checked').attr('accesskey')=='2'


                    ) {
                    var $appScreening = $('#ApplicationScreening');

                    var allowScreening = $appScreening.find('#AllowScreening');

                    allowScreening.find('.table-main').children('div').each(function (i, scr) {
                        debugger;
                        if ($(scr).attr('id') != 'ConsolidateHeading') {

                            if ($(scr).attr('id') == 'ScreenAcc' && (($(scr).find('input[type=file]').val() == '' && $(scr).find('#ScreeningAcceptance').css('display') == 'none') || $(scr).find('#ScreeningAcceptance').length == 0 || $(scr).find('#ScreeningAcceptance').css('display') == 'none')) {
                                isValid = false;
                                customAlert('Permission document for screening is required');
                                activechildtab();
                                $('#TabId').val(4);
                                // $('#ApplicationScreening').modal('show');

                                $('#getScreening').trigger('click');

                                return isValid
                            }

                            if (($(scr).attr('id') != 'ScreenAcc')) {
                                if ($(scr).find('input[type=radio]').length > 0 && $(scr).find('input[type=radio]:checked').length == 0) {
                                    isValid = false;
                                    customAlert('Please select Yes or No for screening question.');
                                    activechildtab();
                                    $('#TabId').val(4);
                                    $(scr).find('input[type=radio]').focus();
                                   /// $('#ApplicationScreening').modal('show');
                                    $('#getScreening').trigger('click');
                                    return isValid;
                                }
                            }

                        }

                    });

                }




            }
            return isValid;
        }




        function SaveWaitinglist() {
            cleanValidation();
            if (Acceptwaitingobject != null) {
                var centrerselected = 0;
                var totalcenterselected = 0;
                var Waitingoption = [];
                var Waitingoptionsort = [];
                var Waitingoptionduplicate = 0;
                var option = 0;
                $("#DivWaitinglist > tbody >tr").each(function () {
                    if ($(this).find('input[type=checkbox]').prop("checked")) {
                        centrerselected = 1;
                        totalcenterselected = totalcenterselected + 1;
                    }
                    if ($(this).find('select').val() != "" && $(this).find('select').val() != null) {
                        Waitingoption.push($(this).find('select').val());
                    }
                    if ($(this).find('input[type=checkbox]').prop("checked") && ($(this).find('select').val() == "" || $(this).find('select').val() == null)) {
                        option = 1;
                    }
                });
                if (Waitingoption.length > 0) {
                    Waitingoptionsort = Waitingoption.sort();
                    for (var i = 0; i < Waitingoptionsort.length - 1; i++) {
                        if (Waitingoptionsort[i + 1] == Waitingoptionsort[i]) {
                            Waitingoptionduplicate = 1;
                        }
                    }
                }
                if (centrerselected == 0) {
                    customAlert("Please select center. ");
                }
                else if (option == 1) {
                    $("#DivWaitinglist > tbody >tr").each(function () {
                        if ($(this).find('input[type=checkbox]').prop("checked") && ($(this).find('select').val() == "" || $(this).find('select').val() == null)) {
                            plainValidation($(this).find('select'));
                            customAlert("Options is required.");
                            return false;
                        }
                    });
                }
                else if (totalcenterselected > 3) {
                    customAlert(" You can select up to 3 centers.");
                }
                else if (Waitingoptionduplicate > 0) {
                    customAlert("Duplicate value not allowed in options");

                }
                else {
                    BootstrapDialog.confirm('You are about to move the client to Waiting List. Click OK to proceed.', function (result) {
                        if (result) {
                            var waitinglist = [];
                            var _waitinglist = [];
                            $("#DivWaitinglist > tbody >tr").each(function () {
                                if ($(this).find('td:eq(0)').find('input[type=checkbox]').prop("checked")) {

                                    _waitinglist = {
                                        CenterId: $(this).find('td:eq(0)').find('input[type=checkbox]').val(),
                                        Householid: $('#HouseholdId').val(),
                                        Clientid: $(Acceptwaitingobject).attr("accesskey"),
                                        Programid: $(Acceptwaitingobject).attr("Programid"),
                                        Options: $(this).find('select').val(),
                                        Notes: $(this).find('input:text').val()
                                    };
                                    waitinglist.push(_waitinglist);
                                }
                            });
                            $.ajax({
                                contentType: 'application/json; charset=utf-8',
                                url: HostedDir + "/Agencyuser/SaveWaitingclient",
                                type: "POST",
                                data:
                                    JSON.stringify({
                                        'waitinglist': waitinglist
                                    }),
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response = 1) {
                                        customAlert("Record saved successfully.");
                                        $("#DivWaitinglist > tbody >tr").each(function () {
                                            $(this).find('input[type=checkbox]').prop("checked", false);
                                            $(this).find('select').val('');
                                            $(this).find('input:text').val('');
                                            cleanValidation();
                                        });
                                        $('#Waitinglist').modal('toggle');
                                        $(Acceptwaitingobject).removeAttr("data-target");
                                        $(Acceptwaitingobject).removeAttr("onclick");
                                        $(Acceptwaitingobject).removeAttr("style");
                                        $(Acceptwaitingobject).attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(Acceptwaitingobject).next('a').removeAttr("onclick");
                                        $(Acceptwaitingobject).next('a').removeAttr("style");
                                        $(Acceptwaitingobject).next('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(Acceptwaitingobject).closest('tr').find("td:eq(2)").find('a').removeAttr("style");
                                        $(Acceptwaitingobject).closest('tr').find("td:eq(2)").find('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");
                                        $(Acceptwaitingobject).closest('tr').find("td:eq(3)").find('a').removeAttr("style");
                                        $(Acceptwaitingobject).closest('tr').find("td:eq(3)").find('a').attr("style", "color:#AAAFB4;text-decoration:none;cursor:default;");

                                    }

                                }
                                  , error: function (response) {
                                      customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                                  }
                            });
                        }
                    });
                }
            }
        }

        function Clearselect(value) {
            $(value).closest('tr').find('select').val('');
        }
        function AddChildDirectBloodHS() {
            if ($('#OtherConditions').val().trim() != "") {
                $('#CDBRlist').append('<br><input  name="PostedPostedDisease.DiseaseID"' +
                'type="checkbox" checked value="$' + $('#OtherConditions').val() + '?"><label>' + $('#OtherConditions').val() + '</label>');
                $('#OtherConditions').val('');
            }
        }
        function DiagnosedConditions() {
            if ($('#HsDiagonoseOtherConditions').val().trim() != "") {
                $('#DiagnoseChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.DiagnoseDiseaseID"' +
                'type="checkbox" Checked value="$' + $('#HsDiagonoseOtherConditions').val() + '?"><label>' + $('#HsDiagonoseOtherConditions').val() + '</label>');
                $('#HsDiagonoseOtherConditions').val('');
            }
        }



        function EHSChronicHealthConditions() {
            if ($('#EhsChronicHealthConditions').val().trim() != "") {
                $('#EHSChildChecklist').append('<br><input  name="PostedPostedMedicalEHS.ChildEHSID"' +
                'type="checkbox" Checked value="$' + $('#EhsChronicHealthConditions').val() + '?"><label>' + $('#EhsChronicHealthConditions').val() + '</label>');
                $('#EhsChronicHealthConditions').val('');
            }
        }

        function SaveEhsCho() {
            if ($('#EhsCHConditions').val().trim() != "") {
                $('#EHSCHCChildChecklist').append('<br><input  name="PostedPostedEHS.ChildEHSID"' +
                'type="checkbox" Checked value="$' + $('#EhsCHConditions').val() + '?"><label>' + $('#EhsCHConditions').val() + '</label>');
                $('#EhsCHConditions').val('');
            }
        }
        function MedicalChecklist() {
            if ($('#HsOthermedicalConditions').val().trim() != "") {
                $('#MedicalChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID"' +
                'type="checkbox" Checked value="$' + $('#HsOthermedicalConditions').val() + '?"><label>' + $('#HsOthermedicalConditions').val() + '</label>');
                $('#HsOthermedicalConditions').val('');
            }
        }
        function ChronicConditions() {
            if ($('#ChronicHealthConditions').val().trim() != "") {
                $('#ChronicChildChecklist').append('<br><input  name="PostedPostedDiagnosedDisease.ChronicHealthConditionsID"' +
                'type="checkbox" Checked value="$' + $('#ChronicHealthConditions').val() + '?"><label>' + $('#ChronicHealthConditions').val() + '</label>');
                $('#ChronicHealthConditions').val('');
            }
        }

        //function SaveChildDiet() {
        //    $('#CDText').show();
        //    $('#CDText').empty();
        //    $('#ChildDietlist input:checked').each(function () {
        //        if ($(this).prop("checked")) {
        //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
        //            $('#CDText').append(div);
        //        }
        //    });
        //}

        //Changes by Akansha on 19Dec2016
        function SaveChildDiet() {

            if ($('#EhsNutrition1').is(':visible')) {
                $('#EhsCDText').show();
                $('#EhsCDText').empty();
                $('#ChildDietlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EhsCDText').append(div);
                    }
                });
            }
            if ($('#Nutrition').is(':visible')) {
                $('#CDText').show();
                $('#CDText').empty();
                $('#ChildDietlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDText').append(div);
                    }
                });
            }
        }
        //End








        function ChilddrinkHs() {
            if ($('#HsChilddrinkcondition').val().trim() != "") {
                $('#ChildDrinklist').append('<br><input  name="PostedPostedChildDrink.CDrinkID"' +
                'type="checkbox" Checked value="$' + $('#HsChilddrinkcondition').val() + '?"><label>' + $('#HsChilddrinkcondition').val() + '</label>');
                $('#HsChilddrinkcondition').val('');
            }
        }


        //function AddChilddrinkcondition() {
        //    $('#CDRinkText').show();
        //    $('#CDRinkText').empty();
        //    $('#ChildDrinklist input:checked').each(function () {
        //        if ($(this).prop("checked")) {
        //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
        //            $('#CDRinkText').append(div);
        //        }
        //    });
        //}

        //Added by Akansha on 19Dec2016
        function AddChilddrinkcondition() {

            if ($('#EhsNutrition1').is(':visible')) {
                $('#EhsCDRinkText').show();
                $('#EhsCDRinkText').empty();
                $('#ChildDrinklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EhsCDRinkText').append(div);
                    }
                });
            }
            if ($('#Nutrition').is(':visible')) {
                $('#CDRinkText').show();
                $('#CDRinkText').empty();
                $('#ChildDrinklist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#CDRinkText').append(div);
                    }
                });
            }
        }

        //End

        //Commented on 19Dec2016
        //function SaveChildVitaminSupplement() {
        //    $('#Cvstext').show();
        //    $('#Cvstext').empty();
        //    $('#ChildVitaminSupplementlist input:checked').each(function () {
        //        if ($(this).prop("checked")) {
        //            var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
        //            $('#Cvstext').append(div);
        //        }
        //    });
        //}

        //Changes by Akansha on 19Dec2016
        function SaveChildVitaminSupplement() {

            if ($('#EhsNutrition1').is(':visible')) {
                $('#EhsCvstext').show();
                $('#EhsCvstext').empty();
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#EhsCvstext').append(div);
                    }
                });
            }
            if ($('#Nutrition').is(':visible')) {
                $('#Cvstext').show();
                $('#Cvstext').empty();
                $('#ChildVitaminSupplementlist input:checked').each(function () {
                    if ($(this).prop("checked")) {
                        var div = '<div style="padding-left:24px; line-height:normal;color:#295b8f;">' + $(this).next('label').text() + '</div>';
                        $('#Cvstext').append(div);
                    }
                });
            }
        }
        //End






        function SaveClientAssigned() {
            if (($('#DdlClientAssignedTo').val() == "") || ($('#DdlClientAssignedTo').val() == null)) {
                isValid = false;
                customAlert("Please select user from the list. ");
                plainValidation('#DdlClientAssignedTo');
                return isValid;
            }
            else {

                $.ajax({
                    url: HostedDir + "/Agencyuser/ClientAssigned",
                    type: "POST",
                    data: {
                        HouseHoldId: $('#HouseholdId').val(),
                        yakkrid: '@Model.YakkrId',
                        StaffId: '@Model.StaffId',

                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        if (response == "1") {
                            customAlert("Intake transfer granted successfully.");
                        }
                        if (response == "2") {
                            customAlert("Applicant already in waiting list.");
                        }
                        if (response == "3") {
                            customAlert("Applicant already accepted.");
                        }
                        if (response == "4") {
                            customAlert("Intake transfer already granted.");
                        }
                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });
            }

        }

        //Added by Akansha on 19Dec2016
        function ShowEhsChildVitaminSupplmentcomment() {
            $('#divEhsVitaminPopup').show();
        }
        function HideEhsChildVitaminSupplmentcomment() {
            $('#divEhsVitaminPopup').hide();
            // $('#Cvstext').val("");
            $('#EhsCvstext').html('');
            $('#ChildVitaminSupplementlist input:checked').each(function () {
                $(this).prop("checked", false);
            });
        }


        //End




        //Added by Akansha on 12Dec2016
        function ShowRestrictFoodcomment() {
            $('#divRestrictFoodcomment').show();
        }
        function HideRestrictFoodcomment() {
            $('#divRestrictFoodcomment').hide();
        }
        //
        function ShowChildVitaminSupplmentcomment() {
            $('#divVitaminPopup').show();
        }
        function HideChildVitaminSupplmentcomment() {
            $('#divVitaminPopup').hide();
            // $('#Cvstext').val("");
            $('#Cvstext').html('');
            $('#ChildVitaminSupplementlist input:checked').each(function () {
                $(this).prop("checked", false);
            });
        }
        //End

        //Added by Akansha on 19Dec2016
        function ShowEhsNauseaorVomitingcomment() {
            $('#divEhsNauseaorVomitingcomment').show();
        }
        function HideNauseaorVomitingcomment() {
            $('#divEhsNauseaorVomitingcomment').hide();
        }
        function ShowEhsPersistentDiarrheacomment() {
            $('#divEhsdiarrheacomment').show();
        }
        function HideEhsPersistentDiarrheacomment() {
            $('#divEhsdiarrheacomment').hide();
        }
        function ShowEhsPersistentConstipationcomment() {
            $('#divEhsPersistentConstipation').show();
        }
        function HideEhsPersistentConstipationcomment() {
            $('#divEhsPersistentConstipation').hide();
        }
        function ShowEhsDramaticWeightcomment() {
            $('#divEhsDramaticWeightchange').show();
        }
        function HideEhsDramaticWeightcomment() {
            $('#divEhsDramaticWeightchange').hide();
        }

        function ShowEhsRecentSurgerycomment() {
            $('#divEhsRecentSurgery').show();
        }
        function HideEhsRecentSurgerycomment() {
            $('#divEhsRecentSurgery').hide();
        }
        function ShowEhsRecentHospitalizationcomment() {
            $('#divEhsRecentHospitalization').show();
        }
        function HideEhsRecentHospitalizationcomment() {
            $('#divEhsRecentHospitalization').hide();
        }
        function ShowEhsChildSpecialDietcomment() {
            $('#divEhsChildSpecialDiet').show();
        }
        function HideEhsChildSpecialDietcomment() {
            $('#divEhsChildSpecialDiet').hide();
        }
        function ShowEhsFoodAllergies() {
            $('#divEhsFoodAllergies').show();
        }
        function HideEhsFoodAllergies() {
            $('#divEhsFoodAllergies').hide();
        }
        function ShowEhsNutritionalConcern() {
            $('#divEhsNutritionalConcern').show();
        }
        function HideEhsNutritionalConcern() {
            $('#divEhsNutritionalConcern').hide();
        }

        function ShowEhschildTrouble() {
            $('#divEhschildTrouble').show();
        }
        function HideEhschildTrouble() {
            $('#divEhschildTrouble').hide();
        }
        function EhsHidespoon() {
            $('#divEhsSpoonorForkComment').hide();
        }
        function EhsShowspoon() {
            $('#divEhsSpoonorForkComment').show();
        }
        function ShowEhsfeedingtube() {
            $('#divEhsSpecialFeedingComment').show();
        }
        function HideEhsfeedingtube() {
            $('#divEhsSpecialFeedingComment').hide();
        }
        function ShowEhsTakebottle() {
            $('#divEhsBottleComment').show();
        }
        function HideEhsTakebottle() {
            $('#divEhsBottleComment').hide();
        }
        function ShowEhschewanything() {
            $('#divEhschewanything').show();
        }
        function HideEhschewanything() {
            $('#divEhschewanything').hide();
        }




        //End









        function ShowNauseaorVomitingcomment() {
            $('#divNauseaorVomitingcomment').show();
        }
        function HideNauseaorVomitingcomment() {
            $('#divNauseaorVomitingcomment').hide();
        }
        function ShowPersistentDiarrheacomment() {
            $('#divdiarrheacomment').show();
        }
        function HidePersistentDiarrheacomment() {
            $('#divdiarrheacomment').hide();
        }
        function ShowPersistentConstipationcomment() {
            $('#divPersistentConstipation').show();
        }
        function HidePersistentConstipationcomment() {
            $('#divPersistentConstipation').hide();
        }
        function ShowDramaticWeightcomment() {
            $('#divDramaticWeightchange').show();
        }
        function HideDramaticWeightcomment() {
            $('#divDramaticWeightchange').hide();
        }

        function ShowRecentSurgerycomment() {
            $('#divRecentSurgery').show();
        }
        function HideRecentSurgerycomment() {
            $('#divRecentSurgery').hide();
        }
        function ShowRecentHospitalizationcomment() {
            $('#divRecentHospitalization').show();
        }
        function HideRecentHospitalizationcomment() {
            $('#divRecentHospitalization').hide();
        }
        function ShowChildSpecialDietcomment() {
            $('#divChildSpecialDiet').show();
        }
        function HideChildSpecialDietcomment() {
            $('#divChildSpecialDiet').hide();
        }
        function ShowFoodAllergies() {
            $('#divFoodAllergies').show();
        }
        function HideFoodAllergies() {
            $('#divFoodAllergies').hide();
        }
        function ShowNutritionalConcern() {
            $('#divNutritionalConcern').show();
        }
        function HideNutritionalConcern() {
            $('#divNutritionalConcern').hide();
        }

        function ShowchildTrouble() {
            $('#divchildTrouble').show();
        }
        function HidechildTrouble() {
            $('#divchildTrouble').hide();
        }
        function Showspoon() {
            $('#divSpoonorForkComment').show();
        }
        function Hidespoon() {
            $('#divSpoonorForkComment').hide();
        }
        function Showfeedingtube() {
            $('#divSpecialFeedingComment').show();
        }
        function Hidefeedingtube() {
            $('#divSpecialFeedingComment').hide();
        }
        function ShowTakebottle() {
            $('#divBottleComment').show();
        }
        function HideTakebottle() {
            $('#divBottleComment').hide();
        }
        function Showchewanything() {
            $('#divchewanything').show();
        }
        function Hidechewanything() {
            $('#divchewanything').hide();
        }
        //08082016
        function ShowHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').hide();
        }


        function ShowHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblm() {
            $('#divEHSBabyOrMotherProblems').hide();
        }
        //10082016
        function ShowEhsChildProblemComment() {
            $('#DivEhsChildProblm').show();
        }
        function HideEhsChildProblemComment() {
            $('#DivEhsChildProblm').hide();
        }
        function ShowEhsMedicationName() {

            $('#DivEhsMedication').show();
            $('#mpplanDiv').show();
        }
        function HideEhsMedicationName() {

            $('#DivEhsMedication').hide();
            $('#mpplanDiv').hide();
            $('#EHSmpplanComment2').hide();
            $('#EHSmpplanComment').val('');
            $('#EHSmpplan1')[0].checked = false;
            $('#EHSmpplan2')[0].checked = false;
        }



        function ShowEhsplanComment() {

            $('#EHSmpplanComment2').show();
        }

        function HideEhsplanComment() {

            $('#EHSmpplanComment2').hide();
            $('#EHSmpplanComment2').val('');
        }

        function ShowHsChildProblem() {
            $('#DivHSBabyOrMotherProblems').show();
        }
        function HideHsChildProblem() {
            $('#DivHSBabyOrMotherProblems').hide();
        }

        function ShowHsDentalExam() {
            $('#DivHsDentalExam').show();
            $('#ChildDentalExam').hide();
        }
        function HideHsDentalExam() {
            $('#DivHsDentalExam').hide();
            $('#ChildDentalExam').show();//Added by Akansha on 13Dec2016
        }
        function ShowHsChildNeedDentalTreatment() {
            $('#DivHSNeedingDentalTreatment').show();
        }
        function HideHsChildNeedDentalTreatment() {
            $('#DivHSNeedingDentalTreatment').hide();
        }
        function ShowHsChildRecievedDentalTreatment() {
            $('#DivHSChildReceivedDentalTreatment').show();
        }
        function HideHsChildRecievedDentalTreatment() {
            $('#DivHSChildReceivedDentalTreatment').hide();
        }
        function ShowHsChildDentalCare() {
            $('#DivHsChildDentalCare').show();
        }
        function HideHsChildDentalCare() {
            $('#DivHsChildDentalCare').hide();
        }
        function SetTabId(value) {
            $('#spinner').show();   //by atul 24-3-2017
            $('#TabId').val($(value).attr("accesskey"));
            $('#spinner').hide();  //by atul 24-3-2017
        }
        function Checkhouse(object) {
            if ($('#RentType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType1').prop("checked", false);
                    }
                });
            }
            if ($('#RentType2').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType2').prop("checked", false);
                    }
                });
            }
            if ($('#RentType3').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType3').prop("checked", false);
                    }
                });
            }
            // if ($('#RentType4').prop("checked")) {
            //    BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
            //     if (!result) {
            //         $('#RentType4').prop("checked", false);
            //    }
            // });
            // }

        }
        function Renting(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function Buying(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function SubsidizedRent(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function NoPayment(object) {
            if ($('#HomeType2').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }

                });

            }
        }



        function SaveHealthReview() {
            cleanValidation();
            if (($('#ddlcentername').val() == "") || ($('#ddlcentername').val() == null)) {
                isValid = false;
                customAlert("Center name is required.");
                plainValidation('#ddlcentername');
                return isValid;
            }
            else if (($('#ddlassignto').val() == "") || ($('#ddlassignto').val() == null)) {
                isValid = false;
                customAlert("Assign to is required.");
                plainValidation('#ddlassignto');
                return isValid;
            }
            else {
                BootstrapDialog.confirm('Are you sure want to send this client for health review?', function (result) {
                    if (result) {
                        if (HealthObject != null) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/SaveHealthreview",
                                type: "POST",
                                data: {
                                    Clientid: $(HealthObject).attr("accesskey"),
                                    Usernurseid: $('#ddlassignto').val(),
                                    householdid: $('#HouseholdId').val(),
                                    centerid: $('#ddlcentername').val(),
                                    Programid: $(HealthObject).attr("programid")
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        customAlert("Record saved successfully.");
                                        $(HealthObject).removeAttr("onclick");
                                        $(HealthObject).removeAttr("accesskey");
                                        $(HealthObject).removeAttr("programid");
                                        $('#HealthReview').modal('toggle');

                                    }
                                }
                           , error: function (response) {
                               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                           }
                            });


                        }
                    }
                });


            }
        }
        //29082016
        function GetHealthStaff() {
            $.ajax({
                url: HostedDir + "/Agencyuser/GetNurse",
                type: "POST",
                data: {
                    Centerid: $('#ddlcentername').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].userId + '">' + response[i].Name + '</option>';
                        }
                        $('#ddlassignto').find('option').remove().end().append(option);
                        $('#ddlassignto').val('');
                    }
                    else {
                        $('#ddlassignto').find('option').remove();
                    }
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }



        function HidedivCriteriaforReferral(object) {
            if ($(object).prop("checked")) {
                $('#ChildReferalCriteria').attr("disabled", true);
                $('#ChildReferalCriteria').val('');
            }
            else
                $('#ChildReferalCriteria').attr("disabled", false);

        }

        function ViewcaseNote() {
            BootstrapDialog.confirm('Any unsaved data will be lost. Do You want to continue?', function (result) {
                if (result) {
                    window.location.href = HostedDir + "/Roster/CaseNotesclient/?Householdid=@Model.Encrypthouseholid";
                }
            });


        }

        function GenerateRequest() {
            $.ajax({
                url: HostedDir + "/Agencyuser/GeneratehouseholdeditRequest",
                type: "POST",
                data: {
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response == 1) {
                        customAlert("Request for ownership of intake already generated.");
                    }
                    if (response == 2) {
                        customAlert("Request for ownership of intake generated successfully.");

                    }

                }
                         , error: function (response) {
                             customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                         }
            });

        }

        function Checkdateprofessional(value) {
            isValid = true;
            if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(value).val())) {
                    customAlert("Invalid date format. ");
                    $(value).val('');
                    return false;
                }
            }
            if ($(value).val().trim() != "" && $('#CDOB').val().trim() != "") {
                var Adate = new Date($(value).val());
                var Cdate = new Date($('#CDOB').val());
                var TodayDate = new Date();

                if (Adate > Cdate) {
                    customAlert("Recent professional dental exam date can't be greater than  child dob.");
                    $(value).val('');
                    return false;
                }
                else if (Adate > TodayDate) {
                    customAlert("Recent professional dental exam date can't be greater than today's date.");
                    $(value).val('');
                    return false;
                }




            }
            return true;
        }



        function CheckdateNew(value) {

            isValid = true;
            if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(value).val())) {
                    customAlert("Invalid date format. ");
                    $(value).val('');
                    return false;
                }
            }


            if ($(value).val().trim() != "" && $('#CDOB').val().trim() != "") {
                var Adate = new Date($(value).val());
                var Cdate = new Date($('#CDOB').val());
                var TodayDate = new Date();

                if ((Adate > TodayDate) || (Adate < Cdate)) {
                    customAlert("Assessment date must be greater than child dob or equal to today's date.");
                    $(value).val('');
                    return false;
                }


            }



            return true;
        }
        function ValidateWeightHeight(object) {
            if ($('#HWInput1').prop("checked") || $('#HWInput2').prop("checked")) {
                var ex = /^[0-9]+\.?[0-9]*$/;
                if (ex.test(object.value) == false) {
                    $(object).val('');
                }
                var ex = /^\d*\.?\d{0,2}$/;
                if (ex.test(object.value) == false) {
                    object.value = object.value.substring(0, object.value.indexOf('.') + 3);
                }
                var lastChar = object.value.substring(object.value.length - 1);
                if (lastChar == ".") {
                    object.value = object.value.substring(0, object.value.length - 1);
                }

            }
            else {
                $(object).val('');
                customAlert("Type of input is required.");

            }
        }
        function LoadBmiModal() {

            $('#Clientbminame').text($('#Cfirstname').val() + ' ' + $('#Cmiddlename').val() + ' ' + $('#Clastname').val());
            $('#ClientDob').text($('#CDOB').val());
            if (!$('#BmiModel').hasClass('in'))
                $('#BmiModel').modal('toggle');

        }
        function CheckClientBMi() {
            cleanValidation();
            var Adate = null;
            var Cdate = null;
            var TodayDate = null;

            if ($('#AssessmentDate').val().trim() != "" && $('#CDOB').val().trim() != "") {
                Adate = new Date($('#AssessmentDate').val());
                Cdate = new Date($('#CDOB').val());
                TodayDate = new Date();
            }
            if ($('#CDOB').val().trim() == "") {
                customAlert("Child dob is required.");
                plainValidation('#CDOB');
            }
            else if (!$('#CGenderfemale').prop("checked") && !$('#CGendermale').prop("checked") && !$('#CGenderother').prop("checked")) {
                customAlert("Child gender is required.");
            }
            else if (!$('#HWInput1').prop("checked") && !$('#HWInput2').prop("checked")) {
                customAlert("Input type is required.");
            }
            else if ($('#AssessmentDate').val().trim() == "") {
                customAlert("Assessment date is required.");
                plainValidation('#AssessmentDate');
            }
            else if ((Adate > TodayDate) || (Adate < Cdate)) {
                customAlert("Assessment date must be greater than child dob or equal to today's date.");
                $('#AssessmentDate').val().val('');

            }
            else if ($('#AHeight').val().trim() == "") {
                customAlert("Height is required.");
                plainValidation('#AHeight');
            }
            else if ($('#AWeight').val().trim() == "") {
                customAlert("Weight is required.");
                plainValidation('#AWeight');
            }
                //else if ($('#HeadCircle').val().trim() == "") {
                //    customAlert("Head circumference is required.");
                //    plainValidation('#HeadCircle');
                //}
            else if ($('#AHeight').val().trim() == "0" || $('#AHeight').val().trim() == "0.00" ||
                $('#AWeight').val().trim() == "0" || $('#AWeight').val().trim() == "0.00" ||
               $('#HeadCircle').val().trim() == "0" || $('#HeadCircle').val().trim() == "0.00") {
                customAlert("Height or Weight or  HeadCircle  can't be zero.");
                plainValidation('#HeadCircle');
            }

            else if ($('#CGenderother').prop("checked")) {
                $('#BMiModal').modal('toggle');
            }
            else {

                Getbmi($("input[name='CGender']:checked").val(), $("input[name='HWInput']:checked").val(), $('#CDOB').val().trim(), $('#AssessmentDate').val(), $('#AHeight').val(), $('#AWeight').val().trim(), $('#HeadCircle').val().trim());
            }
        }
        function CheckBmi() {
            if (!$('#Bmifemale').prop("checked") && !$('#Bmimale').prop("checked")) {
                customAlert("Please specify gender.");
            }
            else {
                Getbmi($("input[name='BmiGender']:checked").val(), $("input[name='HWInput']:checked").val(), $('#CDOB').val().trim(), $('#AssessmentDate').val(), $('#AHeight').val(), $('#AWeight').val().trim(), $('#HeadCircle').val().trim());
                $('#BMiModal').modal('toggle');
                $('#Bmifemale').prop("checked", false);
                $('#Bmimale').prop("checked", false);
            }


        }
        function Getbmi(Gender, Input, Dob, AssessmentDate, Height, Weight, Headcir) {

            $.ajax({
                url: HostedDir + "/Agencyuser/CalculateBmi",
                type: "POST",
                data: {
                    Gender: Gender,
                    Input: Input,
                    Dob: Dob,
                    AssessmentDate: AssessmentDate,
                    Height: Height,
                    Weight: Weight,
                    Headcir: Headcir
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {

                    if (response != null & (response == 1 || response == 2 || response == 3 || response == 4)) {
                        $('#BMIStatus').val(response);
                        $('#BMIStatus2').val(response);
                        $('#BmiModel').modal('toggle');
                    }
                    else {
                        $('#BMIStatus').val('');
                        customAlert("Error in Calculation.");
                    }


                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });
        }
        function ClearsOthers() {

            $('#OthersId').val(0);
            $('#Ofirstname').val("");
            $('#Olastname').val("");;
            $('#Omiddlename').val("");
            $('#Olastname').val("");
            $('#ODOB').val("");
            $('input:radio[name=OGender]:checked').prop('checked', false);
            $('#Alreadyemergencycontact').val(0);
            $('#Oemergencycontact').prop('checked', false);
            $('#ParentSSN3').val('');
            ssnothervalue = null;

        }

        function deletefamily() {
            BootstrapDialog.confirm('Do you want to remove this family?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/AgencyUser/Deletefamily",
                        type: "POST",
                        data: {
                            HouseHoldId: $('#HouseholdId').val()

                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {
                            if (response == 1) {
                                window.location.href = HostedDir + '/AgencyUser/viewfamilydetails';
                            }
                            else {
                                customAlert("Error occured.");

                            }

                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });


        }


        //Added on 23Dec2016
        function LoadWorkshopModal() {

            //$('#Clientbminame').text($('#Cfirstname').val() + ' ' + $('#Cmiddlename').val() + ' ' + $('#Clastname').val());
            //$('#ClientDob').text($('#CDOB').val());
            if (!$('#WorkshopModel').hasClass('in'))
                $('#WorkshopModel').modal('toggle');

        }
        function checkWorkshop() {
            isValid = true;
            cleanValidation();
            if ($('#DdlCenter')[0].value.trim() == "") {

                isValid = false;
                customAlert("Center is required. ");
                plainValidation('#DdlCenter');
                return isValid;
            }
            //Changes on 28Dec2016
            //if ($('#WorkshopDate')[0].value.trim() == "") {

            //    isValid = false;
            //    customAlert("Date is required. ");
            //    plainValidation('#WorkshopDate');
            //    return isValid;
            //}
            //End
            var check = 0;
            $("#Workshoplist input[type=checkbox]").each(function () {
                if ($(this).prop('checked')) {
                    check = 1;
                }
            });
            if (check == 0) {
                isValid = false;
                customAlert("Please select workshop from workshop list.");
                plainValidation('#Workshoplist');
                $('#Workshoplist').focus();
                return isValid;
            }
            return isValid;
        }
        function AddWorkshopDetails() {

            // var value = { 'Workshoplist[]': [] };
            // var value ;
            var value = new Array();
            var jObject = {};
            $("#Workshoplist input:checked").each(function () {
                //value = $(this).val();
                //value['Workshoplist[]'].push($(this).val());
                //value.push($(this).val());
                value.push($(this)[0].name);
            });
            //  var valNew = value.toString().split(",");
            var valNew = value.toString();
            //  jObject = JSON.stringify(value);
            if (checkWorkshop()) {
                $.ajax({
                    url: HostedDir + "/AgencyUser/AddWorkshopAjax",
                    type: "POST",
                    data: {

                        Center: $('#DdlCenter').val(),
                        // Date: $('#WorkshopDate').val(), //Changes on 28Dec2016
                        value: valNew,
                        daypreference: $("input[name*='daypreference']:checked").val(),   //by atul 27-03-2017
                        timepreference: $("input[name*='timepreference']:checked").val(),
                        HouseholdId: '@Model.HouseholdId',
                        WorkshopId: '@Model.WorkshopId'

                    },
                    dataType: "json",
                    secureuri: false,
                    success: function (response) {
                        if (response != null) {

                            if (response.result == "1") {
                                customAlert("Record added successfully.");
                                $('#WorkshopModel').modal('toggle');
                                //Binddoctordropdowndata(response.Info);
                                //clearcontrolsD();
                            }

                            else if (response.result == "2") {

                                customAlert("Record updated successfully");
                                $('#WorkshopModel').modal('toggle');
                                //clearcontrolsD();
                                //Binddoctordropdowndata(response.Info);

                            }
                            else if (response.result == "3") {
                                customAlert("Record already exists.");
                            }
                            else
                                customAlert(response);
                        }
                    },
                    error: function (response) { alert(response); }
                });
            }
        }

        //Added on 26Dec2016

        function ViewWorkshopList() {
            $.ajax({
                url: HostedDir + "/AgencyUser/GetWorkshopList",
                type: "POST",
                data: {
                    HouseholdId: '@Model.HouseholdId',
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {

                    EditWorkshop(data);
                }
           , error: function (response) {
               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
           }
            });
        }
        //End
        function EditWorkshop(data) {

            if (data.AvailableWorkshopDetails != null && data.AvailableWorkshopDetails.length > 0) {
                for (var i = 0; i < data.AvailableWorkshopDetails.length; i++) {
                    $('#Workshoplist input[type=checkbox]').each(function () {
                        if ($(this).val() == data.AvailableWorkshopDetails[i].Id)
                            $(this).prop("checked", true);
                    });
                }
            }
        }
        //End

        function SetBmistatus(object) {
            $("#BMIStatus2").val($(object).val());

        }
        function AddEmergencyContact() {
            if ($('#gridphoneE1 > tbody > tr').length > 0) {
                var griddatapush = [];
                var _griddata = [];
                $("#gridphoneE1 > tbody >tr").each(function (i) {
                    var td = $(this).find('td:eq(1)').children()[0];
                    _griddata = {
                        PhoneType: $('select[name="PhoneNos[' + i + '].PhoneType"]').val(),
                        PhoneNo: $('input[name="PhoneNos[' + i + '].PhoneNo"]').val(),
                        IsPrimary: $('input[name="PhoneNos[' + i + '].IsPrimary"]').is(":checked"),
                        Notes: $('input[name="PhoneNos[' + i + '].Notes"]').val(),
                        Sms: $('input[name="PhoneNos[' + i + '].IsSms"]').is(":checked"),
                        Phoneid: $('input[name="PhoneNos[' + i + '].PhoneId"]').val(),
                    };
                    griddatapush.push(_griddata);
                });
                if (isValidEmergencyInfo()) {
                    var myform = document.getElementById("form1");
                    var fd = new FormData(myform);
                    $('#form1 input:file').each(function (a, b) {
                        var fileInput = $(this);
                        fd.append($(fileInput).attr("name"), fileInput);
                    });
                    $.ajax({
                        url: HostedDir + "/AgencyUser/AddEmergencyContactAjax",

                        type: "POST",
                        //data: fd,
                        dataType: "json",
                        secureuri: false,
                        processData: false,
                        contentType: false,
                        async: true,
                        data: fd,
                        success: function (response) {
                            if (response != null) {
                                if (response.result == "1") {
                                    $('#EAvatar').val("");
                                    $('#ERelationwithchild').val("");
                                    customAlert("Record added successfully.");
                                    emptyemergencytab();
                                    drawEmergencygrid();
                                    if ($('#gridphoneE1 > tbody tr').length > 1) {
                                        $('#gridphoneE1 > tbody > tr').remove();

                                    }
                                    AddphoneE1Grid();

                                }

                                else if (response.result == "2") {
                                    $('#EAvatar').val("");
                                    $('#ERelationwithchild').val("");
                                    customAlert("Record updated successfully.");
                                    drawEmergencygrid();
                                    emptyemergencytab();
                                    if ($('#gridphoneE1 > tbody tr').length > 1) {
                                        $('#gridphoneE1 > tbody > tr').remove();
                                    }
                                    AddphoneE1Grid();
                                }
                                else if (response.result == "3") {
                                    customAlert("Record already exists.");
                                }
                                else
                                    customAlert(response);
                            }
                        },
                        error: function (response) { alert(response); }
                    });
                }
            }
        }
        function AddphoneE1Grid() {
            var newround = 0;
            var phonetype = "PhoneNos[" + newround + "].PhoneType";
            var phoneno = "PhoneNos[" + newround + "].PhoneNo";
            var primarycontact = "PhoneNos[" + newround + "].IsPrimary";
            var notes = "PhoneNos[" + newround + "].Notes";
            var sms = "PhoneNos[" + newround + "].IsSms";
            $('#gridphoneE1').show();
            var tr = '<tr><td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                      ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                       '</select></td><td><input  name=' + phoneno + ' class = "form-control" type="text" ></td> <td><input onchange="uncheckother(this);" class="chcketbl" value="true" name=' + primarycontact + '  type="checkbox" data-val="true" /></td><td ><input data-val="true" maxlength="100" class = "form-control" type="text" name=' + notes + '></td><td><input style="width:50%;" disabled="disabled" type="checkbox" class="chcketbl" name=' + sms + ' value="true"/></td><td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphoneE1 > tbody').append(tr);
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphoneE1 > tbody tr:last').find('td:eq(0) :input').val("");
            // round = round + 1;
        }
        function gotoFPA() {

            var clientid = '@ViewBag.ClientId';
            var name = '@ViewBag.ClintName';
            var url = HostedDir + '/Roster/FPAList/?id=' + clientid + '&Householdid=0&centerid=0&0Programid=0&ClientName=' + name;
            window.location.href = url;
        }
        function gotoRef() {

            var clientid = '@ViewBag.ClientId';
            var name = '@ViewBag.ClintName';
            var url = HostedDir + '/Roster/ReferralService/?id=' + clientid + '&Householdid=0&centerid=0&0Programid=0&ClientName=' + name;
            window.location.href = url;


        }
    </script>
}

@section Style{
    
    
    <style type="text/css">
      /*@@media only screen and (min-width:768px) and (max-width:1200px) {
            .title-fixed {
        position: static;
        padding-left: 0;
    }
            .protype-solid span textarea {
        height: 50px;
        width: 100% !important;
    }
            .protype-solid span {
        width: 55% !important;
        float: left;
    }
                .protype-solid label {
                width: 45% !important;float: left;
                }
            .protype-solid label input {
        width: 30px !important;
        float: left;
    }
            }
            .edu-protextarea textarea {
        width: 65%;
        float: left;
        height: 60px;
        margin-bottom: 15px;
        max-width:65%;
    }
            .protype-solid span textarea {
        height:  50px;
        width: 60%;
    }
            .protype-solid {
        width:  100%;
        float:  left;
        margin-bottom: 15px;
    }

    .protype-solid label {
        width: 30%;
        float:  left;
    }

    .protype-solid span {
        width:  70%;
        float:  left;
    }*/


      .futurequalifier {
          color: green;
      }


      .billing-inner-label label, .billing-inner-label span {
          color: #333;
          font-weight: normal !important;
          font-size: 15px;
          margin-bottom: 0;
          margin-top: 10px;
      }

      .bill-radio {
          margin: 0.5rem;
          display: inline-block;
      }

          .bill-radio input[type="radio"] {
              position: absolute;
              opacity: 0;
          }

      .billing-inner input {
          background: transparent;
          color: #333;
          border: 1px solid #333;
          border-radius: 8px !important;
          height: 40px;
      }

      .bill-radio label {
          padding-left: 0;
          color: #333;
          margin-bottom: 0;
      }

      .bill-radio input[type="radio"]:checked + .radio-label:before {
          background-color: #295b8f;
          box-shadow: inset 0 0 0 4px #fff;
      }

      .bill-radio input[type="radio"] + .radio-label:before {
          content: '';
          background: none;
          border-radius: 100%;
          border: 1px solid #333;
          display: inline-block;
          width: 1.4em;
          height: 1.4em;
          position: relative;
          top: -1px;
          margin-right: 1em;
          vertical-align: top;
          cursor: pointer;
          text-align: center;
          -webkit-transition: all 250ms ease;
          transition: all 250ms ease;
      }

      .control-label {
          width: 35%;
      }

      .ch-form .form-group {
          min-height: initial;
          padding-bottom: 10px;
      }
</style>


        
        }


@section MainContentHolder{




    <form method="post" role="form" enctype="multipart/form-data" id="form1" autocomplete="off">
        <div class="row title-fixed">
            <div class="col-lg-12">
                <h2 class="page-header">
                    @if (Model != null)
                    {
                        if (@Model.HouseholdId == 0)
                        {
                            <span>Add Family Intake</span>
                        }
                        else
                        {
                            <span>Edit Family Intake</span>
                        }
                    }

                    <span class="view-btn backto_listspan" id="BackToList">

                        @if (Model.EditAllowed == 1)
                        {
                            <button type="submit" value="SaveFamilyDetails" onclick="return isValidnotall();" id="BtnMsave" name="Command" style="height:26px; padding-top:4px;" class="backto_list">Save</button>
                        }
                        @*else
                        {
                            <button type="button" id="Btnrequest" onclick="GenerateRequest();" style=" height 26px; padding-top 4px;display:none;" class="backto_list">Request for Ownership of Intake</button>
                        }*@

                        @*@if (Model.DeleteAllowed == 0)
                            {
                                <button type="button" onclick="deletefamily();"  style=" height: 26px; padding-top: 4px;" class="backto_list">Delete</button>
                            }*@


                        <button onclick="checkbacktolist();" type="button" style="height:26px; padding-top:4px;" class="backto_list">Back to list</button>
                        <input type="hidden" value="@Model.TabId" id="TabId" name="TabId" />
                        <input type="hidden" value="@Model.ApplicationStatusChild" id="ApplicationStatusChild" name="ApplicationStatusChild" />
                        <input type="hidden" value="@Model.ApplicationStatusParent1" id="ApplicationStatusParent1" name="ApplicationStatusParent1" />
                        <input type="hidden" value="@Model.ApplicationStatusParent2" id="ApplicationStatusParent2" name="ApplicationStatusParent2" />




                    </span>
                </h2>

            </div>

        </div>

        <div class="row" style="margin-top:83px;">
            <div class=" col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="panel with-nav-tabs panel-primary">
                    <div class="panel-heading panelul">
                        <ul id="myTab" class="nav nav-tabs navtabs1">
                            <li><a href="#HouseholdRecord" onclick="SetTabId(this);" accesskey="1" data-toggle="tab">Household</a></li>
                            <li><a href="#FamilyHouseholdRecord" onclick="SetTabId(this);" accesskey="2" data-toggle="tab">Family Household</a></li>
                            <li><a href="#FamilyRecord" onclick="SetTabId(this);" accesskey="3" data-toggle="tab">Guardian</a></li>
                            <li><a href="#ChildRecord" onclick="SetTabId(this);" accesskey="4" data-toggle="tab">Child</a></li>
                            <li><a href="#OtherinHousehold" onclick="SetTabId(this);" accesskey="5" data-toggle="tab">Others In Household</a></li>
                            <li><a href="#Qualifier" onclick="SetTabId(this);" accesskey="6" data-toggle="tab">Qualifier</a></li>
                            <li><a href="#EmergencyContacts" onclick="SetTabId(this);" accesskey="7" data-toggle="tab">eContacts</a></li>
                            <li><a href="#RestrictedList" onclick="SetTabId(this);" accesskey="8" data-toggle="tab">rContacts</a></li>
                            <li><a href="#FamilyFileCabinet" onclick="SetTabId(this);" accesskey="9" data-toggle="tab">File Cabinet</a></li>
                        </ul>

                    </div>
                    <div id="myTabContent" class="tab-content">
                        <div class="tab-pane fade in active" id="HouseholdRecord">
                            <div class="add-useragform">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">Address <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.Street, new { placeholder = "Address", id = "Street", maxlength = "100", @class = "form-control", tabindex = 1, @onblur = "CheckAddress(0);" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">Apartment No., Lot No. </label>
                                                @Html.TextBoxFor(m => m.StreetName, new { placeholder = "Apartment No., Lot No.", id = "StreetName", maxlength = "100", @class = "form-control", tabindex = 2, onblur = "CheckAddress(0);" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">Zip Code  <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.ZipCode, new { placeholder = "Zip Code ", id = "ZipCode", maxlength = "5", @class = "form-control", onblur = "checkZipCode(this);", tabindex = 3 })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">City  <sup>*</sup></label>
                                                @*@Html.TextBoxFor(m => m.City, new { placeholder = "City ", id = "City", maxlength = "100", @class = "form-control", onblur = "Changefirstchar(this);", tabindex = 4 })*@
                                                <select id="City" name="City" class="form-control" tabindex="4">
                                                    <option value="@Model.City">@Model.City</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">State  <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.State, new { placeholder = "State ", id = "State", maxlength = "100", @class = "form-control", onblur = "isSpclChar(this);", tabindex = 4, @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label for="email">County  <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.County, new { placeholder = "County ", id = "County", maxlength = "100", @class = "form-control", tabindex = 5, @readonly = "readonly" })
                                            </div>
                                        </div>
                                        @if (Model.docstorage == 0)
                                        {
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label>Address Verification Form (pdf,jpg,jpeg,bmp,gif,png) </label>
                                                    @Html.TextBoxFor(m => m.FileaddressAvatar, new { id = "FileaddressAvatar", Name = "FileaddressAvatar", type = "file", onchange = "ValidateSingleInputpdf(this)", @class = "form-control", @accept = "image/*", @capture = "camera", @style = "width:43%;", tabIndex = "6" })
                                                    <div class="cont-sz" style="width: 85px;display:none; margin-left: 10px; float: right;">
                                                        @Html.CheckBoxFor(m => m.AdresssverificationinPaper, new { @class = "minimal", tabIndex = "7" })
                                                        <label style="width:45px;">Paper</label>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if (Model.docstorage == 2)
                                        {
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label>Address Verification Form</label>
                                                    <div class="cont-sz">
                                                        @Html.CheckBoxFor(m => m.AdresssverificationinPaper, new { @class = "minimal", tabIndex = "7" })
                                                        <label style="width:45px;">Paper</label>
                                                    </div>
                                                    @Html.TextBoxFor(m => m.FileaddressAvatar, new { id = "FileaddressAvatar", Name = "FileaddressAvatar", type = "file", onchange = "ValidateSingleInputpdf(this)", @class = "form-control", @accept = "image/*", @capture = "camera", @style = "width:43%;display:none;", tabIndex = "6" })

                                                </div>
                                            </div>
                                        }





                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            <button type="button" id="btnsubmit" class="my-btn" onclick="return isValidagencyInfo();" tabindex="8">Next</button>
                                            @*<button type="submit" id="btnsubmit" class="my-btn" value="Save" name="Command" onclick="return isValidagencyInfo();" tabindex="8">Submit</button>*@
                                            @*<button id="btnExit" class="my-btn" type="button" tabindex="22">Exit</button>*@
                                            <input id="HouseholdId" type="hidden" name="HouseholdId" value="@Model.HouseholdId" />
                                            <input id="HFileName" type="hidden" name="HFileName" value="@Model.HFileName" />
                                            @Html.HiddenFor(m => m.HFileInString)
                                            @*@Html.HiddenFor(m => m.HFileName)*@
                                            @Html.HiddenFor(m => m.HFileExtension)
                                            <div class="clear"></div>
                                        </div>	<!--btnwrp_subcal--->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="FamilyHouseholdRecord">
                            <div class="add-useragform1" id="chk">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <label> Family Type <sup style="color:red;">*</sup></label>
                                                </div>
                                                <div class="col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.FamilyType, 1, new { @id = "FamilyType", onchange = "ShowHideDivParentTwo1()", tabIndex = "8" })
                                                        <span style="font-size: 14px;">Single Parent Family </span>
                                                    </label>
                                                </div>
                                                <div class="col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.FamilyType, 2, new { @id = "FamilyType1", onchange = "ShowHideDivParentTwo2()", tabIndex = "9" })
                                                        <span style="font-size: 14px;">Two Parent Family </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                            <div class="form-group">
                                                <div class="col-xs-8 col-sm-12">
                                                    <label>
                                                        Is family Homeless at this time? <sup style="color:red;">*</sup>

                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.HomeType, 1, new { tabIndex = "10", id = "HomeType1", onchange = "Checkhouse(this)" })
                                                        <span>Yes</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.HomeType, 2, new { tabIndex = "11", id = "HomeType2", onchange = "UnCheckhouse(this)" })
                                                        <span>No  </span>
                                                    </label>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row col-sm-12">
                                            <div class="col-lg-6 adddivspace" id="divrelationshipparent" style="display:none;">
                                                <div class="form-group">
                                                    <div class="col-sm-12">
                                                        <label>Parent Relationship <sup style="color:red;">*</sup></label>
                                                    </div>
                                                    <div class="col-sm-9">
                                                        @{
                                                            List<SelectListItem> ParentRelatioshipList = new List<SelectListItem>();
                                                        }
                                                        @Html.DropDownListFor(m => m.ParentRelatioship, new SelectList(ParentRelatioshipList, "Value", "Text", Model.ParentRelatioship), new { @class = "form-control", onchange = "ShowdivParentotherrelationship();" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 adddivspace" id="married" style="display:none;">
                                                <div class="form-group">
                                                    <div class="col-sm-12">
                                                        <div class="col-xs-8 col-sm-12">
                                                            <label>Married? <sup style="color:red;">*</sup></label>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2">
                                                            <label class="radio-inline">
                                                                @Html.RadioButtonFor(m => m.Married, 1, new { tabIndex = "22", id = "Married" })
                                                                <span>Yes</span>
                                                            </label>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2">
                                                            <label class="radio-inline">
                                                                @Html.RadioButtonFor(m => m.Married, 2, new { tabIndex = "23", id = "Married1" })
                                                                <span>No  </span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row col-sm-12">
                                            <div class="col-lg-6 adddivspace" id="divParentrelatioship" style="display:none;">
                                                <div class="form-group">
                                                    <div class="col-xs-8">
                                                        <label for="email">Other Relationship</label>
                                                    </div>
                                                    <div class="col-xs-9">
                                                        @Html.TextBoxFor(m => m.ParentRelatioshipOther, new { placeholder = "Other Relationship", maxlength = "20", @class = "form-control", tabIndex = "25" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                            <div class="form-group">
                                                <div class="col-xs-8 col-sm-12">
                                                    <label> Rent Type </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.RentType, "1", new { tabIndex = "12", id = "RentType1", onchange = "Renting(this);" })
                                                        <span>Renting </span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.RentType, "2", new { tabIndex = "13", id = "RentType2", onchange = "Buying(this);" })
                                                        <span>Buying</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.RentType, "3", new { tabIndex = "14", id = "RentType3", onchange = "SubsidizedRent(this);" })
                                                        <span>Subsidized Rent</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-6">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.RentType, "4", new { tabIndex = "15", id = "RentType4", onchange = "NoPayment(this);" })
                                                        <span>No Payment </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">

                                            <div class="form-group">
                                                <div class="col-xs-8 col-sm-12">
                                                    <label>Federal or Other Assistance <sup style="color:red;">*</sup></label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="checkbox-inline">
                                                        @Html.CheckBoxFor(m => m.TANF, new { id = "TANF", Name = "TANF", @class = "minimal", @onchange = "uncheckdataNone();", tabIndex = "16" })
                                                        <span>TANF</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="checkbox-inline">
                                                        @Html.CheckBoxFor(m => m.SSI, new { id = "SSI", Name = "SSI", @class = "minimal", @onchange = "uncheckdataNone();", tabIndex = "17" })
                                                        <span>SSI</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="checkbox-inline">
                                                        @Html.CheckBoxFor(m => m.SNAP, new { id = "SNAP", Name = "SNAP", @class = "minimal", @onchange = "uncheckdataNone();", tabIndex = "18" })
                                                        <span>SNAP</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="checkbox-inline">
                                                        @Html.CheckBoxFor(m => m.WIC, new { id = "WIC", Name = "WIC", @class = "minimal", @onchange = "uncheckdataNone();", tabIndex = "19" })
                                                        <span>WIC</span>
                                                    </label>
                                                </div>

                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="checkbox-inline">
                                                        @Html.CheckBoxFor(m => m.NONE, new { id = "None", Name = "None", @class = "minimal", @onchange = "uncheckdata();", tabIndex = "20" })
                                                        <span>NONE</span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        @*</div>
                                            </div>*@

                                        <div class="row col-lg-12">
                                            <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                <div class="form-group">
                                                    <div class="col-xs-8 col-sm-12">
                                                        <label for="email">Primary Language Spoken  <sup style="color:red;">*</sup></label>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-9">
                                                        @{
                                                            List<SelectListItem> lang = new List<SelectListItem>();
                                                            foreach (var item in ViewBag.lang)
                                                            {
                                                                lang.Add(new SelectListItem() { Text = item.Name, Value = item.LangId });
                                                            }
                                                        }
                                                        @Html.DropDownListFor(m => m.PrimaryLanguauge, new SelectList(lang, "Value", "Text"), new { @class = "form-control", onchange = "Showotherlanguage();", tabIndex = "21" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 adddivspace">
                                                <div class="form-group">
                                                    <div class="col-sm-12">
                                                        <div class="col-xs-8 col-sm-12">
                                                            <label>Does Family need an Interpreter? <sup style="color:red;">*</sup></label>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2">
                                                            <label class="radio-inline">
                                                                @Html.RadioButtonFor(m => m.Interpretor, 1, new { tabIndex = "22", id = "Interpretor" })
                                                                <span>Yes</span>
                                                            </label>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2">
                                                            <label class="radio-inline">
                                                                @Html.RadioButtonFor(m => m.Interpretor, 2, new { tabIndex = "23", id = "Interpretor1" })
                                                                <span>No  </span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-lg-6 adddivspace" id="div2" style="display:none;">
                                            <div class="form-group">
                                                <div class="col-xs-8">
                                                    <label for="email">Other Language Detail</label>
                                                </div>
                                                <div class="col-xs-9">
                                                    @Html.TextBoxFor(m => m.OtherLanguageDetail, new { placeholder = "Other Language Detail", maxlength = "20", @class = "form-control", tabIndex = "25" })

                                                </div>
                                            </div>
                                        </div>



                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            <button id="btnFamilyDetailExit" class="my-btn" type="button" tabindex="26">Previous</button>
                                            <button type="button" id="btnSend" tabindex="27" value="SaveFamilyDetail" name="Command" onclick="return isValidfamilyInfo();" class="my-btn">Next</button>
                                            <input id="FamilyHouseholdID" type="hidden" name="FamilyHouseholdID" value="@Model.FamilyHouseholdID" />
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="FamilyRecord">
                            <div class="add-useragform add-useragform2">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                        <div class="col-md-12">
                                            <div class="panel panel-primary panel2">
                                                <div class="panel-heading panel-heading2">
                                                    <h3 class="panel-title">Parent/Guardian 1</h3>
                                                    <span> <a id="btnremoveParent1" class="deleteparent" accesskey="Parent1" onclick="deleteParent(this);">Delete</a></span>
                                                    <span id="Pparentid1" class="pull-right clickable "><i class="glyphicon glyphicon-chevron-up"></i></span>
                                                </div>
                                                <div class="panel-body panel-body2">
                                                    <div class="row">

                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>First Name <sup>*</sup></label>
                                                                @Html.TextBoxFor(m => m.Pfirstname, new { placeholder = "First Name", id = "Pfirstname", name = "Pfirstname", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Middle Name </label>
                                                                @Html.TextBoxFor(m => m.Pmidddlename, new { placeholder = "Middle Name", id = "Pmidddlename", name = "Pmidddlename", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Last Name <sup>*</sup></label>
                                                                @Html.TextBoxFor(m => m.Plastname, new { placeholder = "Last Name", id = "Plastname", name = "Plastname", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group datepicker-days">
                                                                <label>DOB <sup>*</sup></label>
                                                                <div class="date custom-time">
                                                                    @Html.TextBoxFor(m => m.PDOB, new { placeholder = "MM/DD/YYYY", id = "PDOB", name = "PDOB", maxlength = "50", @onblur = "return validatedate(this);", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Email Address <sup>*</sup></label>
                                                                @if (Model.Noemail1)
                                                                {
                                                                    @Html.TextBoxFor(m => m.Pemailid, new { placeholder = "Email Address", @readonly = "readonly", id = "Pemailid", name = "Pemailid", maxlength = "50", @style = "width:44%;", @class = "form-control", onblur = "validateEmail1(this);" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(m => m.Pemailid, new { placeholder = "Email Address", id = "Pemailid", name = "Pemailid", maxlength = "50", @style = "width:44%;", @class = "form-control", onblur = "validateEmail1(this);" })
                                                                }
                                                                <div class="cont-sz" style="width: 85px;margin-left: 10px; float: right;">
                                                                    @Html.CheckBoxFor(m => m.Noemail1, new { @class = "minimal", tabIndex = "7", onchange = "Disableparentemail(this);" })
                                                                    <label style="width:59px;">No Email</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group datepicker-days">
                                                                <label>SSN </label>
                                                                <div class="date custom-time">
                                                                    @Html.TextBoxFor(m => m.ParentSSN1, new { placeholder = "SSN", @class = "form-control" })

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!-- /.form-group -->
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Parent/Guardian Role <sup>*</sup></label>
                                                                @{
                                                                    List<SelectListItem> ParentRoleList = new List<SelectListItem>();
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Mother Figure", Value = "2" });
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Father Figure", Value = "1" });
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Grandparents", Value = "3" });
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Relatives other than grandparents", Value = "4" });
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Foster Parent - Not including relative", Value = "5" });
                                                                    ParentRoleList.Add(new SelectListItem() { Text = "Other", Value = "6" });
                                                                }
                                                                @Html.DropDownListFor(m => m.PRole, new SelectList(ParentRoleList, "Value", "Text", Model.PRole), new { id = "DdlPRole", Name = "DdlPRole", @class = "form-control", @onchange = "AddParent();" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Highest Degree Earned <sup>*</sup></label>
                                                                @{
                                                                    List<SelectListItem> DegreeEarnedList = new List<SelectListItem>();
                                                                    DegreeEarnedList.Add(new SelectListItem() { Text = "Advanced Degree or Baccalaureate", Value = "1" });
                                                                    DegreeEarnedList.Add(new SelectListItem() { Text = "Associate, Vocational, or some College", Value = "2" });
                                                                    DegreeEarnedList.Add(new SelectListItem() { Text = "High School Graduate or GED", Value = "3" });
                                                                    DegreeEarnedList.Add(new SelectListItem() { Text = "Less than High school", Value = "4" });

                                                                }
                                                                @Html.DropDownListFor(m => m.PDegreeEarned, new SelectList(DegreeEarnedList, "Value", "Text", Model.PDegreeEarned), new { id = "DdlPDegreeEarned", Name = "DdlPDegreeEarned", @class = "form-control" })
                                                            </div>
                                                        </div>



                                                        <div id="addrow" style="display:none;">
                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label for="exampleInputFile">Notes <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Pnotesother, new { placeholder = "Notes", id = "Pnotesother", name = "Pnotesother", maxlength = "100", @class = "form-control" })
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Gender <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PGender, "2", new { id = "PGender", @class = "Pfemale", @onchange = "AddQuestion();" })
                                                                        <span>Female </span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PGender, "1", new { id = "PGender", @class = "Pmale", @onchange = "RemoveQuestion();" })
                                                                        <span>Male</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PGender, "3", new { id = "PGender", @class = "Pother", @onchange = "RemoveQuestionOther();" })
                                                                        <span>Other </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label> Military Status <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PMilitaryStatus, "1", new { id = "PMilitaryStatus1" })
                                                                        <span>None </span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PMilitaryStatus, "2", new { id = "PMilitaryStatus2" })
                                                                        <span>Active</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PMilitaryStatus, "3", new { id = "PMilitaryStatus3" })
                                                                        <span>Veteran</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>



                                                        <div class="">
                                                            <div class="col-lg-6 col-md-6 col-sm-12" id="addquestion" style="display:none;">
                                                                <div class="form-group">
                                                                    <label id="lblQuestion">Are you currently pregnant? <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PQuestion, "1", new { id = "Pquestionyes", onchange = "CheckPregenancy();" })
                                                                            <span>Yes </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PQuestion, "2", new { id = "Pquestionno", onchange = "HidePregenancy();" })
                                                                            <span>No</span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6" style="display:none;" id="Pregnantmotherprogram">
                                                                <div class="form-group">
                                                                    <label>Enroll for Pregnant Mother program? </label>
                                                                    <div class="col-sm-6">
                                                                        @Html.CheckBoxFor(m => m.Pregnantmotherenrolled, new { @class = "minimal", onchange = "Pregnantmotherenrolled1();", @style = "width: auto;" })

                                                                        @Html.HiddenFor(m => m.IsFutureIntakePregEnrolled, new { @class = "hidden" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="clearfix"></div>
                                                        </div>
                                                        <div class="row" style="display: none;  margin: 4px 3px 19px 3px; padding: 6px;" id="Div3">
                                                            <fieldset style="border: 1px solid #295b8f;">
                                                                <legend class="legend1">Pregnant Mother Program Questionnaire</legend>
                                                                <div class="col-md-12">
                                                                    @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Prenatal? </label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPrenatal, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPrenatal, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Postpartum?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPostpartum, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPostpartum, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Mental Health?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesMentalHealth, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesMentalHealth, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Substance Abuse Prev?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabuseprev, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabuseprev, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Substance abuse treat?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabusetreat, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabusetreat, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Education?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesEducation, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesEducation, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Breast Feeding Info?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesBreastfeedinginfo, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesBreastfeedinginfo, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>High Risk?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.HighRisk, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.HighRisk, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Dental Services?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedDentalServices, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedDentalServices, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Left Before Birth?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.LeftBeforeBirth, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.LeftBeforeBirth, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Transitioned With Services?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.TransitionedWithServices, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.TransitionedWithServices, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Enrolled Child?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.EnrolledChild, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.EnrolledChild, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>*@
                                                                    <div class="col-lg-6">
                                                                        <div class="form-group">
                                                                            <label for="email">Primary Insurance <sup>*</sup></label>
                                                                            @{
                                                                                List<SelectListItem> PregnantmotherprimaryinsuranceList = new List<SelectListItem>();
                                                                                PregnantmotherprimaryinsuranceList.Add(new SelectListItem() { Text = " Medicaid/Chip", Value = "1" });
                                                                                PregnantmotherprimaryinsuranceList.Add(new SelectListItem() { Text = "No Insurance", Value = "2" });
                                                                                PregnantmotherprimaryinsuranceList.Add(new SelectListItem() { Text = "Other Insurance", Value = "3" });
                                                                                PregnantmotherprimaryinsuranceList.Add(new SelectListItem() { Text = "Private Health Insurance", Value = "4" });
                                                                                PregnantmotherprimaryinsuranceList.Add(new SelectListItem() { Text = "State Funded", Value = "5" });
                                                                            }
                                                                            @Html.DropDownListFor(m => m.Pregnantmotherprimaryinsurance, new SelectList(PregnantmotherprimaryinsuranceList, "Value", "Text", Model.Pregnantmotherprimaryinsurance), new { @class = "form-control", tabIndex = "24" })

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-6 ">
                                                                        <div class="form-group">
                                                                            <label for="email">Insurance Notes </label>
                                                                            @Html.TextBoxFor(m => m.Pregnantmotherprimaryinsurancenotes, new { placeholder = "Insurance Notes", maxlength = "20", @class = "form-control", tabIndex = "25" })
                                                                        </div>
                                                                    </div>

                                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                                        <div class="form-group">
                                                                            <label>Trimester Enrolled <sup>*</sup></label>

                                                                            @{
                                                                                List<SelectListItem> TrimesterEnrolledList = new List<SelectListItem>();
                                                                                TrimesterEnrolledList.Add(new SelectListItem() { Text = "1st", Value = "1" });
                                                                                TrimesterEnrolledList.Add(new SelectListItem() { Text = "2nd", Value = "2" });
                                                                                TrimesterEnrolledList.Add(new SelectListItem() { Text = "3rd", Value = "3" });
                                                                            }
                                                                            @Html.DropDownListFor(m => m.TrimesterEnrolled, new SelectList(TrimesterEnrolledList, "Value", "Text", Model.TrimesterEnrolled), new { @class = "form-control" })

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                                        <div class="form-group">
                                                                            <label>Medical Home <sup>*</sup></label>
                                                                            @{
                                                                                List<SelectListItem> MedicalhomePreg1List = new List<SelectListItem>();
                                                                                MedicalhomePreg1List.Add(new SelectListItem() { Text = "Does not have a medical home", Value = "1" });
                                                                                MedicalhomePreg1List.Add(new SelectListItem() { Text = "Ongoing Source of continuous, accessible health care", Value = "2" });
                                                                                MedicalhomePreg1List.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });
                                                                                if (Model.AvailableProgram != null)
                                                                                {
                                                                                    foreach (var item in Model.AvailableProgram)
                                                                                    {
                                                                                        if (item.ReferenceId == "3")
                                                                                        {
                                                                                            MedicalhomePreg1List.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                            @Html.DropDownListFor(m => m.MedicalhomePreg1, new SelectList(MedicalhomePreg1List, "Value", "Text", Model.MedicalhomePreg1), new { @class = "form-control", @onchange = "AddDoctorP1();" })
                                                                        </div>
                                                                    </div>
                                                                    <div class="test">
                                                                        <div id="addp1" style="display:none;">
                                                                            <div class="col-lg-6">
                                                                            </div>
                                                                            <div class="col-lg-6">
                                                                                <div class="form-group">
                                                                                    @*<label>Doctor Information<sup>*</sup></label>*@
                                                                                    <label>Medical Center<sup>*</sup></label>
                                                                                    @Html.TextBoxFor(m => m.CDoctorP1, new { placeholder = "Medical Center", maxlength = "30", @class = "form-control", @style = "width:50%;" })
                                                                                    <input type="hidden" name="Doctor" id="Doctor" value="0" />
                                                                                    <a href="#" id="AddDoctor" title="Add Community Resource" onclick="SetResource(3,'doctorpm');" data-toggle="modal" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>

                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        <div class="clearfix"></div>
                                                                    </div>
                                                                    <div class=" col-md-11 col-sm-12 mb10" style="margin-top:1%;">

                                                                        <div class="row">
                                                                            <div class="col-sm-7">
                                                                                Has the pregnant mom received the following services?

                                                                                <a style="margin-left:1%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#PMS"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="PMServiceText">
                                                                                @if (Model != null && Model.AvailableService != null && Model.AvailableService.Count > 0)
                                                                                {
                                                                                    foreach (var item1 in Model.AvailableService)
                                                                                    {
                                                                                        if (Model._PMservices != null && Model._PMservices.Count > 0)
                                                                                        {
                                                                                            foreach (var item in Model._PMservices.Where(P => P.Parentid == "0"))
                                                                                            {
                                                                                                if (item.MasterId == item1.Id.ToString())
                                                                                                {
                                                                                                    <div style="padding-left:24px; line-height:normal;color:#295b8f;">@item1.Name </div>
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </div>
                                                                        </div>


                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                How many times has the mother visited the doctor during this pregnancy?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @Html.TextBoxFor(m => m.PMVisitDoc, new { placeholder = "Doctor Visit", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                Did the mother have any of the following problems during this pregnancy?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem, 1, new { id = "PMProblem1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem, 2, new { id = "PMProblem2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-4">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem, 3, new { id = "PMProblem3" })
                                                                                    <span>Unknown</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace" style="margin-top:2%;">
                                                                        <div class="row">
                                                                            <div class="col-sm-7" style="margin-bottom:10px;">
                                                                                What problems did the mother have?



                                                                                <a style="margin-left:3%;" title="Add Conditions" href="#" data-toggle="modal" data-target="#PMPrblms"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            @*02082016*@
                                                                            <div id="PMPrblmText">
                                                                                @if (Model != null && Model.AvailablePrblms != null && Model.AvailablePrblms.Count > 0)
                                                                                {
                                                                                    foreach (var item1 in Model.AvailablePrblms)
                                                                                    {
                                                                                        if (Model._PMproblem != null && Model._PMproblem.Count > 0)
                                                                                        {
                                                                                            foreach (var item in Model._PMproblem.Where(P => P.Parentid == "0"))
                                                                                            {
                                                                                                if (item.MasterId == item1.Id.ToString())
                                                                                                {
                                                                                                    <div style="padding-left:24px; line-height:normal;color:#295b8f;">@item1.Name </div>
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                If pregnant mom had other issues, please explain:
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMOtherIssues, new { placeholder = "Other issues", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 ">
                                                                                Did pregnant mom:
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> PMConditions = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.PMConditions)
                                                                                    {
                                                                                        PMConditions.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.PMConditions, new SelectList(PMConditions, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                If any of the previous question are selected, please provide an explanation
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMCondtnDesc, new { placeholder = "Description", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">

                                                                                Is this pregnancy considered medically high risk by a physician or health care provider?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRisk, 1, new { id = "PMRisk1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRisk, 2, new { id = "PMRisk2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                Has this woman received a professional dental exam and/or dental treatment in the last 12 months?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam, 1, new { id = "PMDentalExam1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam, 2, new { id = "PMDentalExam2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam, 3, new { id = "PMDentalExam3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                Date of the most recent professional dental exam and/or treatment
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMDentalExamDate, new { placeholder = "MM/DD/YYYY", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                Did pregnant mom need a dental treatment?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental, 1, new { id = "PMNeedDental1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental, 2, new { id = "PMNeedDental2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental, 3, new { id = "PMNeedDental3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom:10px;">
                                                                                Did pregnant mom receive dental treatment?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental, 1, new { id = "PMRecieveDental1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental, 2, new { id = "PMRecieveDental2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental, 3, new { id = "PMRecieveDental3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>


                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Currently Working <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PCurrentlyWorking, 1, new { id = "PCurrentlyWorking", onchange = "CheckParent1income(this);" })
                                                                        <span>Yes</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PCurrentlyWorking, 2, new { id = "PCurrentlyWorking1", onchange = "CheckParent1income(this);" })
                                                                        <span>No </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Currently enrolled in job training/school? <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PEnrollment, 1, new { id = "PEnrollment" })
                                                                        <span>Yes</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.PEnrollment, 2, new { id = "PEnrollment1" })
                                                                        <span>No </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Member of Policy Council?<sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PPolicyCouncil, 1, new { id = "PPolicyCouncil" })
                                                                            <span>Yes</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PPolicyCouncil, 2, new { id = "PPolicyCouncil1" })
                                                                            <span>No </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>*@

                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Profile Picture </label>
                                                                @Html.TextBoxFor(m => m.PAvatar, new { id = "PAvatar", Name = "PAvatar", type = "file", @accept = "image/*", @capture = "camera", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                <div class="img-iconavt">
                                                                    <img alt="" id="imgAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.PAvatarUrl)' style="border-style:none;" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                        </div>
                                                        <div class="col-sm-12">
                                                            <span>Add Contact No</span>
                                                            <a href="javascript:void(0)" title="Add Contact No" onclick="Addphone();"><i class="fa fa-plus-square"></i></a>
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            <a style="margin-left:3%;" href="javascript:void(0)" data-toggle="modal" data-target="#Myincomecalculator">Calculate Income <i class="fa fa-calculator"></i></a>
                                                            <span style="margin-left:6%;" id="Span1"></span>
                                                        </div>

                                                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <button id="btnremoveParent1" accesskey="Parent1" type="button" onclick="deleteParent(this);" class="my-btn" style="display: none; width: 43% !important;">Delete Parent/Guardian</button>
                                                                </div>
                                                            </div>*@
                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                            <div class="table-responsive">
                                                                <table class="table table_size" id="gridphone">
                                                                    <thead style="cursor:pointer;">
                                                                        <tr>
                                                                            <th id="thIN">Phone Type</th>
                                                                            <th id="thIN">Phone No</th>
                                                                            <th id="thSN">Is Primary No</th>
                                                                            <th id="thnt">Notes</th>
                                                                            <th id="thCust">SMS </th>
                                                                            <th id="thCust">Action </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>


                                                                        @if (Model != null && Model.phoneListParent != null && Model.phoneListParent.Count > 0)
                                                                        {
                                                                            var rounds = 0;
                                                                            foreach (var item in Model.phoneListParent)
                                                                            {
                                                                                var PhoneTypeP = "ParentPhone1[" + rounds + "].PhoneTypeP";
                                                                                var phonenoP = "ParentPhone1[" + rounds + "].phonenoP";
                                                                                var StateP = "ParentPhone1[" + rounds + "].StateP";
                                                                                var notesP = "ParentPhone1[" + rounds + "].notesP";
                                                                                var SmsP = "ParentPhone1[" + rounds + "].SmsP";
                                                                                var Phoneid = "ParentPhone1[" + rounds + "].PPhoneId";
                                                                                <tr>
                                                                                    <td>
                                                                                        <select class="form-control" style="width:100%;" name="@PhoneTypeP" onchange="addcontact(this);">
                                                                                            <option @if (@item.PhoneTypeP == "1") { <text> selected="selected" </text>                 } value="1">Home</option>
                                                                                            <option @if (@item.PhoneTypeP == "2") { <text> selected="selected" </text>                 } value="2">Mobile</option>
                                                                                            <option @if (@item.PhoneTypeP == "3") { <text> selected="selected" </text>                 } value="3">Work</option>
                                                                                        </select>
                                                                                        <input type="hidden" value="@item.PhoneTypeP" />
                                                                                    </td>
                                                                                    <td><input name="@phonenoP" class="form-control" type="text" value="@item.phonenoP"></td>
                                                                                    <td><input value="true" onchange="uncheckParentother(this);" name="@StateP" type="checkbox" data-val="true" @if (@item.StateP) { <text> checked="checked" </text>       } /></td>
                                                                                    <td><input data-val="true" class="form-control" maxlength="100" type="text" name="@notesP" value="@item.notesP"></td>
                                                                                    <td><input style="width:50%;" type="checkbox" name="@SmsP" value="true" @if (@item.PhoneTypeP == "1" || @item.PhoneTypeP == "3") { <text> disabled="disabled" </text>        } @if (@item.SmsP) { <text> checked="checked" </text>        } /></td>
                                                                                    <td><input type="hidden" name="@Phoneid" value="@item.PPhoneId" /> <a href="javascript:void(0)" onclick="RemovePhone(this);" accesskey="@item.PPhoneId" style=" text-decoration:underline;">Delete</a></td>
                                                                                </tr>
                                                                                rounds++;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <select class="form-control" style="width:100%;" name="ParentPhone1[0].PhoneTypeP" onchange="addcontact(this);">
                                                                                        <option value="1">Home</option>
                                                                                        <option value="2">Mobile</option>
                                                                                        <option value="3">Work</option>
                                                                                    </select>
                                                                                    <input type="hidden" value="0" />

                                                                                </td>
                                                                                <td><input class="form-control" name="ParentPhone1[0].phonenoP" type="text"></td>
                                                                                <td><input type="checkbox" value="true" name="ParentPhone1[0].StateP" data-val="true" class="chcktbl" onchange="uncheckParentother(this);" /></td>
                                                                                <td><input class="form-control" type="text" data-val="true" name="ParentPhone1[0].notesP" maxlength="100"></td>
                                                                                <td><input type="checkbox" style="width:50%;" disabled="disabled" name="ParentPhone1[0].SmsP" value="true" class="chcktbl" /></td>
                                                                                <td><a href="javascript:void(0)" onclick="RemovePhone(this);" style=" text-decoration:underline;">Delete</a></td>
                                                                            </tr>

                                                                        }










                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="panel panel-primary panel1" style="display:none;">
                                                <div class="panel-heading panel-heading1">
                                                    <h3 class="panel-title">Parent/Guardian 2</h3>
                                                    <span> <a id="btnremoveParent2" class="deleteparent" accesskey="Parent2" onclick="deleteParent(this);">Delete</a></span>
                                                    @*<button id="btnremoveParent2" accesskey="Parent2" type="button" onclick="deleteParent(this);" class="my-btn" style=" display:none;width:43% !important;">Delete Parent/Guardian</button>*@
                                                    <span id="pparentid2" class="pull-right clickable1"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                                </div>
                                                <div class="panel-body panel-body1">
                                                    <div class="row">


                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>First Name <sup>*</sup></label>
                                                                @Html.TextBoxFor(m => m.P1firstname, new { placeholder = "First Name", id = "P1firstname", name = "P1firstname", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Middle Name </label>
                                                                @Html.TextBoxFor(m => m.P1midddlename, new { placeholder = "Middle Name", id = "P1midddlename", name = "P1midddlename", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Last Name <sup>*</sup></label>
                                                                @Html.TextBoxFor(m => m.P1lastname, new { placeholder = "Last Name", id = "P1lastname", name = "P1lastname", maxlength = "50", @class = "form-control" })
                                                            </div>
                                                        </div>


                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group datepicker-days">
                                                                <label>DOB <sup>*</sup></label>
                                                                <div class="date custom-time">
                                                                    @Html.TextBoxFor(m => m.P1DOB, new { placeholder = "MM/DD/YYYY", id = "P1DOB", @onblur = "return validatedate(this);", name = "P1DOB", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Email Address <sup>*</sup></label>

                                                                @if (Model.Noemail2)
                                                                {
                                                                    @Html.TextBoxFor(m => m.P1emailid, new { placeholder = "Email Address", @readonly = "readonly", id = "P1emailid", name = "P1emailid", maxlength = "50", @class = "form-control", @style = "width:44%;", onblur = "validateEmail1(this);" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(m => m.P1emailid, new { placeholder = "Email Address", id = "P1emailid", name = "P1emailid", maxlength = "50", @class = "form-control", @style = "width:44%;", onblur = "validateEmail1(this);" })

                                                                }
                                                                <div class="cont-sz" style="width: 85px;margin-left: 10px; float: right;">
                                                                    @Html.CheckBoxFor(m => m.Noemail2, new { @class = "minimal", tabIndex = "7", onchange = "Disableparentemail1(this);" })
                                                                    <label style="width:59px;">No Email</label>
                                                                </div>

                                                            </div>
                                                        </div>

                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group datepicker-days">
                                                                <label>SSN </label>
                                                                <div class="date custom-time">
                                                                    @Html.TextBoxFor(m => m.ParentSSN2, new { placeholder = "SSN", @class = "form-control" })

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!-- /.form-group -->
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Parent/Guardian Role <sup>*</sup></label>
                                                                @{
                                                                    List<SelectListItem> ParentRoleList1 = new List<SelectListItem>();
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Mother Figure", Value = "2" });
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Father Figure", Value = "1" });
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Grandparents", Value = "3" });
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Relatives other than grandparents", Value = "4" });
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Foster Parent - Not including relative", Value = "5" });
                                                                    ParentRoleList1.Add(new SelectListItem() { Text = "Other", Value = "6" });

                                                                }
                                                                @Html.DropDownListFor(m => m.P1Role, new SelectList(ParentRoleList1, "Value", "Text", Model.P1Role), new { @onchange = "AddParent1();", id = "DdlP1Role", Name = "DdlP1Role", @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Highest Degree Earned <sup>*</sup></label>
                                                                @{
                                                                    List<SelectListItem> DegreeEarnedList1 = new List<SelectListItem>();
                                                                    DegreeEarnedList1.Add(new SelectListItem() { Text = "Advanced Degree or Baccalaureate", Value = "1" });
                                                                    DegreeEarnedList1.Add(new SelectListItem() { Text = "Associate, Vocational, or some College", Value = "2" });
                                                                    DegreeEarnedList1.Add(new SelectListItem() { Text = "High School Graduate or GED", Value = "3" });
                                                                    DegreeEarnedList1.Add(new SelectListItem() { Text = "Less than High school", Value = "4" });

                                                                }
                                                                @Html.DropDownListFor(m => m.P1DegreeEarned, new SelectList(DegreeEarnedList1, "Value", "Text", Model.P1DegreeEarned), new { id = "DdlP1DegreeEarned", Name = "DdlP1DegreeEarned", @class = "form-control" })

                                                            </div>
                                                        </div>
                                                        <div id="addrow1" style="display:none;">
                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label for="exampleInputFile">Notes <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.P1notesother, new { placeholder = "Notes", id = "P1notesother", name = "P1notesother", maxlength = "100", @class = "form-control" })
                                                                    @*<input type="text" name="P1notesother" maxlength="100" id="P1notesother" class="form-control" placeholder="Notes" value="@Model.P1notesother">*@
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Gender <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1Gender, "2", new { id = "P1Gender", @class = "P1female", @onchange = "AddQuestion1();" })
                                                                        <span>Female </span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1Gender, "1", new { id = "P1Gender", @class = "P1male", @onchange = "RemoveQuestion1();" })
                                                                        <span>Male</span>
                                                                    </div>

                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1Gender, "3", new { id = "P1Gender", @class = "P1other", @onchange = "RemoveQuestionOther1();" })
                                                                        <span>Other </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label> Military Status <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1MilitaryStatus, "1", new { id = "P1MilitaryStatus1" })
                                                                        <span>None </span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1MilitaryStatus, "2", new { id = "P1MilitaryStatus2" })
                                                                        <span>Active</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1MilitaryStatus, "3", new { id = "P1MilitaryStatus3" })
                                                                        <span>Veteran</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="">
                                                            <div class="col-lg-6 col-md-6 col-sm-12" id="addquestion1" style="display:none;">
                                                                <div class="form-group">
                                                                    <label id="lblQuestion1">Are you currently pregnant?</label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.P1Question, "1", new { id = "Pquestionyes1", onchange = "CheckPregenancy1();" })
                                                                            <span>Yes </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.P1Question, "2", new { id = "Pquestionno1", onchange = "HidePregenancy1();" })
                                                                            <span>No</span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6" style="display:none;" id="Pregnantmotherprogram1">
                                                                <div class="form-group">
                                                                    <label>Enroll for Pregnant Mother program? </label>
                                                                    <div class="col-sm-6">
                                                                        @Html.CheckBoxFor(m => m.PregnantmotherenrolledP1, new { @class = "minimal", onchange = "Pregnantmotherenrolled2();", @style = "width:auto;" })

                                                                        @Html.HiddenFor(m => m.IsFutureIntakePregEnrolled1, new { @class = "hidden" })

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="clearfix"></div>
                                                        </div>
                                                        <div class="row" style="display: none;  margin: 4px 3px 19px 3px; padding: 6px;" id="Divp3">
                                                            <fieldset style="border: 1px solid #295b8f; ">
                                                                <legend class="legend1">Pregnant Mother Program Questionnaire</legend>
                                                                <div class="col-md-12">
                                                                    @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Prenatal? </label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPrenatal, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPrenatal, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Postpartum?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPostpartum, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesPostpartum, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Mental Health?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesMentalHealth, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesMentalHealth, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Substance Abuse Prev?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabuseprev, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabuseprev, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Substance abuse treat?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabusetreat, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesSubstanceabusetreat, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Education?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesEducation, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesEducation, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Services Breast Feeding Info?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesBreastfeedinginfo, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedServicesBreastfeedinginfo, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>High Risk?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.HighRisk, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.HighRisk, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Received Dental Services?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedDentalServices, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.ReceivedDentalServices, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Left Before Birth?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.LeftBeforeBirth, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.LeftBeforeBirth, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Transitioned With Services?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.TransitionedWithServices, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.TransitionedWithServices, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Enrolled Child?</label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.EnrolledChild, "1")
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.EnrolledChild, "2")
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                                                                                </div>*@<div class="col-lg-6">
                                                                        <div class="form-group">
                                                                            <label for="email">Primary Insurance <sup>*</sup></label>
                                                                            @{
                                                                                List<SelectListItem> PregnantmotherprimaryinsuranceList1 = new List<SelectListItem>();
                                                                                PregnantmotherprimaryinsuranceList1.Add(new SelectListItem() { Text = " Medicaid/Chip", Value = "1" });
                                                                                PregnantmotherprimaryinsuranceList1.Add(new SelectListItem() { Text = "No Insurance", Value = "2" });
                                                                                PregnantmotherprimaryinsuranceList1.Add(new SelectListItem() { Text = "Other Insurance", Value = "3" });
                                                                                PregnantmotherprimaryinsuranceList1.Add(new SelectListItem() { Text = "Private Health Insurance", Value = "4" });
                                                                                PregnantmotherprimaryinsuranceList1.Add(new SelectListItem() { Text = "State Funded", Value = "5" });
                                                                            }
                                                                            @Html.DropDownListFor(m => m.Pregnantmotherprimaryinsurance1, new SelectList(PregnantmotherprimaryinsuranceList1, "Value", "Text", Model.Pregnantmotherprimaryinsurance1), new { @class = "form-control", tabIndex = "24" })

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-6 ">
                                                                        <div class="form-group">
                                                                            <label for="email">Insurance Notes </label>
                                                                            @Html.TextBoxFor(m => m.Pregnantmotherprimaryinsurancenotes1, new { placeholder = "Insurance Notes", maxlength = "20", @class = "form-control", tabIndex = "25" })
                                                                        </div>
                                                                    </div>


                                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                                        <div class="form-group">
                                                                            <label>Trimester Enrolled <sup>*</sup></label>

                                                                            @{
                                                                                List<SelectListItem> TrimesterEnrolledList1 = new List<SelectListItem>();
                                                                                TrimesterEnrolledList1.Add(new SelectListItem() { Text = "1st", Value = "1" });
                                                                                TrimesterEnrolledList1.Add(new SelectListItem() { Text = "2nd", Value = "2" });
                                                                                TrimesterEnrolledList1.Add(new SelectListItem() { Text = "3rd", Value = "3" });
                                                                            }
                                                                            @Html.DropDownListFor(m => m.TrimesterEnrolled1, new SelectList(TrimesterEnrolledList1, "Value", "Text", Model.TrimesterEnrolled1), new { @class = "form-control" })

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                                        <div class="form-group">
                                                                            <label>Medical Home <sup>*</sup></label>
                                                                            @{
                                                                                List<SelectListItem> MedicalhomePreg2List = new List<SelectListItem>();
                                                                                MedicalhomePreg2List.Add(new SelectListItem() { Text = "Does not have a medical home", Value = "1" });
                                                                                MedicalhomePreg2List.Add(new SelectListItem() { Text = "Ongoing Source of continuous, accessible health care", Value = "2" });
                                                                                MedicalhomePreg2List.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });

                                                                                if (Model.AvailableProgram != null)
                                                                                {
                                                                                    foreach (var item in Model.AvailableProgram)
                                                                                    {
                                                                                        if (item.ReferenceId == "3")
                                                                                        {
                                                                                            MedicalhomePreg2List.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                                                                        }
                                                                                    }
                                                                                }

                                                                            }
                                                                            @Html.DropDownListFor(m => m.MedicalhomePreg2, new SelectList(MedicalhomePreg1List, "Value", "Text", Model.MedicalhomePreg2), new { @class = "form-control", @onchange = "AddDoctorP2();" })
                                                                        </div>
                                                                    </div>
                                                                    <div class="test">
                                                                        <div id="addp2" style="display:none;">
                                                                            <div class="col-lg-6">
                                                                            </div>
                                                                            <div class="col-lg-6">
                                                                                <div class="form-group">
                                                                                    @*<label>Doctor Information<sup>*</sup></label>*@
                                                                                    <label>Medical Center<sup>*</sup></label>
                                                                                    @Html.TextBoxFor(m => m.CDoctorP2, new { placeholder = "Medical Center", maxlength = "30", @class = "form-control", @style = "width:50%;" })
                                                                                    <input type="hidden" name="Doctor" id="Doctor" value="0" />
                                                                                    <a href="#" id="AddDoctor" title="Add Community Resource" data-toggle="modal" onclick="SetResource(4,'doctorpm2');" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="clearfix"></div>
                                                                    </div>

                                                                    <div class=" col-md-11 col-sm-12 mb10" style="margin-top:1%;">
                                                                        <div class="row">
                                                                            <div class="col-sm-7" style=" margin-bottom:10px;">
                                                                                Has the pregnant mom received the following services?
                                                                            </div>
                                                                            <div class="col-sm-5" style=" margin-bottom: 10px;">
                                                                                <a style="margin-left:3%;" title="Add Conditions" href="#" data-toggle="modal" data-target="#PMS1"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="PMServiceText1">

                                                                                @if (Model != null && Model.AvailableService != null && Model.AvailableService.Count > 0)
                                                                                {
                                                                                    foreach (var item1 in Model.AvailableService)
                                                                                    {
                                                                                        if (Model._PMservices != null && Model._PMservices.Count > 0)
                                                                                        {
                                                                                            foreach (var item in Model._PMservices.Where(P => P.Parentid == "1"))
                                                                                            {
                                                                                                if (item.MasterId == item1.Id.ToString())
                                                                                                {
                                                                                                    <div style="padding-left:24px; line-height:normal;color:#295b8f;">@item1.Name </div>
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom:10px;">
                                                                                How many times has the mother visited the doctor during this pregnancy?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @Html.TextBoxFor(m => m.PMVisitDoc1, new { placeholder = "Doctor Visit", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                Did the mother have any of the following problems during this pregnancy?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem1, 1, new { id = "PMProblem1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem1, 2, new { id = "PMProblem2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-4">
                                                                                    @Html.RadioButtonFor(m => m.PMProblem1, 3, new { id = "PMProblem3" })
                                                                                    <span>Unknown</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace" style="margin-top:2%;">
                                                                        <div class="row">
                                                                            <div class="col-sm-7" style=" margin-bottom: 10px;">
                                                                                What problems did mother have?
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <a style="margin-left:3%;" title="Add Conditions" href="#" data-toggle="modal" data-target="#PMPrblms1"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                        </div>
                                                                        <div id="PMPrblmText1">
                                                                            @if (Model != null && Model.AvailablePrblms != null && Model.AvailablePrblms.Count > 0)
                                                                            {
                                                                                foreach (var item1 in Model.AvailablePrblms)
                                                                                {
                                                                                    if (Model._PMproblem != null && Model._PMproblem.Count > 0)
                                                                                    {
                                                                                        foreach (var item in Model._PMproblem.Where(P => P.Parentid == "1"))
                                                                                        {
                                                                                            if (item.MasterId == item1.Id.ToString())
                                                                                            {
                                                                                                <div style="padding-left:24px; line-height:normal;color:#295b8f;">@item1.Name </div>
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                If pregnant mom had other issues, please explain:
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMOtherIssues1, new { placeholder = "Other issues", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 ">
                                                                                Did pregnant mom:
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> PMConditions1 = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.PMConditions)
                                                                                    {
                                                                                        PMConditions1.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.PMConditions1, new SelectList(PMConditions1, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                If any of the previous question are selected, please provide an explanation
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMCondtnDesc1, new { placeholder = "Description", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">

                                                                                Is this pregnancy considered medically high risk by a physician or health care provider?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRisk1, 1, new { id = "PMRisk1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRisk1, 2, new { id = "PMRisk2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                Has this woman received a professional dental exam and/or dental treatment in the last 12 months?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam1, 1, new { id = "PMDentalExam1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam1, 2, new { id = "PMDentalExam2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMDentalExam1, 3, new { id = "PMDentalExam3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                Date of the most recent professional dental exam and/or treatment
                                                                            </div>
                                                                            <div class="col-md-12">
                                                                                @Html.TextBoxFor(m => m.PMDentalExamDate1, new { placeholder = "MM/DD/YYYY", maxlength = "30", @class = "form-control", @style = "width: 43%!important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style=" margin-bottom: 10px;">
                                                                                Did pregnant mom need a dental treatment?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental1, 1, new { id = "PMNeedDental1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental1, 2, new { id = "PMNeedDental2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMNeedDental1, 3, new { id = "PMNeedDental3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-11 col-sm-12 mb10 adddivspace">
                                                                        <div class="row">
                                                                            <div class="col-sm-12 " style="margin-bottom: 10px;">
                                                                                Did pregnant mom receive dental treatment?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental1, 1, new { id = "PMRecieveDental1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental1, 2, new { id = "PMRecieveDental2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.PMRecieveDental1, 3, new { id = "PMRecieveDental3" })
                                                                                    <span>N/A</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>



                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Currently Working <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1CurrentlyWorking, 1, new { id = "P1CurrentlyWorking", onchange = "CheckParent2income(this);" })
                                                                        <span>Yes</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1CurrentlyWorking, 2, new { id = "P1CurrentlyWorking1", onchange = "CheckParent2income(this);" })
                                                                        <span>No </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Currently enrolled in job training/school? <sup>*</sup></label>
                                                                <div class="cont-sz">
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1Enrollment, 1, new { id = "P1Enrollment" })
                                                                        <span>Yes</span>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-4">
                                                                        @Html.RadioButtonFor(m => m.P1Enrollment, 2, new { id = "P1Enrollment1" })
                                                                        <span>No </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Member of Policy Council?<sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PPolicyCouncil, 1, new { id = "PPolicyCouncil" })
                                                                            <span>Yes</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.PPolicyCouncil, 2, new { id = "PPolicyCouncil1" })
                                                                            <span>No </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>*@



                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Profile Picture </label>
                                                                @Html.TextBoxFor(m => m.P1Avatar, new { id = "P1Avatar", Name = "P1Avatar", type = "file", @accept = "image/*", @capture = "camera", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                <div class="img-iconavt">
                                                                    <img alt="" id="imgAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.P1AvatarUrl)' style="border-style:none;" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                        </div>
                                                        <div class="col-sm-12">
                                                            <span>Add Contact No</span>
                                                            <a href="javascript:void(0)" title="Add Contact No" onclick="Addphone1();"><i class="fa fa-plus-square"></i></a>
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            <a href="javascript:void(0)" data-toggle="modal" data-target="#Myincomecalculator1">Calculate Income <i class="fa fa-calculator"></i></a>
                                                            <span style="margin-left:6%;" id="Span1P2"></span>
                                                        </div>
                                                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <button id="btnremoveParent2" accesskey="Parent2" type="button" onclick="deleteParent(this);" class="my-btn" style=" display:none;width:43% !important;">Delete Parent/Guardian</button>
                                                                </div>
                                                            </div>*@
                                                        <br /><br />
                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main table-main">
                                                            <div class="table-responsive">
                                                                <table class="table table_size" id="gridphone1">
                                                                    <thead style="cursor:pointer;">
                                                                        <tr>
                                                                            <th id="thIN">Phone Type</th>
                                                                            <th id="thIN">Phone No</th>
                                                                            <th id="thIN">Is Primary No</th>
                                                                            <th id="thnt">Notes</th>
                                                                            <th id="thCust">SMS </th>
                                                                            <th id="thCust">Action </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        @if (Model != null && Model.phoneListParent1 != null && Model.phoneListParent1.Count > 0)
                                                                        {
                                                                            var round1 = 0;
                                                                            foreach (var item in Model.phoneListParent1)
                                                                            {
                                                                                var PhoneTypeP = "ParentPhoneNos1[" + round1 + "].PhoneTypeP1";
                                                                                var phonenoP = "ParentPhoneNos1[" + round1 + "].phonenoP1";
                                                                                var StateP = "ParentPhoneNos1[" + round1 + "].StateP1";
                                                                                var notesP = "ParentPhoneNos1[" + round1 + "].notesP1";
                                                                                var SmsP = "ParentPhoneNos1[" + round1 + "].SmsP1";
                                                                                var Phoneid = "ParentPhoneNos1[" + round1 + "].PPhoneId1";
                                                                                <tr>
                                                                                    <td>
                                                                                        <select class="form-control" style="width:100%;" name="@PhoneTypeP" onchange="addcontact(this);">
                                                                                            <option @if (@item.PhoneTypeP1 == "1") { <text> selected="selected" </text>                    } value="1">Home</option>
                                                                                            <option @if (@item.PhoneTypeP1 == "2") { <text> selected="selected" </text>                    } value="2">Mobile</option>
                                                                                            <option @if (@item.PhoneTypeP1 == "3") { <text> selected="selected" </text>                    } value="3">Work</option>
                                                                                        </select>
                                                                                        <input type="hidden" value="@item.PhoneTypeP1" />
                                                                                    </td>
                                                                                    <td><input name="@phonenoP" class="form-control" type="text" value="@item.phonenoP1"></td>
                                                                                    <td><input value="true" onchange="uncheckParent1other(this);" name="@StateP" type="checkbox" data-val="true" @if (@item.StateP1) { <text> checked="checked" </text>          } /></td>
                                                                                    <td><input data-val="true" class="form-control" maxlength="100" type="text" name="@notesP" value="@item.notesP1"></td>
                                                                                    <td><input style="width:50%;" type="checkbox" name="@SmsP" value="true" @if (@item.PhoneTypeP1 == "1" || @item.PhoneTypeP1 == "3") { <text> disabled="disabled" </text>           } @if (@item.SmsP1) { <text> checked="checked" </text>           } /></td>
                                                                                    <td><input type="hidden" name="@Phoneid" value="@item.PPhoneId1" /> <a href="javascript:void(0)" onclick="RemovePhone1(this);" accesskey="@item.PPhoneId1" style=" text-decoration:underline;">Delete</a></td>
                                                                                </tr>
                                                                                round1++;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <select class="form-control" style="width:100%;" name="ParentPhoneNos1[0].PhoneTypeP1" onchange="addcontact(this);">
                                                                                        <option value="1">Home</option>
                                                                                        <option value="2">Mobile</option>
                                                                                        <option value="3">Work</option>
                                                                                    </select>
                                                                                    <input type="hidden" value="0" />
                                                                                </td>
                                                                                <td><input class="form-control" name="ParentPhoneNos1[0].phonenoP1" type="text"></td>
                                                                                <td><input type="checkbox" onchange="uncheckParent1other(this);" value="true" name="ParentPhoneNos1[0].StateP1" data-val="true" /></td>
                                                                                <td><input class="form-control" type="text" id="P1notes" data-val="true" name="ParentPhoneNos1[0].notesP1" maxlength="100"></td>
                                                                                <td><input type="checkbox" disabled="disabled" style="width:50%;" id="P1Sms" name="ParentPhoneNos1[0].SmsP1" value="true" /></td>
                                                                                <td><a href="javascript:void(0)" onclick="RemovePhone1(this);" style=" text-decoration:underline;">Delete</a></td>
                                                                            </tr>

                                                                        }
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            <button id="btnParentExit" class="my-btn" type="button" tabindex="22">Previous</button>
                                            <button type="button" id="btnsubmitParent" value="addparentinfo" name="Command" class="my-btn" onclick="return isValidParentInfo();">Next</button>

                                            <input type="hidden" id="ParentID" name="ParentID" value="@Model.ParentID" />
                                            <input type="hidden" id="ParentID1" name="ParentID1" value="@Model.ParentID1" />
                                            <input type="hidden" id="P1Doctor" name="P1Doctor" value="@Model.P1Doctor" />
                                            <input type="hidden" id="P2Doctor" name="P2Doctor" value="@Model.P2Doctor" />
                                            @Html.HiddenFor(m => m.PImagejson)
                                            @Html.HiddenFor(m => m.PFileName)
                                            @Html.HiddenFor(m => m.PFileExtension)
                                            @Html.HiddenFor(m => m.P1Imagejson)
                                            @Html.HiddenFor(m => m.P1FileName)
                                            @Html.HiddenFor(m => m.P1FileExtension)
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row qualifierdiv">
                                    <div class="modal fade scroll-modal" id="PMS" role="dialog">
                                        <div class="modal-dialog ">
                                            <!-- Modal content-->
                                            <div class="modal-content">
                                                <div class="modal-header">

                                                    <h3> PM Services<span class="extra-title muted"></span></h3>
                                                    <button onclick="PMServiceConditions();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>

                                                </div>
                                                <div class="control-group">
                                                    <div class="">
                                                        <div class="row">
                                                            <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                        Has the pregnant mom received the following services?  <sup>*</sup>
                                                                    </div>
                                                                    <br />
                                                                    @*
                                                                        02082016
                                                                    *@
                                                                    <div class="col-md-6 input_wd scroll-none adddvispace" id="PMChecklist" style="width:183%;">
                                                                        @*@if (Model.AvailableService != null)
                                                                            {
                                                                                @Html.CheckBoxListFor(m => m.PostedPostedService.PMServiceID,
                                                                                                  m => m.AvailableService, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                            }*@

                                                                        @if (Model != null && Model.AvailableService != null && Model.AvailableService.Count > 0)
                                                                        {

                                                                            foreach (var item1 in Model.AvailableService)
                                                                            {

                                                                                int i = 0;
                                                                                if (Model._PMservices != null && Model._PMservices.Count > 0)
                                                                                {
                                                                                    foreach (var item in Model._PMservices.Where(P => P.Parentid == "0"))
                                                                                    {

                                                                                        if (item.MasterId == item1.Id.ToString())
                                                                                        {
                                                                                            i = 1;
                                                                                            <input type="checkbox" checked="checked" value="@item1.Id" name="PostedPostedService.PMServiceID" />
                                                                                            <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                            <br />
                                                                                        }
                                                                                    }
                                                                                    if (i == 0)
                                                                                    {
                                                                                        <input type="checkbox" value="@item1.Id" name="PostedPostedService.PMServiceID" />
                                                                                        <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                        <br />
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" value="@item1.Id" name="PostedPostedService.PMServiceID" />
                                                                                    <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                    <br />
                                                                                }
                                                                            }

                                                                        }




                                                                    </div>

                                                                </div>
                                                            </div>

                                                            @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                    <div class="form-group">
                                                                        <label for="email"></label>
                                                                        &nbsp;
                                                                        <button onclick="PMServiceConditions();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                    </div>
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                </div>



                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row qualifierdiv">
                                    <div class="modal fade scroll-modal" id="PMPrblms" role="dialog">
                                        @*scroll-modal*@
                                        <div class="modal-dialog ">
                                            @*income-popup width-auto*@
                                            <!-- Modal content-->
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h3> PM Problems<span class="extra-title muted"></span></h3>
                                                    <button onclick="PMPrblmConditions();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                </div>
                                                <div class="control-group">
                                                    @*add-useragform*@
                                                    <div class="">
                                                        @*col-sm-12*@
                                                        <div class="row">
                                                            @*<div class="row qualifierdiv">*@
                                                            <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                @*col-sm-6*@
                                                                <div class="form-group">

                                                                    <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                        What problems did mother have?
                                                                    </div>
                                                                    <br />
                                                                    <div class="col-md-6 input_wd scroll-none adddvispace" id="PMPrblmChecklist" style="width:119%;">
                                                                        @*02082016*@
                                                                        @*@if (Model.AvailablePrblms != null)
                                                                            {
                                                                                @Html.CheckBoxListFor(m => m.PostedPostedPrblms.PMPrblmID,
                                                                                                  m => m.AvailablePrblms, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                            }*@

                                                                        @if (Model != null && Model.AvailablePrblms != null && Model.AvailablePrblms.Count > 0)
                                                                        {

                                                                            foreach (var item1 in Model.AvailablePrblms)
                                                                            {

                                                                                int i = 0;
                                                                                if (Model._PMproblem != null && Model._PMproblem.Count > 0)
                                                                                {
                                                                                    foreach (var item in Model._PMproblem.Where(P => P.Parentid == "0"))
                                                                                    {

                                                                                        if (item.MasterId == item1.Id.ToString())
                                                                                        {
                                                                                            i = 1;
                                                                                            <input type="checkbox" checked="checked" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID" />
                                                                                            <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                            <br />
                                                                                        }
                                                                                    }
                                                                                    if (i == 0)
                                                                                    {
                                                                                        <input type="checkbox" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID" />
                                                                                        <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                        <br />
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID" />
                                                                                    <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                    <br />
                                                                                }
                                                                            }

                                                                        }



                                                                    </div>
                                                                </div>
                                                            </div>

                                                            @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                    <div class="form-group">
                                                                        <label for="email"></label>
                                                                        &nbsp;
                                                                        <button onclick="PMPrblmConditions();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                    </div>
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                </div>



                                            </div>
                                        </div>
                                    </div>
                                </div>





                                <div class="row qualifierdiv">
                                    <div class="modal fade scroll-modal" id="PMS1" role="dialog">
                                        <div class="modal-dialog ">
                                            <!-- Modal content-->
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h3> PM Services<span class="extra-title muted"></span></h3>
                                                    <button onclick="PMServiceConditions1();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                </div>
                                                <div class="control-group">
                                                    <div class="">
                                                        <div class="row">
                                                            <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                        Has the pregnant mom received the following services?  <sup>*</sup>
                                                                    </div>
                                                                    <br />
                                                                    <div class="col-md-6 input_wd scroll-none adddvispace" id="PMChecklist1" style="width:183%;">
                                                                        @*@if (Model.AvailableService != null)
                                                                            {
                                                                                @Html.CheckBoxListFor(m => m.PostedPostedService.PMServiceID1,
                                                                                                  m => m.AvailableService, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                            }*@

                                                                        @if (Model != null && Model.AvailableService != null && Model.AvailableService.Count > 0)
                                                                        {

                                                                            foreach (var item1 in Model.AvailableService)
                                                                            {

                                                                                int i = 0;
                                                                                if (Model._PMservices != null && Model._PMservices.Count > 0)
                                                                                {
                                                                                    foreach (var item in Model._PMservices.Where(P => P.Parentid == "1"))
                                                                                    {

                                                                                        if (item.MasterId == item1.Id.ToString())
                                                                                        {
                                                                                            i = 1;
                                                                                            <input type="checkbox" checked="checked" value="@item1.Id" name="PostedPostedService.PMServiceID1" />
                                                                                            <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                            <br />
                                                                                        }
                                                                                    }
                                                                                    if (i == 0)
                                                                                    {
                                                                                        <input type="checkbox" value="@item1.Id" name="PostedPostedService.PMServiceID1" />
                                                                                        <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                        <br />
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" value="@item1.Id" name="PostedPostedService.PMServiceID1" />
                                                                                    <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                    <br />
                                                                                }
                                                                            }

                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                    <div class="form-group">
                                                                        <label for="email"></label>
                                                                        &nbsp;
                                                                        <button onclick="PMServiceConditions1();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                    </div>
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row qualifierdiv">
                                    <div class="modal fade scroll-modal" id="PMPrblms1" role="dialog">
                                        <div class="modal-dialog ">
                                            <!-- Modal content-->
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h3> PM Problems<span class="extra-title muted"></span></h3>
                                                    <button onclick="PMPrblmConditions1();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                </div>
                                                <div class="control-group">
                                                    <div class="">
                                                        <div class="row">
                                                            <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                        What problems did mother have?
                                                                    </div>
                                                                    <br />
                                                                    <div class="col-md-6 input_wd scroll-none adddvispace" id="PMPrblmChecklist1" style="width:119%;">
                                                                        @*@if (Model.AvailablePrblms != null)
                                                                            {
                                                                                @Html.CheckBoxListFor(m => m.PostedPostedPrblms.PMPrblmID1,
                                                                                                  m => m.AvailablePrblms, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                            }*@
                                                                        @if (Model != null && Model.AvailablePrblms != null && Model.AvailablePrblms.Count > 0)
                                                                        {

                                                                            foreach (var item1 in Model.AvailablePrblms)
                                                                            {

                                                                                int i = 0;
                                                                                if (Model._PMproblem != null && Model._PMproblem.Count > 0)
                                                                                {
                                                                                    foreach (var item in Model._PMproblem.Where(P => P.Parentid == "1"))
                                                                                    {

                                                                                        if (item.MasterId == item1.Id.ToString())
                                                                                        {
                                                                                            i = 1;
                                                                                            <input type="checkbox" checked="checked" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID1" />
                                                                                            <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                            <br />
                                                                                        }
                                                                                    }
                                                                                    if (i == 0)
                                                                                    {
                                                                                        <input type="checkbox" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID1" />
                                                                                        <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                        <br />
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" value="@item1.Id" name="PostedPostedPrblms.PMPrblmID1" />
                                                                                    <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                    <br />
                                                                                }
                                                                            }

                                                                        }

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                    <div class="form-group">
                                                                        <label for="email"></label>
                                                                        &nbsp;
                                                                        <button onclick="PMPrblmConditions1();" data-dismiss="modal" name="Creates" style="margin-top:-1px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                    </div>
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>



















                            </div>
                        </div>
                        <div class="tab-pane fade" id="ChildRecord">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                    <div class="col-md-12">
                                        <div class="panel panel-primary panel3">
                                            <div class="panel-heading panel-heading3">
                                                <h3 id="childnameheading" class="panel-title"><a style="cursor:pointer;" id="Clicknamechild" onclick="clickchild();">Add New Child <i class="fa fa-plus-square"></i></a></h3>
                                                <span> <a id="btnremovechild" class="deletechild" onclick="Clearchild(this);">Discard Changes</a></span>
                                                <span id="Childpanelid" class="pull-right clickable3 panel-collapsed"><i class="glyphicon glyphicon-chevron-down"></i></span>
                                            </div>
                                            <div class="panel-body panel-body3" style="display:none;">
                                                <div class="add-useragform add-useragform2 add-useragform2_sz ">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>First Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Cfirstname, new { placeholder = "First Name", id = "Cfirstname", maxlength = "20", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Middle Name </label>
                                                                    @Html.TextBoxFor(m => m.Cmiddlename, new { placeholder = "Middle Name", id = "Cmiddlename", maxlength = "20", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Last Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Clastname, new { placeholder = "Last Name", id = "Clastname", maxlength = "20", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <div class="">
                                                                        <label>Program Type <sup>*</sup></label>
                                                                    </div>
                                                                    <div class="cont-sz program_type" id="customChecklist">
                                                                        <div class="">



                                                                            @if (Model != null && Model.AvailableProgram != null && Model.AvailableProgram.Count > 0)
                                                                            {

                                                                                foreach (var item1 in Model.AvailableProgram)
                                                                                {
                                                                                    <div class="centerinhorizontal1">
                                                                                        <input type="checkbox" name="PostedPostedPrograms.ProgramID" id="@item1.Id" onclick="setDisability();" value="@item1.Id" accesskey="@item1.ReferenceId" />
                                                                                        <label class="chk_1" for="chk_1">@item1.Name </label>
                                                                                    </div>


                                                                                }

                                                                                @Html.HiddenFor(m => m.IsFutureApplication, new { @class = "hidden" })




                                                                            }





                                                                            @*@if (Model.AvailableProgram != null)
                                                                                  {
                                                                                  @Html.CheckBoxListFor(m => m.PostedPostedPrograms.ProgramID,
                                                                                m => m.AvailableProgram, m => m.Id, m => m.Name, m => m.IsSelected)
                                                                                  }*@










                                                                        </div>
                                                                    </div>
                                                                    @*<div id="HSEHS">
                                                                            @if (Model.AvailableProgram != null)
                                                                            {
                                                                                foreach (var item in Model.AvailableProgram)
                                                                                {
                                                                            <input type="hidden" value="@item.Id" referencid="@item.ReferenceId" />
                                                                                }
                                                                            }
                                                                        </div>*@
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>DOB <sup>*</sup></label>
                                                                    <div class="date custom-time">
                                                                        @Html.TextBoxFor(m => m.CDOB, new { placeholder = "MM/DD/YYYY", id = "CDOB", Name = "CDOB", maxlength = "50", @class = "form-control", @onblur = "return validatedateChild(this);" })

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>DOB Verified by </label>
                                                                    <div class="date custom-time">
                                                                        @{
                                                                            List<SelectListItem> CDOBList = new List<SelectListItem>();
                                                                            CDOBList.Add(new SelectListItem() { Text = "Baptism Certificate", Value = "1" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Birth Certificate", Value = "2" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Hospital Record", Value = "3" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Immigration Form I-94", Value = "4" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Immunization Record", Value = "5" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Medical Card", Value = "6" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "SS w/ Medical Card", Value = "7" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Tribal Verification", Value = "8" });
                                                                            CDOBList.Add(new SelectListItem() { Text = "Other", Value = "9" });
                                                                        }
                                                                        @Html.DropDownListFor(m => m.DOBverifiedBy, new SelectList(CDOBList, "Value", "Text", Model.DOBverifiedBy), new { id = "DOBverifiedBy", Name = "DOBverifiedBy", @class = "form-control" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>SSN </label>
                                                                    <div class="date custom-time">
                                                                        @Html.TextBoxFor(m => m.CSSN, new { placeholder = "SSN", id = "CSSN", Name = "CSSN", @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                            </div>




                                                            <!-- /.form-group -->
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Gender <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.CGender, "2", new { id = "CGenderfemale" })
                                                                            <span>Female </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.CGender, "1", new { id = "CGendermale" })
                                                                            <span>Male</span>
                                                                        </div>

                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.CGender, "3", new { id = "CGenderother" })
                                                                            <span>Other </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            @*<div class="col-sm-12">*@
                                                            <div class="col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Race <sup>*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> race = new List<SelectListItem>();
                                                                        foreach (var item in ViewBag.Race)
                                                                        {
                                                                            race.Add(new SelectListItem() { Text = item.Name, Value = item.RaceId });
                                                                        }

                                                                        @Html.DropDownListFor(m => m.CRace, new SelectList(race, "Value", "Text"), new { @class = "form-control", onchange = "bindsubcategory();" })
                                                                    }
                                                                </div>
                                                            </div>
                                                            @*<div class="col-sm-6 adddivspace" id="divRaceother" style="display:none;">
                                                                    <div class="form-group">
                                                                        <div class="col-xs-8">
                                                                            <label for="email">Other Race</label>
                                                                        </div>
                                                                        <div class="col-xs-9">
                                                                            @Html.TextBoxFor(m => m.Raceother, new { placeholder = "Other Race", maxlength = "20", @class = "form-control", tabIndex = "25" })
                                                                        </div>
                                                                    </div>
                                                                </div>*@
                                                            @*</div>*@


                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Ethnicity <sup>*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> EthnicityList = new List<SelectListItem>();
                                                                        EthnicityList.Add(new SelectListItem() { Text = "Hispanic or Latino Origin", Value = "1" });
                                                                        EthnicityList.Add(new SelectListItem() { Text = "Non-Hispanic or Non-Latino Origin", Value = "2" });
                                                                    }
                                                                    @Html.DropDownListFor(m => m.CEthnicity, new SelectList(EthnicityList, "Value", "Text", Model.CEthnicity), new { id = "CEthnicity", Name = "CEthnicity", @class = "form-control" })
                                                                </div>
                                                                @*@Html.HiddenFor(m => m.CAvatarUrl, new { id = "CAvatarUrl", Name = "CAvatarUrl" })*@
                                                            </div>

                                                            <div class="col-sm-12">
                                                                <div class="row">
                                                                    <div class="col-sm-6" id="divRaceother" style="display:none;">
                                                                        <div class="form-group">
                                                                            <label for="email">Other Race</label>
                                                                            @Html.TextBoxFor(m => m.Raceother, new { placeholder = "Other Race", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Cultural Category </label>
                                                                    @{
                                                                        List<SelectListItem> racecategory = new List<SelectListItem>();
                                                                        @Html.DropDownListFor(m => m.CRaceSubCategory, new SelectList(racecategory, "Value", "Text"), new { @class = "form-control" })
                                                                    }
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>School District <sup>*</sup></label>
                                                                    @{

                                                                        List<SelectListItem> SchoolDistrictList = new List<SelectListItem>();
                                                                        foreach (var item in Model.SchoolList)
                                                                        {
                                                                            SchoolDistrictList.Add(new SelectListItem() { Text = item.Acronym, Value = item.SchoolDistrictID.ToString() });


                                                                        }
                                                                    }
                                                                    @Html.DropDownListFor(m => m.SchoolDistrict, new SelectList(SchoolDistrictList, "Value", "Text", Model.SchoolDistrict), new { @class = "form-control" })
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Medical Home <sup>*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> MedicalList = new List<SelectListItem>();
                                                                        MedicalList.Add(new SelectListItem() { Text = "Does not have a medical home", Value = "1" });
                                                                        MedicalList.Add(new SelectListItem() { Text = "Ongoing Source of continuous, accessible health care", Value = "2" });
                                                                        MedicalList.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });
                                                                        if (Model.AvailableProgram != null)
                                                                        {
                                                                            foreach (var item in Model.AvailableProgram)
                                                                            {
                                                                                if (item.ReferenceId == "3")
                                                                                {
                                                                                    MedicalList.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    @Html.DropDownListFor(m => m.Medicalhome, new SelectList(MedicalList, "Value", "Text", Model.Medicalhome), new { id = "Medicalhome", Name = "Medicalhome", @class = "form-control", @onchange = "AddDoctor();" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Dental Home <sup>*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> DentalList = new List<SelectListItem>();
                                                                        DentalList.Add(new SelectListItem() { Text = "Does not have a Dental Home", Value = "1" });
                                                                        DentalList.Add(new SelectListItem() { Text = "Has access to continous, accessible dental care provided by a dentist", Value = "2" });
                                                                        DentalList.Add(new SelectListItem() { Text = "Medical Care through the Indian Health Service", Value = "3" });
                                                                        if (Model.AvailableProgram != null)
                                                                        {
                                                                            foreach (var item in Model.AvailableProgram)
                                                                            {
                                                                                if (item.ReferenceId == "3")
                                                                                {
                                                                                    DentalList.Add(new SelectListItem() { Text = "Medical care through Migrant Community Service", Value = "4" });
                                                                                }
                                                                            }

                                                                        }

                                                                    }
                                                                    @Html.DropDownListFor(m => m.CDentalhome, new SelectList(DentalList, "Value", "Text", Model.CDentalhome), new { id = "CDentalhome", Name = "CDentalhome", @class = "form-control", @onchange = "AddDentist();" })
                                                                </div>
                                                            </div>



                                                            <div class="test">
                                                                <div id="addrowC1" style="display:none;">
                                                                    <div class="col-lg-6">
                                                                        <div class="form-group">
                                                                            <label>Medical Center<sup>*</sup></label>
                                                                            @*<label>Doctor Information<sup>*</sup></label>*@
                                                                            @Html.TextBoxFor(m => m.CDoctor, new { placeholder = "Medical Center", id = "CDoctor", name = "CDoctor", maxlength = "50", @class = "form-control", @style = "width:50%;" })
                                                                            <input type="hidden" name="Doctor" id="Doctor" value="0" />
                                                                            <a href="#" id="AddDoctor" title="Add Community Resource" onclick="SetResource(1,'doctor');" data-toggle="modal" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div id="addrowDentist" style="display:none;">
                                                                    <div class="col-lg-6 dnl-home">
                                                                        <div class="form-group">
                                                                            @*<label for="exampleInputFile">Dentist Information<sup>*</sup></label>*@
                                                                            <label for="exampleInputFile">Dental Center<sup>*</sup></label>
                                                                            @Html.TextBoxFor(m => m.CDentist, new { placeholder = "Dental Center", id = "CDentist", name = "CDentist", maxlength = "50", @class = "form-control", @style = "width:50%;" })
                                                                            <input type="hidden" name="Dentist" id="Dentist" value="0" />
                                                                            <a href="#" id="AddDentist" title="Add Community Resource" onclick="SetResource(2,'dentist');" data-toggle="modal" data-target="#myModalDoctor"><i style="margin:1%;" class="fa fa-plus-square"></i></a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="clearfix"></div>
                                                            </div>


                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label for="email">Primary Insurance <sup style="color:red;">*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> InsuranceList = new List<SelectListItem>();
                                                                        InsuranceList.Add(new SelectListItem() { Text = " Medicaid/Chip", Value = "1" });
                                                                        InsuranceList.Add(new SelectListItem() { Text = "No Insurance", Value = "2" });
                                                                        InsuranceList.Add(new SelectListItem() { Text = "Other Insurance", Value = "3" });
                                                                        InsuranceList.Add(new SelectListItem() { Text = "Private Health Insurance", Value = "4" });
                                                                        InsuranceList.Add(new SelectListItem() { Text = "State Funded", Value = "5" });
                                                                    }
                                                                    @Html.DropDownListFor(m => m.InsuranceOption, new SelectList(InsuranceList, "Value", "Text", Model.InsuranceOption), new { id = "InsuranceOption", Name = "InsuranceOption", @class = "form-control", @placeholder = "Select", tabIndex = "24" })

                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 ">
                                                                <div class="form-group">
                                                                    <label for="email">Insurance Notes </label>
                                                                    @Html.TextBoxFor(m => m.MedicalNote, new { placeholder = "Insurance Notes", id = "MedicalNote", name = "MedicalNote", maxlength = "100", @class = "form-control", tabIndex = "25" })
                                                                </div>
                                                            </div>




                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label>Is Foster Child? <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.IsFoster, 1, new { id = "IsFoster1", @onchange = "radiochange1();" })
                                                                            <span>Yes</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.IsFoster, 2, new { id = "IsFoster2", @onchange = "radiochange2();" })
                                                                            <span>No </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                @if (Model.IsFoster == 1)
                                                                {
                                                                    <div class="form-group FosterFormChoose">
                                                                        <label>DOB Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                        @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                        <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                                                            @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                                                            <label style="width:45px;">Paper</label>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="form-group hidden FosterFormChoose">
                                                                        <label>DOB Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                        @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                        <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                                                            @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                                                            <label style="width:45px;">Paper</label>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            </div>
                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label>Is child referred by a child welfare agency? <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.Inwalfareagency, 1, new { id = "Inwalfareagency1" })
                                                                            <span>Yes</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.Inwalfareagency, 2, new { id = "Inwalfareagency2" })
                                                                            <span>No </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    <div class="col-sm-6">
                                                                        <div class="form-group">
                                                                            <label>Is child a dual custody child? <sup>*</sup></label>
                                                                            <div class="cont-sz">
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.InDualcustody, 1, new { id = "InDualcustody1", onchange = "Custodychange();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.InDualcustody, 2, new { id = "InDualcustody2", onchange = "Custodychange1();" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-6">
                                                                                    <span id="Dualcustodyparent"></span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-6">
                                                                        <div class="form-group">
                                                                            <label>Suspected or document of disability? <sup>*</sup></label>
                                                                            <div class="cont-sz">
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.CParentdisable, 1, new { id = "CParentdisable1", onclick = "setDisability();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.CParentdisable, 2, new { id = "CParentdisable2", onclick = "setDisability();" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                            </div>
                                                                            <div class="cont-sz" id="disablity">
                                                                                <div class="col-xs-6 col-sm-4" id="forhs">
                                                                                    @* @Html.RadioButtonFor(m => m.IsIEP,0,new { onclick = "IEPorIFSP_Checked()", id = "IsIEP" })*@
                                                                                    @Html.CheckBox("IsIEP", true, new { @id = "IsIEP", onclick = "IEPorIFSP_Checked()" })

                                                                                    <span>IEP</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4" id="forehs">
                                                                                    @* @Html.RadioButtonFor(m => m.IsIFSP,0, new { onclick = "IEPorIFSP_Checked()", id = "IsIFSP" })*@
                                                                                    @Html.CheckBox("IsIFSP", true, new { @id = "IsIFSP", onclick = "IEPorIFSP_Checked()" })
                                                                                    <span>IFSP </span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4" id="forexpire">
                                                                                    @Html.CheckBox("IsExpired", true, new { @id = "IsExpired" })
                                                                                    <span>Expired </span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>


                                                                </div>
                                                            </div>


                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    <div class="col-sm-6">
                                                                        <div class="form-group">
                                                                            <label>Is in child care subsidy? <sup>*</sup></label>
                                                                            <div class="cont-sz">
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.InChildCareSubsidy, 1, new { id = "InChildCareSubsidy1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-3">
                                                                                    @Html.RadioButtonFor(m => m.InChildCareSubsidy, 2, new { id = "InChildCareSubsidy2" })
                                                                                    <span>No </span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-6">
                                                                                    <span id="InChildCareSubsidy"></span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>


                                                            <div class="row" style="display: none;  margin: 4px 3px 19px 3px; padding: 6px;" id="Dualcustody">
                                                                <fieldset style="border: 1px solid #295b8f; ">
                                                                    <legend class="legend1">Dual Custody</legend>
                                                                    <div class="col-md-12">

                                                                        <div class="col-lg-6">
                                                                            <div class="form-group">
                                                                                <label for="email">First Name <sup>*</sup></label>
                                                                                @Html.TextBoxFor(m => m.Parentfirstname, new { placeholder = "First Name", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 ">
                                                                            <div class="form-group">
                                                                                <label for="email">Last Name <sup>*</sup></label>
                                                                                @Html.TextBoxFor(m => m.ParentLastname, new { placeholder = "Last Name", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 ">
                                                                            <div class="form-group">
                                                                                <label for="email">Address <sup>*</sup></label>
                                                                                @Html.TextBoxFor(m => m.ParentStrretaddress, new { placeholder = "Address", maxlength = "50", @class = "form-control", tabIndex = "25" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 ">
                                                                            <div class="form-group">
                                                                                <label for="email">Zip Code <sup>*</sup></label>
                                                                                @*Changes on 6Feb2017*@
                                                                                @Html.TextBoxFor(m => m.Parentzipcode, new { placeholder = "Zip Code", onblur = "checkParentZipCode(this);", maxlength = "5", @class = "form-control", tabIndex = "25" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 ">
                                                                            <div class="form-group">
                                                                                <label for="email">City <sup>*</sup></label>

                                                                                @*Changes on 6Feb2017*@
                                                                                <select id="Parentcity" name="Parentcity" class="form-control" tabindex="6">

                                                                                    <option value="@Model.City">@Model.City</option>
                                                                                </select>

                                                                                @*@Html.TextBoxFor(m => m.Parentcity, new { placeholder = "City", maxlength = "100", onblur = "Changefirstchar(this);", @class = "form-control", tabIndex = "25" })*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 ">
                                                                            <div class="form-group">
                                                                                <label for="email">State <sup>*</sup></label>
                                                                                @*Changes on 6Feb2017*@
                                                                                @Html.TextBoxFor(m => m.Parentstate, new { placeholder = "State", maxlength = "100", @class = "form-control", tabIndex = "25", @readonly = "readonly" })
                                                                            </div>
                                                                        </div>



                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <div class="btnwrp_subcal">
                                                                            <button type="button" id="btndualsearch" name="Command" onclick="Searchparent();" class="my-btn">Search</button>
                                                                            <div class="col-xs-6 col-sm-6">
                                                                                <span id="Dualcustodyparent1"></span>
                                                                            </div>
                                                                            <div class="clear"></div>

                                                                        </div>
                                                                    </div>
                                                                </fieldset>
                                                            </div>
                                                            <div class="clear">

                                                            </div>
                                                            <div class="row">
                                                                <div class="col-lg-12" style="margin-top:10px;">
                                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                                        <div class="form-group">
                                                                            <label>Profile Picture</label>
                                                                            <div class="cont-sz">
                                                                                @Html.TextBoxFor(m => m.CAvatar, new { id = "CAvatar", Name = "CAvatar", type = "file", @accept = "image/*", @capture = "camera", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                                <div class="img-iconavt">
                                                                                    <img alt="" id="imgAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.CAvatarUrl)' style="border-style:none;" />
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    @if (Model.docstorage == 0)
                                                                    {
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>DOB Verification Form (pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                                @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                                <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                                                                    @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                                                                    <label style="width:45px;">Paper</label>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                    @if (Model.docstorage == 1)
                                                                    {
                                                                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <label>DOB Verfication Form <sup>*</sup>(pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                                @Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                                <div class="cont-sz" style="width: 85px; margin-left: 10px; float: right;display:none;">
                                                                                    @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                                                                    <label style="width:45px;">Paper</label>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                    @if (Model.docstorage == 2)
                                                                    {
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>DOB Verfication Form <sup>*</sup></label>
                                                                                @*@Html.TextBoxFor(m => m.FiledobRAvatar, new { id = "FiledobRAvatar", @accept = "image/*", @capture = "camera", Name = "FiledobRAvatar", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })*@
                                                                                <div class="cont-sz">
                                                                                    @Html.CheckBoxFor(m => m.DobverificationinPaper, new { @class = "minimal", tabIndex = "1", @onchange = "clearuploader();" })
                                                                                    <label style="width:45px;">Paper</label>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                            @*Changes*@
                                                            <div class="col-sm-6" id="ChildTransport" style="display:none;">
                                                                <div class="form-group">
                                                                    <label>Is Transportation Needed? <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.CTransportNeeded, true, new { id = "CTransportNeeded1" })
                                                                            <span>Yes</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.CTransportNeeded, false, new { id = "CTransportNeeded2" })
                                                                            <span>No </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            @*End*@
                                                            <div class="col-sm-12" style="margin-top:1%; margin-bottom:1%;">
                                                                <div class="col-sm-6">
                                                                    <a href="javascript:void(0)" onclick="Showhealth();">Immunization/Screening <i class="fa fa-arrow-right"></i></a>
                                                                </div>
                                                            </div>

                                                            <div class="row" style="display:none;margin: 4px 3px 19px 3px; padding: 6px;margin-top:2%;" id="Health">
                                                                <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                    <legend class="legend1"></legend>
                                                                    <div class="col-md-12">
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Immunization Status <sup>*</sup></label>
                                                                                @{
                                                                                    List<SelectListItem> ImmunizationServiceList = new List<SelectListItem>();
                                                                                    ImmunizationServiceList.Add(new SelectListItem() { Text = "Child is out of compliance regarding immunizations", Value = "1" });
                                                                                    ImmunizationServiceList.Add(new SelectListItem() { Text = "Exempt", Value = "2" });
                                                                                    ImmunizationServiceList.Add(new SelectListItem() { Text = "Received all immunizations possible at this time, but not all Immunizations appropriate for age", Value = "3" });
                                                                                    ImmunizationServiceList.Add(new SelectListItem() { Text = "Up-to-date on all immunizations appropriate for age", Value = "4" });
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ImmunizationService, new SelectList(ImmunizationServiceList, "Value", "Text", Model.ImmunizationService), new { id = "ImmunizationService", Name = "ImmunizationService", @class = "form-control", @style = "width:51% !important;" })
                                                                                <div class="cont-sz" style="width: 36px; margin-top:5px; float: right;">
                                                                                    <a href="javascript:void(0)" title="Click here to open child Immunization" data-toggle="modal" data-target="#MyImmunization"><i class="fa fa-arrow-up"></i></a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        @if (Model.docstorage == 0)
                                                                        {
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group">
                                                                                    <label>Immunization Document (pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                                    @Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                                    <div class="cont-sz" style="width: 85px; margin-top:5px; float: right;display:none;">
                                                                                        @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                                                        <label style="width:45px;">Paper</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                        @if (Model.docstorage == 1)
                                                                        {
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none">
                                                                                <div class="form-group">
                                                                                    <label>Immunization Document (pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                                    @Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                                    <div class="cont-sz" style="width: 85px; margin-top:5px; float: right;display:none;">
                                                                                        @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                                                        <label style="width:45px;">Paper</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                        @if (Model.docstorage == 2)
                                                                        {
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group">
                                                                                    <label>Immunization Document </label>
                                                                                    @*@Html.TextBoxFor(m => m.FileImmunization, new { id = "FileImmunization", @accept = "image/*", @capture = "camera", Name = "FileImmunization", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })*@
                                                                                    <div class="cont-sz">
                                                                                        @Html.CheckBoxFor(m => m.ImmunizationinPaper, new { @class = "minimal", tabIndex = "1" })
                                                                                        <label style="width:45px;">Paper</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>BMI Status</label>
                                                                                <input type="hidden" name="BMIStatus2" value="0" id="BMIStatus2" />
                                                                                @{
                                                                                    List<SelectListItem> BMIStatusList = new List<SelectListItem>();
                                                                                    BMIStatusList.Add(new SelectListItem() { Text = "Underweight (BMI Less than 5%)", Value = "1" });
                                                                                    BMIStatusList.Add(new SelectListItem() { Text = "Healthy Weight (BMI >= 5% and <=85%)", Value = "2" });
                                                                                    BMIStatusList.Add(new SelectListItem() { Text = "Overweight (BMI >= 85%)", Value = "3" });
                                                                                    BMIStatusList.Add(new SelectListItem() { Text = "Obese (BMI >= 95%)", Value = "4" });
                                                                                }
                                                                                @Html.DropDownListFor(m => m.BMIStatus, new SelectList(BMIStatusList, "Value", "Text", Model.BMIStatus), new { @onchange = "SetBmistatus(this);", @class = "form-control", @style = "width:51%;" })

                                                                                <div class="cont-sz" style="width: 36px; margin-top:5px; float: right;">
                                                                                    <a href="javascript:void(0)" title="Click here to determine child BMI Status" onclick="LoadBmiModal();"><i class="fa fa-arrow-up"></i></a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Is this child up-to-date on a schedule of age-appropriate health care? <sup>*</sup></label>
                                                                                <div class="cont-sz">
                                                                                    <div class="col-xs-6 col-sm-4">
                                                                                        @Html.RadioButtonFor(m => m.MedicalService, 1, new { id = "MedicalService1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-3">
                                                                                        @Html.RadioButtonFor(m => m.MedicalService, 2, new { id = "MedicalService2" })
                                                                                        <span>No </span>
                                                                                    </div>
                                                                                    <div class="col-sm-5" style="display:none;" id="Screening1">
                                                                                      @* <a href="javascript:void(0)" data-toggle="modal" data-target="#ApplicationScreening">Screening <i class="fa fa-arrow-up"></i></a>*@
                                                                                        
                                                                                        <a href="javascript:void(0)" id="getScreening" >Screening <i class="fa fa-arrow-up"></i></a>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                                                            <div class="form-group">
                                                                                <label>Authorization Release Form</label>
                                                                                @Html.TextBoxFor(m => m.Releaseform, new { @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInputpdf2(this)", @class = "form-control", @style = "width:44% !important;" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </fieldset>
                                                            </div>

                                                            <input id="_childprogrefid" name="_childprogrefid" type="hidden" value="0" />
                                                            <div class="col-sm-12" style="margin-top:1%; margin-bottom:1%;" id="hsProgram">
                                                                <div class="col-sm-6">
                                                                    <a href="javascript:void(0)" onclick="ShowhealthHistory();">Health History <i class="fa fa-arrow-right"></i></a>
                                                                </div>
                                                            </div>
                                                            <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal;" id="HSHealth">
                                                                <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                    <legend class="legend1"></legend>
                                                                    <div class="col-md-12">
                                                                        <div class="col-md-11 col-sm-12 mb10">
                                                                            <div class="form-group">
                                                                                <div class="col-sm-8" style="margin-bottom:5px;">Was the child born?</div>
                                                                                <div class="col-sm-12 cont-sz">
                                                                                    @*Added by Akansha on 13Dec2016*@
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.HsChildBorn, 3, new { id = "ChildBorn3" })
                                                                                        <span>Child was full term </span>
                                                                                    </div>
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.HsChildBorn, 1, new { id = "ChildBorn1" })
                                                                                        <span>More than three weeks early</span>
                                                                                    </div>
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.HsChildBorn, 2, new { id = "ChildBorn2" })
                                                                                        <span>More than three weeks late </span>
                                                                                    </div>
                                                                                    @*End*@
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9">
                                                                            <div class="row">
                                                                                <div class="col-md-12 mb10">
                                                                                    <div class="col-md-12">What was the child's birth weight? </div>
                                                                                    <div class="col-md-5">@Html.TextBoxFor(m => m.HsChildBirthWt, new { id = "ChildBirthWt", @class = "form-control", @style = " width:100% !important; margin-top:5px;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })</div>
                                                                                </div>
                                                                                <div class=" col-md-12 mb10">
                                                                                    <div class="col-md-12">What was the child's length?</div>
                                                                                    <div class="col-md-5">@Html.TextBoxFor(m => m.HsChildLength, new { id = "ChildLength", @class = "form-control", @style = " width:100% !important; margin-top:5px;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })</div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-bottom:20px;">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">Did the baby or mother have problems in the hospital?</div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsChildProblm, 1, new { id = "ChildProblm1", onchange = "ShowHsChildProblem();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsChildProblm, 2, new { id = "ChildProblm2", onchange = "HideHsChildProblem();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-12 mb10" id="DivHSBabyOrMotherProblems" style="display:none;">

                                                                            <div class="col-md-8">
                                                                                @Html.TextBoxFor(m => m.HSBabyOrMotherProblems, new { @class = "form-control", @style = "width:100% !important;  margin-top:5px;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class=" col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 23jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left:-60%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>

                                                                            </div>

                                                                            <div id="CDBRText">

                                                                            </div>
                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12 adddivspace mb10">

                                                                            <div class="col-md-10 col-sm-7">
                                                                                Has the child been diagnosed with any of the following conditions since last year's PIR?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 23jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left:-149%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="CDCText">

                                                                            </div>


                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12 adddivspace mb10">

                                                                            <div class="col-md-10 col-sm-7">
                                                                                Did the child require medical treatment for the following chronic health conditions ?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 23jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left:-174%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="CCHText">

                                                                            </div>


                                                                        </div>



                                                                        <div class="col-md-12 col-sm-12 adddivspace mb10">

                                                                            <div class="col-md-10 col-sm-7">
                                                                                Did child receive treatment for any of the following chronic health conditions?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 23jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -206%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="CTCHText">
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">Is the child currently taking any medication?  </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsMedication, 1, new { id = "Medication1", onchange = "ShowMedicationName();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsMedication, 2, new { id = "Medication2", onchange = "HideMedicationName();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" id="MedicationName" style="display:none;">

                                                                            <div class="col-sm-10">What is the name of the medication?  </div>
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HsMedicationName, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;" })
                                                                            </div>

                                                                        </div>



                                                                        <div class="col-sm-12 mb10" id="DosageMedication" style="display:none;">

                                                                            <div class="col-sm-10">What is the dosage?   </div>
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HsDosage, new { id = "Dosage", @class = "form-control", @style = "width:100% !important; margin-top:5px;" })
                                                                            </div>

                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivSChildMedication">
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HSChildMedication, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                                                            </div>

                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="hsmpplanDiv">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">
                                                                                If the child requires a Medical/Physical Care Plan?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.HSmpplan, 1, new { id = "HSmpplan1", onchange = "ShowhsplanComment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.HSmpplan, 2, new { id = "HSmpplan2", onchange = "HidehsplanComment();" })
                                                                                    <span>No</span>

                                                                                </div>

                                                                            </div>

                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top: 10px; display: none; " id="HSmpplanComment2">
                                                                            <div class="col-md-8">
                                                                                @Html.TextBoxFor(m => m.HSmpplanComment, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12" style="margin-bottom:5px;">Has this child received preventative dental care (e.g. cleaning, fluoride treatments, sealant application, etc)?   </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsChildDentalCare, 1, new { id = "ChildDentalCare1", onchange = "ShowHsChildDentalCare();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsChildDentalCare, 2, new { id = "ChildDentalCare2", onchange = "HideHsChildDentalCare();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHsChildDentalCare">
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HSPreventativeDentalCare, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>



                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does the child have a current professional dental exam (less than a year old)?    </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsDentalExam, 1, new { id = "DentalExam1", onchange = "ShowHsDentalExam();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.HsDentalExam, 2, new { id = "DentalExam2", onchange = "HideHsDentalExam();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        @*Added by Akansha on 13Dec2016*@
                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHsDentalExam">
                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.HSProfessionalDentalExam, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:5px;display:none;" id="DivHsDentalExam">
                                                                            <div class="col-sm-4">
                                                                                @Html.TextBoxFor(m => m.HSProfessionalDentalExam, new { @class = "form-control", @style = "width:100% !important; margin-top:10px;", placeholder = "MM/DD/YYYY", onblur = "validatedatenew(this);" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top: 10px; display: none;" id="ChildDentalExam">

                                                                            <div class="col-sm-12">Has the child ever had a professional dental exam?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:5px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildProfessionalDentalExam, 1, new { id = "ChildProfessionalDentalExam1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildProfessionalDentalExam, 2, new { id = "ChildProfessionalDentalExam2" })
                                                                                    <span>No</span>
                                                                                </div>

                                                                            </div>

                                                                        </div>
                                                                        @*End*@


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">Date of most recent professional dental exam (leave blank if child has never received one)  </div>
                                                                            <div class="col-md-4">@Html.TextBoxFor(m => m.HsRecentDentalExam, new { id = "RecentDentalExam", @class = "form-control", placeholder = "MM/DD/YYYY", @style = "width:100% !important; margin-top:10px;", onblur = "validatedatenew(this);" })</div>@*, onblur = "Checkdateprofessional(this);"*@ @*Added by akansha on 13Dec2016*@

                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Has this child been diagnosed as needing dental treatment (e.g. restoration, pulp therapy, extraction, etc. Does not include cleaning or fluoride)?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:5px;">
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 1, new { id = "ChildNeedDentalTreatment1", onchange = "ShowHsChildNeedDentalTreatment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 2, new { id = "ChildNeedDentalTreatment2", onchange = "HideHsChildNeedDentalTreatment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildNeedDentalTreatment, 3, new { id = "ChildNeedDentalTreatment3", onchange = "HideHsChildNeedDentalTreatment();" })
                                                                                    <span>No Exam Completed</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHSNeedingDentalTreatment">
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HSNeedingDentalTreatment, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>






                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Has this child received (or are they currently receiving) dental treatment?    </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:5px;">
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 1, new { id = "ChildRecievedDentalTreatment1", onchange = "ShowHsChildRecievedDentalTreatment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 2, new { id = "ChildRecievedDentalTreatment2", onchange = "HideHsChildRecievedDentalTreatment();" })
                                                                                    <span>No</span>

                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.HsChildRecievedDentalTreatment, 3, new { id = "ChildRecievedDentalTreatment3", onchange = "HideHsChildRecievedDentalTreatment();" })
                                                                                    <span>Treatment not required</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivHSChildReceivedDentalTreatment">
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.HSChildReceivedDentalTreatment, new { @class = "form-control", @style = "width:100% !important; margin-top:5px;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <div class="">
                                                                                    <label>Why did the child not receive dental treatment?  </label>
                                                                                </div>
                                                                                <div class="col-lg-5 cont-sz" id="cstomChecklist">
                                                                                    <div class="">
                                                                                        @if (Model.AvailableDental != null)
                                                                                        {
                                                                                            @Html.CheckBoxListFor(m => m.PostedPostedDental.DentalTreatmentID,
                                                                                         m => m.AvailableDental, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                        }
                                                                                    </div>
                                                                                </div>
                                                                                <div id="HSProg">
                                                                                    @if (Model.AvailableDental != null)
                                                                                    {
                                                                                        foreach (var item1 in Model.AvailableDental)
                                                                                        {
                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                        }
                                                                                    }
                                                                                </div>
                                                                            </div>
                                                                        </div>


                                                                    </div>
                                                                </fieldset>





                                                            </div>
                                                            <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="EHSHealth">
                                                                <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                    <legend class="legend1"></legend>
                                                                    <div class="col-md-12">
                                                                        <div class="col-md-11 col-sm-12 mb10">
                                                                            <div class="form-group">
                                                                                <div class="col-sm-8" style="margin-bottom:5px;">
                                                                                    Was the child born?

                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz">
                                                                                    @*Changes by Akansha on 13Dec2016*@
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.EhsChildBorn, 3, new { id = "EhsChildBorn3" })
                                                                                        <span>Child was full term </span>

                                                                                    </div>
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.EhsChildBorn, 1, new { id = "EhsChildBorn1" })
                                                                                        <span>More than three weeks early</span>
                                                                                    </div>
                                                                                    <div class="col-sm-12">
                                                                                        @Html.RadioButtonFor(m => m.EhsChildBorn, 2, new { id = "EhsChildBorn2" })
                                                                                        <span>More than three weeks late </span>

                                                                                    </div>
                                                                                    @*End*@
                                                                                </div>
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-sm-9 adddivspace">
                                                                            <div class="row">
                                                                                <div class="col-md-12 mb10">
                                                                                    <div class="col-md-12">
                                                                                        What was the child's birth weight?
                                                                                    </div>
                                                                                    <div class="col-md-5" style=" margin-top 8px; ">
                                                                                        @Html.TextBoxFor(m => m.EhsChildBirthWt, new { @class = "form-control", @style = "width:100% !important;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>


                                                                        <div class=" col-md-12 mb10">
                                                                            <div class="col-md-12">
                                                                                What was the child's length?
                                                                            </div>
                                                                            <div class="col-md-5" style=" margin-top 8px; ">
                                                                                @Html.TextBoxFor(m => m.EhsChildLength, new { @class = "form-control", @style = "width:72% !important;", onkeyup = "checkDec(this);", onblur = "checkDecimal(this);" })
                                                                            </div>
                                                                        </div>



                                                                        <div class="col-sm-12 mb10" style="margin-bottom:20px;">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">
                                                                                Did the baby or mother have problems in the hospital?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildProblm, 1, new { id = "EhsChildProblm1", onchange = "ShowEhsChildProblemComment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildProblm, 2, new { id = "EhsChildProblm2", onchange = "HideEhsChildProblemComment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>



                                                                        <div class="col-md-12 mb10" id="DivEhsChildProblm" style="display:none;">
                                                                            <div class="col-md-8">
                                                                                @Html.TextBoxFor(m => m.EHSBabyOrMotherProblems, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment", maxlength = "100" })
                                                                            </div>
                                                                        </div>


                                                                        <div class=" col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">

                                                                                Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>*@
                                                                                @*Changes on 24Jan2017*@
                                                                                <a style="margin-left:-59%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDBR"><i class="fa fa-arrow-up"></i></a>

                                                                            </div>

                                                                            <div id="EHSCDBRText">

                                                                            </div>

                                                                        </div>




                                                                        <div class=" col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                Has the child ever had any of these condition?
                                                                            </div>

                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 24Jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -364%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDC"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="EHSCDCText">
                                                                            </div>
                                                                        </div>


                                                                        <div class=" col-md-12 mb10" style="display: none;" id="DivEHSAllergy">

                                                                            <div class="col-md-5" style="margin-top:8px;">
                                                                                @Html.TextBoxFor(m => m.EHSAllergy, new { @class = "form-control", @style = "width:72% !important;", @maxlength = "200", placeholder = "Allergy Details" })
                                                                            </div>
                                                                        </div>

                                                                        <div class=" col-md-12 mb10" style="display:none;" id="DivEHSEpiPen">
                                                                            <div class="col-md-12">
                                                                                Does your child require an Epi-Pen?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EHSEpiPen, 1, new { id = "EHSEpiPen1" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EHSEpiPen, 2, new { id = "EHSEpiPen2" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>



                                                                        <div class="col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                Has this child received medical treatment for the following chronic health conditions
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSRMCHC"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left:-177%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSRMCHC"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="EHSCHCText">
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">

                                                                                Is this child receiving treatment for any of the following chronic health conditions?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSCHC"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left:-188%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#EHSCHC"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="EHDCDCText">

                                                                            </div>

                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">
                                                                                Is the child currently taking any medication?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsMedication, 1, new { id = "EhsMedication1", onchange = "ShowEhsMedicationName();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsMedication, 2, new { id = "EhsMedication2", onchange = "HideEhsMedicationName();" })
                                                                                    <span>No</span>

                                                                                </div>

                                                                            </div>

                                                                        </div>


                                                                        @*<div class="col-sm-12 mb10" id="EhsMedicationName" style="display:none;">
                                                                                <div class="col-sm-10" style="margin-bottom: 5px;">
                                                                                    What is the name of the medication?
                                                                                </div>
                                                                                <div class="col-sm-5">
                                                                                    @Html.TextBoxFor(m => m.EhsMedicationName, new { @class = "form-control", @style = "width:72% !important;" })
                                                                                </div>
                                                                            </div>*@


                                                                        @*<div class="col-sm-12 mb10" id="EhsDosageMedication" style="display:none;">
                                                                                <div class="col-sm-10" style="margin-bottom: 5px;">
                                                                                    What is the dosage?
                                                                                </div>
                                                                                <div class="col-sm-5">
                                                                                    @Html.TextBoxFor(m => m.EhsDosage, new { @class = "form-control", @style = "width:72% !important;" })
                                                                                </div>
                                                                            </div>*@

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="DivEhsMedication">
                                                                            <div class="col-md-8">
                                                                                @Html.TextBoxFor(m => m.EHSChildMedication, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;display:none;" id="mpplanDiv">
                                                                            <div class="col-sm-7" style="margin-bottom:5px;">
                                                                                If the child requires a Medical/Physical Care Plan?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EHSmpplan, 1, new { id = "EHSmpplan1", onchange = "ShowEhsplanComment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EHSmpplan, 2, new { id = "EHSmpplan2", onchange = "HideEhsplanComment();" })
                                                                                    <span>No</span>

                                                                                </div>

                                                                            </div>

                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top: 10px; display: none; " id="EHSmpplanComment2">
                                                                            <div class="col-md-8">
                                                                                @Html.TextBoxFor(m => m.EHSmpplancomment, new { @class = "form-control", @style = "width:100% !important;", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12  mb10">
                                                                            <div class="col-md-10 col-sm-7">

                                                                                Did the child require medical treatment for the following chronic health conditions?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 24Jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -181%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CCH"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="EHSCCHText">
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-12 col-sm-12 mb10">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                Did child receive treatment for any of the following chronic health conditions?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 24Jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -212%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CTCH"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>
                                                                            <div id="EHSCTCHText">
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </fieldset>
                                                            </div>
                                                            <div class="col-sm-12" style="margin-bottom:1%;">
                                                                <div class="col-sm-6">
                                                                    <a href="javascript:void(0)" onclick="ShowNutrition();">Nutrition Assessment  <i class="fa fa-arrow-right"></i></a>
                                                                </div>
                                                            </div>


                                                            @*Nutrition Questions without HS/EHS*@
                                                            @*<div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="Nutrition">


                                                                    <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                        <legend class="legend1"></legend>
                                                                        <div class="col-md-12">


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12"> Is your child currently taking a vitamin supplement? <sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 1, new { id = "ChildVitaminSupplment1", onchange = "ShowChildVitaminSupplmentcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 2, new { id = "ChildVitaminSupplment2", onchange = "HideChildVitaminSupplmentcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>

                                                                                    <div class="col-md-2 col-sm-5" id="divVitaminPopup" style="display:none;">
                                                                                        <a style="margin-left: 396%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                                                                    </div>


                                                                                </div>

                                                                            </div>

                                                                            <div id="Cvstext" class="col-sm-12 mb10">

                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Persistent/Current Nausea or Vomiting?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentNausea, 1, new { id = "PersistentNausea1", onchange = "ShowNauseaorVomitingcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentNausea, 2, new { id = "PersistentNausea2", onchange = "HideNauseaorVomitingcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divNauseaorVomitingcomment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.NauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Persistent/Current diarrhea?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentDiarrhea, 1, new { id = "PersistentDiarrhea1", onchange = "ShowPersistentDiarrheacomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentDiarrhea, 2, new { id = "PersistentDiarrhea2", onchange = "HidePersistentDiarrheacomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divdiarrheacomment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.DiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Persistent/Current Constipation?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentConstipation, 1, new { id = "PersistentConstipation1", onchange = "ShowPersistentConstipationcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.PersistentConstipation, 2, new { id = "PersistentConstipation2", onchange = "HidePersistentConstipationcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divPersistentConstipation" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.Constipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Dramatic weight change in the past year?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.DramaticWeight, 1, new { id = "DramaticWeight1", onchange = "ShowDramaticWeightcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.DramaticWeight, 2, new { id = "DramaticWeight2", onchange = "HideDramaticWeightcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divDramaticWeightchange" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.DramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Recent surgery (within 3 months)?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RecentSurgery, 1, new { id = "RecentSurgery1", onchange = "ShowRecentSurgerycomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RecentSurgery, 2, new { id = "RecentSurgery2", onchange = "HideRecentSurgerycomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divRecentSurgery" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.RecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Recent hospitalization (within 3 months)?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RecentHospitalization, 1, new { id = "RecentHospitalization1", onchange = "ShowRecentHospitalizationcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RecentHospitalization, 2, new { id = "RecentHospitalization2", onchange = "HideRecentHospitalizationcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divRecentHospitalization" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.RecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child on any special diet?   </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.ChildSpecialDiet, 1, new { id = "ChildSpecialDiet1", onchange = "ShowChildSpecialDietcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.ChildSpecialDiet, 2, new { id = "ChildSpecialDiet2", onchange = "HideChildSpecialDietcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divChildSpecialDiet" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.SpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child have any food allergies or intollerance?<sup>*</sup>  </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.FoodAllergies, 1, new { id = "FoodAllergies1", onchange = "ShowFoodAllergies();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.FoodAllergies, 2, new { id = "FoodAllergies2", onchange = "HideFoodAllergies();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divFoodAllergies" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.FoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you have nutritional concerns for anyone in the household?<sup>*</sup>  </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.NutritionalConcern, 1, new { id = "NutritionalConcern1", onchange = "ShowNutritionalConcern();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.NutritionalConcern, 2, new { id = "NutritionalConcern2", onchange = "HideNutritionalConcern();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divNutritionalConcern" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.NutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">When was the last time your family received foods from the local food pantry?<sup>*</sup>  </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    @{
                                                                                        List<SelectListItem> foodpantry = new List<SelectListItem>();
                                                                                        foodpantry.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                                                                        foodpantry.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                                                                        foodpantry.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                                                                        foodpantry.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.FoodPantory, new SelectList(foodpantry, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.childTrouble, 1, new { id = "childTrouble1", onchange = "ShowchildTrouble();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.childTrouble, 2, new { id = "childTrouble2", onchange = "HidechildTrouble();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divchildTrouble" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.ChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child use a spoon or fork?<sup>*</sup></div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.spoon, 1, new { id = "spoon1", onchange = "Hidespoon();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.spoon, 2, new { id = "spoon2", onchange = "Showspoon();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divSpoonorForkComment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.SpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?<sup>*</sup></div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.feedingtube, 1, new { id = "feedingtube1", onchange = "Showfeedingtube();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.feedingtube, 2, new { id = "feedingtube2", onchange = "Hidefeedingtube();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divSpecialFeedingComment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.SpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>





                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you think your child is too:</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.childThin, 3, new { id = "childThin3" })
                                                                                        <span>Heavy </span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.childThin, 2, new { id = "childThin2" })
                                                                                        <span>Small </span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.childThin, 4, new { id = "childThin4" })
                                                                                        <span>Tall </span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.childThin, 1, new { id = "childThin1" })
                                                                                        <span>Thin </span>
                                                                                    </div>



                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.childThin, 5, new { id = "childThin5" })
                                                                                        <span>None of the above</span>
                                                                                    </div>

                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Takebottle, 1, new { id = "Takebottle1", onchange = "ShowTakebottle();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Takebottle, 2, new { id = "Takebottle2", onchange = "HideTakebottle();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divBottleComment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.BottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child eat or chew anything that is not food?<sup>*</sup></div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.chewanything, 1, new { id = "chewanything1", onchange = "Showchewanything();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.chewanything, 2, new { id = "chewanything2", onchange = "Hidechewanything();" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" id="divchewanything" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.EatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>
                                                                                        Specify non-food item(s) your child eats or chews
                                                                                    </label>
                                                                                    @Html.TextBoxFor(m => m.NonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Describe your child's appetite:<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ChangeinAppetite, 2, new { id = "ChangeinAppetite2" })
                                                                                        <span>Fair</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ChangeinAppetite, 1, new { id = "ChangeinAppetite1" })
                                                                                        <span>Good</span>
                                                                                    </div>

                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ChangeinAppetite, 3, new { id = "ChangeinAppetite3" })
                                                                                        <span>Poor</span>
                                                                                    </div>

                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    How do you know when your child is hungry? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> hungry = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.hungry)
                                                                                        {
                                                                                            hungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>




                                                                            </div>

                                                                            <div class="col-md-12 col-sm-12 mb10">

                                                                                <div class="col-md-10 col-sm-7">
                                                                                    How do you know when your child is full? (Check all that apply) <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-md-2 col-sm-5">
                                                                                    <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                                                                </div>

                                                                                <div id="CDText">

                                                                                </div>


                                                                            </div>

                                                                            <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                                                                <div class="col-md-10 col-sm-7">
                                                                                    What type of milk do you feed your child?<sup>*</sup>
                                                                                </div>
                                                                                <div class="col-md-2 col-sm-5">
                                                                                    <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>

                                                                                </div>

                                                                                <div id="CDRinkText">

                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>
                                                                                        Milk Comment
                                                                                    </label>
                                                                                    @Html.TextBoxFor(m => m.MilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    If breastfeeding, how many times do you nurse in 24 hours? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildFeed)
                                                                                        {
                                                                                            ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    If formula feeding, how many fluid ounces of formula does your child take in 24 hours? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildFormula)
                                                                                        {
                                                                                            ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child cereal?<sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child pureed and/or mashed foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child ground and/or finely chopped foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child finger foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">How is your child fed finger foods?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                                                                        <span>Child does not eat finger foods</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                                                                        <span>Child feeds self</span>
                                                                                    </div>

                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you begin feeding your child 100% fruit juice with Vitamin C? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>




                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">How is your child fed 100% juice with Vitamin C?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 3, new { id = "ChildFruitJuicevitaminc3" })
                                                                                        <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 1, new { id = "ChildFruitJuicevitaminc1" })
                                                                                        <span> Bottle feeding</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 2, new { id = "ChildFruitJuicevitaminc2" })
                                                                                        <span>Cup</span>
                                                                                    </div>

                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">How much water does your child drink?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildWater, 1, new { id = "ChildWater1" })
                                                                                        <span>N/A (Child drinks breastmilk or formula)</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildWater, 2, new { id = "ChildWater2" })
                                                                                        <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildWater, 3, new { id = "ChildWater3" })
                                                                                        <span>I don't give my child water</span>
                                                                                    </div>


                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-md-12">
                                                                                        @Html.CheckBoxFor(m => m.NA, new { @class = "minimal", tabIndex = "19" })
                                                                                        <span>N/A(Infant follows individual feeding schedule)</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                                                        <span>Breakfast</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.CheckBoxFor(m => m.Dinner, new { @class = "minimal", tabIndex = "19" })
                                                                                        <span>Dinner</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                                                        <span>Lunch</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                                                        <span>Snack(s)</span>
                                                                                    </div>


                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RestrictFood, 1, new { id = "RestrictFood1", onchange = "ShowRestrictFoodcomment();" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                        @Html.RadioButtonFor(m => m.RestrictFood, 2, new { id = "RestrictFood2", onchange = "HideRestrictFoodcomment();" })
                                                                                        <span>No</span>
                                                                                    </div>



                                                                                </div>
                                                                            </div>




                                                                            <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">

                                                                                <div class="col-sm-8">
                                                                                    @Html.TextBoxFor(m => m.RestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                                </div>
                                                                            </div>












                                                                        </div>
                                                                    </fieldset>



                                                                </div>*@
                                                            @*End*@
                                                            @*HS Nutrition Questions*@

                                                            <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="Nutrition">


                                                                <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                    <legend class="legend1"></legend>
                                                                    <div class="col-md-12">

                                                                        @*<div class=" col-md-12 col-sm-12 mb10">
                                                                                <div class="col-md-10 col-sm-7">
                                                                                    Is your child currently taking a vitamin supplement?  <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-md-2 col-sm-5">
                                                                                    <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                                                                </div>
                                                                                <div id="Cvstext">

                                                                                </div>

                                                                            </div>*@
                                                                        @*Added by Akansha on 12Dec2016*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12"> Is your child currently taking a vitamin supplement?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 1, new { id = "ChildVitaminSupplment1", onchange = "ShowChildVitaminSupplmentcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildVitaminSupplment, 2, new { id = "ChildVitaminSupplment2", onchange = "HideChildVitaminSupplmentcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                                @*Added by Akansha on 24Jan2017*@
                                                                                <div class="col-md-2 col-sm-5" id="divVitaminPopup" style="display:none;">
                                                                                    <a style="margin-left: 15%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                                                                </div>


                                                                            </div>

                                                                        </div>
                                                                        @*Added by Akansha on 14Dec2016*@
                                                                        <div id="Cvstext" class="col-sm-12 mb10">

                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        @*End*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current Nausea or Vomiting? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentNausea, 1, new { id = "PersistentNausea1", onchange = "ShowNauseaorVomitingcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentNausea, 2, new { id = "PersistentNausea2", onchange = "HideNauseaorVomitingcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divNauseaorVomitingcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.NauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current diarrhea? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentDiarrhea, 1, new { id = "PersistentDiarrhea1", onchange = "ShowPersistentDiarrheacomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentDiarrhea, 2, new { id = "PersistentDiarrhea2", onchange = "HidePersistentDiarrheacomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divdiarrheacomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.DiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current Constipation? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentConstipation, 1, new { id = "PersistentConstipation1", onchange = "ShowPersistentConstipationcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.PersistentConstipation, 2, new { id = "PersistentConstipation2", onchange = "HidePersistentConstipationcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divPersistentConstipation" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.Constipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Dramatic weight change in the past year? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.DramaticWeight, 1, new { id = "DramaticWeight1", onchange = "ShowDramaticWeightcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.DramaticWeight, 2, new { id = "DramaticWeight2", onchange = "HideDramaticWeightcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divDramaticWeightchange" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.DramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Recent surgery (within 3 months)? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RecentSurgery, 1, new { id = "RecentSurgery1", onchange = "ShowRecentSurgerycomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RecentSurgery, 2, new { id = "RecentSurgery2", onchange = "HideRecentSurgerycomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divRecentSurgery" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.RecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Recent hospitalization (within 3 months)?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RecentHospitalization, 1, new { id = "RecentHospitalization1", onchange = "ShowRecentHospitalizationcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RecentHospitalization, 2, new { id = "RecentHospitalization2", onchange = "HideRecentHospitalizationcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divRecentHospitalization" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.RecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Is your child on any special diet?   </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildSpecialDiet, 1, new { id = "ChildSpecialDiet1", onchange = "ShowChildSpecialDietcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.ChildSpecialDiet, 2, new { id = "ChildSpecialDiet2", onchange = "HideChildSpecialDietcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divChildSpecialDiet" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.SpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child have any food allergies or intollerance?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.FoodAllergies, 1, new { id = "FoodAllergies1", onchange = "ShowFoodAllergies();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.FoodAllergies, 2, new { id = "FoodAllergies2", onchange = "HideFoodAllergies();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divFoodAllergies" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.FoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Do you have nutritional concerns for anyone in the household?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.NutritionalConcern, 1, new { id = "NutritionalConcern1", onchange = "ShowNutritionalConcern();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.NutritionalConcern, 2, new { id = "NutritionalConcern2", onchange = "HideNutritionalConcern();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divNutritionalConcern" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.NutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">When was the last time your family received foods from the local food pantry?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                @{
                                                                                    List<SelectListItem> foodpantry = new List<SelectListItem>();
                                                                                    foodpantry.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                                                                    foodpantry.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                                                                    foodpantry.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                                                                    foodpantry.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                                                                }
                                                                                @Html.DropDownListFor(m => m.FoodPantory, new SelectList(foodpantry, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.childTrouble, 1, new { id = "childTrouble1", onchange = "ShowchildTrouble();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.childTrouble, 2, new { id = "childTrouble2", onchange = "HidechildTrouble();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divchildTrouble" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.ChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child use a spoon or fork?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.spoon, 1, new { id = "spoon1", onchange = "Hidespoon();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.spoon, 2, new { id = "spoon2", onchange = "Showspoon();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divSpoonorForkComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.SpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.feedingtube, 1, new { id = "feedingtube1", onchange = "Showfeedingtube();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.feedingtube, 2, new { id = "feedingtube2", onchange = "Hidefeedingtube();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divSpecialFeedingComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.SpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>





                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Do you think your child is too:</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by Akansha on 13Dec2016*@
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.childThin, 3, new { id = "childThin3" })
                                                                                    <span>Heavy </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.childThin, 2, new { id = "childThin2" })
                                                                                    <span>Small </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.childThin, 4, new { id = "childThin4" })
                                                                                    <span>Tall </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.childThin, 1, new { id = "childThin1" })
                                                                                    <span>Thin </span>
                                                                                </div>



                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.childThin, 5, new { id = "childThin5" })
                                                                                    <span>None of the above</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.Takebottle, 1, new { id = "Takebottle1", onchange = "ShowTakebottle();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.Takebottle, 2, new { id = "Takebottle2", onchange = "HideTakebottle();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divBottleComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.BottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child eat or chew anything that is not food?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.chewanything, 1, new { id = "chewanything1", onchange = "Showchewanything();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.chewanything, 2, new { id = "chewanything2", onchange = "Hidechewanything();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divchewanything" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <label>
                                                                                    Specify non-food item(s) your child eats or chews
                                                                                </label>
                                                                                @Html.TextBoxFor(m => m.NonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Describe your child's appetite: </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by akansha on 13Dec2016*@
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.ChangeinAppetite, 2, new { id = "ChangeinAppetite2" })
                                                                                    <span>Fair</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.ChangeinAppetite, 1, new { id = "ChangeinAppetite1" })
                                                                                    <span>Good</span>
                                                                                </div>

                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.ChangeinAppetite, 3, new { id = "ChangeinAppetite3" })
                                                                                    <span>Poor</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                How do you know when your child is hungry?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> hungry = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.hungry)
                                                                                    {
                                                                                        hungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                            </div>




                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12 mb10">

                                                                            <div class="col-md-10 col-sm-7">
                                                                                How do you know when your child is full? (Check all that apply)
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 24jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -281%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                                                            </div>

                                                                            <div id="CDText">

                                                                            </div>

                                                                            @*<div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                                                                         <div class="col-md-6 input_wd" id="cstomChecklist" style="width:47%;">
                                                                                                                                             <div class="">
                                                                                                                                                 @if (Model.AvailableChildDietFull != null)
                                                                                                                                                 {
                                                                                                                                                 @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
                                                                                m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                                                                 }
                                                                                                                                             </div>
                                                                                                                                         </div>
                                                                                                                                         <div id="HSDiag">
                                                                                                                                             @if (Model.AvailableChildDietFull != null)
                                                                                                                                             {
                                                                                                                                                 foreach (var item1 in Model.AvailableChildDietFull)
                                                                                                                                                 {
                                                                                                                                             <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                                                                 }
                                                                                                                                             }
                                                                                                                                         </div>
                                                                                                                                     </div>*@
                                                                        </div>

                                                                        <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                What type of milk do you feed your child?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 24Jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>*@

                                                                                <a style="margin-left: -396%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>
                                                                            </div>

                                                                            <div id="CDRinkText">

                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <label>
                                                                                    Milk Comment
                                                                                </label>
                                                                                @Html.TextBoxFor(m => m.MilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                                                            </div>
                                                                        </div>
                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    If breastfeeding, how many times do you nurse in 24 hours? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildFeed)
                                                                                        {
                                                                                            ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@

                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    If formula feeding, how many fluid ounces of formula does your child take in 24 hours? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildFormula)
                                                                                        {
                                                                                            ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@
                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child cereal?<sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@
                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child pureed and/or mashed foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@

                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child ground and/or finely chopped foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@

                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you start feeding your child finger foods? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                                </div>



                                                                            </div>*@

                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">How is your child fed finger foods?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                                                                        <span>Child does not eat finger foods</span>
                                                                                    </div>
                                                                                    <div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                                                                        <span>Child feeds self</span>
                                                                                    </div>


                                                                                </div>
                                                                            </div>*@
                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">
                                                                                    At what age did you begin feeding your child 100% fruit juice with Vitamin C? <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    @{
                                                                                        List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.ChildCereal)
                                                                                        {
                                                                                            ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>




                                                                            </div>*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">How is your child fed 100% juice with Vitamin C? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by Akansha*@
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 3, new { id = "ChildFruitJuicevitaminc3" })
                                                                                    <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 1, new { id = "ChildFruitJuicevitaminc1" })
                                                                                    <span> Bottle feeding</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildFruitJuicevitaminc, 2, new { id = "ChildFruitJuicevitaminc2" })
                                                                                    <span>Cup</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">How much water does your child drink? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildWater, 1, new { id = "ChildWater1" })
                                                                                    <span>N/A (Child drinks breastmilk or formula)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildWater, 2, new { id = "ChildWater2" })
                                                                                    <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildWater, 3, new { id = "ChildWater3" })
                                                                                    <span>I don't give my child water</span>
                                                                                </div>


                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Added by akansha on 13Dec2016*@
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.NA, new { @class = "minimal", tabIndex = "19" })
                                                                                    <span>N/A(Infant follows individual feeding schedule)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                                                    <span>Breakfast</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.Dinner, new { @class = "minimal", tabIndex = "19" })
                                                                                    <span>Dinner</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                                                    <span>Lunch</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                                                    <span>Snack(s)</span>
                                                                                </div>


                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        @*//Added by Akansha on 12Dec2016*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RestrictFood, 1, new { id = "RestrictFood1", onchange = "ShowRestrictFoodcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.RestrictFood, 2, new { id = "RestrictFood2", onchange = "HideRestrictFoodcomment();" })
                                                                                    <span>No</span>
                                                                                </div>



                                                                            </div>
                                                                        </div>




                                                                        <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.RestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        @*End*@




                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Elevated blood lead level?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Elevatedblood, 1, new { id = "Elevatedblood1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Elevatedblood, 2, new { id = "Elevatedblood" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Anemia (low iron) </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Anemia, 1, new { id = "Anemia1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Anemia, 2, new { id = "Anemia2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-lg-12">
                                                                                <h5 class="page-header">Eating/Drinking Behaviors</h5>
                                                                            </div>



                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Breastfeed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Breastfeed, 1, new { id = "Breastfeed1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Breastfeed, 2, new { id = "Breastfeed2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Drink from a cup?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Drinkfromcup, 1, new { id = "Drinkfromcup1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Drinkfromcup, 2, new { id = "Drinkfromcup2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Feed him/herself?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Feedherself, 1, new { id = "Feedherself1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Feedherself, 2, new { id = "Feedherself2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Eat pureed foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.pureedfoods, 1, new { id = "pureedfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.pureedfoods, 2, new { id = "pureedfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Eat finger foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.fingerfoods, 1, new { id = "fingerfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.fingerfoods, 2, new { id = "fingerfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If your child takes a bottle, do you put foods (cereals, strained foods) into the bottle?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.putfoods, 1, new { id = "putfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.putfoods, 2, new { id = "putfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If your child takes a bottle, does the child take it to bed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.childbottle, 1, new { id = "childbottle1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.childbottle, 2, new { id = "childbottle2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>










                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Vitamins or supplements</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Vitamins, 1, new { id = "Vitamins1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Vitamins, 2, new { id = "Vitamins2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child currently taking a vitamin supplement?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.vitaminsupplement, 1, new { id = "vitaminsupplement1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.vitaminsupplement, 2, new { id = "vitaminsupplement2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child takes a vitamin, is it prescribed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.prescribed, 1, new { id = "prescribed1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.prescribed, 2, new { id = "prescribed2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child takes a vitamin, is it iron fortified?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ironfortified, 1, new { id = "ironfortified1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ironfortified, 2, new { id = "ironfortified2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child have any other nutritional concerns?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.nutritionalconcerns, 1, new { id = "nutritionalconcerns1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.nutritionalconcerns, 2, new { id = "nutritionalconcerns2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Explain the other nutritional concerns:    </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Are your stove and refrigerator working?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.stove, 1, new { id = "stove1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.stove, 2, new { id = "stove2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>






                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Why are the appliance(s) not working:     </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you know how to make your own baby foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.babyfoods, 1, new { id = "babyfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.babyfoods, 2, new { id = "babyfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you ever run out of food for your child?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.runout, 1, new { id = "runout1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.runout, 2, new { id = "runout2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">How many times a day does your child eat?  </div>
                                                                                <div class="col-md-4">
                                                                                    @{
                                                                                        List<SelectListItem> diet = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.diet)
                                                                                        {
                                                                                            diet.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(diet, "Value", "Text"), new { id = "DdlChildDiet", @class = "form-control", tabIndex = "21", @style = "width:43%;" })


                                                                                </div>

                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Typical meals:    </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Check meals child typically eats:</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                                                        <span>Breakfast</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                                                        <span>Lunch</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                                                        <span>Snack(s)</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child eats snack(s), how many? </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.childsnacks, new { id = "childsnacks", @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Favorite foods: </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.Favoritefoods, new { id = "Favoritefoods", @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Least favorite foods: </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child on a special diet?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Specialdiet, 1, new { id = "Specialdiet1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Specialdiet, 2, new { id = "Specialdiet2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>













                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label> Reasons for special diet:     </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


























                                                                            <div class="col-lg-12">
                                                                                <h5 class="page-header">Please indicate the number of times your child typically eats foods in each category (and indicate the time period): </h5>
                                                                            </div>




                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">     Milk, cheese, yogurt    </label>
                                                                                    @{
                                                                                        List<SelectListItem> ChildFood = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            ChildFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildFood, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">   Meat, poultry, fish, eggs, dried beans/peas, peanut butter    </label>
                                                                                    @{
                                                                                        List<SelectListItem> ChildServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            ChildServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Rice, grits, bread, cereal, tortillas    </label>
                                                                                    @{
                                                                                        List<SelectListItem> RiceServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            RiceServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(RiceServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">Greens, carrots, broccoli, winter, squash, pumpkin, sweet potatoes   </label>
                                                                                    @{
                                                                                        List<SelectListItem> GreensServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            GreensServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(GreensServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">Oranges, grapefruit, tomatoes (fruit or pure fruit juices)    </label>
                                                                                    @{
                                                                                        List<SelectListItem> fruitServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.Food)
                                                                                        {
                                                                                            fruitServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(fruitServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Other fruits and vegetables     </label>
                                                                                    @{
                                                                                        List<SelectListItem> OtherServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            OtherServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OtherServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Oil, butter, lard, margarine      </label>
                                                                                    @{
                                                                                        List<SelectListItem> OilServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            OilServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OilServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Cakes, cookies, soda/pop, fruit drinks (kool-aid), candy       </label>
                                                                                    @{
                                                                                        List<SelectListItem> CakeServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            CakeServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(CakeServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>





                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group">
                                                                                    <label>What is the time-frame for these serving estimates  </label>
                                                                                    @Html.TextBoxFor(m => m.Medication, new { @class = "form-control", @style = "width:43% !important;" })

                                                                                </div>
                                                                            </div>*@







                                                                    </div>
                                                                </fieldset>



                                                            </div>

                                                            @*End*@

                                                            @*Ehs Nutrition Questions*@
                                                            <div class="row" style="display:none; margin: 4px 3px 19px 3px; padding: 6px; margin-top:2%; line-height:normal !important;" id="EhsNutrition1">


                                                                <fieldset style="border: 1px solid #295b8f;width:100%; ">
                                                                    <legend class="legend1"></legend>
                                                                    <div class="col-md-12">

                                                                        @*<div class=" col-md-12 col-sm-12 mb10">
                                                                                <div class="col-md-10 col-sm-7">
                                                                                    Is your child currently taking a vitamin supplement?  <sup>*</sup>
                                                                                </div>
                                                                                <div class="col-md-2 col-sm-5">
                                                                                    <a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>

                                                                                </div>
                                                                                <div id="Cvstext">

                                                                                </div>

                                                                            </div>*@
                                                                        @*Added by Akansha on 12Dec2016*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12"> Is your child currently taking a vitamin supplement?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildVitaminSupplment, 1, new { id = "EhsChildVitaminSupplment1", onchange = "ShowEhsChildVitaminSupplmentcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildVitaminSupplment, 2, new { id = "EhsChildVitaminSupplment2", onchange = "HideEhsChildVitaminSupplmentcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                                @*Added by Akansha on 23jan2017*@
                                                                                <div class="col-md-2 col-sm-5" id="divEhsVitaminPopup" style="display:none;">
                                                                                    @*<a style="margin-left: 396%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>*@
                                                                                    <a style="margin-left: 16%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDVitamin"><i class="fa fa-arrow-up"></i></a>
                                                                                </div>


                                                                            </div>

                                                                        </div>
                                                                        @*Added by Akansha on 14Dec2016*@
                                                                        <div id="EhsCvstext" class="col-sm-12 mb10">

                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divChildVitaminSupplmentcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.ChildVitaminSupplmentComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        @*End*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current Nausea or Vomiting? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentNausea, 1, new { id = "EhsPersistentNausea1", onchange = "ShowEhsNauseaorVomitingcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentNausea, 2, new { id = "EhsPersistentNausea2", onchange = "HideEhsNauseaorVomitingcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsNauseaorVomitingcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsNauseaorVomitingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current diarrhea? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentDiarrhea, 1, new { id = "EhsPersistentDiarrhea1", onchange = "ShowEhsPersistentDiarrheacomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentDiarrhea, 2, new { id = "EhsPersistentDiarrhea2", onchange = "HideEhsPersistentDiarrheacomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsdiarrheacomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsDiarrheaComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Persistent/Current Constipation? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentConstipation, 1, new { id = "EhsPersistentConstipation1", onchange = "ShowEhsPersistentConstipationcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsPersistentConstipation, 2, new { id = "EhsPersistentConstipation2", onchange = "HideEhsPersistentConstipationcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsPersistentConstipation" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsConstipationcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Dramatic weight change in the past year? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsDramaticWeight, 1, new { id = "EhsDramaticWeight1", onchange = "ShowEhsDramaticWeightcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsDramaticWeight, 2, new { id = "EhsDramaticWeight2", onchange = "HideEhsDramaticWeightcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsDramaticWeightchange" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsDramaticWeightchangecomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Recent surgery (within 3 months)? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRecentSurgery, 1, new { id = "EhsRecentSurgery1", onchange = "ShowEhsRecentSurgerycomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRecentSurgery, 2, new { id = "EhsRecentSurgery2", onchange = "HideEhsRecentSurgerycomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsRecentSurgery" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsRecentSurgerycomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Recent hospitalization (within 3 months)? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRecentHospitalization, 1, new { id = "EhsRecentHospitalization1", onchange = "ShowEhsRecentHospitalizationcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRecentHospitalization, 2, new { id = "EhsRecentHospitalization2", onchange = "HideEhsRecentHospitalizationcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsRecentHospitalization" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsRecentHospitalizationComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Is your child on any special diet?   </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildSpecialDiet, 1, new { id = "EhsChildSpecialDiet1", onchange = "ShowEhsChildSpecialDietcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildSpecialDiet, 2, new { id = "EhsChildSpecialDiet2", onchange = "HideEhsChildSpecialDietcomment();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsChildSpecialDiet" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsSpecialDietComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child have any food allergies or intollerance?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsFoodAllergies, 1, new { id = "EhsFoodAllergies1", onchange = "ShowEhsFoodAllergies();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsFoodAllergies, 2, new { id = "EhsFoodAllergies2", onchange = "HideEhsFoodAllergies();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsFoodAllergies" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsFoodAllergiesComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Do you have nutritional concerns for anyone in the household? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsNutritionalConcern, 1, new { id = "EhsNutritionalConcern1", onchange = "ShowEhsNutritionalConcern();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsNutritionalConcern, 2, new { id = "EhsNutritionalConcern2", onchange = "HideEhsNutritionalConcern();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsNutritionalConcern" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsNutritionAlconcernsComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">When was the last time your family received foods from the local food pantry?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                @{
                                                                                    List<SelectListItem> foodpantryEhs = new List<SelectListItem>();
                                                                                    foodpantryEhs.Add(new SelectListItem() { Text = "Last week", Value = "1" });
                                                                                    foodpantryEhs.Add(new SelectListItem() { Text = "Last month", Value = "2" });
                                                                                    foodpantryEhs.Add(new SelectListItem() { Text = "Last year", Value = "3" });
                                                                                    foodpantryEhs.Add(new SelectListItem() { Text = "Never used", Value = "4" });
                                                                                }
                                                                                @Html.DropDownListFor(m => m.EhsFoodPantory, new SelectList(foodpantryEhs, "Value", "Text"), new { @class = "form-control", style = "width:43%;" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child have trouble chewing or swallowing?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhschildTrouble, 1, new { id = "EhschildTrouble1", onchange = "ShowEhschildTrouble();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhschildTrouble, 2, new { id = "EhschildTrouble2", onchange = "HideEhschildTrouble();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhschildTrouble" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsChewingorSwallowingcomment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child use a spoon or fork?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehsspoon, 1, new { id = "Ehsspoon1", onchange = "EhsHidespoon();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehsspoon, 2, new { id = "Ehsspoon2", onchange = "EhsShowspoon();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsSpoonorForkComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsSpoonorForkComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child use a feeding tube or other special feeding method?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehsfeedingtube, 1, new { id = "Ehsfeedingtube1", onchange = "ShowEhsfeedingtube();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehsfeedingtube, 2, new { id = "Ehsfeedingtube2", onchange = "HideEhsfeedingtube();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsSpecialFeedingComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsSpecialFeedingComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>





                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Do you think your child is too:</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by Akansha on 13Dec2016*@
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhschildThin, 3, new { id = "EhschildThin3" })
                                                                                    <span>Heavy </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhschildThin, 2, new { id = "EhschildThin2" })
                                                                                    <span>Small </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhschildThin, 4, new { id = "EhschildThin4" })
                                                                                    <span>Tall </span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhschildThin, 1, new { id = "EhschildThin1" })
                                                                                    <span>Thin </span>
                                                                                </div>



                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhschildThin, 5, new { id = "EhschildThin5" })
                                                                                    <span>None of the above</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child currently take a bottle?  </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsTakebottle, 1, new { id = "EhsTakebottle1", onchange = "ShowEhsTakebottle();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsTakebottle, 2, new { id = "EhsTakebottle2", onchange = "HideEhsTakebottle();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhsBottleComment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsBottleComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Does your child eat or chew anything that is not food?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehschewanything, 1, new { id = "Ehschewanything1", onchange = "ShowEhschewanything();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.Ehschewanything, 2, new { id = "Ehschewanything2", onchange = "HideEhschewanything();" })
                                                                                    <span>No</span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" id="divEhschewanything" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsEatOrChewComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <label>
                                                                                    Specify non-food item(s) your child eats or chews
                                                                                </label>
                                                                                @Html.TextBoxFor(m => m.EhsNonFoodItems, new { @class = "form-control", @style = "width:44% !important;" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Describe your child's appetite: </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by akansha on 13Dec2016*@
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 2, new { id = "EhsChangeinAppetite2" })
                                                                                    <span>Fair</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 1, new { id = "EhsChangeinAppetite1" })
                                                                                    <span>Good</span>
                                                                                </div>

                                                                                <div class="col-xs-6 col-sm-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsChangeinAppetite, 3, new { id = "EhsChangeinAppetite3" })
                                                                                    <span>Poor</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                How do you know when your child is hungry?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> Ehshungry = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.hungry)
                                                                                    {
                                                                                        Ehshungry.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.EhsChildHungry, new SelectList(hungry, "Value", "Text"), new { id = "DdlEhsChildhungry", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                            </div>




                                                                        </div>

                                                                        <div class="col-md-12 col-sm-12 mb10">

                                                                            <div class="col-md-10 col-sm-7">
                                                                                How do you know when your child is full? (Check all that apply)
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -281%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CDietfull"><i class="fa fa-arrow-up"></i></a>

                                                                            </div>

                                                                            <div id="EhsCDText">

                                                                            </div>

                                                                            @*<div class="col-sm-12 cont-sz" style="margin-top:12px;">

                                                                                                                                         <div class="col-md-6 input_wd" id="cstomChecklist" style="width:47%;">
                                                                                                                                             <div class="">
                                                                                                                                                 @if (Model.AvailableChildDietFull != null)
                                                                                                                                                 {
                                                                                                                                                 @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
                                                                                m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                                                                 }
                                                                                                                                             </div>
                                                                                                                                         </div>
                                                                                                                                         <div id="HSDiag">
                                                                                                                                             @if (Model.AvailableChildDietFull != null)
                                                                                                                                             {
                                                                                                                                                 foreach (var item1 in Model.AvailableChildDietFull)
                                                                                                                                                 {
                                                                                                                                             <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                                                                 }
                                                                                                                                             }
                                                                                                                                         </div>
                                                                                                                                     </div>*@
                                                                        </div>

                                                                        <div class=" col-md-12 col-sm-12 mb10 adddivspace">
                                                                            <div class="col-md-10 col-sm-7">
                                                                                What type of milk do you feed your child?
                                                                            </div>
                                                                            <div class="col-md-2 col-sm-5">
                                                                                @*Changes on 23Jan2017*@
                                                                                @*<a style="margin-left:3%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>*@
                                                                                <a style="margin-left: -400%;" title="Add Conditions" href="javascript:void(0)" data-toggle="modal" data-target="#CD"><i class="fa fa-arrow-up"></i></a>

                                                                            </div>

                                                                            <div id="EhsCDRinkText">

                                                                            </div>
                                                                        </div>
                                                                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                            <div class="form-group">
                                                                                <label>
                                                                                    Milk Comment
                                                                                </label>
                                                                                @Html.TextBoxFor(m => m.EhsMilkComment, new { @class = "form-control", @style = "width:44% !important;" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                If breastfeeding, how many times do you nurse in 24 hours?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildFeed = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildFeed)
                                                                                    {
                                                                                        ChildFeed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFeed, new SelectList(ChildFeed, "Value", "Text"), new { id = "DdlChildFeed", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                If formula feeding, how many fluid ounces of formula does your child take in 24 hours?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildFormula = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildFormula)
                                                                                    {
                                                                                        ChildFormula.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFormula, new SelectList(ChildFormula, "Value", "Text"), new { id = "DdlChildFormula", @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                At what age did you start feeding your child cereal?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildCereal = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildCereal)
                                                                                    {
                                                                                        ChildCereal.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFeedCereal, new SelectList(ChildCereal, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                At what age did you start feeding your child pureed and/or mashed foods?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildPureed = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildCereal)
                                                                                    {
                                                                                        ChildPureed.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFeedMarshfood, new SelectList(ChildPureed, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                At what age did you start feeding your child ground and/or finely chopped foods?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildChopped = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildCereal)
                                                                                    {
                                                                                        ChildChopped.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFeedChopedfood, new SelectList(ChildChopped, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                At what age did you start feeding your child finger foods?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildFingerFood = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildCereal)
                                                                                    {
                                                                                        ChildFingerFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFingerFood, new SelectList(ChildFingerFood, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })

                                                                            </div>



                                                                        </div>

                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">How is your child fed finger foods?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Added by akansha on 13Dec2016*@
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood3" })
                                                                                    <span>Child does not eat finger foods</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 1, new { id = "ChildFingerFEDFood1" })
                                                                                    <span>Child feeds self</span>
                                                                                </div>
                                                                                @*<div class="col-md-12">
                                                                                        @Html.RadioButtonFor(m => m.ChildFingerFEDFood, 2, new { id = "ChildFingerFEDFood2" })
                                                                                        <span>Not yet</span>
                                                                                    </div>*@
                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                            <div class="col-sm-12">
                                                                                At what age did you begin feeding your child 100% fruit juice with Vitamin C?
                                                                            </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @{
                                                                                    List<SelectListItem> ChildFruit = new List<SelectListItem>();
                                                                                    foreach (var item in ViewBag.ChildCereal)
                                                                                    {
                                                                                        ChildFruit.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                    }
                                                                                }
                                                                                @Html.DropDownListFor(m => m.ChildFruitJuice, new SelectList(ChildFruit, "Value", "Text"), new { @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                            </div>




                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">How is your child fed 100% juice with Vitamin C? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Changes by Akansha*@
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 3, new { id = "EhsChildFruitJuicevitaminc3" })
                                                                                    <span>N/A (Child is not fed or offered 100% fruit juice)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 1, new { id = "EhsChildFruitJuicevitaminc1" })
                                                                                    <span> Bottle feeding</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildFruitJuicevitaminc, 2, new { id = "EhsChildFruitJuicevitaminc2" })
                                                                                    <span>Cup</span>
                                                                                </div>
                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">How much water does your child drink?</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildWater, 1, new { id = "EhsChildWater1" })
                                                                                    <span>N/A (Child drinks breastmilk or formula)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildWater, 2, new { id = "EhsChildWater2" })
                                                                                    <span>At least 8 fluid ounces per day (or the amount needed to satisfy my child's thirst)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.RadioButtonFor(m => m.EhsChildWater, 3, new { id = "EhsChildWater3" })
                                                                                    <span>I don't give my child water</span>
                                                                                </div>


                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">On a typical day, what meals does your child eat? (Check all that apply)</div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                @*Added by akansha on 13Dec2016*@
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.EhsNA, new { @class = "minimal", tabIndex = "19" })
                                                                                    <span>N/A(Infant follows individual feeding schedule)</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.EhsBreakfast, new { @class = "minimal", tabIndex = "16" })
                                                                                    <span>Breakfast</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.EhsDinner, new { @class = "minimal", tabIndex = "19" })
                                                                                    <span>Dinner</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.EhsLunch, new { @class = "minimal", tabIndex = "17" })
                                                                                    <span>Lunch</span>
                                                                                </div>
                                                                                <div class="col-md-12">
                                                                                    @Html.CheckBoxFor(m => m.EhsSnack, new { @class = "minimal", tabIndex = "18" })
                                                                                    <span>Snack(s)</span>
                                                                                </div>


                                                                                @*End*@
                                                                            </div>
                                                                        </div>
                                                                        @*//Added by Akansha on 12Dec2016*@
                                                                        <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                            <div class="col-sm-12">Is your child restricted from certain foods? </div>
                                                                            <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRestrictFood, 1, new { id = "EhsRestrictFood1", onchange = "ShowEhsRestrictFoodcomment();" })
                                                                                    <span>Yes</span>
                                                                                </div>
                                                                                <div class="col-xs-6 col-sm-4 col-md-2">
                                                                                    @Html.RadioButtonFor(m => m.EhsRestrictFood, 2, new { id = "EhsRestrictFood2", onchange = "HideEhsRestrictFoodcomment();" })
                                                                                    <span>No</span>
                                                                                </div>



                                                                            </div>
                                                                        </div>




                                                                        <div class="col-sm-12 mb10" id="divRestrictFoodcomment" style="display:none;">
                                                                            @*<div class="col-sm-10" style="margin-bottom: 9px;margin-top:5px;">

                                                                                </div>*@
                                                                            <div class="col-sm-8">
                                                                                @Html.TextBoxFor(m => m.EhsRestrictFoodComment, new { @class = "form-control", @style = "width:100% !important;", maxlength = "100", placeholder = "Comment" })
                                                                            </div>
                                                                        </div>
                                                                        @*End*@




                                                                        @*<div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Elevated blood lead level?<sup>*</sup> </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Elevatedblood, 1, new { id = "Elevatedblood1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Elevatedblood, 2, new { id = "Elevatedblood" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Anemia (low iron) </div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Anemia, 1, new { id = "Anemia1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Anemia, 2, new { id = "Anemia2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-lg-12">
                                                                                <h5 class="page-header">Eating/Drinking Behaviors</h5>
                                                                            </div>



                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Breastfeed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Breastfeed, 1, new { id = "Breastfeed1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Breastfeed, 2, new { id = "Breastfeed2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Drink from a cup?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Drinkfromcup, 1, new { id = "Drinkfromcup1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Drinkfromcup, 2, new { id = "Drinkfromcup2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Feed him/herself?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Feedherself, 1, new { id = "Feedherself1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Feedherself, 2, new { id = "Feedherself2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Eat pureed foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.pureedfoods, 1, new { id = "pureedfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.pureedfoods, 2, new { id = "pureedfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Eat finger foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.fingerfoods, 1, new { id = "fingerfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.fingerfoods, 2, new { id = "fingerfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If your child takes a bottle, do you put foods (cereals, strained foods) into the bottle?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.putfoods, 1, new { id = "putfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.putfoods, 2, new { id = "putfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If your child takes a bottle, does the child take it to bed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.childbottle, 1, new { id = "childbottle1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.childbottle, 2, new { id = "childbottle2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>










                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Vitamins or supplements</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Vitamins, 1, new { id = "Vitamins1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Vitamins, 2, new { id = "Vitamins2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child currently taking a vitamin supplement?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.vitaminsupplement, 1, new { id = "vitaminsupplement1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.vitaminsupplement, 2, new { id = "vitaminsupplement2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child takes a vitamin, is it prescribed?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.prescribed, 1, new { id = "prescribed1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.prescribed, 2, new { id = "prescribed2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child takes a vitamin, is it iron fortified?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ironfortified, 1, new { id = "ironfortified1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.ironfortified, 2, new { id = "ironfortified2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Does your child have any other nutritional concerns?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.nutritionalconcerns, 1, new { id = "nutritionalconcerns1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.nutritionalconcerns, 2, new { id = "nutritionalconcerns2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Explain the other nutritional concerns:    </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Are your stove and refrigerator working?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.stove, 1, new { id = "stove1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.stove, 2, new { id = "stove2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>






                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Why are the appliance(s) not working:     </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you know how to make your own baby foods?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.babyfoods, 1, new { id = "babyfoods1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.babyfoods, 2, new { id = "babyfoods2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Do you ever run out of food for your child?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.runout, 1, new { id = "runout1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.runout, 2, new { id = "runout2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">

                                                                                <div class="col-sm-12">How many times a day does your child eat?  </div>
                                                                                <div class="col-md-4">
                                                                                    @{
                                                                                        List<SelectListItem> diet = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.diet)
                                                                                        {
                                                                                            diet.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(diet, "Value", "Text"), new { id = "DdlChildDiet", @class = "form-control", tabIndex = "21", @style = "width:43%;" })


                                                                                </div>

                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label>Typical meals:    </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Check meals child typically eats:</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Breakfast, new { @class = "minimal", tabIndex = "16" })
                                                                                        <span>Breakfast</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Lunch, new { @class = "minimal", tabIndex = "17" })
                                                                                        <span>Lunch</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.CheckBoxFor(m => m.Snack, new { @class = "minimal", tabIndex = "18" })
                                                                                        <span>Snack(s)</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">If child eats snack(s), how many? </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.childsnacks, new { id = "childsnacks", @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Favorite foods: </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.Favoritefoods, new { id = "Favoritefoods", @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Least favorite foods: </div>
                                                                                <div class="col-md-4">
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12 mb10" style="margin-top:10px;">
                                                                                <div class="col-sm-12">Is your child on a special diet?</div>
                                                                                <div class="col-sm-12 cont-sz" style="margin-top:12px;">
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Specialdiet, 1, new { id = "Specialdiet1" })
                                                                                        <span>Yes</span>
                                                                                    </div>
                                                                                    <div class="col-xs-6 col-sm-2">
                                                                                        @Html.RadioButtonFor(m => m.Specialdiet, 2, new { id = "Specialdiet2" })
                                                                                        <span>No</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>













                                                                            <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                                                                <div class="form-group">
                                                                                    <label> Reasons for special diet:     </label>
                                                                                    @Html.TextBoxFor(m => m.ChildBirthWt, new { @class = "form-control", @style = "width:44% !important;" })
                                                                                </div>
                                                                            </div>


























                                                                            <div class="col-lg-12">
                                                                                <h5 class="page-header">Please indicate the number of times your child typically eats foods in each category (and indicate the time period): </h5>
                                                                            </div>




                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">     Milk, cheese, yogurt    </label>
                                                                                    @{
                                                                                        List<SelectListItem> ChildFood = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            ChildFood.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildFood, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">   Meat, poultry, fish, eggs, dried beans/peas, peanut butter    </label>
                                                                                    @{
                                                                                        List<SelectListItem> ChildServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            ChildServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(ChildServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Rice, grits, bread, cereal, tortillas    </label>
                                                                                    @{
                                                                                        List<SelectListItem> RiceServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            RiceServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(RiceServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>



                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">Greens, carrots, broccoli, winter, squash, pumpkin, sweet potatoes   </label>
                                                                                    @{
                                                                                        List<SelectListItem> GreensServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            GreensServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(GreensServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status">Oranges, grapefruit, tomatoes (fruit or pure fruit juices)    </label>
                                                                                    @{
                                                                                        List<SelectListItem> fruitServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.Food)
                                                                                        {
                                                                                            fruitServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(fruitServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Other fruits and vegetables     </label>
                                                                                    @{
                                                                                        List<SelectListItem> OtherServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            OtherServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OtherServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Oil, butter, lard, margarine      </label>
                                                                                    @{
                                                                                        List<SelectListItem> OilServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            OilServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(OilServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group" id="DivStatus">
                                                                                    <label for="Status"> Cakes, cookies, soda/pop, fruit drinks (kool-aid), candy       </label>
                                                                                    @{
                                                                                        List<SelectListItem> CakeServings = new List<SelectListItem>();
                                                                                        foreach (var item in ViewBag.food)
                                                                                        {
                                                                                            CakeServings.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                                        }
                                                                                    }
                                                                                    @Html.DropDownListFor(m => m.ChildDiet, new SelectList(CakeServings, "Value", "Text"), new { id = "DdlChildFood", @class = "form-control", tabIndex = "21", @style = "width:43%;" })
                                                                                </div>
                                                                            </div>





                                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                                <div class="form-group">
                                                                                    <label>What is the time-frame for these serving estimates  </label>
                                                                                    @Html.TextBoxFor(m => m.Medication, new { @class = "form-control", @style = "width:43% !important;" })

                                                                                </div>
                                                                            </div>*@







                                                                    </div>
                                                                </fieldset>



                                                            </div>
                                                            @*End*@






                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CDBR" role="dialog">
                                                                    <div class="modal-dialog ">
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3> Child Direct Blood Relative<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                <div class="">
                                                                                    <div class="row">
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                                                    Have any of the child's direct blood relatives (parents, grandparents, aunts, uncles, brothers, or sisters)?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="CDBRlist" style="width:81%;">
                                                                                                    @if (Model.AvailableDisease != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedDisease.DiseaseID,
                                                                                              m => m.AvailableDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }
                                                                                                </div>
                                                                                                @*<div id="HSProg">
                                                                                                        @if (Model.AvailableDisease != null)
                                                                                                        {
                                                                                                            foreach (var item1 in Model.AvailableDisease)
                                                                                                            {
                                                                                                                <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                            }
                                                                                                        }
                                                                                                    </div>*@
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="AddChildDirectBloodHS();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.OtherConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>k
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CDC" role="dialog">
                                                                    <div class="modal-dialog ">

                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Diagnosed Conditions<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddOtherdiagnosedConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important; float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                <div class="">
                                                                                    <div class="row">
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Has the child been diagnosed with any of the following conditions since last year's PIR?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="DiagnoseChildChecklist" style="width:185%;">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.DiagnoseDiseaseID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="HSProg">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="DiagnosedConditions();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.HsDiagonoseOtherConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddOtherdiagnosedConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CCH" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Medical Treatment<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddMedicalOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">

                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Did the child require medical treatment for the following chronic health conditions?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="MedicalChildChecklist" style="width:185%;">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.MedicalDiagnoseDiseaseID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="HSProg">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="MedicalChecklist();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.HsOthermedicalConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddMedicalOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CTCH" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddOtherHealthConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">

                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Did child receive treatment for any of the following chronic health conditions?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="ChronicChildChecklist" style="width:185%;">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedDiagnosedDisease.ChronicHealthConditionsID,
                                                                                                   m => m.AvailableDiagnosedDisease, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="HSProg">
                                                                                                    @if (Model.AvailableDiagnosedDisease != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableDiagnosedDisease)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="ChronicConditions();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.ChronicHealthConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddOtherHealthConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CD" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Child Drink<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddChilddrinkcondition();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    What type of milk do you feed your child?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildDrinklist" style="width:139%;">
                                                                                                    @*<div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">*@
                                                                                                    @if (Model.AvailableChildDrink != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedChildDrink.CDrinkID,
                                                                                              m => m.AvailableChildDrink, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="HSProg">
                                                                                                    @if (Model.AvailableChildDrink != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableChildDrink)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>








                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                        Other Conditions
                                                                                                        <a href="javascript:void(0)" onclick="ChilddrinkHs();"><i class="fa fa-plus-square"></i></a>
                                                                                                    </div>
                                                                                                    <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                        @Html.TextBoxFor(m => m.HsChilddrinkcondition, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>*@
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddChilddrinkcondition();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CDietfull" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3> Child Diet<span class="extra-title muted"></span></h3>
                                                                                <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;float:right;" class="my-btn" tabindex="2" onclick="SaveChildDiet();" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">

                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                                                    How do you know when your child is full? (Check all that apply)
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildDietlist" style="width:185%;">
                                                                                                    @if (Model.AvailableChildDietFull != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedChildDietFull.CDietInfoID,
            m => m.AvailableChildDietFull, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }
                                                                                                </div>
                                                                                                <div id="Diet">
                                                                                                    @if (Model.AvailableChildDietFull != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableChildDietFull)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;" class="my-btn" tabindex="2" onclick="SaveChildDiet();" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@

                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="CDVitamin" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3> Child Vitamin Supplement<span class="extra-title muted"></span></h3>
                                                                                <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;float:right;" onclick="SaveChildVitaminSupplement();" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">

                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                                                    Is your child currently taking a vitamin supplement?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="ChildVitaminSupplementlist" style="width:122%;">
                                                                                                    @if (Model.AvailableChildVitamin != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedChildVitamin.CDietInfoID, m => m.AvailableChildVitamin, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }
                                                                                                </div>
                                                                                                <div id="Diet">
                                                                                                    @if (Model.AvailableChildVitamin != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableChildVitamin)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button data-dismiss="modal" name="Creates" style="margin-top:-6px; width:20% !important;" onclick="SaveChildVitaminSupplement();" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@

                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="EHSRMCHC" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddEhsOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                                                    Has this child received medical treatment for the following chronic health conditions
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="EHSChildChecklist" style="width:81%;">
                                                                                                    @if (Model.AvailableEHS != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedMedicalEHS.ChildEHSID, m => m.AvailableEHS, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="EHSProg">
                                                                                                    @if (Model.AvailableEHS != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableEHS)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="EHSChronicHealthConditions();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.EhsChronicHealthConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddEhsOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row qualifierdiv">
                                                                <div class="modal fade scroll-modal " id="EHSCHC" role="dialog">
                                                                    @*scroll-modal*@
                                                                    <div class="modal-dialog ">
                                                                        @*income-popup width-auto*@
                                                                        <!-- Modal content-->
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h3>Chronic Health Conditions<span class="extra-title muted"></span></h3>
                                                                                <button onclick="AddEhsCHCOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;float:right;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                            </div>
                                                                            <div class="control-group">
                                                                                @*add-useragform*@
                                                                                <div class="">
                                                                                    @*col-sm-12*@
                                                                                    <div class="row">
                                                                                        @*<div class="row qualifierdiv">*@
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            @*col-sm-6*@
                                                                                            <div class="form-group">

                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; margin-bottom:10px; color:#595959">
                                                                                                    Is this child receiving treatment for any of the following chronic health conditions?
                                                                                                </div>
                                                                                                <br />
                                                                                                <div class="col-md-6 input_wd scroll-none adddvispace" id="EHSCHCChildChecklist" style="width:81%;">
                                                                                                    @if (Model.AvailableEHS != null)
                                                                                                    {
                                                                                                        @Html.CheckBoxListFor(m => m.PostedPostedEHS.ChildEHSID,
                               m => m.AvailableEHS, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                                                                    }

                                                                                                </div>
                                                                                                <div id="EHSProg">
                                                                                                    @if (Model.AvailableEHS != null)
                                                                                                    {
                                                                                                        foreach (var item1 in Model.AvailableEHS)
                                                                                                        {
                                                                                                            <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                                                                        }
                                                                                                    }


                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                            <div class="form-group">
                                                                                                <div class="col-lg-12 col-md-7 col-sm-12" style="line-height: normal; color:#595959">
                                                                                                    Other Conditions
                                                                                                    <a href="javascript:void(0)" onclick="SaveEhsCho();"><i class="fa fa-plus-square"></i></a>
                                                                                                </div>
                                                                                                <div class="col-md-6 input_wd adddvispace" id="cstomChecklist" style="width:81%;">
                                                                                                    @Html.TextBoxFor(m => m.EhsCHConditions, new { placeholder = "Other Conditions", maxlength = "50", @class = "form-control", tabIndex = "1" })

                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        @*<div class="col-lg-12 col-md-6 col-sm-12 adddivspace">
                                                                                                <div class="form-group">
                                                                                                    <label for="email"></label>
                                                                                                    &nbsp;
                                                                                                    <button onclick="AddEhsCHCOtherConditions();" data-dismiss="modal" name="Creates" style="margin-top:-26px; width:20% !important;" class="my-btn" tabindex="2" type="button">Save & Close</button>
                                                                                                </div>
                                                                                            </div>*@
                                                                                    </div>
                                                                                </div>
                                                                            </div>



                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>






                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                            <div class="btnwrp_subcal">
                                                                @*<button class="my-btn" type="button" tabindex="22">Previous</button>*@
                                                                @*<button type="submit" value="SaveFamilyDetails" onclick="return isValidnotall();" id="BtnMsave" name="Command" class="my-btn">Submit</button>*@
                                                                @*<button type="submit" id="btnChild" onclick="return isValidChildInfo();" value="SaveFamilyDetails" name="Command" class="my-btn">Screening</button>*@
                                                                <input type="hidden" name="ChildId" id="ChildId" value="@Model.ChildId">
                                                                <input type="hidden" name="DobFileName" id="DobFileName" value="@Model.DobFileName">
                                                                <input type="hidden" name="ImmunizationFileName" id="ImmunizationFileName" value="@Model.ImmunizationFileName">
                                                                @Html.HiddenFor(m => m.Imagejson)
                                                                @Html.HiddenFor(m => m.CFileName)
                                                                @Html.HiddenFor(m => m.CFileExtension)
                                                                <input type="hidden" name="Encrypthouseholid" id="Encrypthouseholid" value="@Model.Encrypthouseholid">
                                                                <div class="clear"></div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                        <div class="table-responsive">
                                            <table class="table table_size" id="gridViewAgency">
                                                <thead style="cursor:pointer;">
                                                    <tr style="text-align:center;">
                                                        <th>Child Name</th>
                                                        <th width="10%;">Child Image</th>
                                                        <th>DOB</th>
                                                        <th>Gender</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model._Clist != null && Model._Clist.Count > 0)
                                                    {

                                                        foreach (var childitem in Model._Clist)
                                                        {
                                                            <tr>
                                                                <td height="70"><a onclick="Getchild(this);" style="cursor:pointer;" accesskey="@childitem.ChildId">@childitem.Cfirstname  @childitem.Cmiddlename  @childitem.Clastname </a> </td>
                                                                <td height="70" style="text-align:center;">
                                                                    @if (@childitem.Imagejson == "")
                                                                    {
                                                                        <img height='50' class="roundimage ZoomImage" width='50' src="~/Content/img/download.jpg" />
                                                                    }
                                                                    else
                                                                    {
                                                                        <img height='50' class="roundimage ZoomImage" width='50' src="data:image/jpg;base64,@childitem.Imagejson" />
                                                                    }
                                                                </td>
                                                                <td height="70" style="text-align:center;">@childitem.CDOB</td>
                                                                <td height="70" style="text-align:center;">@childitem.CGender</td>
                                                                <td height="70" style="text-align:center;"><a href='#' onclick="deletechild(this);" accesskey="@childitem.ChildId">Delete</a></td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>

                                            </table>

                                            @if (Model._Clist != null && Model._Clist.Count < 1)
                                            {
                                                <div id="div1" style="text-align:center">
                                                    <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div id="div1" style="text-align:center;display:none;">
                                                    <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                </div>


                                            }



                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="btnwrp_subcal">
                                        <button class="my-btn" type="button" tabindex="22">Previous</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="OtherinHousehold">
                            <div class="add-useragform add-useragform2">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>First Name <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.Ofirstname, new { placeholder = "First Name", id = "Ofirstname", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Middle Name </label>
                                                @Html.TextBoxFor(m => m.Omiddlename, new { placeholder = "Middle Name", id = "Omiddlename", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Last Name <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.Olastname, new { placeholder = "Last Name", id = "Olastname", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group datepicker-days">
                                                <label>DOB <sup>*</sup></label>
                                                <div class="date custom-time">
                                                    @Html.TextBoxFor(m => m.ODOB, new { placeholder = "MM/DD/YYYY", id = "ODOB", Name = "ODOB", maxlength = "50", @class = "form-control", @onchange = "checkdateOther();", @onblur = "return validatedate(this);" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Gender <sup>*</sup></label>
                                                <div class="cont-sz">
                                                    <div class="col-xs-6 col-sm-4">
                                                        @Html.RadioButtonFor(m => m.OGender, "2", new { id = "OGenderfemale" })
                                                        <span>Female </span>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-3">
                                                        @Html.RadioButtonFor(m => m.OGender, "1", new { id = "OGendermale" })
                                                        <span>Male</span>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-4">
                                                        @Html.RadioButtonFor(m => m.OGender, "3", new { id = "OGenderother" })
                                                        <span>Other </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label id="lblOemergencycontact" style="display:none;">Is emergency contact? </label>
                                                <div class="cont-sz">
                                                    @Html.CheckBoxFor(m => m.Oemergencycontact, new { @class = "minimal", tabIndex = "1", style = "display:none;", @onchange = "copydata();" })

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Profile Picture </label>
                                                @Html.TextBoxFor(m => m.HouseHoldAvatar, new { id = "HouseHoldAvatar", Name = "HouseHoldAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                <div class="img-iconavt">
                                                    <img alt="" id="imgHouseHoldAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.HouseHoldAvatarUrl)' style="border-style:none;" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group datepicker-days">
                                                <label>SSN </label>
                                                <div class="date custom-time">
                                                    @Html.TextBoxFor(m => m.ParentSSN3, new { placeholder = "SSN", @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>




                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            @*<button type="submit" id="btnother" class="my-btn" value="SaveOthershousehold" name="Command" onclick="return isValidOtherInfo();">Submit</button>*@
                                            <button type="button" id="btnother" class="my-btn" onclick="AddOthersHousehold();">Submit</button>
                                            <button onclick="ClearsOthers();" class="my-btn" type="button" tabindex="22">Cancel</button>
                                            <input type="hidden" name="OthersId" id="OthersId" value="@Model.OthersId">
                                            <input type="hidden" name="Alreadyemergencycontact" id="Alreadyemergencycontact" value="@Model.Alreadyemergencycontact">
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="table-responsive">
                                                <table class="table table_size" id="gridViewOther">
                                                    <thead style="cursor:pointer;">
                                                        <tr style="text-align:center;">
                                                            <th>Name </th>
                                                            <th>Contact Image </th>
                                                            <th>Gender</th>
                                                            <th>DOB</th>
                                                            <th>SSN</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>

                                                        @if (Model._Olist != null && Model._Olist.Count > 0)
                                                        {
                                                            foreach (var otheritem in Model._Olist)
                                                            {
                                                                <tr>
                                                                    <td style="text-align:center;"><a href="#" onclick='GetOther(this);' accesskey="@otheritem.OthersId">@otheritem.Ofirstname</a></td>
                                                                    <td height="70" style="text-align:center;">
                                                                        @if (@otheritem.HouseHoldImagejson == "")
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="~/Content/img/download.jpg" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="data:image/jpg;base64,@otheritem.HouseHoldImagejson" />
                                                                        }
                                                                    </td>
                                                                    <td style="text-align:center;">@otheritem.OGender</td>
                                                                    <td style="text-align:center;">@otheritem.ODOB</td>
                                                                    <td style="text-align:center;">@otheritem.CSSN</td>
                                                                    <td><a href="#" onclick='deleteother(this);' accesskey="@otheritem.OthersId">Delete</a></td>
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>

                                                @if (Model._Olist != null && Model._Olist.Count < 1)
                                                {
                                                    <div id="divO1" style="text-align:center">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="divO1" style="text-align:center;display:none;">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="Qualifier">
                            <div class="row qualifierdiv">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                    <div class="table-responsive">
                                        <table class="table table_size" id="Qualifier">
                                            <thead style="cursor:pointer;">
                                                <tr>
                                                    <th style="width:24%;">Child/PM</th>
                                                    <th>Program</th>
                                                    <th>Poverty Percentage</th>
                                                    <th>Selection Points</th>
                                                    <th>Status</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.QualifierRecords != null && Model.QualifierRecords.Count > 0)
                                                {
                                                    foreach (var item in Model.QualifierRecords)
                                                    {
                                                        <tr @if (item.IsFutureIntake) { <text> class="futurequalifier" </text>  }>
                                                            <td>@item.Name</td>
                                                            <td>@item.Programtype</td>

                                                            @if (!string.IsNullOrEmpty(item.PovertyPercentage))
                                                            {
                                                                if (Convert.ToInt32(item.PovertyPercentage) > 100)
                                                                {
                                                                    if (!item.Iswaiting && !item.IsAccepted)
                                                                    {
                                                                        <td style="text-align:right;"><a style="color:orange;" href="javascript:void(0)" accesskey="@item.clientid" data-toggle="modal" onclick="SetPoverty(this,1);" data-target="#MyQualifier">@item.PovertyPercentage % <i class="fa fa-arrow-up"></i></a></td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td style="text-align:right;"><a style="color:#3e4c5a;" href="javascript:void(0)" data-toggle="modal" onclick="SetPoverty(this,0);" data-target="#MyQualifier">@item.PovertyPercentage % <i class="fa fa-arrow-up"></i></a></td>
                                                                    }
                                                                }
                                                                else
                                                                {

                                                                    if (!item.Iswaiting && !item.IsAccepted)
                                                                    {
                                                                        <td style="text-align:right;"><a href="javascript:void(0)" accesskey="@item.clientid" data-toggle="modal" onclick="SetPoverty(this,1);" data-target="#MyQualifier">@item.PovertyPercentage % <i class="fa fa-arrow-up"></i></a></td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td style="text-align: right; "><a style="color: #3e4c5a; " href="javascript:void(0)" data-toggle="modal" onclick="SetPoverty(this,0);" data-target="#MyQualifier">@item.PovertyPercentage % <i class="fa fa-arrow-up"></i></a></td>
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (!item.Iswaiting && !item.IsAccepted)
                                                                {
                                                                    <td style="text-align:right;"><a href="javascript:void(0)" accesskey="@item.clientid" data-toggle="modal" onclick="SetPoverty(this,1);" data-target="#MyQualifier"> % <i class="fa fa-arrow-up"></i></a></td>
                                                                }
                                                                else
                                                                {

                                                                    <td style="text-align: right;"><a style="color: #3e4c5a;" href="javascript:void(0)" data-toggle="modal" onclick="SetPoverty(this,0);" data-target="#MyQualifier">0 % <i class="fa fa-arrow-up"></i></a></td>
                                                                }




                                                            }
                                                            @if (!string.IsNullOrEmpty(item.Selectionpoint))
                                                            {
                                                                if (!item.Iswaiting && !item.IsAccepted)
                                                                {
                                                                    <td style="text-align:right;"> <a href="javascript:void(0)" data-toggle="modal" onclick="getselectionpoint(this,1);" accesskey="@item.Programid" clientdid="@item.clientid" clientype="@item.ClientType" data-target="#Myselectionpoint">@item.Selectionpoint <i class="fa fa-arrow-up"></i></a></td>
                                                                }
                                                                else
                                                                {
                                                                    <td style="text-align:right;"> <a style="color:#3e4c5a;" href="javascript:void(0)" data-toggle="modal" onclick="getselectionpoint(this,0);" accesskey="@item.Programid" clientdid="@item.clientid" clientype="@item.ClientType" data-target="#Myselectionpoint">@item.Selectionpoint <i class="fa fa-arrow-up"></i></a></td>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (!item.Iswaiting && !item.IsAccepted)
                                                                {
                                                                    <td style="text-align:right;"> <a href="javascript:void(0)" data-toggle="modal" onclick="getselectionpoint(this,1);" accesskey="@item.Programid" clientdid="@item.clientid" clientype="@item.ClientType" data-target="#Myselectionpoint">0 <i class="fa fa-arrow-up"></i></a></td>
                                                                }
                                                                else
                                                                {
                                                                    <td style="text-align:right;"> <a style="color:#3e4c5a;text-decoration:none;cursor:default;" href="javascript:void(0)">0 <i class="fa fa-arrow-up"></i></a></td>
                                                                }
                                                            }
                                                            @if (item.ApplicationStatus == 0 || string.IsNullOrEmpty(item.Selectionpoint) || item.Selectionpoint == "0")
                                                            {
                                                                <td><a style="text-decoration: underline; color: red;" title="Please fill all mandatory field" accesskey="@item.clientid" programid="@item.Programid" onclick="ApplicationStatus(this);" href="javascript:void(0)">Incomplete</a></td>
                                                            }
                                                            else
                                                            {
                                                                <td><a style="text-decoration: underline; color: #337ab7;"  href="javascript:void(0)">Complete</a></td>
                                                            }
                                                            <td>
                                                                @*@if (item.HealthReviewAllowed > 0)
                                                                    {
                                                                        if (item.ClientType == "-1")
                                                                        {
                                                                            if (item.HealthReview == 0)
                                                                            {
                                                                                <a class="Healthhover" title="Send application for health review" accesskey="@item.clientid" programid="@item.Programid" onclick="HealthreviewPopup(this);" href="javascript:void(0)"> <img src="~/Content/img/health-icon-red.png" />  </a>
                                                                            }
                                                                            else if (item.HealthReview == 1)
                                                                            {
                                                                                <a title="Pending Review" href="javascript:void(0)"><img src="~/Content/img/health-icon-red.png" /></a>
                                                                            }
                                                                            else if (item.HealthReview == 2)
                                                                            {
                                                                                <a title="Health Verified" href="javascript:void(0)"><img src="~/Content/img/health-icon-green.png" /></a>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <a style="margin-left:8%;" href="javascript:void(0)"></a>
                                                                        }
                                                                    }*@
                                                                &nbsp;&nbsp;
                                                                @if (!item.Iswaiting && !item.IsAccepted)
                                                                {
                                                                    if (item.ApplicationStatus == 1)
                                                                    {

                                                                        if (!item.Iswaiting && !item.IsAccepted)
                                                                        {
                                                                            <a style="text-decoration:underline;" accesskey="@item.clientid" programid="@item.Programid" onclick="Acceptwaitinglist(this);" href="javascript:void(0)">Waiting List <i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                        else
                                                                        {
                                                                            <a style="color:#AAAFB4;text-decoration:none;cursor:default;" href="javascript:void(0)">Waiting List<i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (!item.Iswaiting && !item.IsAccepted)
                                                                        {
                                                                            <a style="text-decoration:underline;" accesskey="@item.clientid" programid="@item.Programid" href="javascript:void(0)" onclick="Acceptwaitinglist(this);">Waiting List <i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                        else
                                                                        {
                                                                            <a style="color:#AAAFB4; text-decoration:none; cursor:default;" href="javascript:void(0)">Waiting List <i class="fa fa-arrow-up"></i></a>

                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (!item.Iswaiting && !item.IsAccepted)
                                                                    {
                                                                        <a style="text-decoration:underline;" href="javascript:void(0)">Waiting List <i class="fa fa-arrow-up"></i></a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <a style="color:#AAAFB4; text-decoration:none; cursor:default;" href="javascript:void(0)">Waiting List <i class="fa fa-arrow-up"></i></a>
                                                                    }


                                                                }
                                                                &nbsp;&nbsp;
                                                                @if (!item.IsAccepted && !item.Iswaiting)
                                                                {
                                                                    if (item.ApplicationStatus == 1)
                                                                    {

                                                                        if (!item.Iswaiting && !item.IsAccepted && !item.IsFutureIntake)
                                                                        {
                                                                            <a style="text-decoration:underline;" accesskey="@item.clientid" programid="@item.Programid " onclick="AcceptProcess(this);" href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                        else
                                                                        {
                                                                            @*<a style="color: #AAAFB4; text-decoration: none; cursor: default;" href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                                <a style="text-decoration:underline;" href="javascript:void(0)">Acceptance Hirarchy  <i class="fa fa-arrow-up"></i></a>*@

                                                                        }
                                                                    }
                                                                    else
                                                                    {

                                                                        if (!item.Iswaiting && !item.IsAccepted && !item.IsFutureIntake)
                                                                        {
                                                                            <a style="text-decoration:underline;" accesskey="@item.clientid" programid="@item.Programid " href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                        else
                                                                        {
                                                                            <a style="color: #AAAFB4; text-decoration: none; cursor: default;" href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (!item.Iswaiting && !item.IsAccepted && !item.IsFutureIntake)
                                                                    {
                                                                        <a style="text-decoration:underline;" href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <a style="color: #AAAFB4; text-decoration: none; cursor: default;" href="javascript:void(0)">Acceptance Process <i class="fa fa-arrow-up"></i></a>
                                                                        @*<a style="text-decoration:underline;" href="javascript:void(0)">Acceptance Hirarchy  <i class="fa fa-arrow-up"></i></a>*@

                                                                    }
                                                                }
                                                            </td>

                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                        @if (Model.QualifierRecords == null || Model.QualifierRecords.Count <= 0)
                                        {
                                            <div id="div1" style="text-align:center;">
                                                <label>No result found.</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row qualifierdiv">
                                <div class="modal fade scroll-modal" id="MyQualifier" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3> Poverty Calculation<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                    <div class="table-responsive">
                                                        <table class="table table_size" id="Qualifier">
                                                            <thead style="cursor:pointer;">
                                                                <tr>
                                                                    <th>Guardian Name</th>
                                                                    <th>Income</th>
                                                                    <th>Percentage</th>
                                                                    <th>Amount</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @if (Model.Pfirstname != null)
                                                                {
                                                                    string name = Model.Pfirstname + " " + Convert.ToString(Model.Pmidddlename) + " " + Convert.ToString(Model.Plastname);
                                                                    <tr>
                                                                        <td width="31%;">@name</td>
                                                                        <td width="29%;"><span id="incomeq1"></span></td>
                                                                        <td>
                                                                            <input type="text" maxlength="5" id="percage1" value="100" onblur="CalculatePercentage(this);" class="form-control" />
                                                                        </td>
                                                                        <td>
                                                                            <input type="text" class="form-control" readonly="readonly" id="Amountqca1" />
                                                                        </td>
                                                                    </tr>
                                                                }
                                                                @if (Model.P1firstname != null)
                                                                {
                                                                    string name = Model.P1firstname + " " + Convert.ToString(Model.P1midddlename) + " " + Convert.ToString(Model.P1lastname);
                                                                    <tr>
                                                                        <td width="31%;">@name</td>
                                                                        <td width="29%;"><span id="incomeq2"></span></td>
                                                                        <td>
                                                                            <input type="text" maxlength="5" id="percage2" value="100" onblur="CalculatePercentage1(this);" class="form-control" />
                                                                        </td>
                                                                        <td>
                                                                            <input type="text" class="form-control" readonly="readonly" id="Amountqca2" />
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="add-useragform">
                                                    <div class="row qualifierdiv">
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label for="email">Total people in Household </label>
                                                                &nbsp;
                                                                <input type="text" id="Peopleinhousehold" readonly="readonly" class="form-control" value="@Model.totalhousehold" />
                                                                <input type="hidden" value="@Model.totalhousehold" id="totalhousehold">
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label for="email">Child Income</label>
                                                                &nbsp;
                                                                <input type="text" id="Childincome" readonly="readonly" class="form-control" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <label for="email">Calculated Poverty  </label>
                                                            @*<button style="width:170px !important;" class="my-btn" onclick="CalculatePoverty();" type="button">Calculate Poverty</button>*@
                                                        </div>
                                                        <div class="col-sm-2">

                                                            <input type="text" id="PovertyPercentage" readonly="readonly" class="form-control" />
                                                            <div style="margin-top:16px;">
                                                                <span style="padding-left:5px;">%</span>
                                                            </div>

                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="btnwrp_subcal">
                                                        <button onclick="Showpoverty();" class="my-btn" id="povertybtnSave" type="button">Save</button>
                                                        <button class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row qualifierdiv">
                                <div class="modal fade scroll-modal" id="AcceptanceProcess" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3>Acceptance Process<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">

                                                <div class="add-useragform">
                                                    <div class="row qualifierdiv">
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                                    <div class="table-responsive">
                                                                        <table class="table table_size" id="DivCenterlist">
                                                                            <thead style="cursor:pointer;">
                                                                                <tr>
                                                                                    <th>Center Name</th>
                                                                                    <th width="34%;">Address</th>
                                                                                    <th>Zip</th>
                                                                                    <th width="12%;">Seats Available</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @if (Model != null && Model.HrcenterList != null && Model.HrcenterList.Count > 0)
                                                                                {
                                                                                    foreach (var item1 in Model.HrcenterList)
                                                                                    {
                                                                                        if (item1.CenterId != "0")
                                                                                        {
                                                                                            <tr ackey=@item1.Homebased.ToString()>
                                                                                                @*@if (item1.SeatsAvailable == "0")
                                                                                                    {
                                                                                                        <td>@item1.Name  <input name="Accept" disabled="disabled" value="@item1.CenterId" onchange="GetNurse(@item1.CenterId);" type="radio" /></td>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <td>@item1.Name  <input name="Accept" value="@item1.CenterId" onchange="GetNurse(@item1.CenterId);" type="radio" /></td>
                                                                                                    }*@
                                                                                                @if (item1.SeatsAvailable == "0" || Convert.ToInt32(item1.SeatsAvailable) <= -1)
                                                                                                {
                                                                                                    <td>@item1.Name  <input name="Accept" disabled="disabled" value="@item1.CenterId" type="radio" /></td>
                                                                                                }
                                                                                                else if (item1.Homebased)
                                                                                                {
                                                                                                    <td>@item1.Name  <input name="Accept" value="@item1.CenterId" onchange="LoadFSWorHVList(@item1.CenterId,2);" type="radio" /></td>

                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <td>@item1.Name  <input name="Accept" value="@item1.CenterId" onchange="LoadFSWorHVList(@item1.CenterId,1);" type="radio" /></td>
                                                                                                }



                                                                                                <td>@item1.Address</td>
                                                                                                <td>@item1.Zip</td>
                                                                                                <td>@item1.SeatsAvailable</td>


                                                                                            </tr>
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-6" id="AssignFSW" style="display:none;">
                                                                <div class="col-sm-12 divposition">
                                                                    <div class="form-group DivHide" id="DivForFSW">
                                                                        <label for="email">Assign Family Advocate <sup>*</sup></label>
                                                                        <select id="selAssignFSW" onchange="AskForAlert(this);" class="form-control"></select>
                                                                    </div>
                                                                    <div class="form-group DivHide" id="DivForHV">
                                                                        <label for="email">Assign Family Advocate <sup>*</sup></label>
                                                                        <select id="selAssignHV" onchange="AskForAlert(this);" class="form-control"></select>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="btnwrp_subcal">
                                                        <button onclick="SaveAcceptanceprocess();" class="my-btn" type="button">Save</button>
                                                        <button class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row qualifierdiv">
                                <div class="modal fade" id="Waitinglist" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content scroll-modal">
                                            <div class="modal-header">
                                                <h3>Waiting List<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group ">
                                                <div class="row qualifierdiv">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <div class="col-sm-3">
                                                                <input id="centerall" onchange="Getallcenter(this);" type="checkbox" />
                                                                <span>Show All Centers</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row" style="margin-top:2%;">
                                                        <div class="col-sm-12">
                                                            <div class="col-sm-6">
                                                                <span style="color:red;">
                                                                    Hint: You can select up to 3 centers (1,2,3).
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="add-useragform ">
                                                    <div class="row qualifierdiv">
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                                    <div class="table-responsive">
                                                                        <table class="table table_size" id="DivWaitinglist">
                                                                            <thead style="cursor:pointer;">
                                                                                <tr>
                                                                                    <th>Center Name</th>
                                                                                    <th width="14%">Address</th>
                                                                                    <th width="7%">Zip</th>
                                                                                    <th width="12%">Seats Available</th>
                                                                                    <th width="5%">Options</th>
                                                                                    <th width="30%">Notes</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @if (Model != null && Model.HrcenterList != null && Model.HrcenterList.Count > 0)
                                                                                {
                                                                                    foreach (var item1 in Model.HrcenterList)
                                                                                    {
                                                                                        if (item1.CenterId != "0")
                                                                                        {
                                                                                            <tr ackey=@item1.Homebased.ToString()>
                                                                                                <td>@item1.Name  <input name="Accept" onchange="Clearselect(this);" value="@item1.CenterId" type="checkbox" /></td>
                                                                                                <td>@item1.Address</td>
                                                                                                <td>@item1.Zip</td>
                                                                                                <td>@item1.SeatsAvailable</td>
                                                                                                <td>
                                                                                                    <select>
                                                                                                        <option value="1">1</option>
                                                                                                        <option value="2">2</option>
                                                                                                        <option value="3">3</option>
                                                                                                    </select>
                                                                                                    @*<input type="text" style="width:100% !important;" onkeyup="if (/[^1-3]/g.test(this.value)) this.value = this.value.replace(/[^1-3]/g, '')" maxlength="1" class="form-control" />*@


                                                                                                </td>
                                                                                                <td><input type="text" style="width:100% !important;" maxlength="60" class="form-control" /></td>
                                                                                            </tr>
                                                                                        }
                                                                                    }
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="btnwrp_subcal">
                                                        <button onclick="SaveWaitinglist();" class="my-btn" type="button">Save</button>
                                                        <button class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>


                            </div>
                            <div class="row qualifierdiv">
                                <div class="modal fade scroll-modal" id="Myselectionpoint" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3> Selection Point<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group scroll_none">
                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main table-scroll">
                                                    <div class="table-responsive ">
                                                        <table class="table table_size" id="selectionpoint">
                                                            <thead style="cursor:pointer;">
                                                                <tr>
                                                                    <th>Selection Criteria</th>
                                                                    <th>Points</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody></tbody>
                                                        </table>
                                                        <div id="divselectionpoint" style="text-align:center;display:none;">
                                                            <label style="font:bold !important; ">No result found.</label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="col-sm-8"></div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group add-useragform">
                                                            <label for="email">Total Points </label>
                                                            <input type="text" id="Totalselectionpoint" readonly="readonly" class="form-control" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div id="Hidecustomquestion">
                                                    <div class="col-lg-12">
                                                        <h3 class="page-header1">
                                                            <span>Other Questions</span>
                                                        </h3>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main table-scroll">
                                                        <div class="table-responsive ">
                                                            <table class="table table_size" id="Custompoint">
                                                                <thead style="cursor:pointer;">
                                                                    <tr>
                                                                        <th width="60%">Question</th>
                                                                        <th>Option</th>
                                                                        <th>Points</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody></tbody>
                                                            </table>
                                                            <div id="divquestionpoint" style="text-align:center;display:none;">
                                                                <label style="font:bold !important; ">No result found.</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-12">
                                                        <div class="col-sm-8"></div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group add-useragform">
                                                                <label for="email">Total Points </label>
                                                                <input type="text" id="Totalcustompoint" readonly="readonly" class="form-control" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="col-sm-8"></div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group add-useragform">
                                                            <label for="email">Grand Total </label>
                                                            <input type="text" id="Grandpoint" readonly="readonly" class="form-control" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="btnwrp_subcal">
                                                        <button data-dismiss="modal" onclick="Saveselectionpoint();" id="btnSaveSelectionPoint" class="my-btn" type="button">Save</button>
                                                        <button class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                    </div>
                                                </div>


                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div class="row qualifierdiv">
                                @*29082016 *@
                                <div class="modal fade" id="HealthReview" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content scroll-modal">
                                            <div class="modal-header">
                                                <h3>Health Review<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="add-useragform ">
                                                    <div class="row qualifierdiv">
                                                        <div class="row">

                                                            <div class="col-sm-12">
                                                                <div class="col-sm-12">
                                                                    <fieldset style="border: 1px solid #295b8f; ">
                                                                        <legend class="legend1"></legend>
                                                                        <div class="col-sm-9" style="margin-bottom:1%;">
                                                                            <div class="col-sm-2">
                                                                                <label style="width:100%;">Client Name</label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <label style="width: 100%; font-size: 15px; color: #337ab7;" id="ClientName"></label>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9">
                                                                            <div class="col-sm-2">
                                                                                <label style="width:100%;">Center Name<sup>*</sup></label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <select onchange="GetHealthStaff();" class="form-control" id="ddlcentername">
                                                                                    @if (Model != null && Model.HrcenterList != null && Model.HrcenterList.Count > 0)
                                                                                    {
                                                                                        foreach (var item2 in Model.HrcenterList)
                                                                                        {
                                                                                            if (item2.CenterId != "0")
                                                                                            {
                                                                                                <option value="@item2.CenterId">@item2.Name</option>
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                </select>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9">
                                                                            <div class="col-sm-2">
                                                                                <label style="width:100%;">Assign To<sup>*</sup></label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <select class="form-control" id="ddlassignto"></select>
                                                                            </div>
                                                                        </div>
                                                                    </fieldset>
                                                                </div>
                                                            </div>


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="btnwrp_subcal">
                                                        <button onclick="SaveHealthReview();" class="my-btn" type="button">Save</button>
                                                        <button class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>








                        </div>
                        <div class="tab-pane fade" id="EmergencyContacts">
                            <div class="add-useragform add-useragform2">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>First Name <sup>*</sup></label>
                                                <input type="text" placeholder="First Name" id="Efirstname" name="Efirstname" value='@Model.Efirstname' maxlength="50" class="form-control" />

                                                @*@Html.TextBoxFor(m => m.Efirstname, new { placeholder = "First Name", id = "Efirstname", maxlength = "50", @class = "form-control" })*@
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Middle Name </label>
                                                <input type="text" placeholder="Middle Name" id="Emiddlename" name="Emiddlename" value='@Model.Emiddlename' maxlength="50" class="form-control" />
                                                @*@Html.TextBoxFor(m => m.Emiddlename, new { placeholder = "Middle Name", id = "Emiddlename", maxlength = "50", @class = "form-control" })*@
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Last Name <sup>*</sup></label>
                                                <input type="text" placeholder="Last Name" id="Elastname" name="Elastname" value='@Model.Elastname' maxlength="50" class="form-control" />
                                                @*@Html.TextBoxFor(m => m.Elastname, new { placeholder = "Last Name", id = "Elastname", maxlength = "50", @class = "form-control" })*@
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group datepicker-days">
                                                <label>DOB</label>
                                                <div class="date custom-time">
                                                    <input type="text" placeholder="MM/DD/YYYY" id="EDOB" name="EDOB" value='@Model.EDOB' onblur="return validatedateemergency(this);" maxlength="50" class="form-control" />
                                                    @*@Html.TextBoxFor(m => m.EDOB, new { placeholder = "MM/DD/YYYY", id = "EDOB", Name = "EDOB", maxlength = "50", @class = "form-control" })*@

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Gender <sup>*</sup></label>
                                                <div class="cont-sz">
                                                    <div class="col-xs-6 col-sm-4">
                                                        @Html.RadioButtonFor(m => m.EGender, "2", new { id = "EGenderfemale" })
                                                        <span>Female </span>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-3">
                                                        @Html.RadioButtonFor(m => m.EGender, "1", new { id = "EGendermale" })
                                                        <span>Male</span>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-4">
                                                        @Html.RadioButtonFor(m => m.EGender, "3", new { id = "EGenderother" })
                                                        <span>Other </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Email Address</label>
                                                @Html.TextBoxFor(m => m.EEmail, new { placeholder = "Email", id = "EEmail", maxlength = "100", @class = "form-control", @onblur = "validateEmail1(this);" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Relation With Child <sup>*</sup></label>
                                                @{
                                                    List<SelectListItem> relation = new List<SelectListItem>();
                                                    foreach (var item in ViewBag.Relationship)
                                                    {
                                                        relation.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                    }

                                                    @Html.DropDownListFor(m => m.ERelationwithchild, new SelectList(relation, "Value", "Text"), new { @class = "form-control" })
                                                }
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Notes </label>
                                                @Html.TextBoxFor(m => m.Enotes, new { placeholder = "Notes", id = "Enotes", maxlength = "100", @class = "form-control" })
                                                <span>Add Contact No</span>
                                                <a href="javascript:void(0)" onclick="AddphoneE1();"><i class="fa fa-plus-square"></i></a>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Profile Picture </label>
                                                @Html.TextBoxFor(m => m.EAvatar, new { id = "EAvatar", Name = "EAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                <div class="img-iconavt">
                                                    <img alt="" id="imgEAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.EAvatarUrl)' style="border-style:none;" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main table-main">
                                            <div class="table-responsive">
                                                <table class="table table_size" id="gridphoneE1">
                                                    <thead style="cursor:pointer;">
                                                        <tr>
                                                            <th id="thIN">Phone Type</th>
                                                            <th id="thIN">Phone No</th>
                                                            <th id="thIN">Is Primary No.</th>
                                                            <th id="thnt">Notes</th>
                                                            <th id="thCust">SMS </th>
                                                            <th id="thCust">Action </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>
                                                                <select class="form-control" style="width:100%;" name="PhoneNos[0].PhoneType" onchange="addcontact(this);">
                                                                    <option value="1">Home</option>
                                                                    <option value="2">Mobile</option>
                                                                    <option value="3">Work</option>
                                                                </select>
                                                            </td>
                                                            <td><input class="form-control" name="PhoneNos[0].PhoneNo" type="text"></td>
                                                            <td><input type="checkbox" value="true" name="PhoneNos[0].IsPrimary" data-val="true" id="IsPrimary" class="chcketbl" onchange="uncheckother(this);" /></td>
                                                            <td><input class="form-control" type="text" data-val="true" name="PhoneNos[0].Notes" maxlength="100"></td>
                                                            <td><input type="checkbox" style="width:50%;" disabled="disabled" name="PhoneNos[0].IsSms" value="true" class="chcketbl" /></td>
                                                            <td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            @*<button type="submit" id="btnEmergency" class="my-btn" value="SaveEmergencyDetail" onclick="return isValidEmergencyInfo();" name="Command">Submit</button>*@
                                            <button type="button" id="btnEmergency" class="my-btn" onclick="AddEmergencyContact();">Submit</button>
                                            @Html.HiddenFor(m => m.EAvatarUrl, new { id = "EAvatarUrl", Name = "EAvatarUrl" })
                                            <input type="hidden" name="totalcontrol" id="totalcontrol">
                                            @*<button id="btnExitemergency" class="my-btn" type="button" tabindex="22">Exit</button>*@
                                            <input type="hidden" name="EmegencyId" id="EmegencyId" value="@Model.EmegencyId">
                                            @Html.HiddenFor(m => m.EImagejson)
                                            @Html.HiddenFor(m => m.EFileName)
                                            @Html.HiddenFor(m => m.EFileExtension)
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="table-responsive">
                                                <table class="table table_size" id="gridViewEmergencyContact">
                                                    <thead style="cursor:pointer;">
                                                        <tr style="text-align:center;">
                                                            <th>Name </th>
                                                            <th width="15%;">Contact Image</th>
                                                            <th>DOB</th>
                                                            <th>Relation With Child</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model._Elist != null && Model._Elist.Count > 0)
                                                        {
                                                            foreach (var Eitem in Model._Elist)
                                                            {

                                                                <tr>
                                                                    <td height="70">
                                                                        <a href="#" onclick="Getemergencycontact(this);" accesskey="@Eitem.EmegencyId">@Eitem.Efirstname</a>
                                                                    </td>
                                                                    <td height="70" style="text-align:center;">
                                                                        @if (@Eitem.EImagejson == "")
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="~/Content/img/download.jpg" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="data:image/jpg;base64,@Eitem.EImagejson" />
                                                                        }
                                                                    </td>
                                                                    <td height="70" style="text-align:center;">@Eitem.EDOB</td>
                                                                    <td height="70" style="text-align:center;">@Eitem.ERelationwithchild</td>
                                                                    <td height="70" style="text-align:center;"><a href='#' onclick="deleteEmergencycontact(this);" accesskey="@Eitem.EmegencyId">Delete</a></td>


                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                                @if (Model._Elist != null && Model._Elist.Count < 1)
                                                {
                                                    <div id="divE1" style="text-align:center">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="divE1" style="text-align:center;display:none;">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="tab-pane fade" id="RestrictedList">
                            <div class="add-useragform">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>First Name <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.Rfirstname, new { placeholder = "First Name", id = "Rfirstname", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Last Name <sup>*</sup></label>
                                                @Html.TextBoxFor(m => m.Rlastname, new { placeholder = "Last Name", id = "Rlastname", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Notes </label>
                                                @Html.TextBoxFor(m => m.RDescription, new { placeholder = "Notes", id = "RDescription", maxlength = "50", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <div class="form-group">
                                                <label>Attach Profile Picture </label>
                                                @Html.TextBoxFor(m => m.RAvatar, new { id = "RAvatar", Name = "RAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                <div class="img-iconavt">
                                                    <img alt="" id="imgRAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.RAvatarUrl)' style="border-style:none;" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="btnwrp_subcal">
                                            @*<button type="submit" id="btnRestricted" class="my-btn" value="SaveRestrictedData" name="Command" onclick="return isValidRestrictedInfo();">Submit</button>*@
                                            <button type="button" id="btnRestricted" class="my-btn" onclick="SaveRestrictedInfo();">Submit</button>
                                            <input type="hidden" name="RestrictedId" id="RestrictedId" value="@Model.RestrictedId">
                                            @Html.HiddenFor(m => m.RAvatarUrl, new { id = "RAvatarUrl", Name = "RAvatarUrl" })
                                            @Html.HiddenFor(m => m.RImagejson)
                                            @Html.HiddenFor(m => m.RFileName)
                                            @Html.HiddenFor(m => m.RFileExtension)
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="table-responsive">
                                                <table class="table table_size" id="gridViewRestrictedlist">
                                                    <thead style="cursor:pointer;">
                                                        <tr style="text-align:center;">
                                                            <th width="24%;">Name</th>
                                                            <th width="14%;">Contact Image</th>
                                                            <th>Notes</th>
                                                            <th width="10%;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model._Rlist != null && Model._Rlist.Count > 0)
                                                        {
                                                            foreach (var ritem in Model._Rlist)
                                                            {
                                                                <tr>
                                                                    <td height="70"><a onclick="GetRestricted(this);" style="cursor:pointer;" accesskey="@ritem.RestrictedId">@ritem.Rfirstname  @ritem.Rlastname</a> </td>
                                                                    <td height="70" style="text-align:center;">
                                                                        @if (@ritem.RImagejson == "")
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="~/Content/img/download.jpg" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img height='50' class="roundimage ZoomImage" width='50' src="data:image/jpg;base64,@ritem.RImagejson" />
                                                                        }
                                                                    </td>
                                                                    <td height="70" style="text-align:center;">@ritem.RDescription</td>
                                                                    <td height="70" style="text-align:center;"><a href='#' onclick="deleteRestricted(this);" accesskey="@ritem.RestrictedId">Delete</a></td>
                                                                </tr>
                                                            }
                                                        }

                                                    </tbody>
                                                </table>

                                                @if (Model._Rlist != null && Model._Rlist.Count < 1)
                                                {
                                                    <div id="divR1" style="text-align:center">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="divR1" style="text-align:center;display:none;">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }


                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="FamilyFileCabinet">
                            <div class="add-useragform add-useragform2">
                                <div class="add-useragform">
                                    <div class="col-lg-12">
                                        <h2 class="page-header">
                                            <span>Add Application Notes</span>
                                        </h2>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-12">
                                            <div class="col-sm-10 adddivspace">
                                                <div class="form-group">

                                                    <input type="text" style="width:100%;" class="form-control" id="Applicationidnotes" placeholder="Application Notes" />
                                                </div>
                                            </div>
                                            <div class="col-sm-2 adddivspace text-right">
                                                <div class="form-group">
                                                    <button id="btnsave" class="my-btn" type="button" onclick="SaveNotes();" tabindex="22" style="width:100% !important;">Add Note</button>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12 adddivspace">
                                            <div class="table-responsive" style="padding-right: 15px;">
                                                <div class="col-sm-12" style="max-height: 191px; padding-right: 0px; overflow-y: auto; overflow-x: hidden;">
                                                    <table class="table table_size" id="gridViewfilenotes">
                                                        <thead style="cursor:pointer;">
                                                            <tr>
                                                                <th style="width:70%;">Application Notes</th>
                                                                <th>Entered By</th>
                                                                <th>Entered On</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model._Nlist != null && Model._Nlist.Count > 0)
                                                            {
                                                                foreach (var Nitem in Model._Nlist)
                                                                {
                                                                    <tr>
                                                                        <td>@Nitem.notes</td>
                                                                        <td style="text-align:center;">@Nitem.Name</td>
                                                                        <td style="text-align:center;">@Nitem.CreatedOn</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                                @if (Model._Nlist != null && Model._Nlist.Count < 1)
                                                {
                                                    <div id="divO1" style="text-align:center">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="divnotes" style="text-align:center;display:none;">
                                                        <label style="font:bold !important; margin-left:30%;">No result found.</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <h2 class="page-header">
                                        <span>Family Services</span>
                                    </h2>
                                </div>
                                <div class="row">

                                    <div class="col-sm-12">
                                        <div class="col-sm-8">
                                            <ul style="list-style:none;">
                                                <li style="float:left;margin-left:0px"><a title="Click here to open Case Notes" style="text-decoration:underline;font-size:17px;cursor:pointer;" onclick="ViewcaseNote();" href="javascript:void(0)">CN </a></li>
                                                <li style="float:left;margin-left:30px"><a title="Click here to open Family Partnership Agreement" style="text-decoration:underline;font-size:17px;" onclick="gotoFPA();" href="#">FPA </a></li>
                                                <li style="float:left;margin-left:30px"><a title="Click here to open Family Services Assessment" style="text-decoration:underline;font-size:17px;" href="#"> FSA </a></li>
                                                <li style="float:left;margin-left:30px"><a title="Click here to open Referals" style="text-decoration:underline;font-size:17px;" onclick="gotoRef();" href="#">REF </a></li>
                                                <li style="float:left;margin-left:30px"><a title="Click here to open workshop" style="text-decoration:underline;font-size:17px;" onclick="LoadWorkshopModal();" href="javascript:void(0)"> WORKSHOP </a></li>
                                            </ul>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-lg-12">
                                    <h2 class="page-header">
                                        <span>File Cabinet</span>
                                    </h2>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="col-sm-2">
                                        <ul style="list-style:none;" id="familydetailsId">
                                            <li><a href="javascript:void(0)" style="text-decoration:underline;font-size:17px;" id="familyHouseHold">Household</a></li>
                                            <li><a href="javascript:void(0)" style="text-decoration:underline;font-size:17px;" id="Guardian">Guardian </a></li>
                                            <li><a href="javascript:void(0)" style="text-decoration:underline;font-size:17px;">Child </a></li>
                                            <li><a href="javascript:void(0)" style="text-decoration:underline;font-size:17px;">Screening</a></li>
                                        </ul>
                                    </div>
                                    <div id="searchurl" class="col-sm-10"></div>
                                </div>

                            </div>
                            <div class="col-lg-12">
                                <h2 class="page-header">
                                    <span>Application Form </span>
                                </h2>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">

                                    <div class="col-sm-2" style="margin-bottom:1%;">

                                        <button type="button" value="pdf" title="Export to pdf">
                                            <img src="~/Content/img/pdf.png">
                                        </button>
                                    </div>
                                    <div class="clear"></div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <h2 class="page-header">
                                    <span>Assign Application </span>
                                </h2>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="col-sm-10 adddivspace">
                                        <label for="email">Assign Application To</label>
                                    </div>
                                    @Html.HiddenFor(m => m.ClientAssigned, new { id = "hdnClientAssignedID" })
                                    <div class="col-sm-5" style="margin-bottom:1%;">
                                        @{
                                            List<SelectListItem> clientlist = new List<SelectListItem>();
                                            foreach (var item in ViewBag.ClientAssignedTo)
                                            {
                                                clientlist.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                            }
                                        }
                                        @Html.DropDownListFor(m => m.ClientAssigned, new SelectList(clientlist, "Value", "Text", Model.StaffId), new { id = "DdlClientAssignedTo", @disabled = "disabled", Name = "DdlClientAssignedTo", @class = "form-control", @style = "width:100%;" })
                                    </div>
                                    <div class="col-sm-2 adddivspace">
                                        <div class="form-group">
                                            <button id="btnAssignapplication" disabled="disabled" onclick="SaveClientAssigned();" class="my-btn" type="button" tabindex="22" style="margin-top: -9%;">Assign Now</button>
                                        </div>
                                    </div>
                                    <div class="clear"></div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="modal fade scroll-modal" id="BmiModel" role="dialog">
            <div class="modal-dialog income-popup">
                <!-- Modal content-->
                <div class="modal-content" style="width:900px;">
                    <div class="modal-header">
                        <h3>Assessment<span class="extra-title muted"></span></h3>
                        <div class="col-sm-5 col-xs-12 pull-right" style="padding-right:0;">
                            <div class="btnwrp_subcal" style="padding:0; margin:0;">
                                <button type="button" class="my-btn pull-right" data-dismiss="modal">Exit</button>
                                <button type="button" onclick="CheckClientBMi();" class="my-btn pull-right">Ok</button>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="add-useragform">
                            <div class="row qualifierdiv">
                                <div class="row" style="margin-bottom:3%;">
                                    <div class="col-md-11 col-sm-12 mb10">
                                        <div class="form-group">

                                            <div class="col-sm-8">
                                                <span style="font-size:17px;">Select Type of Input:</span>

                                            </div>
                                            <div class="col-sm-12 cont-sz" style="margin-top:1%;">
                                                <div class="col-sm-12">
                                                    @Html.RadioButtonFor(m => m.HWInput, 1, new { id = "HWInput1" })
                                                    <span>Imperial (Inches/LBS)</span>
                                                </div>
                                                <div class="col-sm-12">
                                                    @Html.RadioButtonFor(m => m.HWInput, 2, new { id = "HWInput2" })
                                                    <span>Metrical (CM/Kgs) </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="col-sm-12">
                                            <fieldset style="border: 1px solid #295b8f; ">
                                                <legend class="legend1"></legend>
                                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                    <div class="table-responsive">
                                                        <table class="table table_size">
                                                            <thead style="cursor:pointer;">
                                                                <tr>
                                                                    <th style="width:31%;">Child Name</th>
                                                                    <th style="width:12%;">DOB</th>
                                                                    <th style="width:18%;">Assessment Date</th>
                                                                    <th style="width:13%;">Height</th>
                                                                    <th style="width:13%;">Weight</th>
                                                                    <th>Head Circ.</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td id="Clientbminame" style="text-align:center;"></td>
                                                                    <td id="ClientDob" style="text-align:center;"></td>
                                                                    <td><input class="form-control" style="width:100%;" placeholder="MM/DD/YYYY" onblur="CheckdateNew(this);" name="AssessmentDate" id="AssessmentDate" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" maxlength="10" onblur="ValidateWeightHeight(this);" name="AHeight" id="AHeight" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" maxlength="10" onblur="ValidateWeightHeight(this);" name="AWeight" id="AWeight" type="text"></td>
                                                                    <td><input class="form-control" style="width:100%;" name="HeadCircle" onblur="ValidateWeightHeight(this);" id="HeadCircle" type="text"></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="BMiModal" tabindex="-1" role="dialog" aria-labelledby="BMiModal" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <h4 class="modal-title" id="myModalLabel">Please select male or female for bmi calculatuion </h4>
                    </div>
                    <div class="modal-body">
                        <label class="radio-inline">
                            <input type="radio" name="BmiGender" id="Bmimale" value="2"> Female
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="BmiGender" id="Bmifemale" value="1"> Male
                        </label>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="my-btn1" onclick="CheckBmi();">Ok</button>
                        <button type="button" data-dismiss="modal" class="my-btn1">Exit</button>
                    </div>
                </div>
            </div>
        </div>
        @*Popup for Workshop on 23Dec2016*@
        <div class="modal fade" id="WorkshopModel" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 id="Resourece1">CENTER PARENT WORKSHOP INTEREST SURVEY  <span class="extra-title muted"></span></h3>@*Changes on 28Dec2016*@
                    </div>
                    <div class="control-group">
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                <div class="add-useragform">
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div class="form-group">
                                            <label for="RaceId">Center<sup>*</sup></label>
                                            @{
                                                List<SelectListItem> centerlist = new List<SelectListItem>();
                                                foreach (var item in ViewBag.Center)
                                                {
                                                    centerlist.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                }
                                            }
                                            @Html.DropDownListFor(m => m.CenterDetails, new SelectList(centerlist, "Value", "Text", Model.CenterDetails), new { id = "DdlCenter", Name = "DdlCenter", @class = "form-control" })
                                            <input type="hidden" name="WorkshopId" id="WorkshopId" value="@Model.WorkshopId">
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="wrap">
                                        @* <div class="col-sm-7 input_wd scroll-none adddvispace" id="Workshoplist">
                                                @if (Model.AvailableWorkshop != null)
                                                {
                                                    @Html.CheckBoxListFor(m => m.PostedPostedWorkshop.WorkshopID, m => m.AvailableWorkshop, m => m.Id, m => m.Name, m => m.IsSelected, MvcCheckBoxList.Model.Position.Vertical)
                                                }
                                            </div>*@
                                        <div class="col-sm-12 input_wd scroll-none adddvispace" id="Workshoplist">
                                            @if (Model.AvailableWorkshop != null)
                                            {
                                                foreach (var item in Model.AvailableWorkshop)
                                                {<div class="col-sm-4">
                                                <label class="checkbox-inline" style="width:100%;">

                                                    @Html.CheckBox(item.Id.ToString(), item.IsSelected)
                                                    <span>@item.Name</span>
                                                </label>
                                            </div>
                                                }


                                            }
                                        </div>
                                        @* by atul  27-03-2017*@
                                        <div class="col-md-12 input_wd scroll-none adddvispace" style="border-top: 1px solid #ccc; padding: 20px;   margin-top: 25px;">

                                            <div id="timepreference" style="width:100%; height:auto; ">
                                                <div class="col-xs-8 col-sm-12">
                                                    <label>Workshop Time </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">

                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.timepreference, 1, new { tabIndex = "22" })
                                                        <span>Morning</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.timepreference, 2, new { tabIndex = "23" })
                                                        <span>Afternoon</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-6 col-sm-2">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(m => m.timepreference, 3, new { tabIndex = "24" })
                                                        <span>Evening</span>
                                                    </label>
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>

                                            <div id="daypreference1" style="line-height: normal; width:100%; margin-top:15px;    padding-left: 17px;">
                                                @*<label>On Weekend </label>*@
                                                @Html.CheckBoxFor(m => m.daypreference, new { name = "daypreference", @class = "minimal", tabIndex = "16" })
                                                <span>On Weekend Saturday</span>
                                            </div>

                                        </div>

                                        <div class="clearfix"></div>
                                        <div class="colo-sm-12 btnwrp_subcal">
                                            <button type="button" class="my-btn1" onclick="AddWorkshopDetails();">Save</button>
                                            <button type="button" data-dismiss="modal" class="my-btn1">Exit</button>
                                        </div>
                                    </div>

                                    <script type="text/javascript">
                                        $(function () {

                                            var model = '@Html.Raw(Json.Encode(Model.AvailableWorkshopDetails))';
                                            var data = JSON.parse(model);
                                            if (data != 'null' && data != null && data.length > 0) {
                                                for (var i = 0; i < data.length; i++) {
                                                    $('#Workshoplist input[type=checkbox]').each(function () {
                                                        if ($(this)[0].name == data[i].Id)
                                                            $(this).prop("checked", true);
                                                    });
                                                }
                                            }
                                        });

                                    </script>

                                    <div id="WorkshopDetails">
                                        @{
                                            try
                                            {
                                                if (Model.AvailableWorkshop != null)
                                                {
                                                    foreach (var item1 in Model.AvailableWorkshop)
                                                    {
                                                        <input type="hidden" value="@item1.Id" name="@item1.Name" />
                                                    }
                                                }

                                            }
                                            catch (Exception Ex)
                                            {
                                                FingerprintsModel.clsError.WriteException(Ex);

                                            }
                                        }
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div> @*End of Control Group*@
                </div>
            </div>
        </div>
        <div class="modal fade in" id="transportation" role="dialog" style="display: none;background: rgba(0,0,0,0.4);" aria-hidden="false">
            <div class="modal-dialog" style="width:60%;margin:0 15%;">
                <!-- Modal content-->
                <div class="modal-content col-xs-12" style="padding:0;">
                    <div class="modal-header col-xs-12">
                        <input type="hidden" name="childid" id="childid" value="">
                        <input type="hidden" name="childname" id="childname" value="">
                        <label class="alert-dismissible" for="current_password" style="font-size: 20px;color: #295b8f;">Transportation</label>
                        <input type="hidden" class="transportation-id" />
                    </div>
                    <div class="col-xs-12" style="width: 80%;margin: 0 10%;">
                        <div class="form-group input-container">
                            <label class="control-label" style="margin-left: 0;display:inline-block;">Pick child up from home?</label>
                            <div class="col-xs-12 billing-form-div no-padding pick-up-radio" style="padding:0;width:65%;display:inline-block;">
                                <div class="col-xs-12" style="padding:0;">
                                    <div class="billing-inner">
                                        <div class="bill-radio">
                                            <input id="rdEmailYes" name="Pickup" class="rd-email" value="1" type="radio">
                                            <label for="rdEmailYes" class="radio-label">Yes</label>
                                        </div>

                                        <div class="bill-radio">
                                            <input id="rdEmailNo" name="Pickup" value="0" class="rd-email" type="radio">
                                            <label for="rdEmailNo" class="radio-label">No</label>
                                        </div>
                                        <div class="bill-radio">
                                            <input id="rdEmailNA" name="Pickup" value="2" class="rd-email" type="radio">
                                            <label for="rdEmailNA" class="radio-label">Not Needed</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="pickup-details" style="display:none;">
                            <div class="form-group input-container" style="margin-bottom:10px!important;">
                                <label class="control-label" for="current_password" style="margin-left: 0;">Address</label>
                                <textarea name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;resize:none;" id="txtPickupAddress"></textarea>
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">ZIP Code</label>
                                <input name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtPickupZipcode" onblur="checkZipCode(this);" type="text" maxlength="50" value="">
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">City</label>
                                <select class="ddlPickupCity form-control" style="width:65%"></select>
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">State</label>
                                <input name="CNotes" readonly="readonly" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtPickupState" type="text" maxlength="50" value="">
                            </div>
                        </div>

                    </div>
                    <div class="col-xs-12" style="margin-top:20px;width: 80%;margin: 0 10%;">
                        <div class="form-group input-container">
                            <label class="control-label" style="margin-left:0;display:inline-block;">Drop off child to home?</label>
                            <div class="col-xs-12 billing-form-div no-padding drop-radio" style="padding:0;width:65%;display:inline-block;">
                                <div class="col-xs-12" style="padding:0;">
                                    <div class="billing-inner">

                                        <div class="bill-radio">
                                            <input id="rdPrintYes" name="Drop" class="rd-print" value="1" type="radio">
                                            <label for="rdPrintYes" class="radio-label">Yes</label>
                                        </div>

                                        <div class="bill-radio">
                                            <input id="rdPrintNo" name="Drop" class="rd-print" value="0" type="radio">
                                            <label for="rdPrintNo" class="radio-label">No</label>
                                        </div>
                                        <div class="bill-radio">
                                            <input id="rdPrintNA" name="Drop" class="rd-print" value="2" type="radio">
                                            <label for="rdPrintNA" class="radio-label">Not Needed</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="drop-details" style="display:none;">
                            <div class="form-group input-container" style="margin-bottom:10px!important;">
                                <label class="control-label" for="current_password" style="margin-left: 0;">Address</label>

                                <textarea name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;resize:none;" id="txtDropAddress"></textarea>
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">ZIP Code</label>
                                <input name="CNotes" class="form-control txt-mandatory txt-org-input" style="width:65%;" id="txtDropZipcode" onblur="checkZipCode(this);" type="text" maxlength="50" value="">
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">City</label>
                                <select class="ddlDropCity form-control" style="width:65%"></select>
                            </div>
                            <div class="form-group input-container">
                                <label class="control-label lbl-required" for="current_password" style="margin-left: 0;">State</label>
                                <input name="CNotes" readonly="readonly" class="form-control txt-mandatory txt-org-input" style="width:65%" id="txtDropState" type="text" maxlength="50" value="">
                            </div>
                        </div>

                    </div>
                    <div class="col-xs-12" style="text-align:center;padding: 15px;border-top: 1px solid #e5e5e5;">
                        <button class="btn-save-transportation btn-primary btn">Save</button>
                        <button class="btn-primary btn btn-close-transportaion" data-dismiss="transportation">Back</button>
                    </div>
                </div>

            </div>
        </div>
        @{Html.RenderAction("IncomeCalculator", "AgencyUser", new { Income = Model.Income1 });}
        @{Html.RenderAction("IncomeCalculator2", "AgencyUser", new { Income1 = Model.Income2 });}
        @{Html.RenderAction("Immunizationquestion", "AgencyUser", new { Immunization = Model.ImmunizationRecords });}
        @{Html.RenderAction("ScreeningIntake", "AgencyUser", new { CustomScreening = Model.customscreening });}
        @{Html.RenderAction("AddDoctor", "AgencyUser", new { area = "" });}


        <script>
            $(function () {

                $('input[type=radio][name=CTransportNeeded]').change(function () {
                    if (this.value == "True") {
                        $.ajax({
                            dataType: 'json',
                            type: "POST",
                            async: false,
                            url: "/AgencyUser/GetTransportationDetails",
                            data: { 'ClientId': $('#ChildId').val() },
                            success: function (data) {

                                var result = JSON.parse(data);
                                if (result.length > 0) {
                                    $('.transportation-id').val(result[0].Id);
                                    if (result[0].PickupStatus == "1") {
                                        $('.pickup-details').hide();
                                        $('#rdEmailYes').prop('checked', true);
                                        $('#txtPickupAddress').val("");
                                        $('#txtPickupZipcode').val("");
                                        $('.ddlPickupCity option').remove();
                                        $('#txtPickupState').val('');
                                    }
                                    else if (result[0].PickupStatus == "0") {
                                        $('.pickup-details').show();
                                        $('#rdEmailNo').prop('checked', true);
                                        $('#txtPickupAddress').val(result[0].PickupAddress);
                                        $('#txtPickupZipcode').val(result[0].PickupZipcode);

                                        checkZipCode($('#txtPickupZipcode')[0]);
                                        $('.ddlPickupCity').val(result[0].PickupCity);
                                        $('#txtPickupState').val(result[0].PickupState);
                                    }
                                    else if (result[0].PickupStatus == "2") {
                                        $('.pickup-details').hide();
                                        $('#rdEmailNA').prop('checked', true);
                                        $('#txtPickupAddress').val("");
                                        $('#txtPickupZipcode').val("");
                                        $('.ddlPickupCity option').remove();
                                        $('#txtPickupState').val('');
                                    }
                                    if (result[0].DropStatus == "1") {
                                        $('.drop-details').hide();
                                        $('#rdPrintYes').prop('checked', true);
                                        $('#txtDropAddress').val("");
                                        $('#txtDropZipcode').val("");
                                        $('.ddlDropCity option').remove();
                                        $('#txtDropState').val('');
                                    }
                                    else if (result[0].DropStatus == "0") {
                                        $('.drop-details').show();
                                        $('#rdPrintNo').prop('checked', true);
                                        $('#txtDropAddress').val(result[0].DropAddress);
                                        $('#txtDropZipcode').val(result[0].DropZipcode);
                                        checkZipCode($('#txtDropZipcode')[0]);
                                        $('.ddlDropCity').val(result[0].DropCity);
                                        $('#txtDropState').val(result[0].DropState);
                                    }
                                    else if (result[0].DropStatus == "2") {
                                        $('.drop-details').hide();
                                        $('#rdPrintNA').prop('checked', true);
                                        $('#txtDropAddress').val("");
                                        $('#txtDropZipcode').val("");
                                        $('.ddlDropCity option').remove();
                                        $('#txtDropState').val('');
                                    }
                                }
                                $('#transportation').modal('show');
                            },
                            error: function (data) {
                            }
                        });
                    }

                });
                $('input[type=radio][name=Pickup]').change(function () {
                    if (this.value == "0")
                        $('.pickup-details').show();
                    else
                        $('.pickup-details').hide();
                    $('#txtPickupAddress').val("");
                    $('#txtPickupZipcode').val("");
                    $('.ddlPickupCity option').remove();
                    $('#txtPickupState').val("");
                });
                $('input[type=radio][name=Drop]').change(function () {
                    if (this.value == "0")
                        $('.drop-details').show();
                    else
                        $('.drop-details').hide();
                    $('#txtDropAddress').val("");
                    $('#txtDropZipcode').val("");
                    $('.ddlDropCity option').remove();
                    $('#txtDropState').val("");
                });
                $('.btn-close-transportaion').click(function () {
                    $('#transportation').modal('hide');
                    $('#txtPickupAddress').val("");
                    $('#txtPickupZipcode').val("");
                    $('#txtDropAddress').val("");
                    $('#txtDropZipcode').val("");
                    $('#rdEmailYes').prop('checked', true);
                    $('#rdPrintYes').prop('checked', true);
                    return false;
                });
                $('.btn-save-transportation').click(function () {

                    var isAllow = true;
                    cleanValidation();
                    $('.pick-up-radio,.drop-radio').css("background-color", "");
                    if ($('input[type=radio][name=Pickup]:checked').val() == undefined) {
                        isAllow = false;
                        customAlert("Select pickup option");
                        plainValidation('.pick-up-radio');
                    }
                    else if ($('input[type=radio][name=Pickup]:checked').val() == "0") {
                        if ($('#txtPickupAddress').val() == "") {
                            isAllow = false;
                            customAlert("Enter pickup address");
                            plainValidation('#txtPickupAddress');
                        }
                        else if ($('#txtPickupZipcode').val() == "") {
                            isAllow = false;
                            customAlert("Enter pickup zipcode");
                            plainValidation('#txtPickupZipcode');
                        }
                        else if ($('.ddlPickupCity').val() == null || $('.ddlPickupCity').val() == "" || $('.ddlPickupCity').val() == "0") {
                            isAllow = false;
                            customAlert("Enter pickup city");
                            plainValidation('.ddlPickupCity');
                        } else if ($('#txtPickupState').val() == "") {
                            isAllow = false;
                            customAlert("Enter pickup state");
                            plainValidation('#txtPickupState');
                        }
                    }
                    if ($('input[type=radio][name=Drop]:checked').val() == undefined && isAllow) {
                        isAllow = false;
                        customAlert("Select drop off option");
                        plainValidation('.drop-radio');
                    }
                    else if ($('input[type=radio][name=Drop]:checked').val() == "0" && isAllow) {
                        if ($('#txtDropAddress').val() == "") {
                            isAllow = false;
                            customAlert("Enter drop off address");
                            plainValidation('#txtDropAddress');
                        }
                        else if ($('#txtDropZipcode').val() == "") {
                            isAllow = false;
                            customAlert("Enter drop off zip code");
                            plainValidation('#txtDropZipcode');
                        }
                        else if ($('.ddlDropCity').val() == null || $('.ddlDropCity').val() == "" || $('.ddlDropCity').val() == "0") {
                            isAllow = false;
                            customAlert("Enter drop city");
                            plainValidation('.ddlDropCity');
                        } else if ($('#txtDropState').val() == "") {
                            isAllow = false;
                            customAlert("Enter drop state");
                            plainValidation('#txtDropState');
                        }
                    }
                    else if ($('input[type=radio][name=Drop]:checked').val() == "2" && $('input[type=radio][name=Pickup]:checked').val() == "2" && isAllow) {
                        isAllow = false;
                        customAlert("Both pickup and drop should not be Not Needed");
                        plainValidation('.pick-up-radio');
                        plainValidation('.drop-radio');
                    }
                    if (isAllow) {
                        var Trasportation = {};
                        if ($('.transportation-id').val().trim() != "")
                            Trasportation.Id = $('.transportation-id').val().trim();
                        Trasportation.ClientId = $('#ChildId').val();
                        Trasportation.PickupStatus = $('input[type=radio][name=Pickup]:checked').val();
                        Trasportation.PickupAddress = $('#txtPickupAddress').val();
                        Trasportation.PickupZipcode = $('#txtPickupZipcode').val();
                        Trasportation.PickupCity = $('.ddlPickupCity').val();
                        Trasportation.PickupState = $('#txtPickupState').val();
                        Trasportation.DropStatus = $('input[type=radio][name=Drop]:checked').val();
                        Trasportation.DropAddress = $('#txtDropAddress').val();
                        Trasportation.DropZipcode = $('#txtDropZipcode').val();
                        Trasportation.DropCity = $('.ddlDropCity').val();
                        Trasportation.DropState = $('#txtDropState').val();
                        Trasportation = JSON.stringify({ 'objTransportation': Trasportation });
                        $.ajax({
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            type: "POST",
                            async: false,
                            url: "/AgencyUser/SaveTransportation",
                            data: Trasportation,
                            success: function (data) {
                                if (data) {
                                    customAlertSuccess("Record Saved Successfully");

                                    $('#transportation').modal('hide');
                                    $('#txtPickupAddress').val("");
                                    $('#txtPickupZipcode').val("");
                                    $('#txtDropAddress').val("");
                                    $('#txtDropZipcode').val("");
                                    $('#rdEmailYes').prop('checked', true);
                                    $('#rdPrintYes').prop('checked', true);

                                }
                                else
                                    customAlertSuccess("Sorry,Unable to save details");
                            },
                            error: function (data) {
                            }
                        });
                        return false;
                    }

                });

            });

            function checkZipCode(inputTextObject) {

                if ($(inputTextObject).val() != "") {
                    var ret = true;
                    var Zipcode = $(inputTextObject).val();
                    var len = Zipcode.length;

                    if ((isNaN(inputTextObject.value)) && (len < 2)) {
                        $(inputTextObject).val('');
                        customAlert("Zip code must be numeric. ");
                        var ret = false;
                    }
                    else if (len < 2) {
                        $(inputTextObject).val('');
                        customAlert("Zip code length must be 2 digit. ");
                        var ret = false;
                    }
                    else if (isNaN(inputTextObject.value)) {
                        $(inputTextObject).val('');
                        customAlert("Zip code must be numeric. ");
                        var ret = false;
                    }
                    if (ret)
                        CheckAddress(inputTextObject);
                    return ret;
                }
                else {
                    if ($(inputTextObject).attr('id') == "txtPickupZipcode") {
                        $('.ddlPickupCity').find('option').remove();
                        $('.txtPickupState').val('');
                    }
                    else if ($(inputTextObject).attr('id') == "txtDropZipcode") {
                        $('.ddlDropCity').find('option').remove();
                        $('.txtDropState').val('');
                    }
                }
            }
            function CheckAddress(value) {
                var Zipcode = 0;
                Zipcode = $(value).val();
                if (Zipcode.trim() != "") {

                    $.ajax({
                        type: "POST",
                        url: "/Billing/Checkaddress",
                        data: { 'Zipcode': Zipcode },
                        async: false,
                        success: function (response) {

                            if (response != null && response.length > 0) {
                                var option = "<option value='0'>Choose</option>";
                                for (var i = 0; i < response.length; i++) {
                                    option = option + '<option value="' + response[i].City + '">' + response[i].City + '</option>';
                                }



                                if ($(value).attr('id') == "txtPickupZipcode") {
                                    $('.ddlPickupCity').find('option').remove().end().append(option);
                                    $('.ddlPickupCity').val('0');
                                    $('#txtPickupState').val(response[0].State);
                                }
                                else if ($(value).attr('id') == "txtDropZipcode") {
                                    $('.ddlDropCity').find('option').remove().end().append(option);
                                    $('.ddlDropCity').val('0');
                                    $('#txtDropState').val(response[0].State);
                                }
                            }
                            else {

                                if ($(value).attr('id') == "txtPickupZipcode") {
                                    $('.ddlPickupCity').find('option').remove().end();
                                    $('.ddlPickupCity').val('0');
                                    $('#txtPickupState').val('');
                                }
                                else if ($(value).attr('id') == "txtDropZipcode") {
                                    $('.ddlDropCity').find('option').remove();
                                    $('.ddlDropCity').val('0');
                                    $('#txtDropState').val('');
                                }

                                customAlert("Could not find zipcode details.");
                            }
                        }, error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                    });
                }
            }
        </script>
        <script type="text/javascript">
            $(document).ready(function () {
                if ('@Model.EditAllowed' == "0") {
                    $('#FamilyRecord').find('a').removeAttr('href').removeAttr('onclick');
                    $('#FamilyRecord').find('a').click(function () { return false });
                    $('#Qualifier').find('a').removeAttr('href').removeAttr('onclick');
                    $('#Qualifier').find('a').click(function () { return false });
                    $('#OtherinHousehold').find('a').removeAttr('href').removeAttr('onclick');
                    $('#OtherinHousehold').find('a').click(function () { return false });
                    $('#EmergencyContacts').find('a').removeAttr('href').removeAttr('onclick');
                    $('#EmergencyContacts').find('a').click(function () { return false });
                    $('#RestrictedList').find('a').removeAttr('href').removeAttr('onclick');
                    $('#RestrictedList').find('a').click(function () { return false });
                    $('#FamilyFileCabinet').find('a').removeAttr('href').removeAttr('onclick');
                    $('#FamilyFileCabinet').find('a').click(function () { return false });
                    $('#AddDoctor').find('a').removeAttr('href').removeAttr('onclick');
                    $('#AddDoctor').find('a').click(function () { return false });
                    $('#AddDentist').find('a').removeAttr('href').removeAttr('onclick');
                    $('#AddDentist').find('a').click(function () { return false });
                    $('#ApplicationScreening').find('a').removeAttr('href').removeAttr('onclick');
                    $('#ApplicationScreening').find('a').click(function () { return false });
                    $('#ApplicationScreening :input').attr('disabled', 'disabled');
                    $('#myModalDoctor').find('a').removeAttr('href').removeAttr('onclick');
                    $('#myModalDoctor').find('a').click(function () { return false });
                    $('#myModalDoctor :input').attr('disabled', 'disabled');
                    $('#myTabContent :input').attr('disabled', 'disabled');
                    $('#BtnMsave').hide();
                    $('#Btnrequest').show();
                    $('#Btnrequest').removeAttr('disabled');
                }
                else {
                    $('#BtnMsave').show();
                }



                $('#Screening1').on('click', function () {

                });




            });



        </script>

        <style>
            #timepreference, #timepreference2, #timepreference1 {
                width: 15px;
                height: 15px;
            }
        </style>

    </form>


    <!-- Modal -->
    <div id="futureApplicationModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Future Intake Application</h4>
                </div>
                <div class="modal-body">
                    <label>
                        Accept Application for Next Program Year (<span id="futureSpanYear"></span>)? <sup style="color:red;">*</sup>


                    </label>
                    <input type="radio" name="allowFutureRadio" value="1" /> Yes &nbsp;&nbsp;
                    <input type="radio" name="allowFutureRadio" value="0" />  No
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="btnClosefuture">Close</button>
                </div>
            </div>

        </div>
    </div>

    <div id="futureApplicationModalPreg" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Future Intake Application</h4>
                </div>
                <div class="modal-body">
                    <label>
                        Accept Application for Next Program Year (<span id="futureSpanYear"></span>)? <sup style="color:red;">*</sup>


                    </label>
                    <input type="radio" name="allowFutureRadioPreg" value="1" /> Yes &nbsp;&nbsp;
                    <input type="radio" name="allowFutureRadioPreg" value="0" />  No
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="btnClosefuturePreg">Close</button>
                </div>
            </div>

        </div>
    </div>
}
