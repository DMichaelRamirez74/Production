@model FingerprintsModel.FamilyHousehold

@{
    @section Title
{
        FamilySummary
    }
    ViewBag.Title = "FamilySummary";
    Layout = (Session["RoleId"].ToString() == "a65bb7c2-e320-42a2-aed4-409a321c08a5" || Session["RoleId"].ToString() == "3b49b025-68eb-4059-8931-68a0577e5fa2") ? "~/Views/Shared/AgencyAdminLayout.cshtml" : "~/Views/Shared/AgencyStaffLayout.cshtml";
}

@section Script{
    <link href="~/Content/CaseNote/css/style.css" rel="stylesheet" />
    <link href="~/Content/css/familysummarybootstrap.css" rel="stylesheet" />
    <link href="~/Content/css/familysummarystyle.css" rel="stylesheet" />
    <link href="~/Content/css/familysummarystyle_latest.css" rel="stylesheet" />
    <script type="text/javascript">
        var round = 1;
        var ssnothervalue = null;
        var EnrolledObject = null;
        var CN_count = 1;
        var $profilePictureModalId = 'modal-profile-picture';
        var $profilePictureImg = null;
        var $emerRestClient = 0;
        $('[data-toggle="tooltip"]').tooltip();

        function getTagsOnInput() {

            var tagInp = $('#New_CaseNotetags').val();
            var tagsArr = [];
            $.ajax({
                url: '/Roster/GetCaseNoteTagonInput',
                datatype: 'json',
                type: 'post',
                async: true,
                data: { searchText: tagInp },
                success: function (data) {
                    if (data != null) {
                        if (data.length > 0) {
                            $.each(data, function (i, tags) {
                                tagsArr.push(tags.Text);
                            });
                        }
                    }
                },
                error: function (data) {

                }

            });

            return tagsArr;
        }


        function CarouselOpen(arg1) {
            var arg = $(arg1).closest('tr');
            $(arg).addClass('active');
            var val = $(arg).next('tr');
            $('.taglist').prop('checked', false);
            $('#settab_edu').find('.active').removeClass('active');
            $(arg).next('.input_smtmarg').removeClass('active');
            if ($(arg).next('.input_smtmarg').hasClass('active')) {
                //if($(arg).find(".edu_next").is(":checked")==false)
                //{

                $(arg).next('.input_smtmarg').removeClass('active');
                $(arg).next('.input_smtmarg').slideUp("slow");
                //}

            }
            else {
                $(arg).next('.input_smtmarg').addClass('active');
                $(arg).next('.input_smtmarg').slideDown("slow");
            }

        }

        function CheckAll(arg, value) {

            if ($(arg).is(":checked")) {
                $('.tag' + value).prop('checked', true);
            }
            else {
                $('.tag' + value).prop('checked', false);
            }
        }
        function ShowSecurityAlert() {
            BootstrapDialog.show({
                title: 'Secure Case Note Alert',
                message: "Can't view the secured Case Note",
                buttons: [{
                    label: 'OK',
                    action: function (dialog) {
                        dialog.close();
                    }

                }]
            });
            $('#ModalAddCasenote').css({
                'overflow-x': 'hidden',
                'overflow-y': 'auto'
            });

        }


        function BindSubNotes(id) {
            $.ajax({
                type: "POST",
                url: "/Roster/GetSubNotes",
                async: false,
                data: { 'CaseNoteId': id },

                success: function (data) {
                   
                    $('.divAppendedNotes').show();
                    $('.sub-notes-details').empty();

                    if (data != null && data.length > 0) {
                        $(data).each(function (i, val) {
                    
                            var attachments = '';
                            var tagsName = '';
                            for (var i = 0; i < val.Attachment.length; i++) {
                                if (val.Attachment[i] != "0" && val.Attachment[i] != "")
                                    attachments += ("<a target='_blank' title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + val.Attachment[i] + ",CaseNote,0'><i class='fa fa-download'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");

                            }
                            for (var i = 0; i < val.Tags.length; i++) {
                                if (val.Tags[i] != "0" && val.Tags[i] != "")
                                    tagsName += ('<span id="subTags" class="tag-text">' + val.Tags[i] + '</span>');

                            }
                            if (tagsName == "") {
                                tagsName = "<span class='no-tags-text'>No tags available</span>";
                            }
                            var template = '   <div class="addn-poup-div sub-text-block">\
                                             <h4>\
                                                 Posted on <span>{date},</span> by <span>{name}</span>\
                                             </h4>\
                                  <div class="col-xs-12 tag-text-block">\
                                      <label>Tags:</label>\
                                       {SubTags}\
                                </div><div class="col-xs-12 tag-text-block">\
                                 <label>Notes:</label>\
                                    {notes}\
                                      <div id="subAttachments" class="sub-text">\
                                 <label>Attachments:</label><span class="no-tags-text">{SubAttach}</span></div>\
                                </div></div>';

                            template = template.replace('{date}', val.WrittenDate);
                            template = template.replace('{name}', val.Name);
                            template = template.replace('{notes}', val.Notes);
                            template = template.replace('{SubAttach}', attachments);
                            template = template.replace('{SubTags}', tagsName);
                            $('.sub-notes-details').append(template);
                        });
                    }
                    else {
                        var template = '   <div class="addn-poup-div">\
                                             <h4>\
                                                 No record found\
                                             </h4>\
                                             \
                                         </div>';
                        $('.sub-notes-details').append(template);
                    }




                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
        function RemoveAttachments(arg) {
            $(arg).parent().parent().parent().remove();
        }
        function BrowseFile(arg) {
            var file = $(arg).parent().parent().parent().find('.file');
            file.trigger('click');
        }
        function ShowFileName(arg) {
            $(arg).parent().find('.form-control').val($(arg).val().replace(/C:\\fakepath\\/i, ''));
        }
        function AddAttachments() {
            var input = '<div class="form-group">\
                                            <input type="file" name="img[]" class="file fileAttachments" onchange="ShowFileName(this)" style="display:none;">\
                                            <div class="input-group col-xs-12">\
                                                <input type="text" class="form-control input-lg" disabled placeholder="Upload File">\
                                                <span class="input-group-btn">\
                                                    <button class="browse btn btn-primary input-lg" type="button" style="height: 33px !important;" onclick="BrowseFile(this);"> Browse</button>\
                       <img src="/Content/imgs/close_1.png" class="remove-attachment" onclick="RemoveAttachments(this);" style="padding-left:5px;">\
                                                </span>\
                                            </div>\
                                        </div>';
            var input = '  <div class="form-group new-file" style="margin-bottom:10px!important;">\
                                                    <div style="width:87%;display:inline-block;">\
                                                        <input type="file" name="img[]" class="file fileAttachments" onchange="ShowFileName(this)" style="display:none;">\
                                                        <div class="input-group col-xs-12">\
                                                            <input type="text" class="form-control input-lg" disabled placeholder="Upload File">\
                                                            <span class="input-group-btn">\
                                                                <button class="browse btn btn-primary input-lg"  style="height: 33px !important;" onclick="BrowseFile(this);" type="button"> Browse</button>\
                                                            </span>\
                                                        </div>\
                                                    </div>\
                                                        <div class="AddAttachments" style="width:auto;display:inline-block;vertical-align: top;padding-top: 4px;">\
                                                            <a href="javascript:void(0);" class="upl">\
                                                                <img src="/Content/imgs/close_1.png" class="remove-attachment" style="border-radius: 5px;width: 40px;"  onclick="RemoveAttachments(this);" />\
                                                            </a>\
                                                        </div>\
                                                    </div>';
            // var input = "<input type='file' name='fileupload' class='fileAttachments' />";
            $('.attachments-conatiner-append').append(input);
        }

        function AppendCaseNote(casenoteid,arg) {

            var target = $(arg.getAttribute('href'));

            if (target.length) {
                event.preventDefault();
                $('#ModalAddCasenote').stop().animate({
                    scrollTop: target.offset().top
                }, 1000);
            }

            $('.case-info').hide();
            $('.subcase-info').hide();
            $('.hdn-casenoteid').val(casenoteid);
            $.ajax({
                type: "POST",
                url: "/Roster/GetCaseNoteByNoteId",
                data: { 'NoteId': casenoteid },
                success: function (data) {
                    $('.txt-main-note').empty();
                    var table = JSON.parse(data);
                    $('.txt-main-note').append(table[0].NoteField);
                    $('.subcase-info').show();
                    BindSubNotes($('.hdn-casenoteid').val());
                },
                error: function (data) {
                    console.log(data);
                }
            });

        }
        function SaveFile() {
            var data = new FormData();
            $('.fileAttachments').each(function (i, vak) {
                var files = $(this).get(0).files;
                console.log(files);
                console.log($(this).val());
                if (files.length > 0) {
                    data.append("MyImages" + i + "", files[0]);
                }
            });

            $.ajax({
                url: "/Roster/UploadFiles",
                type: "POST",
                processData: false,
                contentType: false,
                asyn: false,
                data: data,
                success: function (data) {
                    console.log(data);

                },
                error: function (er) {
                    alert(er);
                }
            });

        }
        function SaveSubnotes() {

            if (CKEDITOR.instances['subnotes'].getData() == "") {
                customAlert("Sub Note is required.");
            }
            else {
                var CaseNote = {};
                var Tags = '';
                $('#AppendCaseNotetags_tagsinput .tag span').each(function () {
                    Tags = Tags + ','+$(this).text().trim()  ;
                });
                CaseNote.Note = CKEDITOR.instances['subnotes'].getData().toString().trim();
                CaseNote.CaseNoteid = $('.hdn-casenoteid').val();
                CaseNote.CaseNoteDate = $('.subcasenoteDate').val();
                CaseNote.HouseHoldId = $('#HouseholdId').val();
                CaseNote.CenterId = "0";
                CaseNote.Classroomid = "0";
                CaseNote.CaseNotetags = Tags.slice(1);
                CaseNote = JSON.stringify({ 'CaseNote': CaseNote });
                $.ajax({
                    type: "POST",
                    url: "/Roster/SaveSubNotes",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    async: false,
                    data: CaseNote,
                    success: function (data) {
                        customAlert("Subcasenote added successfully");
                        SaveFile();
                        setTimeout(function () {

                            $('#ModalAddCasenote').modal('hide');
                            $('.case-info').hide();
                            $('.subcase-info').hide();
                            $('#selHouseholdList').val('0');

                            $('.addn-table-head').empty();
                        }, 100);
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            }

        }
        function Validatecasenote() {
            isValid = true;
            cleanValidation();
            var Clientcount = 0;
            var Tags = '';
            $('#New_CaseNotetags_tagsinput .tag span').each(function () {
                Tags = Tags + $(this).text().trim() + ',';
            });
            $("#New_CaseNotetags").val(Tags);

            $('#New_Note').val(CKEDITOR.instances['Note'].getData());

            $('.New_ClientDiv input:checked').each(function () {
                if ($(this).prop("checked")) {
                    Clientcount = 1;
                }
            });
            Tags = '';

            if ($('#New_CaseNoteDate').val().trim() == "") {
                isValid = false;
                customAlert("New_Case note date is required. ");
                plainValidation('#CaseNoteDate');
                return isValid;
            }
            else if ($('#New_CaseNotetitle').val().trim() == "") {
                isValid = false;
                customAlert("Title is required.");
                plainValidation('#CaseNotetitle');
                return isValid;
            }
            else if (CKEDITOR.instances['New_Note'].getData() == "") {
                isValid = false;
                customAlert("Note is required.");
                return isValid;
            }
            else if (Clientcount == 0) {
                isValid = false;
                customAlert("Clients name is required.");
                $('.New_ClientDiv').focus();
                return isValid;
            }
            else if ($('#New_CaseNotetags').val().trim() == "") {
                isValid = false;
                customAlert("Tags is required.");
                plainValidation('#CaseNotetags');
                return isValid;
            }
            return isValid;

        }

        function addMoreStatusAtt1(ele) {
            var index = $(ele).closest('#section_attachment').parent('div').find('.houseless-attach').length;



            var appendDiv = '<div class="col-lg-8 col-sm-7 no-padding adddivspace">\
                                                   <div class="col-sm-7 col-lg-6 no-padding">\
                                                       <input type="file"  name="Attachments[' + CN_count + '].file"  class="form-control">\
                                                   </div>\
                                                   <div class="col-sm-3 col-lg-3 adddivspace">\
                                                       <a href="javascript:void(0)"  title="Remove Attachment" onclick="removeStatusAtt(this);"><i class="fa fa-minus-circle"></i>&nbsp;Remove</a>\
                                                   </div>\
                                               </div>';

            $("#New_addAttachmentDiv").append(appendDiv);

            CN_count++;
        }


        function removeStatusAtt(ele) {
            $(ele).parent('div').parent('div').remove();
        }

     

        function Getcasenote(Casenoteid,arg) {

            var isEditable = $(arg).data('editable');
            var target = $(arg.getAttribute('href'));

            if (target.length) {
                event.preventDefault();
                $('#ModalAddCasenote').stop().animate({
                    scrollTop: target.offset().top
                }, 1000);
            }

            $('#CaseNoteid').val(Casenoteid);

            $('.subcase-info').hide();
            $('#CN_CaseNoteid').val(Casenoteid);
            $('#CN_ClientId').val($('#selHouseholdList').val());
            $.ajax({
                url: HostedDir + "/Roster/Getcasenotedetails",
                type: "POST",
                data: {
                    Casenoteid: Casenoteid,
                    ClientId: $('#selHouseholdList').val()
                },
                dataType: "json",
                //secureuri: false,
                //  async: false,
                success: function (Data) {
                  
                    BindCaseNotelist(Data, isEditable);
                    BindSubNotes(Casenoteid);
                }
            , error: function (Data) {
                customAlert("Error occured please try again later.");
            }
            });
        }
        function BindCaseNotelist(Data, isEditable) {
            cleanValidation();


            $('.case-info').show();
            $('#Attachments').show();
            $('#Attach').empty();
            $('.download-attachment').empty();
            //$('#SaveNoteSubmit').hide();
            console.clear();
            console.log('Test');
            console.log(Data);
            $('.tag').remove();
            var outputArray = [];
            var Attachments = [];

            if (Data != null && Data.length > 0) {

                if (Data[0].GroupCaseNote == 0) {


                    //for (var i = 0; i < Data.list.CenterAndClassRoom.length; i++) {

                    //    $('#New_ClientDiv').append('<div class="col-sm-12"><input type="checkbox"  checked="checked" class="clsClientIds"  name="ClientIds.IDS" value="' + Data.list.CenterAndClassRoom[i].Eclientid + '" /><span> ' + data.list.CenterAndClassRoom[i].Name + " (" + data.list.CenterAndClassRoom[i].clientenrolled + ")" + '</span></div>');

                    //}

                    //for (var i = 0; i < Data.list.CaseNoteDetails.length; i++) {

                    //    $('#New_StaffDiv').append('<div class="col-sm-12"><input type="checkbox"  checked="checked" class="clsStaffIds" name="ClientIds.IDS" value="' + data.list.CaseNoteDetails[i].UserId + '" /><span> ' + data.list.CaseNoteDetails[i].Name + '</span></div>');
                    //}

                    //$('#New_CaseNotetags_tagsinput .tag ').each(function () {
                    //    $(this).remove();
                    //});

                    $('#New_CaseNotetags_tagsinput .tag ').remove();
                    $('#New_CaseNoteHeading').text('Edit Case Note');
                    $('#New_Attachmectstag').removeAttr("onclick");
                    // $('#New_Attachmectstag').attr("onclick", "AddMore();");
                    $('#New_FirstFile').removeAttr("disabled");
                    $('#New_SaveNoteSubmit').show();
                    $('#New_CaseNoteDate').val('');
                    $('#New_CaseNotetitle').val('');
                    $('#New_CaseNotesNote').val('');
                    $('#New_ClientName').val('');
                    $('#New_Attach').html('');
                    $('#New_ClientNameModel').val('');
                    $('#New_CaseNoteSecurity').prop("checked", false);
                    $('#New_CaseNoteSecurity').removeAttr("disabled");
                    $('.New_ClientDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).removeAttr("disabled");
                    });
                    $('.New_StaffDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).removeAttr("disabled");
                    });
                
                    
                    $('#New_CaseNoteDate').val(Data[0].Date);

                    $('#New_CaseNotetitle').val(Data[0].Title);
                    CKEDITOR.instances['New_Note'].setData(Data[0].Note);
                    $('.main-date').text(getFormattedDate(Data[0].Date));
                    $('.main-note').empty();
                    $('.main-note').append(Data[0].Note);
                    $('#New_ClientName').text(Data[0].Name);
                    $('#New_ClientNameModel').text(Data[0].Name);

                    if (Data[0].SecurityLevel)
                        $('#New_CaseNoteSecurity').prop("checked", true);
                    for (var i = 0; i < Data.length; i++) {
                        $('.New_ClientDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].clientid)
                                $(this).prop("checked", true);
                        });
                    }
                    for (var i = 0; i < Data.length; i++) {

                        if ((jQuery.inArray(Data[i].Tagname, outputArray)) == -1) {
                            outputArray.push(Data[i].Tagname);
                        }
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Attachment, Attachments)) == -1) {
                            Attachments.push(Data[i].Attachment);
                        }
                    }


                    for (var i = 0; i < Attachments.length; i++) {
                        if (Attachments[i] != "0" && Attachments[i] != "")
                            $('#New_Attach').add('.download-attachment').append("<a target='_blank' title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + Attachments[i] + ",CaseNote,0'><i class='fa fa-download'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");

                    }
                    if ($('#New_Attach').children().length < 1) {
                        $('#New_Attach').append("<span>No file available</span>");
                    }
                    if ($('.download-attachment').children().length < 1) {
                        $('.download-attachment').append("<span>No file available</span>");
                    }
                    for (var i = 0; i < outputArray.length; i++) {
                        $('#New_CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + outputArray[i] + '&nbsp;&nbsp;</span><a href="#" onclick="removetag1(this);" title="Removing tag">x</a></span>');
                    }
                    for (var i = 0; i < Data.length; i++) {
                        $('.New_StaffDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].Staffid)
                                $(this).prop("checked", true);
                        });
                    }


                    $('#New_StaffName').text(Data[0].BY);
                    $('#New_CaseNoteDate').attr("Readonly", true);
                    $('#New_CaseNotetitle').attr("Readonly", true);
                    //$('#CaseNoteSecurity').attr("disabled",true);
                    CKEDITOR.instances['New_Note'].setReadOnly(true);
                    //$('#ClientDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});
                    //$('#StaffDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});
                    $('#New_CaseNotetags_tag').removeAttr("disabled");
                }
                else if (Data[0].GroupCaseNote == 1) {
                    $('#New_CaseNoteHeading').text('Group Case Note');
                    $('#New_Attachmectstag').removeAttr("onclick");
                    $('#New_Attachmectstag').attr("onclick", "return false;");
                    $('#New_SaveNoteSubmit').hide();
                    $('#New_CaseNoteDate').val('');
                    $('#CaseNotetitle').val('');
                    $('#CaseNotesNote').val('');
                    $('#ClientName').val('');
                    $('#ClientNameModel').val('');
                    $('#CaseNoteSecurity').prop("checked", false);
                    $('#CaseNoteSecurity').attr("disabled", "disabled");
                    $('#CaseNotetags_tag').attr("disabled", "disabled");
                    $('#FirstFile').attr("disabled", "disabled");

                    $('#ClientDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).attr("disabled", "disabled");
                    });
                    $('#StaffDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).attr("disabled", "disabled");
                    });
                    $('.main-date').text(getFormattedDate(Data[0].Date));
                    $('.main-note').empty();
                    $('.main-note').append(Data[0].Note);
                    $('#CaseNoteDate').val(Data[0].Date);
                    $('#CaseNotetitle').val(Data[0].Title);
                    CKEDITOR.instances['Note'].setData(Data[0].Note);
                    $('#ClientName').text(Data[0].Name);
                    $('#ClientNameModel').text(Data[0].Name);
                    if (Data[0].SecurityLevel)
                        $('#CaseNoteSecurity').prop("checked", true);
                    for (var i = 0; i < Data.length; i++) {
                        $('#ClientDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].clientid) {
                                $(this).prop("checked", true);
                            }
                        });
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Tagname, outputArray)) == -1) {
                            outputArray.push(Data[i].Tagname);
                        }
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Attachment, Attachments)) == -1) {
                            Attachments.push(Data[i].Attachment);
                        }
                    }
                    for (var i = 0; i < Attachments.length; i++) {
                        if (Attachments[i] != "0" && Attachments[i] != "")
                            $('#Attach').add('.download-attachment').append("<a target='_blank' title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + Attachments[i] + ",CaseNote,0'><i class='fa fa-download'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");

                    }
                    if ($('#Attach').children().length < 1) {
                        $('#Attach').append("<span>No file available</span>");
                    }
                    if ($('.download-attachment').children().length < 1) {
                        $('.download-attachment').append("<span>No file available</span>");
                    }
                    for (var i = 0; i < outputArray.length; i++) {
                        $('#CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + outputArray[i] + '&nbsp;&nbsp;</span><a href="#"  title="Removing tag">x</a></span>');
                    }
                    for (var i = 0; i < Data.length; i++) {
                        $('#StaffDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].Staffid)
                                $(this).prop("checked", true);
                        });
                    }
                    $('#StaffName').text(Data[0].BY);
                    $('#CaseNoteDate').attr("Readonly", true);
                    $('#CaseNotetitle').attr("Readonly", true);
                    //$('#CaseNoteSecurity').attr("disabled",true);
                    CKEDITOR.instances['Note'].setReadOnly(true);






                }



                if (!$('#ModalAddCasenote').hasClass('in'))
                    $('#ModalAddCasenote').modal('toggle');
             
                $('#ModalAddCasenote').modal({
                    backdrop: 'static',
                    keyboard: false,
                    show: true,

                });

                if (!isEditable) {
                    $(".New_ClientDiv").find('[type="checkbox"]').prop('disabled', true);
                    $(".New_StaffDiv").find('[type="checkbox"]').prop('disabled', true);
                    $(".addn-poup-div1").find('[type="checkbox"]').prop('disabled', true);
                    $('#FirstFile[type="file"]').prop("disabled", true);
                    $("a#Attachmectstag, #SaveNoteSubmit").css("display", "none");
                    $("#New_CaseNotetags_tag").prop("disabled", true);

                } else {
                    $('#FirstFile[type="file"]').prop("disabled", false);
                   $("a#Attachmectstag, #SaveNoteSubmit").css("display", "block");
                }

            }
        }


        function changeFamilyAdvocate(arg) {
            $('#div_family_advocate_info').slideToggle('slow');
            $('#div_family_advocate_select').find('#FamilyAdvocateId').val('');
            $('#div_family_advocate_select').slideToggle('slow');
        }

        function backToFamilyAdvocate(arg) {

            $('#div_family_advocate_select').find('#FamilyAdvocateId').val('');
            $('#div_family_advocate_select').slideToggle('slow');
            $('#div_family_advocate_info').slideToggle('slow');
        }


        function SaveFamilyAdvocate(arg) {


            var faId = $(arg).closest('#divFamilyAdvSelec').find('#FamilyAdvocateId').val()

            $('#FamilyAdvocateId').css({ 'background-color': '' });

            if (faId == undefined || faId == null || faId == '' || faId == '0') {
                plainValidation('#FamilyAdvocateId');
                customAlert('Please select family advocate');
                return false;
            }

            $.ajax({
                url: '/Roster/SaveFamilyAdvocate',
                type: 'post',
                datatype: 'json',
                data: {
                    HouseholdID: $('#HouseholdId').val(),
                    FamilyAdvocate: faId
                },
                success: function (response) {
                    location.reload();
                },
                error: function (response) {
                    console.log(response);
                }
            });

        }


        function LoadCasenoteDetails(arg) {
            $('.case-info').hide();

            if ($('#selHouseholdList').val() == "0") {
                plainValidation('#selHouseholdList');
                customAlert('Please select household member');
                return false;
            }
            else {
                var householdid = $(arg).attr('householdid');
                var clientid = $('#selHouseholdList').val();
                $('#HouseholdId').val(householdid);
                $.ajax({
                    url: HostedDir + '/Roster/GetCaseNoteByClientId',
                    datatype: 'json',
                    type: 'post',
                    data: { HouseholdId: householdid, ClientId: clientid },
                    success: function (data) {

                        if (data != null) {

                            BindCasenoteDetails(data);
                        }
                        else {
                            customAlert('Some Error Occured.Please, try again later.');
                            $('#showDentalModal').modal('hide');
                        }

                    },
                    error: function (data) {
                        $('#showDentalModal').modal('hide');
                    },
                    complete: function (data) {
                        $('#showDentalModal').modal('hide');
                    }


                });
            }


        }


        function BindCasenoteDetails(data) {

            $('.txt-role').val(data.Role);
            $('.addn-table-head').html("");
         
            if (data.CaseNoteList != null && data.CaseNoteList.length > 0) {
                $((data.CaseNoteList)).each(function (i, val) {

                    var row = '<tr casenoteid="{casenoteid}">\
                                                    <td data-title="Date">\
                                                        <div class="addn-content-desc" style="position: relative;">\
                                                            <p>{Date}</p>\
                                                        </div>\
                                                    </td>';

                    //if (val.IsEditable == true) {


                    //    row += '<td data-title="Title">\
                    //                                    <div class="addn-content-desc" style="position: relative;cursor: pointer;">\
                    //                                       <p> <a style="text-decoration: underline;" href="#divCNDetails"  onclick="{function}({Id},this)">{Title}</a></p>\
                    //                                    </div>\
                    //                                </td>';
                    //}
                    //else {

                    //    row += '<td data-title="Title">\
                    //                                    <div class="addn-content-desc" style="position: relative;">\
                    //                                       <p>{Title}</p>\
                    //                                    </div>\
                    //                                </td>';
                    //}
                    //code0643 
                        row += '<td data-title="Title">\
                                                        <div class="addn-content-desc" style="position: relative;cursor: pointer;">\
                                                           <p> <a style="text-decoration: underline;" data-editable="' + val.IsEditable + '" href="#divCNDetails"  onclick="{function}({Id},this)">{Title}</a></p>\
                                                        </div>\
                                                    </td>';


                    row += ' <td data-title="By">\
                                                        <div class="addn-content-desc" style="position: relative;">\
                                                            <p>{BY}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="Attachments">\
                                                        <div class="addn-content-desc">\
                                                            <p>{Attachment}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="References">\
                                                        <div class="addn-content-desc">\
                                                            <p>{References}</p>\
                                                        </div>\
                                                    </td>   \
                                                     <td data-title="Actions">\
                                                        <div class="addn-content-desc">{SUBNOTE}\
                                                            </div>\
                                                        </td>\</tr>';
                    var subnote = '<p style="padding: 5px;">\
                                                                <span class="Status-title-addn note-click">\<a href="#divCNDetails" onclick="AppendCaseNote({AppendId},this)" style="margin-top: 0;padding-left: 15px;">\
                                                                        <span style="width: auto;display: inline-block;margin-right: 2px;font-size: 20px;">+</span>\
                                                                        Append Case Note\
                                                                    </a> </span>\
                                                            </p>';


                    row = row.replace('{casenoteid}', val.CaseNoteid);
                    var subnote1 = subnote.replace('{AppendId}', val.CaseNoteid);
                    row = row.replace('{Date}', val.Date);
                    row = row.replace('{Id}', val.CaseNoteid);
                    if (val.IsAllowSecurityCN == true) {
                        row = row.replace('{Title}', val.Title);
                        row = row.replace('{function}', "Getcasenote");
                        row = row.replace('{SUBNOTE}', subnote.replace('{AppendId}', val.CaseNoteid));
                    }
                    else if (val.WrittenBy == $('#UserId').val() && val.SecurityLevel) {
                        row = row.replace('{Title}', val.Title);
                        row = row.replace('{function}', "Getcasenote");
                        row = row.replace('{SUBNOTE}', subnote.replace('{AppendId}', val.CaseNoteid));
                    }
                    else {
                        row = row.replace('{Title}', "Secured Case Note");
                        row = row.replace('{function}', "ShowSecurityAlert");
                        row = row.replace('{SUBNOTE}', "<p style='padding: 5px;height:50px;'>");
                    }

                    row = row.replace('{BY}', val.BY);
                    row = row.replace('{Attachment}', val.Attachment);
                    row = row.replace('{References}', val.References);
                    $('.addn-table-head').append(row);
                });
            }
            else {
                $('.addn-table-head').html("<tr><td colspan='6' style='padding:20px;'>No record found</td></tr>")
            }



            $('.New_ClientDiv').empty();
            $('.New_StaffDiv').empty();

            for (var i = 0; i < data.Clientlist.length; i++) {
                var item = '<div class="col-sm-12"><input type="checkbox" name="ClientIds.IDS" value="' + data.Clientlist[i].Id + '"><span>' + data.Clientlist[i].Name + '</span></div>';
                $('.New_ClientDiv').append(item);
            }

            for (var i = 0; i < data.UserList.length; i++) {
                var item = '<div class="col-sm-12"><input type="checkbox" name="TeamIds.IDS" value="' + data.UserList[i].Id + '"><span>' + data.UserList[i].Name + '</span></div>';
                $('.New_StaffDiv').append(item);
            }
            $('#New_CaseNotetags_tagsinput .tag ').each(function () {
                $(this).remove();
            });
            $('#AppendCaseNotetags_tagsinput .tag ').each(function () {
                $(this).remove();
            });
        }
        function SearchByTags(arg) {


            //var target = $(arg.getAttribute('href'));

            //if (target.length) {
            //    event.preventDefault();
            //    $('#ModalAddCasenote').stop().animate({
            //        scrollTop: target.offset().top
            //    }, 1000);
            //}


            var TagNames = '';
            TagNames += $('.SecurityRoles:checked').val();

            $('.taglist').each(function () {
                if ($(this).val() != '' && $(this).is(':checked')) {
                    var tg = $(this).val().replace("(Append Tag)", "").trim();
                    TagNames += "," + tg;
                }
            });

            $.ajax({
                type: "POST",
                url: "/Roster/GetCaseNoteByTags",
                beforeSend: function () { $('#spinner').show() },
                data: { 'Householdid': $('#HouseholdId').val(), 'centerid': 0, 'ClientId': 0, 'TagName': TagNames, 'IsFromFamilySummary': 1 },
                success: function (data) {
                    $('#spinner').hide();
                    ClearCaseNote();
                    BindCasenoteDetails(data)
                },
                error: function (data) {
                    $('#spinner').hide();
                    console.log(data);
                }
            });
        }
        function ShowCaseForHousehold(arg, type) {

            if (type == 2) {
                $('#CaseNoteHeading').text("List of Case Notes by Tag");
                $('.searchhousehold').hide();
                $('.searchtags').show();

                $.ajax({
                    url: HostedDir + '/Roster/GetHouseholdCasenoteTags',
                    datatype: 'json',
                    type: 'post',
                    data: { HouseholdId: $(arg).attr('housholdid') },
                    success: function (data) {
                        var option = '';
                        console.log(data);

                        BindTagValues(data);
                        // $('#selTagList').empty();
                        //option = option + '<option value="0">Select Tag</option>';

                        //if (data != null) {
                        //    for (var i = 0; i < data.length; i++) {
                        //        option = option + '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                        //    }
                        //    $('#selTagList').append(option);
                        //}

                    },
                    error: function (data) {
                        $('#ModalAddCasenote').modal('hide');
                    },
                    complete: function (data) {
                        $('#ModalAddCasenote').modal({
                            backdrop: 'static',
                            keyboard: false,
                            show: true,

                        });
                    }


                });
            }
            else {
                $('#CaseNoteHeading').text("List of Case Notes by Household");
                $('.searchhousehold').show();
                $('.searchtags').hide();
                $('#ModalAddCasenote').modal({
                    backdrop: 'static',
                    keyboard: false,
                    show: true,

                });
            }
        }
        function BindTagValues(data) {

            var appendRoles = '';
            for (var i = 0; i < data.length; i++) {
                var start = '<tr class="view">\
                                                                            <td enc-id="rr" class="bg-change" style="width:30%!important;"><span class="table-badge">$tagCount$</span></td>\
                                                                            <td class="deve-td bg-change" style="text-align:left;">\
                                                                                <div class="tag-radio-btn">\
                                                                                    <div class="radio radio-info">\
                                                                                        <input type="radio" name="InsType"  onclick="CarouselOpen(this)"  class="SecurityRoles" value="$value1$">\
                                                                                        <label>$Rolename$</label>\
                                                                                    </div>\
                                                                                </div>\
                                                                            </td>\
                                                                        </tr>\
                                                             <tr class="input_smtmarg">\
                                                                            <td colspan="2" style="background-color:#163b69;">\
                                                                                <div class="sub_table_icc">\
                                                                                    <table class="table table-bordered table-responsive">\
                                                                                        <thead>\
                                                                                        </thead>\
                                                                                        <tbody>';
                var associate='<tr>\
                                                                                                <td>$AssociateTags$</td>\
                                                                                                <td>\
                                                                                                    <input type="checkbox" class="edu_next $tag$ taglist" name="Role[1].UserList[0].IsAllow" value="$value2$">\
                                                                                              </td>\
                                                                                            </tr>';
                var end='<tr>\
                                                                                                <td colspan="2" style="text-align: right;">\
                                                                                                    <a class="btn btn-success table-submit" href="#tablebottom" onclick="SearchByTags(this);">Submit</a>\
                                                                                                </td>\
                                                                                            </tr>\
                                                                                        </tbody>\
                                                                                    </table>\
                                                                                </div>\
                                                                            </td>\
                                                                        </tr>';
                start = start.replace('$Rolename$', data[i].TagName);
                start = start.replace('$tagCount$', data[i].TagCount);
                
                start = start.replace('$arg$', i);
                start = start.replace('$value1$', data[i].TagName);
                start = start.replace('$selectall$', 'selectall' + i);
                var appendAssociate = '';
                for (var j = 0; j < data[i].AssociatedTags.length; j++) {
                    var ass = associate;
                    ass = ass.replace('$AssociateTags$', data[i].AssociatedTags[j].TagName);
                    ass = ass.replace('$value2$', data[i].AssociatedTags[j].TagName);
                    ass=ass.replace('$tag$','tag'+i)
                    appendAssociate=appendAssociate+ass;
                }

                appendRoles = appendRoles + start + appendAssociate + end;
            }
            $('#settab_edu tbody').empty();
            $('#settab_edu tbody').append(appendRoles);
        }

        function updateDentalQuestion(ele) {


            if ($('#showDentalModal').find('input[name=DentalServicesradio]:checked').length == 0) {
                customAlert('Please select Yes or No');
                return false;
            }

            var answ = $('#showDentalModal').find('input[name=DentalServicesradio]:checked').val() == '1' ? true : false;

            $.ajax({
                url: HostedDir + '/AgencyUser/UpdatePregMomDentalExam',
                datatype: 'json',
                type: 'post',
                data: { clientID: $('#showDentalModal').find('#pregID').val(), dentalAnswer: answ },
                success: function (data) {
                    if (data) {

                        customAlert('Record updated successfully');
                        var po = parseInt($('#showDentalModal').find('#pregID').attr('pos'));
                        $('input[name=dentalExamPreg]')[po].value = $('#showDentalModal').find('input[name=DentalServicesradio]:checked').val();
                        $('input[name=dentalExamPreg]').siblings('p').removeClass('Parent-badge-bg-dental-n');
                        $('input[name=dentalExamPreg]').siblings('p').addClass('Parent-badge-bg-dental-y');
                        $('#showDentalModal').modal('hide');
                    }
                    else {
                        customAlert('Some Error Occured.Please, try again later.');
                        $('#showDentalModal').modal('hide');

                    }

                },
                error: function (data) {
                    $('#showDentalModal').modal('hide');
                },
                complete: function (data) {
                    $('#showDentalModal').modal('hide');
                }


            });
        }

        function Checkdate(date) {
            var isAllow = false;
            var now = new Date();
            var selectedDate = new Date(date);
            if (selectedDate < now && selectedDate != now) {
                isAllow = true;
            } else {
                isAllow = false;
            }
            return isAllow;
        }



        function CheckCaseNotedate(value) {
            isValid = true;
            if (!$(value).attr("readonly")) {

                if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                    var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                    var regex = new RegExp(dateformat);
                    if (!regex.test($(value).val())) {
                        customAlert("Invalid date format. ");
                        $(value).val('');
                        return false;
                    }
                    else {
                        var text = $(value).val();
                        var comp = text.split('/');
                        var m = parseInt(comp[0], 10);
                        var d = parseInt(comp[1], 10);
                        var y = parseInt(comp[2], 10);
                        var date = new Date(y, m - 1, d);
                        if (date.getFullYear() == y && date.getMonth() + 1 == m && date.getDate() == d) {

                        } else {
                            customAlert("Invalid date. ");
                            $(value).val('');
                            return false;
                        }



                    }
                }
                var txtdate = $(value).val();
                var selectedTimestampequal = new Date();
                var year = selectedTimestampequal.getFullYear();
                var month = selectedTimestampequal.getMonth() + 1;
                var day = selectedTimestampequal.getDate();
                today1 = month + '/' + day + '/' + year;
                var newinput = today1.split("/");
                var newday = newinput[1];
                var str = newday.substr(0, 1);
                var newdaynew = ('0' + newday).slice(-2);
                var newmonth = newinput[0];
                var str1 = newmonth.substr(0, 1);
                var newmonthnew = ('0' + newmonth).slice(-2);
                today = newmonthnew + '/' + newdaynew + '/' + year;
                if (today == txtdate) {
                    return true;
                }
                var testdatelocalinput = new Date(txtdate);
                var selectedTimestamp = new Date().getTime();
                var testdatelocalinputTS = testdatelocalinput.getTime();
                var timestamp = new Date().getTime() - (30 * 24 * 60 * 60 * 1000)
                if (testdatelocalinputTS > selectedTimestamp) {
                    customAlert("Case Note date must be less than or equal to today's date.");
                    $(value).val('');
                    return false;
                }
                else if (timestamp > testdatelocalinputTS) {
                    customAlert("Case Note date cannot be less than 30 days from today's date.");
                    $(value).val('');
                    return false;
                }
            }
            return true;
        }


        function getFormattedDate(date) {
            date = new Date(date);
            var year = date.getFullYear();

            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            return month + '/' + day + '/' + year;
        }

        function checkClassdate(value) {

            isValid = true;
            if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (!regex.test($(value).val())) {
                    customAlert("Invalid date format. ");
                    $(value).val('');
                    return false;
                }
            }
            var txtdate = $(value).val();
            var selectedTimestampequal = new Date();
            var year = selectedTimestampequal.getFullYear();
            var month = selectedTimestampequal.getMonth() + 1;
            var day = selectedTimestampequal.getDate();
            today1 = month + '/' + day + '/' + year;
            var newinput = today1.split("/");
            var newday = newinput[1];
            var str = newday.substr(0, 1);
            var newdaynew = ('0' + newday).slice(-2);

            var newmonth = newinput[0];
            var str1 = newmonth.substr(0, 1);
            var newmonthnew = ('0' + newmonth).slice(-2);

            today = newmonthnew + '/' + newdaynew + '/' + year;
            if (today == txtdate) {
                return true;
            }
            var testdatelocalinput = new Date(txtdate);
            var selectedTimestamp = new Date().getTime();
            var testdatelocalinputTS = testdatelocalinput.getTime();
            var timestamp = new Date().getTime() + (30 * 24 * 60 * 60 * 1000)
            if (testdatelocalinputTS < selectedTimestamp) {
                customAlert("Class Start Date must be greater than or equal to today's date.");
                $(value).val('');
                return false;
            }
            else if (timestamp < testdatelocalinputTS) {
                customAlert("Class Start Date cannot be more than 30 days from today's date.");
                $(value).val('');
                return false;
            }
            return true;
        }

        function isvalid_mdy(s) {

            var day, A = s.match(/[1-9][\d]*/g);
            try {
                A[0] -= 1;
                day = new Date(+A[2], A[0], +A[1]);

                if (day.getMonth() == A[0] && day.getDate() == A[1]) return day;
            }
            catch (er) {
                return er.message;
            }

        }

        function ValidateAge(birthDay, programtype) {


            var DOB = new Date(birthDay);
            var today = new Date();
            var age = today.getTime() - DOB.getTime();
            age = Math.floor(age / (1000 * 60 * 60 * 24 * 365.25));

            if (programtype == 'EHS' && age > 3) {

                $('.error-ageerror-date').text("Invalid age for EHS child");
                return false;
            }

            else if (programtype == 'HS' && ((age < 3) || (age > 6))) {
                $('.error-ageerror-date').text("Invalid age for HS child");
                return false;
            }
            else if (programtype == 'parent' && ((age >= 59) || (age <= 10))) {
                $('.error-ageerror-date').text("Invalid age for Preg Mom");
                return false;
            }

            else {
                return true;
            }
        }
        function validDate(text) {
            var isValid = true;
            var comp = text.split('/');
            if (comp.length !== 3)
                return false;
            if (comp[2].length != 4)
                return false;
            if (comp[2] <= 1901)
                return false;
            if (new Date(text).toString() == "Invalid Date")
                return false;
            if (!isvalid_mdy(text))
                return false;
            var TodayDate = new Date();
            var endDate = new Date(text);

            return isValid;
        }
        function IsValidDOB() {

            var isValid = true;
            var programtype = $('.txt-date').attr('data-programtype');
            var selectedDate = $('.txt-date').val();

            if (selectedDate != "") {
                var isValid = Checkdate(selectedDate);
                if (!validDate(selectedDate)) {
                    $('.error-invalid-date').show();
                    isValid = false;
                }
                else if (!ValidateAge(selectedDate, programtype)) {
                    $('.error-ageerror-date').show();
                    isValid = false;
                }
            }
            else {
                $('.error-message-empty').show();
                isValid = false;
            }

            return isValid;

        }

        function ChangeDOB(arg) {

            var clientid = $(arg).attr('data-childid');
            var programtype = $(arg).attr('data-programtype');
            $('#hChildID').val(clientid);
            $('.txt-date').attr('data-programtype', programtype);
            var clientDob = $(arg).html();
            $('#ChangeDOB').find('#seatsDatetimePicker1').val(clientDob);
            $('#ChangeDOB').modal('show');


        }

        function ShowJobPopup(clientid, type) {
            // $(arg).removeClass("zoomify");
            $('#hChildID').val(clientid);
            $('#UpdateJobTraining').modal('show');
        }


        function ShowChangeClassReason(object) {
            if ($(object).val() == "-1")
                $('#DivChangeClassReason').show();
            else
                $('#DivChangeClassReason').hide();
        }


        function showPregMomDental(clientId, ele, pos) {
            let pregDental = $(ele).parent('p').next('input[name=dentalExamPreg]').val();


            $('#showDentalModal').find('input[name=DentalServicesradio][value=' + pregDental + ']').prop('checked', true);

            $('#showDentalModal').find('#pregID').val(clientId);

            $('#showDentalModal').find('#pregID').attr('pos', pos);


            $('#showDentalModal').modal('show');

        }
        function ClearCaseNote() {
            $('#New_addAttachmentDiv').html('');
            $('#FirstFile').val('');

            $('.case-info').hide();
            $('.subcase-info').hide();
            $('.attachments-conatiner-append').html('');
            $('.fileAttachments').val('');
            $('#selHouseholdList').val('0');
            $('.sub-notes-details').html("No records available");
            $('#New_CaseNotetags_tagsinput .tag ').each(function () {
                $(this).remove();
            });
            $('#AppendCaseNotetags_tagsinput .tag ').each(function () {
                $(this).remove();
            });
            CKEDITOR.instances['subnotes'].setData('');

            $('.addn-table-head').empty();
        }


        function updateProfilePicture(ele,clientType)
        {
            var $eClientID = $(ele).data('accesskey');

            $emerRestClient = clientType;

            $profilePictureImg= $(ele).siblings('img');

            var $clientName = $(ele).closest('.household-main-ch').find('.household-heading-txt').html();

            var $modalHeading = 'Profile Picture of ' + $clientName;

            $('#' + $profilePictureModalId).find('#CaseNoteHeading').html($modalHeading);

            $('#' + $profilePictureModalId).find('input[name="eClientID"]').val($eClientID);



            $('#' + $profilePictureModalId).find('#divcamnotfound').hide();
            $('#' + $profilePictureModalId).find('#divcapimage').hide();

           

            $('#' + $profilePictureModalId).find('#capt-img').removeAttr('src');

            $('#' + $profilePictureModalId).modal('show');
           
        }

        function openPictureUpload(ele)
        {
           
            $(ele).closest('.camera-setup').find('input[name="uploadfileInput"]').trigger('click');
        }

        var _validFileExtensions1 = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        function ValidateSingleInputpdf(oInput,mode) {
            // debugger;

            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {

                    var blnValid = false;
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions1.length; j++) {
                            var sCurExtension = _validFileExtensions1[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                //  $('#documentlabel').text(oInput.files[0].name);
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            customAlertforlongtime("Only (pdf,jpg,jpeg,bmp,gif,png) of file type allowed.");
                            // $('#documentlabel').text("");
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        $('#documentlabel').text("");
                        return false;

                    }

                }
            }


            if (mode == 1)
            {
                saveProfilePicture(oInput, 1);

            }


            return true;
        }


        function saveDocumentCamera(ele) {
            var docImage = $('#'+$profilePictureModalId).find('#capt-img');

            if (docImage[0].src.replace('data:,', '') == '') {
                customAlert('Please capture image using camera');
                return false;
            }
            else {

                saveProfilePicture(docImage, 2);

            }

        }

        function saveProfilePicture(ele, imageType) {
            //     debugger;
            var fd = new FormData();

            var $eClientID=$('#'+$profilePictureModalId).find('input[name="eClientID"]').val();

            if (imageType == 1) {

                var fileUpload = $(ele).get(0);
                var files = fileUpload.files;

                // Create FormData object


                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fd.append(files[i].name, files[i]);
                }

            }
            else {
                fd.append('imageJson', getBase64Image(ele));
            }

            fd.append('eClientID', $eClientID);
            fd.append('em_res_contact', $emerRestClient);
           


            $.ajax({

                url: HostedDir + '/AgencyUser/AddProfilePicture',
                type: 'post',
                secureuri: false,
                processData: false,
                contentType: false,
                async: true,
                beforeSend: function () { $('#spinner').show() },
                data: fd,
                success: function (data) {
                    if (data != null && data.result == true) {
                        customAlert('Profile picture updated successfully');

                        $profilePictureImg.attr('src', 'data:image/png;base64,' + data.imageString)
                        $('#' + $profilePictureModalId).modal('hide');

                    }
                    else {
                        customAlert('Error occurred. Please, try again later');
                    }
                },
                error: function (data) {
                    console.log(data);
                },
                complete: function (data) {
                    $('#spinner').hide();
                }
            });

        }


        function getBase64Image(img) {
            //debugger;
            //var canvas = document.createElement("canvas");
            //canvas.width = img.width;
            //canvas.height = img.height;
            //var ctx = canvas.getContext("2d");
            //ctx.drawImage(img, 0, 0);
            //var dataURL = ctx.toDataURL("image/png");
            //return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");

            return $(img)[0].src.replace(/^data:image\/(png|jpg);base64,/, "");
        }


        $(document).ready(function () {


            /********** Camera Modal *************/

            var $singleCameraModal = $('.camera-file-modal');
           
           $('#'+ $profilePictureModalId).find('#CaseNoteHeading').html('Update Profie Picture');
           $singleCameraModal.attr('id', $profilePictureModalId);

         
           $singleCameraModal.find('.up-device').closest('.camera-setup').append('<input type="file" name="uploadfileInput"   onchange = "ValidateSingleInputpdf(this,1)" accept = "image/*"  capture = "camera"  style="display:none;" /><input type="hidden" name="eClientID"/>');
            $singleCameraModal.find('.up-device').attr('onclick', 'openPictureUpload(this);');

            //  $singleCameraModal.find('#SaveNoteSubmit').attr('onclick','return saveProfilePicture()');


           
            /*************** Camera Modal ************/




            $('#anchor_back_fa').on('click', backToFamilyAdvocate);




            $('#btn_change_fa').on('click', changeFamilyAdvocate).bind(this);


            $('.edit-client').on('click', function () {

                $('#spinner').show();

            });

            $('#txtCaseNoteDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $('#txtSubCaseNote').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $('#matrix_addn2').find('#hDateTime').val(getFormattedDate(new Date()));
            $('#matrix_addn2').find('#txtDateOfChange').val(getFormattedDate(new Date()));
            

            $('#New_CaseNotetags,#AppendCaseNotetags').tagsInput({
                width: 'auto',
                height: '38px',
                delimiter: [',', ';'],
                autocomplete_url: '',
                autocomplete: {
                    //'source': tags_array[0].split(/,\s*/)
                    'source': getTagsOnInput(),
                    'appendTo': "#ModalAddCasenote"
                },
                //allowDuplicates: false
            });

             $('#CaseNotetags').tagsInput({
                width: 'auto',
                height: '38px',
                delimiter: [',', ';'],
                autocomplete_url: '',
                autocomplete: {
                    //'source': tags_array[0].split(/,\s*/)
                    'source': getTagsOnInput(),
                    'appendTo': "#matrix_addn2"
                },
                //allowDuplicates: false
            });

            var heightparent = $(".parent-height-common").height();

            $(".parent-height-common").css({
                height: heightparent
            });

            $(".fold-table tr.view").on("click", function () {
                $(this).toggleClass("open").next(".fold").toggleClass("open");

                if ($(this).hasClass('open')) {
                    $(this).next('.input_smtmarg ').addClass('active');
                    $(this).next('.input_smtmarg ').slideDown("slow");
                }
                else {
                    $(this).next('.input_smtmarg ').removeClass('active');
                    $(this).next('.input_smtmarg ').slideUp("slow");
                }
            });
            $('.table-submit').on('click', function (event) {

                var target = $(this.getAttribute('href'));

                if (target.length) {
                    event.preventDefault();
                    $('html, body').stop().animate({
                        scrollTop: target.offset().top
                    }, 1000);
                }

            });

            $("#ModalAddCasenote").on("hidden.bs.modal", function () {
                ClearCaseNote();

            });


            $('#statusClassStart').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });


            $('#statusClassStart').on('blur', function () {

                return checkClassdate(this);

            });

            $('#divSelectCenter').find('#centerList').on('change', function () {


                cleanValidation();

                var centerValue = $(this).val();
                if (centerValue == "" || centerValue == '0') {
                    plainValidation('#centerList');
                    customAlert('Please select center');
                    return false;
                }

                $.ajax({

                    url: HostedDir + "/AgencyUser/GetClassroomWithSeats",
                    datatype: 'json',
                    type: 'post',
                    data: { centerId: centerValue },
                    beforeSend: function () { $('#spinner').show() },
                    success: function (data) {
                        $('#spinner').hide();
                        var appendSelect = '';
                        if (data != null && data.length > 0) {
                            appendSelect += '<option value="0">--Select Classroom--</option>';

                            $.each(data, function (i, clsRoom) {

                                if (clsRoom.ActualSeats <= 0) {
                                    appendSelect += '<option value="' + clsRoom.Enc_ClassRoomId + '" disabled="disabled" style="color: red;">' + clsRoom.ClassName + '</option>';
                                }
                                else {
                                    appendSelect += '<option value=' + clsRoom.Enc_ClassRoomId + '>' + clsRoom.ClassName + '</option>';

                                }

                            });
                        }

                        $('#divSelectClassroom').find("#classroomSelect").html(appendSelect);



                    },
                    error: function (data) {
                        $('#spinner').hide();
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }


                });

            });


            $('.btn-UpdateJobTraining').click(function () {

                if ($('.jobTraing').prop('checked') == false) {
                    customAlert("Please select Has parent completed the job training.");
                    return false;
                }
                else {
                    $.ajax({
                        url: "/AgencyUser/UpdateJobTraining",
                        type: "POST",
                        data: {
                            ClientId: $('#hChildID').val(),
                            IsCompleted: $('.jobTraing:checked').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (data) {
                            if (data == true) {
                                customAlert("Record updated successfully.");
                                $('.job-badge').css('background', '#be20d0');
                                $('#UpdateJobTraining').modal('hide');


                            }
                            else
                                customAlert("Record not updated successfully.");
                        }
                    });

                }

            });
            $('.btn-DOBChange').click(function () {

                if (IsValidDOB()) {

                    $.ajax({
                        url: "/AgencyUser/UpdateDateOfBirth",
                        type: "POST",
                        data: {
                            DOB: $('.txt-date').val(),
                            ClientId: $('#hChildID').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (data) {
                            if (data == true) {
                                customAlert("Record updated successfully.");
                                $('#ChangeDOB').modal('hide');
                                var ids = '#dob' + $('#hChildID').val();
                                $(ids).text($('.txt-date').val());
                                $('.txtdob').val("");

                            }
                            else
                                customAlert("Record not updated successfully.");
                        }
                    });
                }
                else {

                }
            });

            $("#ChangeDOB").on("hidden.bs.modal", function () {
                $('.error-message').hide();

            });
            $("#OtherModel").on("hidden.bs.modal", function () {

                $('#Oemergencycontact').hide();
                $('#lblOemergencycontact').hide();
                $('#divOallowhomeVisit').hide();
            });
            $('#seatsDatetimePicker1').datetimepicker({
                timepicker: false,
                format: 'm/d/Y',
                validateOnBlur: false,
                yearRange: '1900:2150',
                maxDate: new Date()

            });




            $('.txt-date').focusout(function () {
                $(this).parent('.input-container').find('span').hide();
            });
            $('.txt-date').focusin(function (e) {
                e.preventDefault();
            })

            $('.seats-icon').click(function (e) {
                $('#seatsDatetimePicker' + this.id).datetimepicker('show');
            });

            $(".txt-date").on('keydown', function (e) {
                e.preventDefault();
            });
            $(".txt-date").on('keyup', function (e) {
                flag = 0;
            });




            $("#matrix_addn2").on("hidden.bs.modal", function () {
                $('#Centers').val(0);

                $('#MyModalLateArrival .txt-clear').val("");
                $('.errorAvailableSeat').hide();
                $('#changeClassReason').val(0);

                $('.txt-date').val($('#hDateTime').val());

                $('.err-message').hide();

            });

            CKEDITOR.replace('Note', {
                language: 'en-gb',
                uiColor: '#295b8f',
                disableNativeSpellChecker: false
            });
            CKEDITOR.replace('New_Note', {
                language: 'en-gb',
                uiColor: '#295b8f',
                disableNativeSpellChecker: false
            });
            CKEDITOR.replace('subnotes', {
                language: 'en-gb',
                uiColor: '#295b8f',
                disableNativeSpellChecker: false
            });

            $("body").on('keyup', '.txt-date', function (e) {

                flags = 0;
                if (e.keyCode != 193 && e.keyCode != 111) {
                    if (e.keyCode != 8) {
                        if ($(this).val().length == 2) {
                            $(this).val($(this).val() + "/");
                        } else if ($(this).val().length == 5) {
                            $(this).val($(this).val() + "/");
                        }
                    } else {
                        var temp = $(this).val();
                        if ($(this).val().length == 5) {
                            $(this).val(temp.substring(0, 4));
                        } else if ($(this).val().length == 2) {
                            $(this).val(temp.substring(0, 1));
                        }
                    }
                } else {
                    var temp = $(this).val();
                    var tam = $(this).val().length;
                    $(this).val(temp.substring(0, tam - 1));
                }


            });

            var flags = 0;

            $('body').on("keydown", "#datecompleted,.txt-date", function (e) {
                flags++;
                if (flags > 1) {
                    e.preventDefault();
                }

                //var regex = /^[0-9]*(?:\.\d{1,2})?$/;


                //if( !regex.test(e.value) ) {
                //    return false;
                //}

                var key = e.charCode || e.keyCode || 0;

                // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
                // home, end, period, and numpad decimal
                return (key == 8 || key == 9 || key == 13 || key == 46 || key == 37 || key == 39 ||
                    key == 35 || key == 36 || key == 110 || key == 190 || key == 191 ||
                   (key >= 96 && key <= 111 || key >= 48 && key <= 57 && !e.shiftKey));
                //(e.which == keyCode.ENTER)


                var owner = this,
              pps = owner.properties,
              charCode = e.which || e.keyCode || e.charCode || 0;

                // hit backspace when last character is delimiter

                if (Util.isAndroid() &&
                    e.target.value.length &&
                    e.target.value.length === this._lastEventValue.length - 1 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)
                ) {
                    e.charCode = 8;
                }
                if (e.charCode === 8 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)) {
                    pps.backspace = true;
                }
                else {
                    pps.backspace = false;
                }
                this._lastEventValue = e.target.value;

            });



            $('.addn_sep_casenote').hide();


            $('body').on('click', '.add-new-center', function () {

                $('#Centers').empty();
                $('#ddClassroom').empty();
                $('.addn_sep_casenote').hide();

                $('#spnClassName').text('');
                $('#spnAvailableCount').text('0');
                $('#ptotalSeats').hide();



                $('#hChildID').val($(this).attr('data-childid'));

                $('#CaseNotetitle').val("Center Changes For Client");
                $('#centerId').val($(this).attr('data-center-attr'));


                $('#centerName').val("");
                $('#clsRoomName').val("");
                $('#centerName').val($(this).attr('data-center-name'));
                $('#clsRoomName').val($(this).attr('data-cls-roomname'));
                $('#clsRoomId').val("")
                getList();




                $('#matrix_addn2').modal('show');
            });

            $('body').on('click', '.add-new-cls', function () {

                $('#Centers').empty();
                $('#ddClassroom').empty();
                $('.addn_sep_casenote').hide();

                $('#spnClassName').text('');
                $('#spnAvailableCount').text('0');
                $('#ptotalSeats').hide();

                $('#hChildID').val($(this).attr('data-childid'));

                $('#CaseNotetitle').val("Classroom Changes For Client");
                $('#centerId').val("")

                $('#clsRoomId').val($(this).attr('data-cls-attr'))

                $('#centerName').val("");
                $('#clsRoomName').val("");
                $('#clsRoomName').val($(this).attr('data-cls-roomname'));
                $('#centerId').val($(this).attr('data-center-attr'));
                getList();
                $('#matrix_addn2').modal('show');
            });
            function getList() {

                $.ajax({
                    url: "/Roster/GetCenterByAgency",
                    type: "POST",
                    data: {
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (data) {
                        if (data.list.Centers != null && data.list.Centers.length > 0) {

                            var option = "";
                            $('#Centers').empty();
                            if ($('#Centers').find('option').length < 1) {

                                option = option + '<option value="' + 0 + '" >' + '--Select Center--' + '</option>';

                                for (var i = 0; i < data.list.Centers.length; i++) {

                                    if ($('#clsRoomId').val() != "") {

                                        if ($('#centerId').val() == data.list.Centers[i].CenterId) {

                                            option = option + '<option value="' + data.list.Centers[i].CenterId + '">' + data.list.Centers[i].Name + '</option>';
                                        }
                                    }
                                    else {
                                        if ($('#centerId').val() != data.list.Centers[i].CenterId) {
                                            option = option + '<option value="' + data.list.Centers[i].CenterId + '">' + data.list.Centers[i].Name + '</option>';
                                        }
                                    }
                                }
                                $('#Centers').find('option').remove().end().append(option);
                                $('#Centers').val('');
                            }
                            $('#Centers').prop('selectedIndex', 0);
                        }
                    }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                });
            }
            $('.clsCenters').change(function () {

                if ($(this).val() != "0") {


                    $('#spnClassName').text('');
                    $('#spnAvailableCount').text('0');
                    $('#ptotalSeats').hide();
                    $.ajax({
                        url: HostedDir + "/Roster/Getclassrooms",
                        type: "POST",
                        data: {
                            Centerid: $('#Centers').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {
                            if (response.length > 0) {

                                var option = "";
                                $('#ddClassroom').empty();
                                option = '<option value="0">Select classroom</option>';
                                for (var i = 0; i < response.length; i++) {

                                    if ($('#clsRoomId').val() != response[i].ClassroomID) {

                                        option = option + '<option value="' + response[i].ClassroomID + '">' + response[i].ClassName + '</option>';
                                    }
                                }
                                $('#ddClassroom').find('option').remove().end().append(option);
                                $('#ddClassroom').val('0');
                            }
                            else {
                                $('#ddClassroom').find('option').remove();
                            }
                        }
                           , error: function (response) {
                               customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                           }
                    });

                }

            });

            $('.clsClassRooms').change(function () {
                //CKEDITOR.instances['Note'].setData("Will change class room From " + $('#clsRoomName').val() + " To " + $('#ddClassroom option:selected').text());

                $('.errorAvailableSeat').hide();
                $.ajax({
                    url: HostedDir + "/Roster/GetAvailablitySeatsByClass",
                    type: "POST",
                    data: {
                        CenterId: $('#Centers').val(), ClassRoomId: $('#ddClassroom').val(), ClientID: $('#hChildID').val()
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (data) {

                        $('#spnClassName').text($('#Classroom').text());
                        $('#spnAvailableCount').text(data);
                        $('#ptotalSeats').show();

                        var num = parseInt(data);


                        if (data == "" || data == "0" || (num < 0)) {
                            $('.addn_sep_casenote').hide();
                            $('#spnAvailableCount').text("0");
                            $('.errorAvailableSeat').show();
                        }
                        else {

                            $.ajax({
                                url: HostedDir + "/Roster/GetCenterAndClassRoomsByCenter",
                                type: "POST",
                                data: {
                                    centerid: $('#Centers').val(), Classroom: $('#ddClassroom').val(), householdid: '@Model.HouseholdId', ChildId: $('#hChildID').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (data) {


                                    for (var i = 0; i < data.list.CenterAndClassRoom.length; i++) {

                                        $('.ClientDiv').html('<div class="col-sm-12"><input type="checkbox"  checked="checked" class="clsClientIds"  name="ClientIds.IDS" value="' + data.list.CenterAndClassRoom[i].Eclientid + '" /><span> ' + data.list.CenterAndClassRoom[i].Name + " (" + data.list.CenterAndClassRoom[i].clientenrolled + ")" + '</span></div>');

                                    }

                                    for (var i = 0; i < data.list.CaseNoteDetails.length; i++) {

                                        $('.StaffDiv').html('<div class="col-sm-12"><input type="checkbox"  checked="checked" class="clsStaffIds" name="ClientIds.IDS" value="' + data.list.CaseNoteDetails[i].UserId + '" /><span> ' + data.list.CaseNoteDetails[i].Name + '</span></div>');
                                    }

                                    $('#CaseNotetags_tagsinput .tag ').each(function () {
                                        $(this).remove();
                                    });
                                    $('#CaseNotetags_tagsinput .tag1 ').remove();



                                    if ($('#centerName').val() != "") {
                                        var contenct = "Change center From " + $('#centerName').val() + " center and  " + $('#clsRoomName').val() + " classroom to " + $('#Centers option:selected').text() + " center and " + $('#ddClassroom option:selected').text() + " classroom";

                                        CKEDITOR.instances['Note'].setData(contenct);

                                        $('#CaseNotetags_tagsinput').prepend('<span class="tag1"><span>Center Change&nbsp;&nbsp;</span><a href="#" title="Removing tag">x</a></span>');

                                        // $('#CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + "Center Change" + '&nbsp;&nbsp;</span><a href="#" onclick="removetag(this);" title="Removing tag">x</a></span>');
                                    }
                                    else {
                                        CKEDITOR.instances['Note'].setData("Change classroom From " + $('#clsRoomName').val() + " To " + $('#ddClassroom option:selected').text());

                                        $('#CaseNotetags_tagsinput').prepend('<span class="tag1"><span>Classroom Change&nbsp;&nbsp;</span><a href="#" title="Removing tag">x</a></span>');

                                        //  $('#CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + "Classroom Change" + '&nbsp;&nbsp;</span><a href="#" onclick="removetag(this);" title="Removing tag">x</a></span>');
                                    }

                                    $('.addn_sep_casenote').show();

                                }
                            });

                        }
                    }
                       , error: function (response) {
                           customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                       }
                });



            });


            $('body').on("change keyup", ".mandatory", function () {
                if ($(this).closest('div').find('.err-message').is(':visible'))
                    $(this).closest('div').find('.err-message').hide();

            });
            $('body').on("change keyup", ".txt-date", function () {
                if ($(this).closest('div').find('.err-date-message').is(':visible'))
                    $(this).closest('div').find('.err-date-message').hide();

            });
            $('body').on("change keyup", "#Note", function () {
                if ($(this).closest('div').find('.err-casenote-note').is(':visible'))
                    $(this).closest('div').find('.err-casenote-note').hide();

            });

            function validatedateChild(inputTextObject) {

                if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {

                    var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                    var regex = new RegExp(dateformat);
                    if (regex.test($(inputTextObject).val())) {

                        return true;
                    }
                    else {


                        return false;
                    }

                }

            }

            function ValidateInput() {

                var isValid = true;

                if ($('.errorAvailableSeat').is(":visible") == true) {
                    isValid = false;
                }

                $('.mandatory').each(function () {
                    if ($(this).val() == "" || $(this).val() == "0") {
                        $(this).closest('div').find('.err-message').show();
                        isValid = false;
                    }
                });
                if ($('#txtDateOfChange').val() != "" && !validatedateChild($('#txtDateOfChange'))) {
                    $('#txtDateOfChange').closest('div').find('.err-date-message').show();
                    if (isValid)
                        isValid = false;
                }

                if ($('#changeClassReason').val() == "-1" && $('#txtChangeClassReason').val() == "") {
                    $('#txtChangeClassReason').parent('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }
                else {
                    $('#txtChangeClassReason').parent('div').find('.err-message').hide();
                }
                if ($('.addn_sep_casenote').is(":visible") == true) {
                    if (CKEDITOR.instances['Note'].getData() == "") {

                        $('.err-casenote-note').show();
                        isValid = false;
                    }
                    else
                        $('.err-casenote-note').hide();



                    if ($('#txtCaseNoteDate').val() != "" && !validatedateChild($('#txtCaseNoteDate'))) {
                        $('#txtCaseNoteDate').closest('div').find('.err-date-message').show();
                        if (isValid)
                            isValid = false;
                    }


                }



                return isValid;
            }
            $('#SaveNoteSubmit').click(function () {

                if (ValidateInput()) {
                    var clientIDs = [];

                    var Tags = '';
                    Tags = Tags + $('#CaseNotetags_tagsinput .tag1 span').text().trim() + ',';
                    $('#CaseNotetags_tagsinput .tag span').each(function () {
                        Tags = Tags + $(this).text().trim() + ',';
                    });
                    $("#CaseNotetags").val(Tags);

                    $('#Note').val(CKEDITOR.instances['Note'].getData());

                    $('#ClientDiv input:checked').each(function () {
                        if ($(this).prop("checked")) {
                            Clientcount = 1;
                        }
                    });
                    Tags = '';



                    //Contract Service Types...
                    $.each($("input.clsClientIds:checked"), function () {
                        var clientId = $(this).val();
                        clientIDs.push(clientId);
                    });
                    clientIDs = clientIDs.toString();

                    var StaffIds = [];
                    //Contract Business Types...
                    $.each($("input.clsStaffIds:checked"), function () {
                        var staffId = $(this).val();
                        StaffIds.push(staffId);
                    });

                    StaffIds = StaffIds.toString();
                    var CaseNote = {};

                    CaseNote.ClientId = $('#hChildID').val();
                    CaseNote.DateOfTransition = $('#txtDateOfChange').val();
                    CaseNote.CenterId = $('#Centers').val();
                    CaseNote.Classroomid = $('#ddClassroom').val();


                    CaseNote.CaseNoteDate = $('#txtCaseNoteDate').val();
                    CaseNote.CaseNotetitle = $('#CaseNotetitle').val();
                    CaseNote.Note = encodeURIComponent($('#Note').val());
                    CaseNote.CaseNotetags = $("#CaseNotetags").val().toString();
                    CaseNote.ReasonId = $('#changeClassReason').val();
                    CaseNote.NewReason = $('#txtChangeClassReason').val();
                    CaseNote.ClientIds = clientIDs;
                    CaseNote.StaffIds = StaffIds;

                    CaseNote.HouseHoldId = $('#HouseholdId').val(),
                    // CaseNote.ProgramId = $('#Centers').val();


                        $.ajax({
                            dataType: 'json',
                            type: 'POST',
                            url: '/Roster/SaveCenterAndClassRoom',
                            data: CaseNote,
                            success: function (data) {
                                if (data == true) {
                                    location.href = '/Roster/Roster';
                                }
                            }
                        });
                }


            });
            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');
                    // $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                }
            });

            $('.Zoom img').zoomify();
            $('#Yakkrli').removeClass("active");
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                $(this).find('td:eq(0) :input').val("");
            });
            $('#ODOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $('#EDOB').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("#ParentSSN3").mask("999-99-9999");
            $('#Ofirstname')[0].value = "";
            $('#Olastname')[0].value = "";
            $('#Omiddlename')[0].value = "";
            $('#Olastname')[0].value = "";
            $('#ODOB').val("");
            $('input:radio[name=OGender]:checked').prop('checked', false);
            $('#Alreadyemergencycontact').val(0);
            $('#ERelationwithchild').val("");
            $('#Oemergencycontact').prop('checked', false);
            $('#Efirstname').val("");
            $('#Emiddlename').val("");
            $('#Elastname').val("");
            $('#DOBverifiedBy').val("");
            $('#EGendermale').prop("checked", false);
            $('#EGenderfemale').prop("checked", false);
            $('#EGenderother').prop("checked", false);
            $('#EDOB').val("");
            $('#EEmail').val("");
            $('#Enotes').val("");
            $('#EFileName').val("");
            $('#EFileExtension').val("");
            $('#EImagejson').val("");

            $('#ParentSSN3').val('');
            if ('@ViewBag.message' != '') {
                customAlert('@ViewBag.message');
            }
            if ('@TempData["message"]' != null && '@TempData["message"]' != '') {
                customAlert('@TempData["message"]');
            }
            if ($('#FamilyType').prop('checked')) {
                $('#married').hide();
            }
            if ($('#FamilyType1').prop('checked')) {
                $('#ParentRelatioship').find('option').remove().end().append('<option value="1">Parents (biological, adoptive, stepparents, etc.)</option>' +
                                '<option value="2">Grandparents</option><option value="3">Relatives other than grandparents</option><option value="4">Foster parents not including relatives</option>' +
                               '<option value="6">Other</option> ');
                $('#ParentRelatioship').val('');
                $('#divParentrelatioship').hide();
                $('#divrelationshipparent').show();
                if ('@Model.ParentRelatioship' != '0') {
                    $('#ParentRelatioship').val('@Model.ParentRelatioship');
                }
                if ('@Model.ParentRelatioship' == '6') {
                    $('#divParentrelatioship').show();
                }
                $('#married').show();

            }
            if ('@Model.PrimaryLanguauge' == '12')
                $('#div2').show();
            else
                $('#div2').hide();

            if ('@Model.PrimaryLanguauge' == '')
                $('#PrimaryLanguauge').val('');
            $("#ParentSSN3").blur(function () {
                if (ssnothervalue != null) {
                    if ($('#ParentSSN3').val() == "") {
                        var res = ssnothervalue;
                        len = res.length;
                        max = 11;
                        stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '***' : '*' : '';
                        result = stars + res.substring(7);
                        $('#ParentSSN3').val(result);
                    }
                }
            });

            // bind file cabinet

            $("#searchurl").load('@Url.Action("FamilyHouseHoldForFamilySummary", "AgencyUser")', { tabName: 'Child', houseHoldId: $('#HouseholdId').val() });

            $(".ddFileCabinet").change(function () {

                $("#searchurl").load('@Url.Action("FamilyHouseHoldForFamilySummary", "AgencyUser")', { tabName: $('.ddFileCabinet Option:Selected').text(), houseHoldId: $('#HouseholdId').val() });
            });

        });


        function ShowHideDivParentTwo1() {
            $('#divParentrelatioship').hide();
            $('#divrelationshipparent').hide();
            $('#married').hide();
        }
        function ShowHideDivParentTwo2() {
            $('#ParentRelatioship').find('option').remove().end().append('<option value="1">Parents (biological, adoptive, stepparents, etc.)</option>' +
                '<option value="2">Grandparents</option><option value="3">Relatives other than grandparents</option><option value="4">Foster parents not including relatives</option>' +
               '<option value="6">Other</option> ');
            $('#ParentRelatioship').val('');
            $('#divParentrelatioship').hide();
            $('#divrelationshipparent').show();
            $('#married').show();

        }
        function Checkhouse(object) {
            if ($('#RentType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType1').prop("checked", false);
                    }
                });
            }
            if ($('#RentType2').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType2').prop("checked", false);
                    }
                });
            }
            if ($('#RentType3').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType3').prop("checked", false);
                    }
                });
            }
            if ($('#RentType4').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $('#RentType4').prop("checked", false);
                    }
                });
            }
        }
        function Renting(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function Buying(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function SubsidizedRent(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function NoPayment(object) {
            if ($('#HomeType1').prop("checked")) {
                BootstrapDialog.confirm('Rent type is not applicable with Homeless family. Do you want to continue?', function (result) {
                    if (!result) {
                        $(object).prop("checked", false);
                    }
                });
            }
        }
        function ShowdivParentotherrelationship() {
            $('#ParentRelatioshipOther').val('');
            if ($('#ParentRelatioship').val() == 6)
                $('#divParentrelatioship').show();

            else
                $('#divParentrelatioship').hide();
        }

        function Showotherlanguage() {
            $('#OtherLanguageDetail').val("");
            if ($('#PrimaryLanguauge').val() == 12)
                $('#div2').show();
            else
                $('#div2').hide();
        }

        function checkZipCode(inputTextObject) {
            if ($(inputTextObject).val() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;
                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckAddress(1);
                return ret;
            }
            else {
                $('#City').find('option').remove();
                $('#State').val('');
                $('#County').val('');


            }
        }

        function CheckAddress(value) {
            var Zipcode = 0;
            if (value == 0)
                Zipcode = 0;
            else
                Zipcode = $('#ZipCode').val();

            if (value == 0 && $('#State').val().trim() != "") {
                $.ajax({
                    url: HostedDir + "/Agencyuser/Checkaddress",
                    type: "POST",
                    data: {
                        Address: $('#Street').val() + $('#StreetName').val() + $('#ZipCode').val(),
                        HouseHoldId: $('#HouseholdId').val(),
                        Zipcode: Zipcode
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {
                        if (response.Result == 1) {
                            BootstrapDialog.confirm('Address already exists. Do you want to continue?', function (result) {
                                if (!result) {
                                    $('#Street').val("");
                                    $('#StreetName').val("");
                                    $('#ZipCode').val("");
                                    $('#City').find('option').remove().end();
                                    $('#City').val('');
                                    $('#State').val('');
                                    $('#County').val('');
                                }
                            });
                        }
                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });


            }
            else {
                if ($('#ZipCode').val().trim() != "") {

                    $.ajax({
                        url: HostedDir + "/Agencyuser/Checkaddress",
                        type: "POST",
                        data: {
                            Address: $('#Street').val() + $('#StreetName').val() + $('#ZipCode').val(),
                            HouseHoldId: $('#HouseholdId').val(),
                            Zipcode: Zipcode
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {
                            if (value == 1) {
                                if (response.Zipcodelist != null && response.Zipcodelist.length > 0) {
                                    var option = "";
                                    for (var i = 0; i < response.Zipcodelist.length; i++) {
                                        option = option + '<option value="' + response.Zipcodelist[i].City + '">' + response.Zipcodelist[i].City + '</option>';
                                    }
                                    $('#City').find('option').remove().end().append(option);
                                    $('#City').val('');
                                    $('#State').val(response.Zipcodelist[0].State);
                                    $('#County').val(response.Zipcodelist[0].County);
                                    $('#ZipCode').val(response.Zipcodelist[0].Zipcode);
                                }
                                else {
                                    $('#City').find('option').remove().end();
                                    $('#City').val('');
                                    $('#State').val('');
                                    $('#ZipCode').val('');
                                    $('#County').val('');
                                    customAlert("Could not find zipcode details.");

                                }
                            }
                            if (response.Result == 1) {
                                BootstrapDialog.confirm('Address already exists. Do you want to continue?', function (result) {
                                    if (!result) {
                                        $('#Street').val("");
                                        $('#StreetName').val("");
                                        $('#ZipCode').val("");
                                        $('#City').find('option').remove().end();
                                        $('#City').val('');
                                        $('#State').val('');
                                        $('#County').val('');
                                    }
                                });
                            }
                        }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                    });
                }


            }


        }


        function uncheckdata2() {
          
            if ($('#HouseholdData').find('#None').prop("checked")) {
                $('#HouseholdData').find('#TANF').prop("checked", false);
                $('#HouseholdData').find('#SSI').prop("checked", false);
                $('#HouseholdData').find('#WIC').prop("checked", false);
                $('#HouseholdData').find('#SNAP').prop("checked", false);
            }
        }

       
        function uncheckdataNone2() {

            if (($('#HouseholdData').find('#TANF').prop("checked")) || ($('#HouseholdData').find('#SSI').prop("checked")) || ($('#HouseholdData').find('#WIC').prop("checked")) || ($('#HouseholdData').find('#SNAP').prop("checked"))) {
                $('#HouseholdData').find('#None').prop("checked", false);
            }
        }
        function SaveClientSummary() {
            var isValid = true;
            cleanValidation();
            if ($('#Street')[0].value.trim() == "") {
                isValid = false;
                customAlert("Address is required. ");
                plainValidation('#Street');
                return isValid;
            }
            if ($('#ZipCode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip Code is required. ");
                plainValidation('#ZipCode');
                return isValid;
            }
            if ($('#City').val() == "" || $('#City').val() == null) {
                isValid = false;
                customAlert("City is required. ");
                plainValidation('#City');
                return isValid;
            }
            if ($('#State')[0].value.trim() == "") {
                isValid = false;
                customAlert("State is required. ");
                plainValidation('#State');
                return isValid;
            }
            if ($('#County')[0].value.trim() == "") {
                isValid = false;
                customAlert("County is required. ");
                plainValidation('#County');
                return isValid;
            }
            if (!$('#HomeType1').prop("checked") && !$('#HomeType2').prop("checked")) {
                isValid = false;
                customAlert("Is family Homeless at this time is required. ");
                return isValid;
            }
            if (!$('#chk input[type="checkbox"]').is(':checked')) {
                isValid = false;
                customAlert("Federal or other assistance is required. ");
                return isValid;
            }
            if ($('#PrimaryLanguauge').val() == "" || $('#PrimaryLanguauge').val() == null) {
                isValid = false;
                customAlert("Primary languauge is required. ");
                plainValidation('#PrimaryLanguauge');
                return isValid;
            }
            else if ($('#PrimaryLanguauge').val() == "12" && $('#OtherLanguageDetail').val() == "") {
                isValid = false;
                customAlert("Other language detail is required. ");
                plainValidation('#OtherLanguageDetail');
                return isValid;
            }
            if (!$('#Interpretor').prop("checked") && !$('#Interpretor1').prop("checked")) {
                isValid = false;
                customAlert("Does family need an interpreter is required. ");
                return isValid;
            }
            return isValid;
        }


        function bindsubcategory() {
            if ($('#CRace').val() == '1e5304d3-6182-483a-8b27-5269a2dd9936')
                $('#divRaceother').show();
            else
                $('#divRaceother').hide();
            $.ajax({
                url: HostedDir + "/Agencyuser/getsubcategory",
                type: "POST",
                data: {
                    Raceid: $('#CRace').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].RaceSubCategoryID + '">' + response[i].Name + '</option>';
                        }
                        $('#CRaceSubCategory').find('option').remove().end().append(option);
                        $('#CRaceSubCategory').val('');
                    }
                    else {
                        $('#CRaceSubCategory').find('option').remove();
                    }
                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });
        }

        function isValidOtherInfo() {
            cleanValidation();

            if ($('#Ofirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Ofirstname');
                return isValid;
            }
            if ($('#Olastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Olastname');
                return isValid;
            }
            if ($('#ODOB')[0].value.trim() == "") {
                isValid = false;
                customAlert("Date of birth is required. ");
                plainValidation('#ODOB');
                return isValid;
            }
            if ($('#ODOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#ODOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth can't be greater than current date. ");
                    plainValidation('#ODOB');
                    return isValid;
                }

            }
            if (!$("input:radio[name='OGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }

            if ($('#lblOemergencycontact').is(':visible')
                && $('input:checkbox[name="Oemergencycontact"]').is(':checked')
                && $('#divOallowhomeVisit').is(':visible') &&
                !$('input:radio[name="OEnableHomeVisitActivities"]').is(':checked')) {
                isValid = false;
                customAlert("Enable Home Visit Activities field is required.");
                return isValid;
            }

            if (!$('input:radio[name="OIncomeSupported"]').is(':checked')) {
                isValid = false;
                customAlert("Income support field is required.");
                return isValid;
            }


            if (ssnothervalue != null) {
                if (ssnothervalue != $('#ParentSSN3').val()) {
                    if ($('#ParentSSN3').val() == "") {
                        $('#ParentSSN3').val(ssnothervalue);
                    }
                    else if ($('#ParentSSN3').val().indexOf("*") > 0) {
                        $('#ParentSSN3').val(ssnothervalue);
                    }
                }
            }

        }

        function checkdateOther(input) {

            isValiddob = true;
            var age = null;
            var now = null;
            var past = null;
            var nowYear = null;
            var pastYear = null;
            if ($('#ODOB')[0].value.trim() != "") {
                now = new Date();
                past = new Date($("#ODOB").val());
                nowYear = now.getFullYear();
                pastYear = past.getFullYear();
                age = nowYear - pastYear;
                if (age < 0 || age >= 18) {
                    isValiddob = false;
                    $('#Oemergencycontact').show();
                    $('#lblOemergencycontact').show();
                }
                else {
                    $('#Oemergencycontact').hide();
                    $('#lblOemergencycontact').hide();
                }


            }
            return isValiddob;
        }

        function copydata() {

            if ($('#OthersId').val() != "0") {
                if (!$('#Oemergencycontact').prop("checked")) {
                    BootstrapDialog.confirm('Do you want to remove this emergency contact ?', function (result) {
                        if (result) {
                            $('#Oemergencycontact').prop("checked", false);
                            $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);
                            $('#divOallowhomeVisit').hide('slow');
                        }
                        else {
                            $('#Oemergencycontact').prop("checked", true);

                        }
                    });


                }
                else if (!$('#divOallowhomeVisit').is(':visible')) {
                    $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);

                    $('#divOallowhomeVisit').show('slow');

                }


            }

            else if ($('#Oemergencycontact').prop("checked")) {

                if (!$('#divOallowhomeVisit').is(':visible')) {

                    $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);

                    $('#divOallowhomeVisit').show('slow');

                }
            }
            else if ($('#divOallowhomeVisit').is(':visible')) {

                $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);

                $('#divOallowhomeVisit').hide('slow');

            }




        }
        function validatedate(inputTextObject) {
            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                    $('#Oemergencycontact').hide();
                                    $('#lblOemergencycontact').hide();

                                }
                            });

                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }
        function validatedateemergency(inputTextObject) {

            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {
                    var dob = new Date();
                    if (Date.parse($(inputTextObject).val()) >= dob) {
                        customAlert("Invalid Date of birth .Date of birth must be less than today's date. ");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        var age = null;
                        var now = null;
                        var past = null;
                        var nowYear = null;
                        var pastYear = null;
                        now = new Date();
                        past = new Date($(inputTextObject).val());
                        nowYear = now.getFullYear();
                        pastYear = past.getFullYear();
                        age = nowYear - pastYear;
                        if (age < 18) {
                            customAlert("Minimum age must be 18 years. ");
                            $(inputTextObject).val('');
                            return false;
                        }
                        if (age > 90) {
                            BootstrapDialog.confirm('Date of birth is greater than 90 years!! Do you want to continue?', function (result) {
                                if (result) {
                                    return true;
                                }
                                else {
                                    $(inputTextObject).val('');
                                }
                            });

                        }
                        return true;
                    }

                }
                else {
                    customAlert("Invalid date of birth. ");
                    $(inputTextObject).val('');
                    return false;
                }

            }

        }


        function validateEmail1(email) {

            if ($(email).val().trim() != "") {
                if (!validateEmail($(email).val())) {
                    isValid = false;
                    customAlert("Please enter valid email id. ");
                    plainValidation(email);
                    $(email).val('');
                    return isValid;
                }
            }

        }
        function AddphoneE1() {
            var phonetype = "PhoneNos[" + round + "].PhoneType";
            var phoneno = "PhoneNos[" + round + "].PhoneNo";
            var primarycontact = "PhoneNos[" + round + "].IsPrimary";
            var notes = "PhoneNos[" + round + "].Notes";
            var sms = "PhoneNos[" + round + "].IsSms";
            $('#gridphoneE1').show();
            var tr = '<tr><td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                      ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                       '</select></td><td><input  name=' + phoneno + ' class = "form-control" type="text" ></td> <td><input onchange="uncheckother(this);" class="chcketbl" value="true" name=' + primarycontact + '  type="checkbox" data-val="true" /></td><td ><input data-val="true" maxlength="100" class = "form-control" type="text" name=' + notes + '></td><td><input style="width:50%;" disabled="disabled" type="checkbox" class="chcketbl" name=' + sms + ' value="true"/></td><td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphoneE1 > tbody').append(tr);
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphoneE1 > tbody tr:last').find('td:eq(0) :input').val("");
            round = round + 1;
        }

        function addcontact(value) {

            if ($(value).val() == 2) {
                $(value).closest('tr').find('td:eq(4) :input[type="checkbox"]').prop("disabled", false).prop("checked", false);
            }
            else {
                $(value).closest('tr').find('td:eq(4) :input[type="checkbox"]').prop("disabled", true).prop("checked", false);
            }
        }
        function uncheckother(value) {
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(2) :checkbox').prop("checked", false);
            });
            $(value).prop("checked", true);

        }
        function RemovePhoneE1(value) {
            if ($(value).attr("accesskey")) {
                if ($('#gridphoneE1 > tbody tr').length > 1) {
                    BootstrapDialog.confirm('Do you want to delete this contact ?', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/Agencyuser/Deletecontact",
                                type: "POST",
                                data: {
                                    phoneId: $(value).attr("accesskey"),
                                    HouseHoldId: $('#HouseholdId').val(),
                                    EmergencyId: $('#EmegencyId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Contact deleted successfully. ");
                                        round = 0;
                                        if ($('#gridphoneE1 > tbody tr').length > 1) {
                                            $(value).closest('tr').remove();
                                        }
                                        $('#gridphoneE1 > tbody tr').each(function () {
                                            var PhoneTypeP = "PhoneNos[" + round + "].PhoneType";
                                            var phonenoP = "PhoneNos[" + round + "].PhoneNo";
                                            var StateP = "PhoneNos[" + round + "].IsPrimary";
                                            var notesP = "PhoneNos[" + round + "].Notes";
                                            var SmsP = "PhoneNos[" + round + "].IsSms";
                                            var Phoneid = "PhoneNos[" + round + "].PhoneId";
                                            $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                                            $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                                            $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                                            $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                                            $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                                            $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                                            round = round + 1;
                                        });
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }

            }
            else {
                round = 0;
                if ($('#gridphoneE1 > tbody tr').length > 1) {
                    $(value).closest('tr').remove();
                }
                $('#gridphoneE1 > tbody tr').each(function () {
                    var PhoneTypeP = "PhoneNos[" + round + "].PhoneType";
                    var phonenoP = "PhoneNos[" + round + "].PhoneNo";
                    var StateP = "PhoneNos[" + round + "].IsPrimary";
                    var notesP = "PhoneNos[" + round + "].Notes";
                    var SmsP = "PhoneNos[" + round + "].IsSms";
                    var Phoneid = "PhoneNos[" + round + "].PhoneId";
                    $(this).find('td:eq(0)').find(':input').attr('name', PhoneTypeP);
                    $(this).find('td:eq(1) :input[type="text"]').attr('name', phonenoP);
                    $(this).find('td:eq(2)').find(':input').attr('name', StateP);
                    $(this).find('td:eq(3) :input[type="text"]').attr('name', notesP);
                    $(this).find('td:eq(4)').find(':input').attr('name', SmsP);
                    $(this).find('td:eq(5)').find(':input').attr('name', Phoneid);
                    round = round + 1;
                });
            }
        }


        //function isValidStatusChange() {
        //    var isValid = true;
        //    cleanValidation();
        //    $('.enroll-sec').each(function () {

        //        $(this).css("background-color", "");
        //    });
        //    $('#rblwaitinglist').removeAttr('style');

        //    if ($('#lblNewStatus').text() == 'Re-enrolled') {
        //        if ($('#divSelectCenter').is(':visible') && $('#divSelectCenter').find("#centerList").val() == '0') {
        //            isValid = false;
        //            plainValidation('#centerList');
        //            customAlert('Please select center');
        //            return isValid;
        //        }

        //        if ($('#divSelectClassroom').is(':visible') && $('#divSelectClassroom').find("#classroomSelect").val() == '0') {
        //            isValid = false;
        //            plainValidation('#classroomSelect');
        //            customAlert('Please select classroom');
        //            return isValid;
        //        }

        //        if ($('#divSelectDate').is(':visible') && $('#divSelectDate').find("#statusClassStart").val() == '') {
        //            isValid = false;
        //            plainValidation('#statusClassStart');
        //            customAlert('Please enter class start date');
        //            return isValid;
        //        }


        //    }


        //    if ($('#ddlreason').val() == "" || $('#ddlreason').val() == null) {
        //        isValid = false;
        //        customAlert("Reason is required.");
        //        plainValidation('#ddlreason');
        //        return isValid;
        //    }
        //    else if ($('#ddlreason').val() == 0 && $('#txtreason').val() == "") {
        //        isValid = false;
        //        customAlert("Other reason is required.");
        //        plainValidation('#txtreason');
        //        return isValid;
        //    }


        //    if ($('#lblNewStatus').text() == "Withdrawn") {
        //        if ($('.InsuranceType').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Insurance Type is required");
        //            plainValidation('#InsuranceTypeID');
        //            return isValid;
        //        }
        //        else if ($('.MedicalHome').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Ongoing source continuous, accessible health care is required.");
        //            plainValidation('#MedicalHomeID');
        //            return isValid;
        //        }
        //        else if ($('.MedicalServices').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Is the child  up-to-date on a schedule of age-appropriate preventive and primary health care, according to the relevant state’s EPSDT schedule for well child care is required.");
        //            plainValidation('#MedicalServicesID');
        //            return isValid;
        //        }
        //        else if ($('.DentalHome').is(':checked') == false) {
        //            isValid = false;
        //            customAlert(" Child have continual accessible dental care provided by a dentist is required.");
        //            plainValidation('#DentalHomeID');
        //            return isValid;
        //        }
        //        else if ($('.DentalServices').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Up-to-date on a schedule of age-appropriate preventive and primary oral health care according to the relevant state’s EPSDT schedule is required.");
        //            plainValidation('#DentalServicesID');
        //            return isValid;
        //        }
        //        else if ($('#ddImmunizationType').val() == "" || $('#ddImmunizationType').val() == null) {
        //            isValid = false;
        //            customAlert("Child up-to-date on all immunizations appropriate for their age is required.");
        //            plainValidation('#ddImmunizationType');
        //            return isValid;
        //        }
        //        else if ($('.services').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Family receiving services is required");
        //            plainValidation('#ServicesId');
        //            return isValid;

        //        }
        //        else if ($('.Education').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Parent/guardian education details is required");
        //            plainValidation('#EducationID');
        //            return isValid;

        //        }
        //        else if ($('.JobTrainingFinished').is(':checked') == false) {
        //            isValid = false;
        //            customAlert("Parent/guardian completed Job Training is required");
        //            plainValidation('#JobTrainingFinishedID');
        //            return isValid;

        //        }
        //    }
        //    else {
        //        if ($('#Divwaitinglist').is(':visible') && $("input:radio[name='waitinglist']:checked").val() == undefined) {
        //            isValid = false;
        //            customAlert("Waiting list is required.");
        //            plainValidation('#rblwaitinglist');
        //            return isValid;
        //        }
        //    }

        //    if (isValid) {


        //        BootstrapDialog.confirm("Client status will be changed. Do you want to continue?", function (result) {
        //            if (result) {
        //                if (EnrolledObject != null) {
        //                    var Transition = {};

        //                    Transition.TANF = $('#TANF').is(':checked');;
        //                    Transition.SSI = $('#SSI').is(':checked');
        //                    Transition.WIC = $('#WIC').is(':checked');
        //                    Transition.SNAP = $('#SNAP').is(':checked');
        //                    //Transition.HighSchool = $('#HighSchool').val();
        //                    //Transition.HighSchoolGraduate = $('#HighSchoolGraduate').val();
        //                    //Transition.AssociateDegree = $('#AssociateDegree').val();
        //                    //Transition.AdvancedDegree = $('#AdvancedDegree').val();
        //                    Transition.ImmunizationService = $('#ddImmunizationType').val();
        //                    Transition.JobTrainingFinished = $('.JobTrainingFinished:checked').val();
        //                    Transition.ShoolAchievement = $('.Education:checked').val();
        //                    Transition.MedicalHome = $('.MedicalHome:checked').val();
        //                    Transition.DentalHome = $('.DentalHome:checked').val();
        //                    Transition.DentalServices = $('.DentalServices:checked').val();
        //                    Transition.MedicalServices = $('.MedicalServices:checked').val();
        //                    Transition.TrnsInsuranceType = $('.InsuranceType:checked').val();
        //                    Transition.OtherInsuranceTypeDesc = $('#OtherInsuranceType').val();
        //                    Transition.EClientID = $(EnrolledObject).attr("clientid");
        //                    Transition.DateOfTransition = $('#transitionDate').val();
        //                    Transition.HouseholdId = $('#HouseholdId').val();
        //                    Transition.Status = $(EnrolledObject).attr('accesskey');
        //                    Transition.StatusText = $('#lblNewStatus').text();
        //                    Transition.Reason = $('#txtreason').val();
        //                    Transition.ddlreason = $('#ddlreason').val();
        //                    Transition.ddlreasontext = $('#ddlreason').find('option:selected').text();

        //                    Transition.IsWaiting = $('input:radio[name="waitinglist"]:checked').val();

        //                    Transition.Enc_CenterID = ($('#divSelectCenter').is(':visible') && $('#lblNewStatus').text() == 'Re-enrolled') ? $('#divSelectCenter').find("#centerList").val() : '0';
        //                    Transition.Enc_ClassroomID = ($('#divSelectClassroom').is(':visible') && $('#lblNewStatus').text() == 'Re-enrolled') ? $('#divSelectClassroom').find("#classroomSelect").val() : '0';
        //                    Transition.ClassStartDate = ($('#divSelectDate').is(':visible') && $('#lblNewStatus').text() == 'Re-enrolled') ? $('#divSelectDate').find("#statusClassStart").val() : '';

        //                    $.ajax({
        //                        url: HostedDir + "/AgencyUser/DropClient",
        //                        type: "POST",
        //                        datatype: 'json',
        //                        async: false,
        //                        data: Transition,
        //                        success: function (result) {
        //                            if (result == 0) {
        //                                customAlert("Error occurred please try again.");
        //                            }
        //                            if (result == 1) {
        //                                customAlert("Client status changed successfully.");
        //                                setTimeout(function () {
        //                                    //window.location.href = HostedDir + "/AgencyUser/FamilySummary/" + $(EnrolledObject).attr("householdid") + "";
        //                                    window.location.href = HostedDir + "/Roster/Roster";
        //                                }, 300);
        //                            }
        //                            if (result == 2) {
        //                                customAlert("Client status already changed.");
        //                                setTimeout(function () {
        //                                    window.location.href = HostedDir + "/AgencyUser/FamilySummary/" + $(EnrolledObject).attr("householdid") + "";
        //                                }, 300);
        //                            }
        //                        },
        //                        error: function () {
        //                            $("#pleaseWaitDialog").modal('show');
        //                        }
        //                    });
        //                }
        //            }
        //        });
        //    }

        //}

        function isValidEmergencyInfo() {
            cleanValidation();
            if ($('#HouseholdId').val() == '0') {
                isValid = false;
                customAlert("Please add household record. ");
                return isValid;
            }
            if ($('#Efirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Efirstname');
                return isValid;
            }
            if ($('#Elastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Elastname');
                return isValid;
            }
            if ($('#EDOB')[0].value.trim() != "") {
                var today = new Date();
                if (Date.parse($("#EDOB").val()) > today) {
                    isValid = false;
                    customAlert("Date of birth Can't be greater than current date. ");
                    plainValidation('#EDOB');
                    return isValid;
                }
            }
            if (!$("input:radio[name='EGender']").is(":checked")) {
                isValid = false;
                customAlert("Gender is required. ");
                return isValid;
            }
            if ($('#EEmail')[0].value.trim() != "" && !validateEmail($('#EEmail')[0].value.trim())) {
                isValid = false;
                customAlert("Please enter valid email id. ");
                plainValidation('#EEmail');
                return isValid;
            }
            if ($('#ERelationwithchild').val() == null) {
                isValid = false;
                customAlert("Relation with child is required. ");
                plainValidation('#ERelationwithchild');
                return isValid;
            }

            if (!$('input:radio[name="EnableHomeVisitActivities"]').is(':checked')) {
                isValid = false;
                customAlert("Enable Home Visit Activities field is required. ");
                plainValidation($('input:radio[name="EnableHomeVisitActivities"]'));
                return isValid;
            }

            if ($('#gridphoneE1 > tbody tr').length == 0) {
                isValid = false;
                customAlert("Please add contact no. ");
                return isValid;
            }
            if ($('#gridphoneE1 > tbody tr').length > 0) {
                var Phonetype = $("#gridphoneE1 > tbody tr:first").find('td:eq(0) :input');
                var PrimaryPhone = $("#gridphoneE1 > tbody tr:first").find('td:eq(1) :input[type="text"]');
                if ($(Phonetype).val() == null) {
                    isValid = false;
                    customAlert("Phone type is required. ");
                    plainValidation(Phonetype);
                    return isValid;
                }
                if ($(PrimaryPhone).val().trim() == "") {
                    isValid = false;
                    customAlert("Phone no is required .");
                    plainValidation(PrimaryPhone);
                    return isValid;
                }
                var length = 0;
                $('#gridphoneE1 > tbody tr').each(function () {
                    if (length == 0) {
                        length = $(this).find('td:eq(2) :checkbox:checked').length;
                        if ($(this).find('td:eq(0) :input').val() == null)
                            length = 0;
                        if ($(this).find('td:eq(1) :input[type="text"]').val() == null)
                            length = 0;
                    }
                });
                if (length == 0) {
                    isValid = false;
                    var checkbox = $("#gridphoneE1 > tbody tr:first").find('td:eq(2) :checkbox');
                    customAlert("Please check one primary no. ");
                    plainValidation(checkbox);
                    return isValid;
                }

            }
        }

        function isValidRestrictedInfo() {
            cleanValidation();
            if ($('#Rfirstname')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required. ");
                plainValidation('#Rfirstname');
                return isValid;
            }
            if ($('#Rlastname')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required. ");
                plainValidation('#Rlastname');
                return isValid;
            }
        }

        function GetOther(value) {
            $('#Heading').text('Edit Other In Household');
            $.ajax({
                url: HostedDir + "/AgencyUser/GetOther",
                type: "POST",
                data: {
                    OthersId: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditOther(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }
        function EditOther(data) {
            $('#OthersId').val(data.OthersId);
            $('#Ofirstname').val(data.Ofirstname);
            $('#Omiddlename').val(data.Omiddlename);
            $('#Olastname').val(data.Olastname);
            $('#ODOB').val(data.ODOB);

            $('input:radio[name="OIncomeSupported"][value=' + data.OIncomeSupported + ']').prop('checked', true);

            if (data.OGender == "1")
                $('#OGendermale').prop("checked", true);
            if (data.OGender == "2")
                $('#OGenderfemale').prop("checked", true);
            if (data.OGender == "3")
                $('#OGenderother').prop("checked", true);
            var age = null;
            var now = null;
            var past = null;
            var nowYear = null;
            var pastYear = null;
            now = new Date();
            past = new Date(data.ODOB);
            nowYear = now.getFullYear();
            pastYear = past.getFullYear();
            age = nowYear - pastYear;
            if (age < 0 || age >= 18) {
                $('#Oemergencycontact').show();
                $('#lblOemergencycontact').show();
                if (data.Oemergencycontact != null && data.Oemergencycontact == true) {
                    $('#Oemergencycontact').prop('checked', true);
                    $('#Alreadyemergencycontact').val(1);

                    $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"][value=' + data.OEnableHomeVisitActivities + ']').prop('checked', true);
                    $('#divOallowhomeVisit').show();

                }
                else {
                    $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);
                    $('#divOallowhomeVisit').hide();
                }
            }
            else {
                $('#Oemergencycontact').hide();
                $('#lblOemergencycontact').hide();


                $('#divOallowhomeVisit').find('input:radio[name="OEnableHomeVisitActivities"]').prop('checked', false);
                $('#divOallowhomeVisit').hide();
            }

            if (data.ParentSSN3 != "") {
                var res = data.ParentSSN3;
                len = res.length;
                max = 11;
                stars = len > 0 ? len > 1 ? len > 2 ? len > 3 ? len > 4 ? '***-**-' : '***-*' : '***-' : '**' : '*' : '';
                result = stars + res.substring(7);
                $('#ParentSSN3').val(result);
                ssnothervalue = data.ParentSSN3;

            }
            else {
                $('#ParentSSN3').val("");
                ssnothervalue = null;

            }
            $('#OtherModel').modal('show');




        }
        function Addothers() {
            $('#OthersId').val(0);
            $('#Ofirstname').val("");
            $('#Olastname').val("");;
            $('#Omiddlename').val("");
            $('#Olastname').val("");
            $('#ODOB').val("");
            $('input:radio[name=OGender]:checked').prop('checked', false);
            $('#Alreadyemergencycontact').val(0);
            $('#Oemergencycontact').prop('checked', false);
            $('input:radio[name="OIncomeSupported"]').prop('checked', false);
            $('#ParentSSN3').val('');
            $('#Heading').text('Add Other In Household');
            $('#OtherModel').modal('show');
        }


        @*function isValidChangestatus1() {
            cleanValidation();

            if ($('#ddlreason').val() == "" || $('#ddlreason').val() == null) {
                isValid = false;
                customAlert("Reason is required.");
                plainValidation('#ddlreason');
                return isValid;
            }
            else if ($('#ddlreason').val() == 0 && $('#txtreason').val() == "") {
                isValid = false;
                customAlert("Other reason is required.");
                plainValidation('#txtreason');
                return isValid;
            }
            else if ($('#Divwaitinglist').is(':visible') && $("input:radio[name='waitinglist']:checked").val() == undefined) {
                isValid = false;
                customAlert("Waiting list is required.");
                plainValidation('#rblwaitinglist');
                return isValid;
            }

            else {

                BootstrapDialog.confirm("Client status will be changed. Do you want to continue?", function (result) {
                    if (result) {
                        if (EnrolledObject != null) {



                            $.ajax({
                                url: HostedDir + "/AgencyUser/DropClient",
                                type: "POST",
                                data: {
                                    ClientId: $(EnrolledObject).attr("clientid"),
                                    HouseholdId: $('#HouseholdId').val(),
                                    Status: $(EnrolledObject).attr("accesskey"),
                                    StatusText: $('#lblNewStatus').text(),
                                    Reason: $('#txtreason').val(),
                                    ddlreason: $('#ddlreason').val(),
                                    ddlreasontext: $('#ddlreason').find("option:selected").text(),
                                    IsWaiting: $("input:radio[name='waitinglist']:checked").val(),
                                    Transition: Transition
                                },
                                dataType: "json",
                               // secureuri: false,
                              //  async: false,
                                success: function (response) {
                                    if (response == 0) {
                                        customAlert("Error occurred please try again.");
                                    }
                                    if (response == 1) {
                                        customAlert("Client status changed successfully.");
                                        setTimeout(function () {
                                            @*window.location.href = HostedDir + "/AgencyUser/FamilySummary/@Model.Encrypthouseholid";
                                            window.location.href = HostedDir + "/Roster/Roster";
                                        }, 300);
                                    }
                                    if (response == 2) {
                                        customAlert("Client status already changed.");
                                        setTimeout(function () {
                                            window.location.href = HostedDir + "/Roster/FamilySummary/@Model.Encrypthouseholid";
                                        }, 300);
                                    }
                                }
                                , error: function (response) {
                                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                                }
                            });
                        }
                    }
                });

            }
        }*@

        function Showreason(object) {

            cleanValidation();
            if ($(object).val() == "0")
                $('#Divreason').show();
            else
                $('#Divreason').hide();
        }




        function Getemergencycontact(value) {
            $.ajax({
                url: HostedDir + "/AgencyUser/Getemergencycontact",
                type: "POST",
                data: {
                    Emergencyid: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditEmergencycontact(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }
        function EditEmergencycontact(data) {
            round = 0;
            $('#Eheading').text("Update eContacts");
            $('#EmegencyId').val(0);
            $('#Efirstname').val("");
            $('#Emiddlename').val("");
            $('#Elastname').val("");
            $('#ERelationwithchild').val("");
            $('input:radio[name="EnableHomeVisitActivities"]').prop('checked', false);
            $('#EGendermale').prop("checked", false);
            $('#EGenderfemale').prop("checked", false);
            $('#EGenderother').prop("checked", false);
            $('#EDOB').val("");
            $('#EEmail').val("");
            $('#Enotes').val("");
            $('#EFileName').val("");
            $('#EFileExtension').val("");
            $('#EImagejson').val("");
            $('#EmergencyModel').modal('show');
            $("#gridphoneE1 tbody tr").remove();
            $('#EmegencyId').val(data.EmegencyId);
            $('#Efirstname').val(data.Efirstname);
            $('#Emiddlename').val(data.Emiddlename);
            $('#Elastname').val(data.Elastname);
            if (data.EGender == "1")
                $('#EGendermale').prop("checked", true);
            if (data.EGender == "2")
                $('#EGenderfemale').prop("checked", true);
            if (data.EGender == "3")
                $('#EGenderother').prop("checked", true);
            $('#EDOB').val(data.EDOB);
            $('#EEmail').val(data.EEmail);
            $('#ERelationwithchild').val(data.ERelationwithchild);
            $('input:radio[name="EnableHomeVisitActivities"][value=' + data.EnableHomeVisitActivities + ']').prop('checked', true);
            $('#Enotes').val(data.Enotes);
            $('#EFileName').val(data.EFileName);
            $('#EFileExtension').val(data.EFileExtension);
            $('#EImagejson').val(data.EImagejson);
            for (var i = 0; i < data.phoneList.length; i++) {

                var phonetype = "PhoneNos[" + round + "].PhoneType";
                var phoneno = "PhoneNos[" + round + "].PhoneNo";
                var primarycontact = "PhoneNos[" + round + "].IsPrimary";
                var notes = "PhoneNos[" + round + "].Notes";
                var sms = "PhoneNos[" + round + "].IsSms";
                var Phoneid = "PhoneNos[" + round + "].PhoneId";
                $('#gridphoneE1').show();
                var tr = "";
                tr += "<tr><style='text-align:center;'>";
                if (data.phoneList[i].PhoneType == "1") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option selected="selected" value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';

                    tr = tr + '<td><input style="width:50%;" disabled="disabled" type="checkbox" name=' + sms + ' value="true"/></td>';


                }
                if (data.phoneList[i].PhoneType == "2") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option  value="1">Home</option><option selected="selected" value="2">Mobile</option><option value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';
                    if (data.phoneList[i].IsSms) {
                        tr = tr + '<td><input style="width:50%;" type="checkbox" checked=checked name=' + sms + ' value="true"/></td>';
                    }
                    else {
                        tr = tr + '<td><input style="width:50%;" type="checkbox" name=' + sms + ' value="true"/></td>';
                    }

                }
                if (data.phoneList[i].PhoneType == "3") {
                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                          ' <option  value="1">Home</option><option value="2">Mobile</option><option selected="selected" value="3">Work</option> ' +
                         '</select></td>';
                    tr = tr + '<td><input  name=' + phoneno + ' class = "form-control" type="text" value="' + data.phoneList[i].PhoneNo + '" ></td>';
                    if (data.phoneList[i].IsPrimary) {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" onchange="uncheckother(this);" name=' + primarycontact + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + notes + ' value="' + data.phoneList[i].Notes + '"></td>';

                    tr = tr + '<td><input style="width:50%;" type="checkbox" disabled="disabled" name=' + sms + ' value="true"/></td>';


                }
                tr = tr + '<td><input type="hidden"  name="' + Phoneid + '" value="' + data.phoneList[i].PhoneId + '" />  <a href="javascript:void(0)" onclick="RemovePhoneE1(this);" accesskey="' + data.phoneList[i].PhoneId + '" style=" text-decoration:underline;">Delete</a></td></tr>';
                $('#gridphoneE1 > tbody').append(tr);
                $('#gridphoneE1 > tbody tr').each(function () {
                    var y = $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
                });
                round = round + 1;
            }
        }

        function AddEcontacts() {

            round = 0;
            $('#Eheading').text("Add eContacts");
            var phonetype = "PhoneNos[" + round + "].PhoneType";
            var phoneno = "PhoneNos[" + round + "].PhoneNo";
            var primarycontact = "PhoneNos[" + round + "].IsPrimary";
            var notes = "PhoneNos[" + round + "].Notes";
            var sms = "PhoneNos[" + round + "].IsSms";
            $('#EmegencyId').val(0);
            $('#Efirstname').val("");
            $('#Emiddlename').val("");
            $('#Elastname').val("");
            $('#ERelationwithchild').val("");
            $('input:radio[name="EnableHomeVisitActivities"]').prop('checked', false);
            $('#EGendermale').prop("checked", false);
            $('#EGenderfemale').prop("checked", false);
            $('#EGenderother').prop("checked", false);
            $('#EDOB').val("");
            $('#EEmail').val("");
            $('#Enotes').val("");
            $('#EFileName').val("");
            $('#EFileExtension').val("");
            $('#EImagejson').val("");
            $('#gridphoneE1 > tbody tr').remove();
            $('#gridphoneE1').show();
            var tr = '<tr><td><select class="form-control" style="width:100%;" name=' + phonetype + ' onchange="addcontact(this);" >' +
                      ' <option value="1">Home</option><option value="2">Mobile</option><option value="3">Work</option> ' +
                       '</select></td><td><input  name=' + phoneno + ' class = "form-control" type="text" ></td> <td><input onchange="uncheckother(this);" class="chcketbl" value="true" name=' + primarycontact + '  type="checkbox" data-val="true" /></td><td ><input data-val="true" maxlength="100" class = "form-control" type="text" name=' + notes + '></td><td><input style="width:50%;" disabled="disabled" type="checkbox" class="chcketbl" name=' + sms + ' value="true"/></td><td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td></tr>';
            $('#gridphoneE1 > tbody').append(tr);
            $('#gridphoneE1 > tbody tr').each(function () {
                $(this).find('td:eq(1) :input[type="text"]').mask("(999) 999-9999");
            });
            $('#gridphoneE1 > tbody tr:last').find('td:eq(0) :input').val("");
            round = round + 1;
            $('#EmergencyModel').modal('show');
        }
        function GetRestricted(value) {

            $.ajax({
                url: HostedDir + "/AgencyUser/GetRestrictedlist",
                type: "POST",
                data: {
                    RestrictedId: $(value).attr("accesskey"),
                    HouseHoldId: $('#HouseholdId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {
                    EditRestricted(data);
                }
               , error: function (response) {
                   customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
               }
            });
        }
        function EditRestricted(data) {
            $('#Restrictedheading').text("Update Restricted");
            $('#RestrictedId').val("0");
            $('#Rfirstname')[0].value = "";
            $('#Rlastname')[0].value = "";
            $('#RDescription')[0].value = "";
            $('#RFileName').val("");
            $('#RFileExtension').val("");
            $('#RImagejson').val("");
            $('#RestrictedId').val(data.RestrictedId);
            $('#Rfirstname').val(data.Rfirstname);
            $('#Rlastname').val(data.Rlastname);
            $('#RDescription').val(data.RDescription);
            $('#RestrcitedModel').modal('show');
        }

        function Addrestricted() {
            $('#Restrictedheading').text("Add Restricted");
            $('#RestrictedId').val("0");
            $('#Rfirstname')[0].value = "";
            $('#Rlastname')[0].value = "";
            $('#RDescription')[0].value = "";
            $('#RFileName').val("");
            $('#RFileExtension').val("");
            $('#RImagejson').val("");
            $('#RestrcitedModel').modal('show');

        }
        function deleteEmergencycontact(value) {

            BootstrapDialog.confirm('Do you want to delete this emergency contact ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deleteemergencycontact",
                        type: "POST",
                        data: {
                            EmergencyId: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Emergency contact deleted successfully. ");
                                setTimeout(function () {
                                    window.location.href = HostedDir + "/AgencyUser/FamilySummary/@Model.Encrypthouseholid";
                                }, 300);
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }


        function deleteRestricted(value) {

            BootstrapDialog.confirm('Do you want to delete this record ?', function (result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/Agencyuser/Deleterestricted",
                        type: "POST",
                        data: {
                            RestrictedId: $(value).attr("accesskey"),
                            HouseHoldId: $('#HouseholdId').val()
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                customAlert("Record deleted successfully. ");
                                setTimeout(function () {
                                    window.location.href = HostedDir + "/AgencyUser/FamilySummary/@Model.Encrypthouseholid";
                                }, 300);
                            }
                        }
                    , error: function (response) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                    }
                    });
                }
            });

        }
    </script>

    <script>

        function updateHousehold() {

            $('#spinner').show();
            var EHouseholid = $('#hiddenHousehold').val();
            var url = HostedDir + '/AgencyUser/HouseholdDetails/' + EHouseholid;
            window.location.href = url;
        }

    </script>

}
@section MainContentHolder{
    <link href="~/Content/css/Transition.css" rel="stylesheet" />
    <style>
        /*fixed header*/
        .scroll-thead th {
            border: 1px solid #f1f5f8;
        }

        .scroll-thead {
            display: table;
            /*width: 100%;*/
            table-layout: fixed;
            width: calc( 100% - 17px );
        }

        .scroll-tbody tr td {
            word-break: break-word;
        }

        .scroll-tbody {
            display: block;
            max-height: 270px;
            height: auto !important;
            overflow: auto;
            min-height: 30px;
            overflow-x: hidden;
        }

        .table-condensed.cf.table-change.addn-table tbody tr td {
            padding: 2px;
        }

        .sub-notes-details {
            max-height: 300px;
            overflow-y: auto;
            min-height: 37px;
            padding-top: 15px;
            font-style: italic;
        }

        .scroll-tbody tr {
            display: table;
            width: 100%;
            table-layout: fixed;
        }

    .download-attachment a i {
        font-size: 25px;
    }

    .download-attachment a {
        display: inline-block;
        width: auto !important;
        padding-top: 8px;
        padding-right: 10px;
    }

    .download-attachment span {
        padding-top: 18px;
        float: left;
    }

    .sub-text {
        float: left;
        width: 100%;
        line-height: 25px;
    }

    .addn-poup-div, .tag-text-block {
        float: left;
        width: 100%;
    }

    .sub-text-block {
        padding: 10px;
        background: #f9f9f9;
        margin-top: 5px;
    }

        .sub-text-block p {
            margin: 0;
            padding: 0;
            font-weight: bold;
            color: #34495e;
        }

    .tag-text-block {
        padding: 0;
    }

        .tag-text-block label {
            width: auto;
            display: inline-block;
            float: left;
            font-size: 16px;
            font-weight: normal;
        }

    .tag-text {
        width: auto;
        display: inline-block;
        float: left;
        padding: 10px;
        text-decoration: none;
        background: #295b8f;
        color: #fff;
        margin-left: 5px;
        margin-bottom: 5px;
        font-family: helvetica;
        font-size: 13px;
        margin-top: 7px;
    }

    .sub-text-block {
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        -webkit-box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .tag-text-block p, .tag-text-block i {
        width: auto;
        display: inline-block;
        float: left;
        margin-top: 6px;
        margin-left: 5px;
    }

    .tag-text-block i {
        margin-top: 10px;
    }
</style>

    <style>
        /*#page-wrapper {
            padding-left: 0;
            padding-right: 0;
        }*/
        .btn-hover-none a:hover, .btn-hover-none a:active, .btn-hover-none a:focus {
            text-decoration: none;
            outline: none;
        }

        .no-padding {
            padding: 0;
        }
        table#settab_edu thead th.sumtab_left {
        text-align: left !important;
        padding-left: 22px;
        }
        .right-side-container-ch {
            width: 100%;
            float: left;
            background: url('../../Images/body-bg.jpg') center no-repeat;
            background-size: cover;
            min-height: 689px;
        }

        .error-notify {
            position: relative;
            display: inline-block;
            vertical-align: top;
            color: red;
            font-size: 13px;
            margin-left: 2px;
            font-weight: bold;
        }

        .transition-inner .form-control {
            background: #fff;
            border: 1px solid #e7e7e7;
            padding: 10px 10px;
            color: #163b69;
            text-align: left;
            font-size: 15px;
            margin: 0;
            text-transform: none;
            width: 100%;
            float: left;
            height: 43px;
            box-shadow: none;
            border-radius: 0;
        }

        .err-container, irr-error {
            width: 100%;
            float: left;
            margin: 6px 0;
        }

        .err-message {
            display: none;
            color: red;
            font-size: 12px;
            margin: 6px;
            height: 10px;
        }

        .inforeader-inner-ch .hld-img {
            width: 108px !important;
        }



        /*houseless module style*/
        div#section_attachment label {
            width: 26%;
            float: left;
        }

        div#section_attachment input {
            width: 35.8% !important;
            float: left;
        }

        div#section_attachment .adddivspace {
            width: auto;
            float: left !important;
            margin-left: 13px;
        }

        div#ClientDiv div {
            padding: 0;
        }

        div#section_attachment {
            padding: 0 15px;
        }

        div#StaffDiv {
            background-color: #fff;
        }

            div#StaffDiv div {
                padding: 0;
            }

        .import_ft_files input {
            width: 47% !important;
            margin-right: 10px;
        }

        .some_attach {
            padding: 10px;
        }
        /*houseless module style*/
    </style>
    <style>
        body {
            font-family: Arial,sans-serif !important;
        }


        .badge {
            padding: 9px 7px !important;
            border-radius: 18px !important;
            cursor: pointer;
        }

        a.anchor_btn {
            margin-right: 20px !important;
            float: right;
            outline: none !important;
            color: #fff !important;
            background-color: #5cb85c;
            border-color: #255625;
            /* border: 1px solid black; */
            text-decoration: none;
            padding: 16px 15px;
            border-radius: 5px;
            margin-top: 45px !important;
            bottom: 0;
        }

            a.anchor_btn:hover {
                background-color: #398439 !important;
            }


        .ui-autocomplete {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            float: left;
            display: none;
            min-width: 160px;
            _width: 160px;
            height: 150px;
            overflow-y: auto;
            overflow-x: hidden;
            padding: 4px 0;
            margin: 2px 0 0 0;
            list-style: none;
            background-color: #ffffff;
            border-color: #ccc;
            border-color: rgba(0, 0, 0, 0.2);
            border-style: solid;
            border-width: 1px;
            -webkit-border-radius: 5px;
            -moz-border-radius: 5px;
            border-radius: 5px;
            -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
            -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
            -webkit-background-clip: padding-box;
            -moz-background-clip: padding;
            background-clip: padding-box;
            *border-right-width: 2px;
            *border-bottom-width: 2px;
        }

        .ui-menu-item > a.ui-corner-all {
            display: block;
            padding: 3px 15px;
            clear: both;
            font-weight: normal;
            line-height: 18px;
            color: #555555;
            white-space: nowrap;
        }

        .ui-state-hover, .ui-state-active {
            color: #ffffff;
            text-decoration: none;
            background-color: #0088cc;
            border-radius: 0px;
            -webkit-border-radius: 0px;
            -moz-border-radius: 0px;
            background-image: none;
        }

        .ui-menu-item {
            cursor: pointer;
        }

        #Phyimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        #Visimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        #Hearimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        #Devimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        #Dentimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        #Speechimagedocument {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }

        .customscreeningdiv {
            margin: 0px auto 20px;
            width: 350px;
            height: 250px;
            border: 1px solid #295b8f;
        }


        /*#page-wrapper {
            padding: 30px 15px 0;
        }*/
        /** Family **/
        .inforeader-inner {
            background: #f1f5f8 none repeat scroll 0 0;
            border-radius: 0 0 10px 10px;
            margin-bottom: 20px;
            margin-top: 0;
            padding: 10px;
            float: left;
            width: 100%;
        }

        .home-in-img {
            padding: 10px;
            background-color: #ffffff;
            border: 1px solid #ccc;
            width: 100%;
            float: left;
            margin-bottom: 5px;
        }



            .home-in-img > p {
                width: 85%;
            }

        .home-fft {
            float: left;
            margin: 1px 0 0px;
            width: 100%;
        }

            .home-fft button {
                float: right;
                outline: none !important;
            }

            .home-fft > a {
                color: #e74c3c;
                float: left;
                font-family: Verdana;
                font-size: 17px;
                font-weight: 600;
                padding-top: 21px;
                width: auto;
            }

        .home-in-img > p {
            color: #164b7b;
            font-family: verdana;
            line-height: 20px !important;
            padding-top: 10px !important;
            width: 85%;
        }

        #blue-down {
            -moz-appearance: none;
            background: #fff url("../../Content/imgs/blue-drop.png") no-repeat scroll right 2% center;
            color: #164b7b;
            margin-top: 5px;
            -webkit-appearance: none;
        }

        .famil-table tr th {
            background-color: #2476ad;
            color: #fff;
            font-weight: 300;
            text-align: left !important;
        }

        .famil-table tbody tr td a {
            color: #e74c3c;
        }

        .famil-table tbody tr td img {
            margin-right: 5px;
        }

        .famil-table tr td {
            background-color: #ffffff;
            color: #164b7b;
            font-weight: 300;
            text-align: left !important;
        }

        .house-hold {
            background-color: #fff;
            float: left;
            padding: 10px;
            border: 1px solid #ccc;
            font-family: verdana;
            width: 100%;
            margin: 10px 0;
        }

            .house-hold .home-fft a {
                font-size: 15px !important;
            }

        a.add-new-center, a.add-new-cls {
            text-decoration: underline;
        }

        .imbold {
            font-weight: 600;
        }

        .btn-add a {
            color: #333;
        }

        .zoomify.zoomed {
            position: relative !important;
            z-index: 999999 !important;
        }

        .hld-img {
            float: left;
            margin-right: 2%;
            width: 38%;
        }

        .det-cont a {
            color: #164b7b;
        }



            .det-cont p {
                float: left;
                margin: 0;
                font-size: 14px;
            }

            .det-cont li {
                list-style: outside none none;
                margin-bottom: 5px;
                width: 100%;
                float: left;
            }

            .det-cont span {
                float: right;
                color: #164b7b;
            }

            .det-cont h4 {
                color: black;
            }

        .info-none {
            background-color: #fff;
            border: 1px solid #ccc;
            float: left;
            min-height: 180px;
            text-align: center;
            width: 100%;
        }

            .info-none > p {
                color: #164b7b;
                font-family: verdana;
                font-size: 20px;
                padding: 70px 0;
            }

        .information_titles {
            border-radius: 5px 5px 0 0;
            width: 100%;
            float: left;
            margin-top: -10px;
        }

            .information_titles h4 {
                color: #fff;
                display: block;
                font-size: 20px;
                font-weight: bold;
                margin: 0;
                padding: 12px 10px;
                text-align: left;
                text-transform: capitalize;
                float: left;
            }

        .btn-add {
            background-color: #f9c751;
            color: #212121;
            float: right;
            outline: none !important;
            padding: 4px 15px;
            margin: 8px 12px;
        }

        .icr-title > span {
            color: #fff;
            display: block;
            font-size: 20px;
            font-weight: bold;
            margin: 12px 10px;
            padding: 12px 10px;
            text-align: left;
            text-transform: capitalize;
            float: left;
        }

        .information_titles.icr-title h4 {
            width: 42%;
        }

        .addn_sep_boder h3 {
            text-align: center;
        }

        div.tagsinput span.tag1 {
            border: 1px solid #fff;
            -moz-border-radius: 2px;
            -webkit-border-radius: 2px;
            display: block;
            float: left;
            padding: 10px;
            text-decoration: none;
            background: #295b8f;
            color: #fff;
            margin-right: 5px;
            margin-bottom: 5px;
            font-family: helvetica;
            font-size: 13px;
        }

            div.tagsinput span.tag1 a {
                font-weight: bold;
                color: #fff;
                text-decoration: none;
                font-size: 13px;
            }

        .addn_sep_boder {
            border: 1px solid #ccc;
            width: 100%;
            float: left;
            margin-bottom: 11px;
            border-radius: 4px;
        }

        .error-notify {
            position: relative;
            display: inline-block;
            vertical-align: top;
            color: red;
            font-size: 13px;
            margin-left: 2px;
            font-weight: bold;
        }

        .err-container, irr-error {
            width: 100%;
            float: left;
            margin: 6px 0;
        }

        .err-message, .err-casenote-note, .err-date-message {
            display: none;
            color: red;
            font-size: 12px;
            margin: 6px;
            height: 10px;
        }

        .parent-head-ch li {
            margin-bottom: 10px;
        }

        .parent-head-ch p {
            width: 30%;
            display: inline-block;
            float: left;
            font-size: 14px;
        }

        .parent-head-ch span {
            width: 72%;
            display: inline-block;
            float: right;
        }

        .overflow-common {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 100px;
        }

        #blue-down::-ms-expand {
            display: none;
        }

        #blue-down {
            -moz-appearance: none; /* Firefox */
            -webkit-appearance: none;
            background: url(../../images/drop.png) no-repeat 97% scroll #fff !important;
        }

        .hld-img, .hld-img img {
            width: 110px;
            height: 110px;
            border-radius: 100%;
            background: #e6e6e6;
        }

        .det-cont {
            width: 67%;
        }

        

        .bade-div {
            height: 40px;
        }

        .household-main-ht {
            /*height: 188px !important;*/
            height: 230px !important;
        }
        /*Popup-Change-Case-Note*/
        .search-section {
            margin-bottom: 15px;
            margin-top: 10px;
        }

        #ModalAddCasenote .modal-dialog-ch {
            width: 80%;
        }

        .search-section input, .search-section select {
            width: 70%;
            display: inline-block;
        }

        #ModalAddCasenote .addn-search-btn a {
            padding: 6px 9px;
            font-size: 16px;
        }

        .case-info {
            display: none;
        }
        /*Popup-Change-Case-Note*/



        /*table-color*/
        tr.view.open {
            border-style: solid;
            border-color: #e2e2e2 !important;
            border-width: 1px 1px 0 1px;
            margin-top: 2px;
        }

            tr.view.open td {
                border-top: 0;
            }

        tr.input_smtmarg.active {
            border-style: solid;
            border-color: #e2e2e2;
            border-width: 1px 1px 1px 1px;
        }
            /*
        tr.input_smtmarg.active td {
            border-top: 1px solid #f5f5f5;
        }
                  tr.view.open {
                      box-shadow: 0 0 7px 1px #ccc;
                  }

                  tr.input_smtmarg.active {
            box-shadow: 0px 3px 8px 1px #ccc;
        }*/
            tr.input_smtmarg.active td {
            }









        .icefu_form {
            background-color: #fff;
        }

        .btn-submit-edu:hover {
            background-color: #2d5079;
            text-decoration: none;
            color: #fff;
        }

        .btn-submit-edu {
            background-color: #163e6d;
            float: right;
            color: #fff;
            padding: 7px 12px;
            border: 0;
        }


        tr.view.open .deve-td:last-child:after {
            transform: rotate(-180deg);
            color: #333;
        }

        .icefu_form {
            width: 100%;
            float: left;
            margin-top: 15px;
            overflow-y: scroll;
        }

        .table-headfix tbody tr {
            display: table;
            table-layout: fixed;
            width: 100%;
            cursor: pointer;
        }

        .deve-td {
            position: relative;
        }

            .deve-td:after {
                position: absolute;
                top: 5px;
                right: 0;
                /* margin-left: 81px; */
                float: right;
                width: 10px;
                height: 16px;
                margin-top: 8px;
                font: 18px fontawesome;
                color: #999;
                content: "\f0d7";
                transition: all .3s ease;
                -webkit-transition: all .3s ease;
                margin-right: 32px;
                cursor: pointer;
                transform: rotate(0deg);
                -webkit-transform: rotate(0deg);
            }

        .active .deve-td:after {
            transform: rotate(-180deg) !important;
            -webkit-transform: rotate(-180deg) !important;
        }

        div#settab .item span.active a {
            box-shadow: 0 0 7px 2px #fff;
            height: 56px;
            margin-top: 8px;
        }

        /*#page-wrapper {
            padding: 0;
        }*/

        .educenter_setting {
            width: 100%;
            float: left;
            background-color: #0a417b;
            padding: 70px 30px 30px;
        }

        .settab_pills {
            width: 100%;
            float: left;
            text-align: center;
        }

        #settab {
            border: 0;
            max-width: 100%;
            margin: auto;
            text-align: center;
            display: inline-block;
        }

            #settab .item span a {
                border: 2px solid transparent;
                margin-right: 4px;
                color: #fff !important;
            }

        .setting_ic_header {
            width: 100%;
            float: left;
            background-color: #1abc9c;
            color: #fff;
            text-align: center;
            text-transform: uppercase;
            font-family: Verdana;
            border-radius: 7px;
            margin-bottom: 15px;
        }

            .setting_ic_header h3 {
                margin: 0;
                font-weight: 600;
                font-size: 20px;
                padding: 18px 0;
            }

        #settab .item span a {
            color: #fff !important;
            font-size: 16px !important;
            font-weight: 600;
            border-radius: 0;
            letter-spacing: 0.5px;
        }

        .ic_forsub a:hover {
            background-color: #2d5079;
            text-decoration: none;
            color: #fff;
        }

        table#settab_edu tr td:nth-child(2) {
            text-align: center;
        }

        table#settab_edu tr td:first-child {
            color: #163b69;
        }

        .icefu_form {
            width: 70%;
            margin: 0 15%;
            float: left;
            margin-top: 15px;
        }

        table#settab_edu {
            background-color: #fff;
            width: 100%;
            float: left;
            margin-bottom: 0;
        }

        tr.view.open td {
            background: #e7ebf0;
        }

        table#settab_edu thead th {
            background-color: #34495e;
            color: #fff;
            text-align: left !important;
        }

        table#settab_edu tr th:first-child {
            width: 70%;
        }

        tr.input_smtmarg {
            display: none !important;
        }

            tr.input_smtmarg.active {
                display: table-row !important;
            }

        #settab .item > span.active > a:focus, #settab .item > span > a:hover, #settab .item > span.active > a {
            border: 2px solid #fff !important;
        }


        div#settab .item span a {
            color: #fff !important;
            letter-spacing: 0.5px;
        }

        #settab .item {
            border: 0;
            padding-right: 5px;
        }

        input.edu_next[type="checkbox"]::before {
            content: "";
            position: absolute;
            width: 15px;
            height: 15px;
            background-color: #fff;
            border: 1px solid #174472;
            left: 0px;
        }

        input.edu_next[type="checkbox"] {
            position: relative;
            outline: none;
            margin-right: 10px;
            width: auto;
        }

        input.edu_color {
            margin-left: 15px;
        }

        .sub_table_icc tr {
            background-color: #e7ebf0;
        }

            .sub_table_icc tr th {
                border: none !important;
            }

        .sub_table_icc {
            width: 100%;
            max-height: 250px;
            overflow-y: auto;
            float: left;
            background-color: rgba(22,59,105,0.1);
        }

            .sub_table_icc table {
                margin-bottom: 0px;
            }

                .sub_table_icc table thead th label {
                    width: auto;
                    color: #333;
                    padding-left: 5px;
                }

                .sub_table_icc table thead th {
                    background-color: transparent !important;
                }

        input.edu_next[type="checkbox"]:checked::after {
            content: "\2713";
            position: absolute;
            color: #174472;
            font-size: 15px;
            font-weight: 600;
            border-color: #174472;
            top: -3px;
            left: 1px;
        }

        #settab .item span a {
            font-size: 32px;
            color: rgba(255,255,255,0.4) !important;
            transition: all 0.6s ease 0s;
            margin: 10px;
            text-align: center;
            line-height: 17px;
        }

        #settab item span a:hover {
            color: #fff !important;
            transition: all 0.4s ease 0s;
        }

        .ic_forsub {
            width: 100%;
            float: left;
            text-align: center;
        }

            .ic_forsub a {
                float: right;
            }

            .ic_forsub h3 {
                width: auto;
                float: none;
                display: inline-block;
                margin: 0;
            }

        .ictab_content {
            width: 100%;
            float: left;
            background-color: #fff;
            border-radius: 7px;
            padding: 10px;
        }

        .ictab_content {
            width: 100%;
            float: left;
            background-color: #f1f5f8;
            border-radius: 7px;
            padding: 10px;
            margin-top: 20px;
            margin-bottom: 15px;
        }

        .ic_forsub a {
            background-color: #163e6d;
            float: right;
            color: #fff;
            padding: 16px;
        }
        /* Table -Fixed */
        .table-headfix thead {
            cursor: pointer;
            table-layout: fixed;
            width: calc(100% - 0px);
            display: table;
        }

        .table-headfix tbody {
            height: 235px;
            overflow-y: auto;
            width: calc(100% - 0px);
            float: left;
            display: table-column;
        }

            .table-headfix tbody tr {
                display: table;
                table-layout: fixed;
                width: 100%;
            }


        /* fixed table */
        .table-headfix thead {
            cursor: pointer;
            table-layout: fixed;
            width: calc(100% - 0px);
            display: table;
        }

        .table-headfix tbody {
            height: auto;
            max-height: 500px;
            width: calc(100% - 0px);
            float: left;
            display: table-column;
        }

            .table-headfix tbody tr {
                display: table;
                table-layout: fixed;
                width: 100%;
                cursor: pointer;
            }
        /*fixed table*/
        .tag-radio-btn .radio.radio-info {
                float: left;
    margin-top: 0px;
    width: auto;
    margin-right: 0;
    display: inline-block;
    margin-bottom: 0px;
        }

        .tag-radio-btn .radio input[type="radio"] {
            opacity: 0;
            z-index: 1;
            cursor: pointer;
        }

        .tag-radio-btn .radio-info input[type="radio"]:checked + label {
            color: #163b69;
        }

        .tag-radio-btn .radio label {
            display: inline-block;
            vertical-align: middle;
            position: relative;
            padding-left: 5px;
            color: #163b69;
            font-size: 15px;
            padding-left:20px;
        }

        .tag-radio-btn .radio-info input[type="radio"]:checked + label::before {
            border-color: #163b69;
            color: #163b69;
        }

        .tag-radio-btn .radio label::before {
            content: "";
            display: inline-block;
            position: absolute;
            width: 16px;
            height: 16px;
            left: 0;
            margin-left: -20px;
            border: 1px solid #163b69;
            border-radius: 50%;
            background-color: transparent;
            -webkit-transition: border 0.15s ease-in-out;
            -o-transition: border 0.15s ease-in-out;
            transition: border 0.15s ease-in-out;
            top: 2px;
        }

        .tag-radio-btn .radio label::before {
            content: "";
            display: inline-block;
            position: absolute;
            width: 16px;
            height: 16px;
            left: 0;
            margin-left: -20px;
            border: 1px solid #163b69;
            border-radius: 50%;
            background-color: transparent;
            -webkit-transition: border 0.15s ease-in-out;
            -o-transition: border 0.15s ease-in-out;
            transition: border 0.15s ease-in-out;
            top: 2px;
        }

        .tag-radio-btn .radio input[type="radio"]:checked + label::after {
            -webkit-transform: scale(1, 1);
            -ms-transform: scale(1, 1);
            -o-transform: scale(1, 1);
            transform: scale(1, 1);
        }

        .tag-radio-btn .radio-info input[type="radio"]:checked + label::after {
            background-color: #163b69;
            color: #163b69;
        }

        .tag-radio-btn .radio-info input[type="radio"] + label::after {
            background-color: #163b69;
            color: #163b69;
        }

        .tag-radio-btn .radio label::after {
            display: inline-block;
            position: absolute;
            content: " ";
            width: 8px;
            height: 8px;
            left: 4px;
            top: 6px;
            margin-left: -20px;
            border-radius: 50%;
            background-color: transparent;
            -webkit-transform: scale(0, 0);
            -ms-transform: scale(0, 0);
            -o-transform: scale(0, 0);
            transform: scale(0, 0);
            -webkit-transition: -webkit-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
            -moz-transition: -moz-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
            -o-transition: -o-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
            transition: transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
        }


        .active .bg-change {
            background: #f9c751 !important;
            color: #333 !important;
        }

        .active .tag-radio-btn .radio-info input[type="radio"]:checked + label::before {
            border-color: #333 !important;
            color: #333 !important;
        }

        .active .tag-radio-btn .radio-info input[type="radio"]:checked + label::after {
            border-color: #333 !important;
            color: #333 !important;
        }

        .active .deve-td:after {
            color: #333 !important;
        }

        .table-badge {
            width: 30px;
            height: 30px;
            color: #fff;
            background: #e74c3c;
            line-height: 28px;
            display: block;
            text-align: center;
            border-radius: 100%;
        }

        .role-name {
            width: auto;
            display: inline-block;
            margin: 0;
        }

        .deve-td {
            text-align: left !important;
        }

        .tag-text-block p {
            word-break: break-all;
            width: 90%;
        }

        .no-tags-text {
            float: left;
            line-height: 30px;
            width: auto;
            display: inline-block;
            font-style: italic;
            margin-left: 5px;
        }
        .container-fluid{
            padding:0;
        }

        .anchor_yellow {
    text-shadow: 0 1px #0d4d09;
    background-color: #9b59b6;
    border-color: #9b59b6 #9b59b6 #9b59b6;
}
        .glossy_btn button, .backto_listspan .anchor_yellow {
    width: auto;
    display: inline-block;
    position: relative;
    cursor: pointer;
    overflow: hidden;
}

        .backto_listspan .anchor_yellow:hover {
    text-shadow: 0 1px #0d4d09;
    background-color: #21945a;
    border-color: #2bc577 #2bc577 #2bc577;
    color: #fff;
    text-shadow: 0 1px #154c86;
    text-decoration: none;
}

.anchor_yellow:hover {
    text-shadow: 0 1px #0d4d09;
    background-color: #21945a;
    border-color: #2bc577 #2bc577 #2bc577;
    color: #fff;
    text-shadow: 0 1px #154c86;
    text-decoration: none;
}

   .glossy_btn button:hover .glossy-button-after, .backto_listspan .anchor_yellow:hover .glossy-button-after, .screening_footer .glossy-button-button:hover .glossy-button-after, .btnwrp_subcal .glossy-button-button:hover .glossy-button-after {
    width: 120%;
    background-color: rgba(255,255,255,0);
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    -ms-transition: all 0.3s ease-out;
    -o-transition: all 0.3s ease-out;
    transition: all 0.3s ease-out;
}

    </style>
    <div class="row Zoom">

        <div class="col-lg-12" style="padding:0;">


            <div class="row">

                <!------------Your Code----------------->
                <div class="right-side-container-ch col-xs-12" style="padding-top: 30px;">
                    <div class="col-xs-12" style="padding:0px 0px;margin-bottom:20px;">
                        <div class="col-lg-12">
                            <h2 class="page-header page-header-change" style="border-bottom:5px solid #f9c751!important;color:#fff;">
                                <i class="fa fa-group"></i> Family Summary

                                <span class="view-btn backto_listspan hidden-xs">
                                    <a href="/Roster/Roster" class="glossy-button-button anchor_yellow" style="text-decoration:none;">
                                        Back to Roster

                                        <span class="glossy-button-before"></span>
                                        <span class="glossy-button-after"></span>

                                    </a>

                                </span>
                            </h2>
                        </div>


                            </div>

                    <input type="hidden" id="UserId" value="@Session["UserId"].ToString()" />
                    <div class="col-xs-12">
                        <div class="col-xs-12 no-padding">
                            <div class="information_titles icr-title panel-head-div-blue">
                                <h4 class="glossy-panel-heading">Household</h4>
                                <span class="glossy-panel-heading">Family Advocate</span>
                                @*<button class="btn btn-add">Add</button>*@
                            </div>
                        </div>
                        <div class="inforeader-inner inforeader-inner-ch">
                            <div class="col-md-5 col-lg-5 col-xs-12 col-sm-12">
                                <div class="home-in-img household-main-ch house-info-div">
                                    <img src="~/Content/imgs/home-fam.png" alt="home" />
                                    <p>
                                        @Model.Street<br>@Model.StreetName<br>
                                        @Model.City  &nbsp;  @Model.State  @Model.ZipCode<br />
                                        @Model.County
                                    </p>

                                    <div class="home-fft col-xs-12">
                                        <a href="javascript:void(0);" style="text-decoration:none;cursor:auto;">@(Model.HomeType==1?"Homeless":Model.RentTypetext)</a>
                                        @Html.Hidden("hiddenHousehold", Model.Encrypthouseholid)
                                        <div class="household-tag">

                                            <span style="margin-left: 4%; text-decoration: underline;color: #fff;" title="Case notes by Household" data-toggle="tooltip" housholdid="@Model.HouseholdId" onclick="ShowCaseForHousehold(this,1)"><span class="badge glossy-badge-light-blue">CN</span></span>
                                            <span style="margin-left: 4%; text-decoration: underline;color: #fff;"title="Case notes by Tags" data-toggle="tooltip"    housholdid="@Model.HouseholdId" onclick="ShowCaseForHousehold(this,2)"><span  class="badge glossy-badge-light-violet">Tags</span></span>

                                            @*<a href="#" style="margin-left: 4%; text-decoration: underline;color: #db4437;" housholdid="@Model.HouseholdId" onclick="ShowCaseForHousehold(this,2)">Tags</a>*@

                                            <button class="glossy-button-button glossy-button-hover button-green" type="button" onclick="updateHousehold();">
                                                <i class="fa fa-pencil" aria-hidden="true"></i>	Change
                                                <span class="glossy-button-before"></span>

                                                <span class="glossy-button-after"></span>

                                            </button>

                                                    <button class="btn btn-success" data-toggle="modal" data-target="#HouseholdData" href="#" style="display:none;"><i class="fa fa-pencil" aria-hidden="true" ></i>	Change</button>

                                                </div>
                                            </div>


                                        </div>
                                    </div>

                                    @if (Model.staffList != null && Model.staffList.Count() > 0)
                                    {

                                        <div class="col-md-7 col-lg-7 col-sm-1  2 col-xs-12" id="div_family_advocate_info">
                                            <div class="house-hold household-main-ch staff-info-div">
                                                <div class="hld-img">
                                                    <img height="110" width="108" src="@Url.Content(Model.staffList[0].AvatarUrl)" style="margin-top:2px;" class="zoomify">
                                                </div>
                                                <div class="det-cont" style="width:70%;">
                                                    <h4 style="padding-left:10px;float:left;width:100%;">
                                                        <span style="display:inline-block;float:left;width:58%;color:#164b7b;font-weight:bold;">@Model.staffList[0].Username </span>

                                                @if (Model.staffList[0].ServiceYears != "0")
                                                {
                                                    <span style="display:inline-block;float:left;color:#009688;font-weight:bold;font-size:14px;">(@Model.staffList[0].ServiceYears Year(s) of Service)</span>
                                                }
                                            </h4>
                                            <div class="col-xs-7 col-lg-5">
                                                <label style="color:#333;"><i class="fa fa-user" style="padding-right:10px;width:20px;"></i><strong>Gender</strong></label>
                                            </div>
                                            <div class="col-xs-3 col-lg-7">
                                                <label style="text-align:left;color:#164b7b;font-weight:normal;">@Model.staffList[0].Gender</label>
                                            </div>


                                            <div class="col-xs-7 col-lg-5">
                                                <label style="color:#333;display:inline-flex;"><i class="fa fa-phone" style="padding-right:10px;width:20px;"></i><strong>Mobile Number</strong></label>
                                            </div>
                                            <div class="col-xs-3 col-lg-7">
                                                <label style="text-align:left;color:#164b7b;font-weight:normal;">@Model.staffList[0].CellNumber</label>
                                            </div>


                                        </div>


                                        <div class="col-xs-12 home-fft" style="margin-top:5px;">
                                            <button class="glossy-button-button glossy-button-hover button-green" id="btn_change_fa" style="margin-top:23px;">
                                                <i class="fa fa-pencil" aria-hidden="true"></i>&nbsp;
                                                <span class="glossy-button-before"></span>

                                                <span class="glossy-button-after"></span>
                                                Change
                                            </button>

                                        </div>
                                    </div>
                                </div>

                                    }

                            @if (Model.FamilyAdovateList != null && Model.FamilyAdovateList.Count > 0)
                            {
                                <div class="col-md-7 col-lg-7 col-sm-1  2 col-xs-12" id="div_family_advocate_select" @if (Model.staffList != null && Model.staffList.Count() > 0) { <text> style="display:none;" </text>       }>
                                    <div class="house-hold household-main-ch staff-info-div" style="padding: 15px 10px;">

                                                <div class="det-cont" style="width:100%;" id="divFamilyAdvSelec">

                                                    <div class="col-xs-7 col-lg-4">
                                                        <label style="color:#333;"><i class="fa fa-user" style="padding-right:10px;width:20px;"></i><strong>Family Advocate</strong></label>
                                                    </div>
                                                    <div class="col-xs-3 col-lg-7">

                                                        @Html.DropDownListFor(m => m.FamilyAdvocateId, Model.FamilyAdovateList, "Select Family Advocate", new { @class = "form-control", @style = "width:100%;" })
                                                    </div>





                                            <div class="col-xs-12 adddivspace" style="margin-top:5%;text-align:center;">

                                                <button type="button" onclick="SaveFamilyAdvocate(this);" class="glossy-button-button glossy-button-hover button-green">
                                                <i class="fa fa-save" aria-hidden="true"></i> Submit
                                                <span class="glossy-button-before"></span>
                                                    <span class="glossy-button-after"></span>
                                                
                                                </button>


                                                @if (Model.staffList != null && Model.staffList.Count() > 0)
                                                {
                                                    <button type="button" class="glossy-button-button glossy-button-hover anchor_yellow" id="anchor_back_fa">
                                                        <i class="fa fa-undo" aria-hidden="true"></i> Back
                                                        <span class="glossy-button-before"></span>
                                                        <span class="glossy-button-after"></span>
                                                    </button>
                                                }


                                                    </div>











                                                </div>


                                            </div>
                                        </div>
                                    }
                                </div>


                            </div>

                    <div class="col-xs-12">
                        <div class="col-xs-12 no-padding">
                            <div class="information_titles icr-title panel-head-div-green">

                                <span class="glossy-panel-heading">File Cabinet</span>

                                    </div>
                                </div>
                                <div class="inforeader-inner">

                                    <div class="col-xs-12 col-sm-12">
                                        <div class="form-group" style="width:200px;">
                                            <select id="blue-down" class="form-control ddFileCabinet">
                                                <option>Child</option>

                                                @if (Model.IsStaffReviewIncome)
                                                {
                                                    <option>Guardian</option>
                                                }
                                                <option>Household</option>
                                                <option>Screening</option>

                                            </select>
                                        </div>
                                        <div id="searchurl"></div>


                                        <div class="clearfix"></div>

                                    </div>
                                </div>


                            </div>


                    <div class="col-xs-12">
                        <div class="col-xs-12 no-padding">
                            <div class="information_titles panel-head-div-orange">
                                <h4 style="text-transform:none;" class="glossy-panel-heading">Household Child(ren)</h4>
                                <div style="float:right;padding:10px;">

                                    <a class="glossy-button-button glossy-button-hover button-yellow" style="text-decoration:none;" href="~/AgencyUser/AddNewChild?id=@Model.Encrypthouseholid&Name=@Model.EncryptedName">
                                        Add

                                        <span class="glossy-button-before"></span>
                                        <span class="glossy-button-after"></span>

                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="inforeader-inner">
                            @if (Model._Clist != null && Model._Clist.Count > 0)
                            {
                                foreach (var item in Model._Clist)
                                {
                                    <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                        <div class="house-hold household-main-ch child-info-div">
                                            <div class="bade-div">
                                                <div class="bade-div-hidden">

                                                    

                                                    <p class="house-hold-badge badge-rx glossy-badge glossy-badge-purple" style="display:none;"><img src="~/Images/rx.png" style="width: 16px;height:16px;" data-toggle="tooltip" title="Receiving Drug Treatments" /></p>
                                                   
                                                    @if (item.IsFoster == 1)
                                                    {
                                                        <p class="house-hold-badge bage-foster glossy-badge glossy-badge-orange" data-toggle="tooltip" title="Foster Child">F</p>
                                                    }

                                                    @if (item.CParentdisable == 1)
                                                    {
                                                        <p class="house-hold-badge bage-disability glossy-badge glossy-badge-yellow" style="display:none;" data-toggle="tooltip" title="Child has Disability">D</p>
                                                    }

                                                    <p class="house-hold-badge badge-transport glossy-badge glossy-badge-blue" style="display:none;" data-toggle="tooltip" title="Transport Provided">T</p>
                                                    <p class="house-hold-badge badge-attendance glossy-badge glossy-badge-red" style="display:none;" data-toggle="tooltip" title="Excessive Absences">A</p>


                                                    @*<p class="house-hold-badge E-bg">E</p>*@
                                                </div>
                                            </div>
                                            <div class="hld-img">

                                                        @if (string.IsNullOrEmpty(item.Imagejson) && item.CGender == "2")
                                                        {
                                                            <img src="~/Content/img/ic_female.png" style="margin-top:4px;" />
                                                        }
                                                        else if (string.IsNullOrEmpty(item.Imagejson) && item.CGender == "1")
                                                        {
                                                            <img src="~/Content/img/ic_male.png" style="margin-top:4px;" />
                                                        }
                                                        else if (string.IsNullOrEmpty(item.Imagejson) && item.CGender == "3")
                                                        {
                                                            <img src="~/Content/img/ic_male_default.png" style="margin-top:4px;" />
                                                        }

                                                        else if (!string.IsNullOrEmpty(item.Imagejson))
                                                        {
                                                            <img width="110" height="108" src="data:image/jpg;base64,@item.Imagejson" style="margin-top: 4px;" />
                                                        }
                                                        else
                                                        {
                                                            <img width="108" height="108" src="~/Content/img/download.jpg" style="margin-top:4px;" />
                                                        }

                                                <div class="glossy-update-icon" onclick="updateProfilePicture(this,1);" data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(@item.ChildId.ToString())" data-toggle="modal" title="Add/Update Picture">
                                                    <i class="fa fa-plus"></i>
                                                </div>
                                            </div>
                                            <div class="det-cont" style="min-height: 130px;">
                                                @{
                                                    var _ecid = FingerprintsModel.EncryptDecrypt.Encrypt64(@item.ChildId.ToString());
                                                }
                                                @*<h4 class="household-heading-txt">@item.Cfirstname</h4>*@
                                                <a href="@Url.Action("TimeLine","Roster")?clientid=@_ecid" data-toggle="tooltip" title="Timeline of @item.Cfirstname">
                                                    <h4 style="text-decoration:underline;" class="household-heading-txt">@item.Cfirstname</h4>
                                                </a>
                                                <ul>
                                                    <li>
                                                        <p class="household-left-txt"><i class="fa fa-user"></i>@item.Gender</p>
                                                        @if (item.CProgramType != null && item.CenterId > 0 && item.ClassRoomId > 0)
                                                        {
                                                            <span class="household-right-txt">
                                                                <a href="#" id="dob@(item.ChildId)" onclick="ChangeDOB(this)" data-programtype="@item.CProgramType" data-childid="@item.ChildId" style="text-decoration:underline">@item.CDOB</a>
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="household-right-txt">
                                                                @item.CDOB
                                                            </span>
                                                        }

                                                            </li>

                                                            @if (item.CenterId > 0 && item.ClassRoomId > 0)
                                                            {
                                                                <li>
                                                                    <p class="household-left-txt"><i class="fa fa-institution"></i>Center</p><span class="overflow-common household-right-txt">
                                                                        <a href="#" title="@item.CenterName" class="add-new-center" data-childid="@item.ChildId" data-center-attr="@item.CenterId" data-cls-roomname="@item.ClassRoomName" data-center-name="@item.CenterName">@item.CenterName</a>
                                                                    </span>
                                                                </li>
                                                                <li>
                                                                    <p class="household-left-txt"><i class="fa fa-building"></i>Classroom</p>
                                                                    <span class="household-right-txt">
                                                                        <a href="#" class="add-new-cls" data-childid="@item.ChildId" data-center-attr="@item.CenterId" data-cls-attr="@item.ClassRoomId" data-cls-roomname="@item.ClassRoomName">@item.ClassRoomName</a>
                                                                    </span>
                                                                </li>
                                                            }

                                                        </ul>
                                                    </div>
                                                    <div class="home-fft col-xs-12">
                                                        @{
                                                            string encClient = FingerprintsModel.EncryptDecrypt.Encrypt64(item.ChildId.ToString());

                                                        }


                                                        @if (@item.Yakkr == "1")
                                                        {

                                                            <a style="color:red;font-size:18px;" clientid="@encClient" name="@item.Cfirstname" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Intake</a>
                                                        }
                                                        else if (@item.Yakkr == "2")
                                                        {
                                                            <a style="color:red;font-size:18px;" clientid="@encClient" name="@item.Cfirstname" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Waiting List</a>
                                                        }
                                                        else if (@item.Yakkr == "3")
                                                        {
                                                            <a style="color:red;font-size:18px;" clientid="@encClient" name="@item.Cfirstname" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Pending</a>
                                                        }
                                                        else if (@item.Yakkr == "4")
                                                        {
                                                            <a style="color:red;font-size:18px;" clientid="@encClient" name="@item.Cfirstname" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@(item.InsuranceOption)" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Accepted</a>
                                                        }
                                                        else if (@item.Yakkr == "5")
                                                        {
                                                            <a style="color:green;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" name="@item.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Accepted</a>
                                                        }
                                                        else if (@item.Yakkr == "6")
                                                        {
                                                            <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" name="@item.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Dropped</a>
                                                        }
                                                        else if (@item.Yakkr == "7")
                                                        {
                                                            <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" name="@item.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Withdrawn</a>
                                                        }
                                                        else if (@item.Yakkr == "8")
                                                        {
                                                            if (item.IsFutureWithdrawal)
                                                            {
                                                                <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" progid="@item.ProgramTypeID" householdid="@item.Encrypthouseholid" data-Insurance="@item.InsuranceOption" name="@item.Cfirstname" accesskey="@item.Yakkr" href="javascript:void(0)">Enrolled</a>

                                                            }
                                                            else
                                                            {
                                                                <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@item.InsuranceOption" name="@item.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Enrolled</a>

                                                            }
                                                        }
                                                        else if (@item.Yakkr == "9")
                                                        {
                                                            if (item.IsFutureWithdrawal)
                                                            {
                                                                <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" householdid="@item.Encrypthouseholid" progid="@item.ProgramTypeID" data-Insurance="@(item.InsuranceOption)" name="@item.Cfirstname" accesskey="@item.Yakkr" href="javascript:void(0)">Re-enrolled</a>

                                                            }
                                                            else
                                                            {
                                                                <a style="color:#0f9c15;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" data-Insurance="@(item.InsuranceOption)" name="@item.Cfirstname" progid="@item.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Re-enrolled</a>

                                                            }
                                                        }
                                                        else if (@item.Yakkr == "10")
                                                        {
                                                            <a style="color:#0f9c15;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@item.Encrypthouseholid" data-Insurance="@(item.InsuranceOption)" name="@item.Cfirstname" progid="@item.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@item.Yakkr" href="javascript:void(0)">Transitioned</a>

                                                        }

                                                <div style="float: right;">
                                                    <a style="color:#fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-green edit-client" href="~/AgencyUser/AddNewChild?id=@Model.Encrypthouseholid&Clientid=@FingerprintsModel.EncryptDecrypt.Encrypt64(@item.ChildId.ToString())">
                                                        <i class="fa fa-pencil" aria-hidden="true"></i>&nbsp;Edit

                                                        <span class="glossy-button-before"></span>
                                                        <span class="glossy-button-after"></span>

                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                                        }
                                                    }

                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                                <div class="col-xs-12 no-padding">
                                                    <div class="information_titles panel-head-div-violet">
                                                        @if (Model.ParentID1 != 0)
                                                        {
                                                            <h4 class="glossy-panel-heading">Parent/Guardian</h4>
                                                        }
                                                        else
                                                        {
                                                            <h4 class="glossy-panel-heading">Parent/Guardian</h4>
                                                            @*<h3 class="panel-title">Parent/Guardian<a href="~/AgencyUser/AddNewParent?id=@Model.Encrypthouseholid" class="pull-right">Add</a> </h3>*@
                                                            <div style="float:right;padding:10px;">
                                                                <a href="~/AgencyUser/AddNewParent?id=@Model.Encrypthouseholid" class="glossy-button-button glossy-button-hover button-yellow">
                                                                    Add
                                                                    <span class="glossy-button-before"></span>
                                                                    <span class="glossy-button-after"></span>

                                                                </a>
                                                            </div>
                                                        }

                                                            </div>
                                                        </div>
                                                        <div class="inforeader-inner">
                                                            <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                                                <div class="house-hold household-main-ch parent-info-div household-main-ht">
                                                                    <div class="hld-img">
                                                                        @if (string.IsNullOrEmpty(Model.PImagejson) && Model.PGender == "2")
                                                                        {

                                                                            <img width="108" height="108" src="@Url.Content("~/Images/female-adult.png")" style="margin-top: 4px;" />
                                                                        }
                                                                        else if (string.IsNullOrEmpty(Model.PImagejson) && Model.PGender == "1")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Images/adult-image.png")" style="margin-top: 4px;" />
                                                                        }
                                                                        else if (string.IsNullOrEmpty(Model.PImagejson) && Model.PGender == "3")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Images/adult-image.png")" style="margin-top: 4px;" />
                                                                        }
                                                                        else if (!string.IsNullOrEmpty(Model.PImagejson))
                                                                        {
                                                                            <img width="108" height="108" src="data:image/jpg;base64,@Model.PImagejson" style="margin-top: 4px;" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/download.jpg")" style="margin-top: 4px;" />
                                                                        }

                                                                <div class="glossy-update-icon" onclick="updateProfilePicture(this,1);"  data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID.ToString())" title="Add/Update Picture">
                                                                    <i class="fa fa-plus"></i>
                                                                </div>
                                                            </div>
                                                            <div class="det-cont" style="min-height: 130px;">

                                                                        <h4 class="household-heading-txt">@Model.Pfirstname</h4>

                                                                        <ul style="float:left;width:100%;margin-bottom:0;" class="parent-head-ch">
                                                                            <li>
                                                                                <p class="household-left-txt" style="width:31%;"><i class="fa fa-user"></i> @Model.GenderParent1</p>
                                                                                @if (@Model.IsPreg != 0)
                                                                                {
                                                                                    <span class="household-right-txt">
                                                                                        <a href="#" id="dob@(Model.ParentID)" onclick="ChangeDOB(this)" data-programtype="parent" data-childid="@Model.ParentID" style="text-decoration:underline">@Model.PDOB</a>
                                                                                    </span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span class="household-right-txt">
                                                                                        @Model.PDOB
                                                                                    </span>
                                                                                }
                                                                                @*<span>@Model.PDOB</span></li>*@
                                                                            <li style="margin-bottom:0;min-height: 64px;">
                                                                                <p class="household-left-txt" style="width:31%;"><i class="fa fa-phone"></i> Contact</p>
                                                                                @foreach (var ph in Model.PPhoneList)
                                                                                {
                                                                                    <span class="household-right-txt" style="margin-bottom:0px;color:#164b7b;text-decoration:none;">

                                                                                        @ph

                                                                                    </span>
                                                                                }
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                    @*<div class="contactno" style="float: left;text-align: left;color: #295b8f;font-size: 17px;font-weight: bold;"></div>*@

                                                                    @*<div class="contactno" style="text-align: right;padding-top: 5px;">@ph</div>*@
                                                                    @*<ul style="float:left;width:100%;">


                                                                        </ul>*@


                                                                    @if (Model.Pregnantmotherenrolled)
    {
                                                                        <div class="col-xs-12">
                                                                            @{
                                                                                string encClient = FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID.ToString());

                                                                            }


                                                                            @if (Model.Yakkr == "1")
                                                                            {

                                                                                <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.Pfirstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Intake</a>
                                                                            }
                                                                            else if (Model.Yakkr == "2")
                                                                            {
                                                                                <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.Pfirstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Waiting List</a>
                                                                            }
                                                                            else if (Model.Yakkr == "3")
                                                                            {
                                                                                <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.Pfirstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Pending</a>
                                                                            }
                                                                            else if (Model.Yakkr == "4")
                                                                            {
                                                                                <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.Pfirstname" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Accepted</a>
                                                                            }
                                                                            else if (Model.Yakkr == "5")
                                                                            {
                                                                                <a style="color:green;font-size:18px;" title="Click to change status" clientid="@encClient" name="@Model.Pfirstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Accepted</a>
                                                                            }
                                                                            else if (Model.Yakkr == "6")
                                                                            {
                                                                                <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" name="@Model.Cfirstname" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Dropped</a>
                                                                            }
                                                                            else if (Model.Yakkr == "7")
                                                                            {
                                                                                <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" name="@Model.Cfirstname" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Withdrawn</a>
                                                                            }
                                                                            else if (Model.Yakkr == "8")
                                                                            {
                                                                                if (Model.IsFutureWithdrawal)
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" householdid="@Model.Encrypthouseholid" progid="@Model.ProgramTypeID" data-Insurance="@Model.InsuranceOption" name="@Model.Cfirstname" accesskey="@Model.Yakkr" href="javascript:void(0)">Enrolled</a>

                                                                                }
                                                                                else
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID" name="@Model.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Enrolled</a>

                                                                                }
                                                                            }
                                                                            else if (Model.Yakkr == "9")
                                                                            {
                                                                                if (Model.IsFutureWithdrawal)
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" householdid="@Model.Encrypthouseholid" progid="@Model.ProgramTypeID" data-Insurance="@(Model.InsuranceOption)" name="@Model.Cfirstname" accesskey="@Model.Yakkr" href="javascript:void(0)">Re-enrolled</a>

                                                                                }
                                                                                else
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" progid="@Model.ProgramTypeID" name="@Model.Cfirstname" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Re-enrolled</a>

                                                                                }
                                                                            }

                                                                            else if (Model.Yakkr == "10")
                                                                            {
                                                                                <a style="color:#0f9c15;font-size:18px;" title="Client has been transitioned to next program year" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" name="@Model.Cfirstname" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr" href="javascript:void(0)">Transitioned</a>

                                                                            }
                                                                        </div>
                                                                                }


                                                                    <div class="home-fft col-xs-12" style="margin-top:25px;">





                                                                        <div class="bade-div" style="width:auto;display:inline-block;float:left;">
                                                                            @*<p class="house-hold-badge Parent-badge-bg-r">P</p>*@


                                                                            @if (Model.PEnrollment == "1")
                                                                            {

                                                                                if (Model.PEnrollmentFinished == "1")
                                                                                {
                                                                                    <p style="background:#be20d0;" class="house-hold-badge Parent-badge-bg-b">J</p>

                                                                        }
                                                                        else
                                                                        {
                                                                            <p onclick="ShowJobPopup(@Model.ParentID,1)" style="cursor:pointer;" class="house-hold-badge  glossy-badge glossy-badge-orange job-badge Parent-badge-bg-b">J</p>

                                                                                }


                                                                            }
                                                                            @if (Model.IsPreg == 1 && Model.Pregnantmotherenrolled)
                                                                            {
                                                                                if (Model.PMDentalExam != 1)
                                                                                {
                                                                                    <p class="house-hold-badge Parent-badge-bg-dental-n"><a href="javascript:void(0);" onclick="showPregMomDental(@Model.ParentID,this,0);">D</a></p>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <p class="house-hold-badge Parent-badge-bg-dental-y"><a href="javascript:void(0);" onclick="showPregMomDental(@Model.ParentID, this,0);">D</a></p>

                                                                                }

                                                                                <input type="hidden" name="dentalExamPreg" class="dentalexamPreg" value="@Model.PMDentalExam" />

                                                                            }



                                                                    @*<p class="house-hold-badge Parent-badge-bg-b">P</p>
                                                                        <p class="house-hold-badge Parent-badge-bg-g">P</p>*@
                                                                </div>
                                                                <div style="float: right;">

                                                                    <a style="color:#fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-green edit-client" href="~/AgencyUser/AddNewParent?id=@Model.Encrypthouseholid&Parentid=@FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID.ToString())">
                                                                        <i class="fa fa-pencil" aria-hidden="true"></i>&nbsp;Edit

                                                                        <span class="glossy-button-before"></span>

                                                                        <span class="glossy-button-after"></span>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                            @if (Model.ParentID1 != 0)
                                                            {
                                                                <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                                                    <div class="house-hold household-main-ht parent-info-div">
                                                                        <div class="hld-img">

                                                                            @if (string.IsNullOrEmpty(Model.P1Imagejson) && Model.P1Gender == 2)
                                                                            {

                                                                        <img width="108" height="108" src="@Url.Content("~/Images/female-adult.png")" style="margin-top: 4px;" />
                                                                    }
                                                                    else if (string.IsNullOrEmpty(Model.P1Imagejson) && Model.P1Gender == 1)
                                                                    {
                                                                        <img width="108" height="108" src="@Url.Content("~/Images/adult-image.png")" style="margin-top: 4px;" />
                                                                    }
                                                                    else if (string.IsNullOrEmpty(Model.P1Imagejson) && Model.P1Gender == 3)
                                                                    {
                                                                        <img width="108" height="108" src="@Url.Content("~/Images/adult-image.png")" style="margin-top: 4px;" />
                                                                    }
                                                                    else if (!string.IsNullOrEmpty(Model.P1Imagejson))
                                                                    {
                                                                        <img width="108" height="108" src="data:image/jpg;base64,@Model.P1Imagejson" style="margin-top: 4px;" />
                                                                    }
                                                                    else
                                                                    {
                                                                        <img width="108" height="108" src="@Url.Content("~/Content/img/download.jpg")" style="margin-top: 4px;" />
                                                                    }

                                                                    <div class="glossy-update-icon" onclick="updateProfilePicture(this,1);" data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID1.ToString())"  title="Add/Update Picture">
                                                                        <i class="fa fa-plus"></i>
                                                                    </div>
                                                                </div>
                                                                <div class="det-cont" style="min-height: 130px;">
                                                                    <h4 class="household-heading-txt">@Model.P1firstname</h4>

                                                                            <ul style="float:left;width:100%;margin-bottom:0;" class="parent-head-ch">
                                                                                <li>
                                                                                    <p class="household-left-txt"> <i class="fa fa-user"></i>@Model.GenderParent2</p>
                                                                                    @if (@Model.IsPreg1 != 0)
                                                                                    {
                                                                                        <span class="household-right-txt">
                                                                                            <a href="#" id="dob@(Model.ParentID1)" onclick="ChangeDOB(this)" data-programtype="parent" data-childid="@Model.ParentID" style="text-decoration:underline">@Model.P1DOB</a>
                                                                                        </span>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span class="household-right-txt" style="color:#164b7b;">
                                                                                            <a href="#">@Model.P1DOB</a>
                                                                                        </span>
                                                                                    }


                                                                                </li>
                                                                                <li style="margin-bottom:0;min-height: 64px;">
                                                                                    <p class="household-left-txt" style="width:31%;"><i class="fa fa-phone"></i>Contact</p>
                                                                                    @foreach (var ph in Model.P1PhoneList)
                                                                                    {
                                                                                        <span style="margin-bottom:0px;color:#164b7b;text-decoration:none;" class="household-right-txt">

                                                                                            @ph

                                                                                        </span>
                                                                                    }
                                                                                </li>
                                                                            </ul>
                                                                        </div>
                                                                        @*<div class="contactno" style="float: left;text-align: left;color: #295b8f;font-size: 17px;font-weight: bold;"></div>*@

                                                                        @*<div class="contactno" style="text-align: right;padding-top: 5px;">@ph</div>*@
                                                                        @*<ul style="float:left;width:100%;">


                                                                            </ul>*@




                                                                        @if (Model.PregnantmotherenrolledP1)
                                                                        {
                                                                            <div class="col-xs-12">
                                                                                @{
                                                                                    string encClient = FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID1.ToString());

                                                                                }


                                                                                @if (Model.Yakkr1 == "1")
            {

                                                                                    <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.P1firstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Intake</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "2")
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.P1firstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Waiting List</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "3")
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.P1firstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Pending</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "4")
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" clientid="@encClient" name="@Model.P1firstname" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Accepted</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "5")
                                                                                {
                                                                                    <a style="color:green;font-size:18px;" title="Click to change status" clientid="@encClient" name="@Model.P1firstname" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Accepted</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "6")
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" name="@Model.P1firstname" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Dropped</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "7")
                                                                                {
                                                                                    <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" name="@Model.P1firstname" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Withdrawn</a>
                                                                                }
                                                                                else if (Model.Yakkr1 == "8")
                                                                                {
                                                                                    if (Model.IsFutureWithdrawal)
                                                                                    {
                                                                                        <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" progid="@Model.ProgramTypeID1" name="@Model.P1firstname" accesskey="@Model.Yakkr1" href="javascript:void(0)">Enrolled</a>

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@Model.InsuranceOption" name="@Model.P1firstname" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Enrolled</a>

                                                                                    }
                                                                                }
                                                                                else if (Model.Yakkr1 == "9")
                                                                                {
                                                                                    if (Model.IsFutureWithdrawal1)
                                                                                    {
                                                                                        <a style="color:red;font-size:18px;" title="Enrollment Status of Client already updated  for future withdrawal" clientid="@encClient" householdid="@Model.Encrypthouseholid" progid="@Model.ProgramTypeID1" data-Insurance="@(Model.InsuranceOption)" name="@Model.P1firstname" accesskey="@Model.Yakkr1" href="javascript:void(0)">Re-enrolled</a>

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <a style="color:red;font-size:18px;" title="Click to change status" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" name="@Model.P1firstname" progid="@Model.ProgramTypeID1" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Re-enrolled</a>

                                                                                    }
                                                                                }

                                                                                else if (Model.Yakkr == "10")
                                                                                {
                                                                                    <a style="color:#0f9c15;font-size:18px;" title="Client has been transitioned to next program year" clientid="@encClient" householdid="@Model.Encrypthouseholid" data-Insurance="@(Model.InsuranceOption)" name="@Model.Cfirstname" progid="@Model.ProgramTypeID" onclick="Loadchangestatusmodel(this);" accesskey="@Model.Yakkr1" href="javascript:void(0)">Transitioned</a>

                                                                                }
                                                                            </div>
                                                                                    }




                                                                        <div class="home-fft col-xs-12" style="margin-top:25px;">

                                                                            <div class="bade-div" style="width:auto;display:inline-block;float:left;">


                                                                                @if (Model.PEnrollment1 == "1")
                                                                                {
                                                                                    if (Model.PEnrollmentFinished1 == "1")
                                                                                    {
                                                                                        <p style="background:#be20d0;" class="house-hold-badge Parent-badge-bg-b">J</p>

                                                                            }
                                                                            else
                                                                            {
                                                                                <p onclick="ShowJobPopup(@Model.ParentID1,2)" style="cursor:pointer;" class="house-hold-badge  glossy-badge glossy-badge-orange job-badge Parent-badge-bg-b">J</p>
                                                                            }

                                                                                }
                                                                                @if (Model.IsPreg1 == 1 && Model.PregnantmotherenrolledP1)
                                                                                {
                                                                                    if (Model.PMDentalExam1 != 1)
                                                                                    {
                                                                                        <p class="house-hold-badge Parent-badge-bg-dental-n"><a href="javascript:void(0);" onclick="showPregMomDental(@Model.ParentID1,this,1);">D</a></p>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <p class="house-hold-badge Parent-badge-bg-dental-y"><a href="javascript:void(0);" onclick="showPregMomDental(@Model.ParentID1,this,1);">D</a></p>

                                                                                    }
                                                                                    <input type="hidden" name="dentalExamPreg" class="dentalexamPreg" value="@Model.PMDentalExam1" />

                                                                                }

                                                                        @*<p class="house-hold-badge Parent-badge-bg-b">P</p>
                                                                            <p class="house-hold-badge Parent-badge-bg-g">P</p>*@
                                                                    </div>
                                                                    <div style="float:right;">
                                                                        <a class="glossy-button-button glossy-button-hover button-green" style="color:#fff;text-decoration:none;" href="~/AgencyUser/AddNewParent?id=@Model.Encrypthouseholid&Parentid=@FingerprintsModel.EncryptDecrypt.Encrypt64(Model.ParentID1.ToString())">
                                                                            <i class="fa fa-pencil" aria-hidden="true"></i>&nbsp;Edit

                                                                            <span class="glossy-button-before"></span>
                                                                            <span class="glossy-button-after"></span>
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                                            }

                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                                <div class="col-xs-12 no-padding">
                                                    <div class="information_titles panel-head-div-light-green">
                                                        <h4 style="text-transform:none;" class="glossy-panel-heading">Others in Household</h4>
                                                        <div style="float:right;padding:10px;">

                                                            <a href="javascript:void(0);" onclick="Addothers();" class="glossy-button-button glossy-button-hover button-yellow">
                                                                Add
                                                                <span class="glossy-button-before"></span>
                                                                <span class="glossy-button-after"></span>
                                                            </a>
                                                        </div>


                                                    </div>

                                                    <div class="inforeader-inner">
                                                        @if (Model._Olist != null && Model._Olist.Count > 0)
                                                        {
                                                            foreach (var item in Model._Olist)
                                                            {
                                                                <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                                                    <div class="house-hold  household-main-ch others-info-div household-main-ht">
                                                                        <div class="hld-img">
                                                                            @if (string.IsNullOrEmpty(item.HouseHoldImagejson) && item.OGender == "2")
                                                                            {
                                                                                <img width="108" height="108" src="@Url.Content("~/Content/img/ic_female.png")" />
                                                                            }
                                                                            else if (string.IsNullOrEmpty(item.HouseHoldImagejson) && item.OGender == "1")
                                                                            {
                                                                                <img width="108" height="108" src="@Url.Content("~/Content/img/ic_male.png")" />
                                                                            }
                                                                            else if (string.IsNullOrEmpty(item.HouseHoldImagejson) && item.OGender == "3")
                                                                            {
                                                                                <img width="108" height="108" src="@Url.Content("~/Content/img/ic_male_default.png")" />
                                                                            }
                                                                            else if (!string.IsNullOrEmpty(item.HouseHoldImagejson))
                                                                            {
                                                                                <img width="108" height="108" src="data:image/jpg;base64,@item.HouseHoldImagejson" />
                                                                            }
                                                                            else
                                                                            {
                                                                                <img width="108" height="108" src="@Url.Content("~/Content/img/download.jpg")" />
                                                                            }


                                                                            <div class="glossy-update-icon" onclick="updateProfilePicture(this,1);" data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(item.OthersId.ToString())" title="Add/Update Picture">
                                                                                <i class="fa fa-plus"></i>
                                                                            </div>

                                                                        </div>
                                                                        <div class="det-cont" style="min-height: 130px;">
                                                                            <h4 class="household-heading-txt">@item.Ofirstname</h4>
                                                                            <ul>
                                                                                <li>
                                                                                    <p class="household-left-txt">
                                                                                        <i class="fa fa-user"></i>@item.Gender
                                                                                    </p><span class="household-right-txt">@item.ODOB</span>
                                                                                </li>
                                                                            </ul>
                                                                        </div>
                                                                        <div class="home-fft col-xs-12">
                                                                            @if (item.OtherEligible)
                                                                            {
                                                                                <a title="Click to enroll" style="color:red;" class="edit-client" href="~/AgencyUser/AddNewChild?id=@Model.Encrypthouseholid&Name=@Model.EncryptedName&OthersId=@FingerprintsModel.EncryptDecrypt.Encrypt64(@item.OthersId.ToString())">Eligible</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <a style="color:red;" href="javascript:void(0)">Not Eligible</a>
                                                                            }

                                                                            <div style="float:right;">

                                                                                <a href="javascript:void(0)" style="color:#fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-green" accesskey="@item.OthersId" onclick="GetOther(this);">
                                                                                    <i class="fa fa-pencil" aria-hidden="true"></i>&nbsp;Edit
                                                                                    <span class="glossy-button-before"></span>
                                                                                    <span class="glossy-button-after"></span>
                                                                                </a>

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="info-none"><p>- None -</p></div>
                                                        }


                                                            </div>

                                                        </div>

                                                    </div>

                                            <div class="col-xs-12">
                                                <div class="col-xs-12 no-padding">
                                                    <div class="information_titles panel-head-div-light-blue">
                                                        <h4 class="glossy-panel-heading">Emergency Contact</h4>
                                                        <div style="padding:10px;float:right;">
                                                            <a href="javascript:void(0);" onclick="AddEcontacts();" class="glossy-button-button glossy-button-hover button-yellow">
                                                                Add
                                                                <span class="glossy-button-before"></span>
                                                                <span class="glossy-button-after"></span>
                                                            </a>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="inforeader-inner">
                                                    @if (Model._Elist != null && Model._Elist.Count > 0)
                                                    {
                                                        foreach (var item in Model._Elist)
                                                        {
                                                            <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                                                <div class="house-hold household-main-ch emergency-contact-div household-main-ht">
                                                                    <div class="hld-img">
                                                                        @if (string.IsNullOrEmpty(item.EImagejson) && item.EGender == "2")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/ic_female.png")" />
                                                                        }
                                                                        else if (string.IsNullOrEmpty(item.EImagejson) && item.EGender == "1")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/ic_male.png")" />
                                                                        }
                                                                        else if (string.IsNullOrEmpty(item.EImagejson) && item.EGender == "3")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/ic_male_default.png")" />
                                                                        }
                                                                        else if (!string.IsNullOrEmpty(item.EImagejson))
                                                                        {
                                                                            <img width="108" height="108" src="data:image/jpg;base64,@item.EImagejson" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/download.jpg")" />
                                                                        }

                                                                        <div class="glossy-update-icon" onclick="updateProfilePicture(this,2);" data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(item.EmegencyId.ToString())" title="Add/Update Picture">
                                                                            <i class="fa fa-plus"></i>
                                                                        </div>
                                                                    </div>
                                                                    <div class="det-cont" style="min-height: 130px;">
                                                                        <h4 class="household-heading-txt">@item.Efirstname</h4>
                                                                        <ul style="float:left;width:100%;margin-bottom:0;" class="parent-head-ch">
                                                                            <li>
                                                                                <p class="household-left-txt"><i class="fa fa-user"></i>@item.Gender</p>
                                                                                <span class="household-right-txt">@item.EDOB</span>
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                    <div class="home-fft col-xs-12" style="margin: 10px 0 0;">

                                                                        <div style="float:right;">

                                                                            <a href="javascript:void(0)" accesskey="@item.EmegencyId" onclick="Getemergencycontact(this);" style="color: #fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-green">
                                                                                <i class="fa fa-eye" aria-hidden="true"></i>&nbsp;
                                                                                View
                                                                                <span class="glossy-button-before"></span>
                                                                                <span class="glossy-button-after"></span>

                                                                            </a>

                                                                            <a href="javascript:void(0)" accesskey="@item.EmegencyId" onclick="deleteEmergencycontact(this);" style="color: #fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-red">
                                                                                <i class="fa fa-trash" aria-hidden="true"></i>&nbsp;
                                                                                Delete
                                                                                <span class="glossy-button-before"></span>
                                                                                <span class="glossy-button-after"></span>

                                                                            </a>

                                                                        </div>




                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div class="info-none"><p>- None -</p></div>
                                                    }

                                                        </div>
                                                    </div>

                                            <div class="col-xs-12">
                                                <div class="col-xs-12 no-padding">
                                                    <div class="information_titles panel-head-div-red">
                                                        <h4 class="glossy-panel-heading">Restricted Contact</h4>
                                                        <div style="float:right;padding:10px;" >
                                                            <a href="javascript:void(0);" class="glossy-button-button glossy-button-hover button-yellow" onclick="Addrestricted();">
                                                                Add
                                                                <span class="glossy-button-before"></span>
                                                                <span class="glossy-button-after"></span>
                                                            </a>


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="inforeader-inner">
                                                    @if (Model._Rlist != null && Model._Rlist.Count > 0)
                                                    {
                                                        foreach (var item in Model._Rlist)
                                                        {
                                                            <div class="col-md-12 col-lg-6 col-sm-12 col-xs-12">
                                                                <div class="house-hold household-main-ch restricted-contact-div household-main-ht">
                                                                    <div class="hld-img">
                                                                        @if (string.IsNullOrEmpty(item.RImagejson) && item.EGender == "2")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/ic_female.png")" />
                                                                        }
                                                                        else if (string.IsNullOrEmpty(item.RImagejson) && item.EGender == "1")
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/ic_male.png")" />
                                                                        }
                                                                        else if (!string.IsNullOrEmpty(item.RImagejson))
                                                                        {
                                                                            <img width="108" height="108" src="data:image/jpg;base64,@item.RImagejson" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <img width="108" height="108" src="@Url.Content("~/Content/img/download.jpg")" />
                                                                        }
                                                                        <div class="glossy-update-icon" onclick="updateProfilePicture(this,2);" data-accesskey="@FingerprintsModel.EncryptDecrypt.Encrypt64(item.RestrictedId.ToString())" title="Add/Update Picture">
                                                                            <i class="fa fa-plus"></i>
                                                                        </div>
                                                                    </div>
                                                                    <div class="det-cont" style="min-height: 130px;">
                                                                        <h4 class="household-heading-txt">@item.Rfirstname @item.Rlastname</h4>
                                                                        @*<ul>
                                                                                <li><p class="household-left-txt"> </p><span>@item.EDOB</span></li>
                                                                            </ul>*@
                                                                    </div>
                                                                    <div class="home-fft col-xs-12">

                                                                        <div style="float:right;">



                                                                            <a href="javascript:void(0)" accesskey="@item.RestrictedId" onclick="GetRestricted(this);" style="color: #fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-green">
                                                                                <i class="fa fa-eye" aria-hidden="true"></i>&nbsp;View

                                                                                <span class="glossy-button-before"></span>
                                                                                <span class="glossy-button-after"></span>
                                                                            </a>&nbsp;

                                                                            <a href="javascript:void(0)" onclick="deleteRestricted(this);" accesskey="@item.RestrictedId" style="color: #fff;text-decoration:none;" class="glossy-button-button glossy-button-hover button-red">

                                                                                <i class="fa fa-trash" aria-hidden="true"></i>&nbsp;Delete

                                                                                <span class="glossy-button-before"></span>
                                                                                <span class="glossy-button-after"></span>

                                                                            </a>


                                                                        </div>



                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div class="info-none"><p>- None -</p></div>
                                                    }

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                       





                                 








                                   

                                </div>
                            </div>

                            <form method="post" role="form" id="form2" enctype="multipart/form-data" autocomplete="off">
                                <div class="modal fade" id="HouseholdData" data-backdrop="static" data-keyboard="false" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3 class="text-center">Household Details<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                        <div class="add-useragform col-xs-12">
                                                            <div class="col-lg-12 col-md-12 col-sm-12" style="padding:0;">
                                                                <div class="form-group">
                                                                    <h3 class="addapplicant">Household </h3>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <label for="email">Address <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Street, new { placeholder = "Address", id = "Street", maxlength = "50", @class = "form-control", tabindex = 3, @onblur = "CheckAddress(0);" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <label for="email">Apartment No., Lot No. </label>
                                                                    @Html.TextBoxFor(m => m.StreetName, new { placeholder = "Apartment No., Lot No.", id = "StreetName", maxlength = "100", @class = "form-control", tabindex = 4, onblur = "CheckAddress(0);" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label for="email">Zip Code  <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.ZipCode, new { placeholder = "Zip Code ", id = "ZipCode", maxlength = "5", @class = "form-control", onblur = "checkZipCode(this);", tabindex = 5 })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label for="email">City  <sup>*</sup></label>
                                                                    <select id="City" name="City" class="form-control" tabindex="6">
                                                                        <option value="@Model.City">@Model.City</option>
                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label for="email">State  <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.State, new { placeholder = "State ", id = "State", maxlength = "100", @class = "form-control", onblur = "isSpclChar(this);", tabindex = 7, @readonly = "readonly" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label for="email">County  <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.County, new { placeholder = "County ", id = "County", maxlength = "100", @class = "form-control", tabindex = 8, @readonly = "readonly" })
                                                                </div>
                                                            </div>
                                                            @if (Model.docstorage == 0)
                                                            {
                                                                <div class="col-lg-6 col-md-6 col-sm-12">
                                                                    <div class="form-group">
                                                                        <label>Address Verification Form (pdf,jpg,jpeg,bmp,gif,png) </label>
                                                                        @Html.TextBoxFor(m => m.FileaddressAvatar, new { id = "FileaddressAvatar", Name = "FileaddressAvatar", type = "file", onchange = "ValidateSingleInputpdf(this)", @class = "form-control", @accept = "image/*", @capture = "camera", @style = "width:43%;", tabIndex = "6" })
                                                                        <div class="cont-sz" style="width: 85px;display:none; margin-left: 10px; float: right;">
                                                                            @Html.CheckBoxFor(m => m.AdresssverificationinPaper, new { @class = "minimal", tabIndex = "7" })
                                                                            <label style="width:45px;">Paper</label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                            @if (Model.docstorage == 2)
                                                            {
                                                                <div class="col-lg-6 col-md-6 col-sm-12">
                                                                    <div class="form-group">
                                                                        <label>Address Verification Form</label>
                                                                        <div class="cont-sz">
                                                                            @Html.CheckBoxFor(m => m.AdresssverificationinPaper, new { @class = "minimal", tabIndex = "7" })
                                                                            <label style="width:45px;">Paper</label>
                                                                        </div>
                                                                        @Html.TextBoxFor(m => m.FileaddressAvatar, new { id = "FileaddressAvatar", Name = "FileaddressAvatar", type = "file", onchange = "ValidateSingleInputpdf(this)", @class = "form-control", @accept = "image/*", @capture = "camera", @style = "width:43%;display:none;", tabIndex = "6" })

                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main add-useragform1">
                                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                                            <div class="form-group">
                                                                <h3 class="addapplicant">Family Household </h3>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                            <div class="form-group">
                                                                <div class="col-sm-12">
                                                                    <label> Family Type <sup style="color:red;">*</sup></label>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.FamilyType, 1, new { @id = "FamilyType", onchange = "ShowHideDivParentTwo1()", tabIndex = "8", @disabled = "disabled" })
                                                                        <span style="font-size: 14px;">Single Parent Family </span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.FamilyType, 2, new { @id = "FamilyType1", onchange = "ShowHideDivParentTwo2()", tabIndex = "9", @disabled = "disabled" })
                                                                        <span style="font-size: 14px;">Two Parent Family </span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                            <div class="form-group">
                                                                <div class="col-xs-8 col-sm-12">
                                                                    <label>
                                                                        Is family Homeless at this time? <sup style="color:red;">*</sup>

                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.HomeType, 1, new { tabIndex = "10", id = "HomeType1", onchange = "Checkhouse(this)" })
                                                                        <span>Yes</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.HomeType, 2, new { tabIndex = "11", id = "HomeType2", onchange = "UnCheckhouse(this)" })
                                                                        <span>No  </span>
                                                                    </label>
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <div class="row col-sm-12">
                                                            <div class="col-lg-6 adddivspace" id="divrelationshipparent" style="display:none;">
                                                                <div class="form-group">
                                                                    <div class="col-sm-12">
                                                                        <label>Parent Relationship <sup style="color:red;">*</sup></label>
                                                                    </div>
                                                                    <div class="col-sm-9">
                                                                        @{
                                                                            List<SelectListItem> ParentRelatioshipList = new List<SelectListItem>();
                                                                        }
                                                                        @Html.DropDownListFor(m => m.ParentRelatioship, new SelectList(ParentRelatioshipList, "Value", "Text", Model.ParentRelatioship), new { @class = "form-control", onchange = "ShowdivParentotherrelationship();", @disabled = "disabled" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 adddivspace" id="married" style="display:none;">
                                                                <div class="form-group">
                                                                    <div class="col-sm-12">
                                                                        <div class="col-xs-8 col-sm-12">
                                                                            <label>Married? <sup style="color:red;">*</sup></label>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-2">
                                                                            <label class="radio-inline">
                                                                                @Html.RadioButtonFor(m => m.Married, 1, new { tabIndex = "22", id = "Married", @disabled = "disabled" })
                                                                                <span>Yes</span>
                                                                            </label>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-2">
                                                                            <label class="radio-inline">
                                                                                @Html.RadioButtonFor(m => m.Married, 2, new { tabIndex = "23", id = "Married1", @disabled = "disabled" })
                                                                                <span>No  </span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <div class="row col-sm-12">
                                                            <div class="col-lg-6 adddivspace" id="divParentrelatioship" style="display:none;">
                                                                <div class="form-group">
                                                                    <div class="col-xs-8">
                                                                        <label for="email">Other Relationship</label>
                                                                    </div>
                                                                    <div class="col-xs-9">
                                                                        @Html.TextBoxFor(m => m.ParentRelatioshipOther, new { placeholder = "Other Relationship", maxlength = "20", @class = "form-control", tabIndex = "25", @disabled = "disabled" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                            <div class="form-group">
                                                                <div class="col-xs-8 col-sm-12">
                                                                    <label> Rent Type </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.RentType, "1", new { tabIndex = "12", id = "RentType1", onchange = "Renting(this);" })
                                                                        <span>Renting </span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.RentType, "2", new { tabIndex = "13", id = "RentType2", onchange = "Buying(this);" })
                                                                        <span>Buying</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.RentType, "3", new { tabIndex = "14", id = "RentType3", onchange = "SubsidizedRent(this);" })
                                                                        <span>Subsidized Rent</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-6">
                                                                    <label class="radio-inline">
                                                                        @Html.RadioButtonFor(m => m.RentType, "4", new { tabIndex = "15", id = "RentType4", onchange = "NoPayment(this);" })
                                                                        <span>No Payment </span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-lg-6 col-md-6 col-sm-12 adddivspace" id="chk">

                                                            <div class="form-group">
                                                                <div class="col-xs-8 col-sm-12">
                                                                    <label>Federal or Other Assistance <sup style="color:red;">*</sup></label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="checkbox-inline">
                                                                        @Html.CheckBoxFor(m => m.TANF, new { id = "TANF", Name = "TANF", @class = "minimal", @onchange = "uncheckdataNone2();", tabIndex = "16" })
                                                                        <span>TANF</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="checkbox-inline">
                                                                        @Html.CheckBoxFor(m => m.SSI, new { id = "SSI", Name = "SSI", @class = "minimal", @onchange = "uncheckdataNone2();", tabIndex = "17" })
                                                                        <span>SSI</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="checkbox-inline">
                                                                        @Html.CheckBoxFor(m => m.SNAP, new { id = "SNAP", Name = "SNAP", @class = "minimal", @onchange = "uncheckdataNone2();", tabIndex = "18" })
                                                                        <span>SNAP</span>
                                                                    </label>
                                                                </div>
                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="checkbox-inline">
                                                                        @Html.CheckBoxFor(m => m.WIC, new { id = "WIC", Name = "WIC", @class = "minimal", @onchange = "uncheckdataNone2();", tabIndex = "19" })
                                                                        <span>WIC</span>
                                                                    </label>
                                                                </div>

                                                                <div class="col-xs-6 col-sm-2">
                                                                    <label class="checkbox-inline">
                                                                        @Html.CheckBoxFor(m => m.NONE, new { id = "None", Name = "None", @class = "minimal", @onchange = "uncheckdata2();", tabIndex = "20" })
                                                                        <span>NONE</span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="row col-lg-12">
                                                            <div class="col-lg-6 col-md-6 col-sm-12 adddivspace">
                                                                <div class="form-group">
                                                                    <div class="col-xs-8 col-sm-12">
                                                                        <label for="email">Primary Language Spoken  <sup style="color:red;">*</sup></label>
                                                                    </div>
                                                                    <div class="col-xs-6 col-sm-9">
                                                                        @{
                                                                            List<SelectListItem> lang = new List<SelectListItem>();
                                                                            foreach (var item in ViewBag.lang)
                                                                            {
                                                                                lang.Add(new SelectListItem() { Text = item.Name, Value = item.LangId });
                                                                            }
                                                                        }
                                                                        @Html.DropDownListFor(m => m.PrimaryLanguauge, new SelectList(lang, "Value", "Text"), new { @class = "form-control", onchange = "Showotherlanguage();", tabIndex = "21" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 adddivspace">
                                                                <div class="form-group">
                                                                    <div class="col-sm-12">
                                                                        <div class="col-xs-8 col-sm-12">
                                                                            <label>Does Family need an Interpreter? <sup style="color:red;">*</sup></label>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-2">
                                                                            <label class="radio-inline">
                                                                                @Html.RadioButtonFor(m => m.Interpretor, 1, new { tabIndex = "22", id = "Interpretor" })
                                                                                <span>Yes</span>
                                                                            </label>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-2">
                                                                            <label class="radio-inline">
                                                                                @Html.RadioButtonFor(m => m.Interpretor, 2, new { tabIndex = "23", id = "Interpretor1" })
                                                                                <span>No  </span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-lg-6 adddivspace" id="div2" style="display:none;">
                                                            <div class="form-group">
                                                                <div class="col-xs-8">
                                                                    <label for="email">Other Language Detail</label>
                                                                </div>
                                                                <div class="col-xs-9">
                                                                    @Html.TextBoxFor(m => m.OtherLanguageDetail, new { placeholder = "Other Language Detail", maxlength = "20", @class = "form-control", tabIndex = "25" })

                                                                </div>
                                                            </div>
                                                        </div>



                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="btnwrp_subcal">
                                                            <button id="btnSubmitDentist" tabindex="16" name="Command" value="Householdbutton" onclick="return SaveClientSummary();" class="my-btn" type="submit">Save</button>
                                                            <button id="btnCancelPassword" tabindex="17" class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                            <input id="HouseholdId" type="hidden" name="HouseholdId" value="@Model.HouseholdId" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal fade" id="UpdateJobTraining" role="dialog" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">

                                                <label class="alert-dismissible" for="current_password">Update Job Training Completion</label>
                                            </div>
                                            <div class="form-group-al">
                                                <div class="form-group input-container">

                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-12" style="margin-bottom: 10px;">
                                                            <div class="col-lg-7 col-xs-7" style="padding-left: 0;">
                                                                <div class="enroll-sec" style="padding-left: 0;">
                                                                    <div class="transition-content-desc" style="position: relative;">
                                                                        <p style="background: none;border: none;">Has parent completed the job training?<span class="error-notify">*</span></p>
                                                                    </div>
                                                                </div>
                                                            </div> <div class="transition-radio-btn enroll-sec" id="jobTraing">

                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="jobTraing" class="jobTraing" value="true">
                                                                    <label>Yes</label>
                                                                </div>
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="jobTraing" class="jobTraing" value="false">
                                                                    <label>No</label>
                                                                </div>


                                                                <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                                    <span class="err-message err-message-ms">Job Training is required.</span>
                                                                </div>


                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-12" style="text-align:center">
                                                            @*<input name="CNotes" style="width: 30%;display:inline-block;" class="form-control txtslotdate txt-date txt-mandatory" id="CNotes" type="text" maxlength="50" placeholder="mm/dd/yyyy" value="">*@
                                                            <button class="btn-UpdateJobTraining address-btn btn btn-primary" type="button" style="display:inline-block;width:auto;">Submit</button>
                                                        </div>

                                                    </div>

                                                    @*<label class="control-label" for="current_password" style="width:180px;">Date:</label>
                                                        <input name="CNotes" style="width: 30%;display:inline-block" class="form-control txtseatdate txt-date txt-mandatory" id="CNotes" type="text" maxlength="50" placeholder="mm/dd/yyyy" value="">
                                                        <button class="btn-seat-submit address-btn btn btn-primary" style="width:auto;display:inline-block;">Submit</button>*@
                                                    <div class="err-container" style="height:15px;">
                                                        <span class="error-message seats-message-empty error-message-empty" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Date is mandatory</span>
                                                        <span class="error-message seats-invalid-date error-invalid-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Invalid Date</span>
                                                        <span class="error-message seats-future-date error-future-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Future date is not allowed</span>
                                                        <span class="error-message seats-future-date error-ageerror-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Future date is not allowed</span>

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button class="btnPassword address-btn" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal fade" id="ChangeDOB" role="dialog" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">

                                                <label class="alert-dismissible" for="current_password">Change DOB</label>
                                            </div>
                                            <div class="form-group-al">
                                                <div class="form-group input-container">

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <label class="control-label" for="current_password">Date:</label>
                                                        </div>
                                                        <div class='col-xs-12 col-sm-4'>
                                                            <div class="form-group">
                                                                <div class='input-group date'>
                                                                    <input type='text' class="form-control txtdob txt-date txt-mandatory " maxlength="12" placeholder="mm/dd/yyyy" id='seatsDatetimePicker1' />
                                                                    <span class="input-group-addon datepicker-icon seats-icon" id="1" style="cursor:pointer;">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            @*<input name="CNotes" style="width: 30%;display:inline-block;" class="form-control txtslotdate txt-date txt-mandatory" id="CNotes" type="text" maxlength="50" placeholder="mm/dd/yyyy" value="">*@
                                                            <button class="btn-DOBChange address-btn btn btn-primary" type="button" style="display:inline-block;width:auto;">Submit</button>
                                                        </div>

                                                    </div>

                                                    @*<label class="control-label" for="current_password" style="width:180px;">Date:</label>
                                                        <input name="CNotes" style="width: 30%;display:inline-block" class="form-control txtseatdate txt-date txt-mandatory" id="CNotes" type="text" maxlength="50" placeholder="mm/dd/yyyy" value="">
                                                        <button class="btn-seat-submit address-btn btn btn-primary" style="width:auto;display:inline-block;">Submit</button>*@
                                                    <div class="err-container" style="height:15px;">
                                                        <span class="error-message seats-message-empty error-message-empty" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Date is mandatory</span>
                                                        <span class="error-message seats-invalid-date error-invalid-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Invalid Date</span>
                                                        <span class="error-message seats-future-date error-future-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Future date is not allowed</span>
                                                        <span class="error-message seats-future-date error-ageerror-date" style="text-align:center;margin-top:10px;display:none;color:red;margin-left: 210px;">Future date is not allowed</span>

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button class="btnPassword address-btn" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal fade" id="OtherModel" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3 class="text-center" id="Heading">Add Other In Household<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                        <div class="add-useragform">
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>First Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Ofirstname, new { placeholder = "First Name", id = "Ofirstname", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Middle Name </label>
                                                                    @Html.TextBoxFor(m => m.Omiddlename, new { placeholder = "Middle Name", id = "Omiddlename", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Last Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Olastname, new { placeholder = "Last Name", id = "Olastname", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>DOB <sup>*</sup></label>
                                                                    <div class="date custom-time">
                                                                        @Html.TextBoxFor(m => m.ODOB, new { placeholder = "MM/DD/YYYY", id = "ODOB", Name = "ODOB", maxlength = "50", @class = "form-control", @onchange = "checkdateOther();", @onblur = "return validatedate(this);" })
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-6 col-md-6 coHouseholdl-sm-12">
                                                                <div class="form-group">
                                                                    <label>Gender <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.OGender, "2", new { id = "OGenderfemale" })
                                                                            <span>Female </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.OGender, "1", new { id = "OGendermale" })
                                                                            <span>Male</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.OGender, "3", new { id = "OGenderother" })
                                                                            <span>Other </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label id="lblOemergencycontact" style="display:none;">Is emergency contact? </label>
                                                                    <div class="cont-sz">
                                                                        @Html.CheckBoxFor(m => m.Oemergencycontact, new { @class = "minimal", tabIndex = "1", style = "display:none;", @onchange = "copydata();" })

                                                                    </div>
                                                                </div>
                                                            </div>


                                                            <div class="col-lg-6 col-md-6 col-sm-12" id="divOallowhomeVisit" style="display:none;">
                                                                <div class="form-group">
                                                                    <label id="lblOallowhomeVisit">Enable Home Visit Activities<sup>*</sup></label>


                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.OEnableHomeVisitActivities, 1)
                                                                            <span>Yes </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.OEnableHomeVisitActivities, 2)
                                                                            <span>No</span>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>



                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Does Parent/Guardian income support to this person ?<sup>*</sup></label>

                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.OIncomeSupported, 1)
                                                                            <span>Yes </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.OIncomeSupported, 2)
                                                                            <span>No</span>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>



                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>SSN </label>
                                                                    <div class="date custom-time">
                                                                        @Html.TextBoxFor(m => m.ParentSSN3, new { placeholder = "SSN", @class = "form-control" })
                                                                    </div>
                                                                </div>
                                                            </div>


                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Profile Picture </label>
                                                                    @Html.TextBoxFor(m => m.HouseHoldAvatar, new { id = "HouseHoldAvatar", Name = "HouseHoldAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                    <div class="img-iconavt">
                                                                        <img alt="" id="imgHouseHoldAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.HouseHoldAvatarUrl)' style="border-style:none;" />
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="btnwrp_subcal">
                                                            <button type="submit" id="btnother" class="my-btn" value="SaveOthershousehold" name="Command" onclick="return isValidOtherInfo();">Submit</button>
                                                            <button tabindex="17" class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                            <input name="OthersId" id="OthersId" value="0" type="hidden" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="modal fade" id="EmergencyModel" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3 id="Eheading" class="text-center">Add eContacts<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                        <div class="add-useragform">
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>First Name <sup>*</sup></label>
                                                                    <input type="text" placeholder="First Name" id="Efirstname" name="Efirstname" value='@Model.Efirstname' maxlength="50" class="form-control" />


                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Middle Name </label>
                                                                    <input type="text" placeholder="Middle Name" id="Emiddlename" name="Emiddlename" value='@Model.Emiddlename' maxlength="50" class="form-control" />

                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Last Name <sup>*</sup></label>
                                                                    <input type="text" placeholder="Last Name" id="Elastname" name="Elastname" value='@Model.Elastname' maxlength="50" class="form-control" />

                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group datepicker-days">
                                                                    <label>DOB</label>
                                                                    <div class="date custom-time">
                                                                        <input type="text" placeholder="MM/DD/YYYY" id="EDOB" name="EDOB" value='@Model.EDOB' onblur="return validatedateemergency(this);" maxlength="50" class="form-control" />


                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Gender <sup>*</sup></label>
                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.EGender, "2", new { id = "EGenderfemale" })
                                                                            <span>Female </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.EGender, "1", new { id = "EGendermale" })
                                                                            <span>Male</span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.EGender, "3", new { id = "EGenderother" })
                                                                            <span>Other </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Email Address</label>
                                                                    @Html.TextBoxFor(m => m.EEmail, new { placeholder = "Email", id = "EEmail", maxlength = "100", @class = "form-control", onblur = "validateEmail1(this);" })
                                                                </div>
                                                            </div>


                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Relation With Child <sup>*</sup></label>
                                                                    @{
                                                                        List<SelectListItem> relation = new List<SelectListItem>();
                                                                        foreach (var item in ViewBag.Relationship)
                                                                        {
                                                                            relation.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                                                        }

                                                                        @Html.DropDownListFor(m => m.ERelationwithchild, new SelectList(relation, "Value", "Text"), new { @class = "form-control" })
                                                                    }
                                                                </div>
                                                            </div>



                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Allow Home Visit Activities<sup>*</sup></label>


                                                                    <div class="cont-sz">
                                                                        <div class="col-xs-6 col-sm-4">
                                                                            @Html.RadioButtonFor(m => m.EnableHomeVisitActivities, 1)
                                                                            <span>Yes </span>
                                                                        </div>
                                                                        <div class="col-xs-6 col-sm-3">
                                                                            @Html.RadioButtonFor(m => m.EnableHomeVisitActivities, 2)
                                                                            <span>No</span>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>





                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Notes </label>
                                                                    @Html.TextBoxFor(m => m.Enotes, new { placeholder = "Notes", id = "Enotes", maxlength = "100", @class = "form-control" })
                                                                    <span>Add Contact No</span>
                                                                    <a href="javascript:void(0)" onclick="AddphoneE1();"><i class="fa fa-plus-square"></i></a>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Profile Picture </label>
                                                                    @Html.TextBoxFor(m => m.EAvatar, new { id = "EAvatar", Name = "EAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                    <div class="img-iconavt">
                                                                        <img alt="" id="imgEAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.EAvatarUrl)' style="border-style:none;" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main table-main">
                                                                <div class="table-responsive">
                                                                    <table class="table table_size" id="gridphoneE1">
                                                                        <thead style="cursor:pointer;">
                                                                            <tr>
                                                                                <th>Phone Type</th>
                                                                                <th>Phone No</th>
                                                                                <th>Is Primary No.</th>
                                                                                <th>Notes</th>
                                                                                <th>SMS </th>
                                                                                <th>Action </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td>
                                                                                    <select class="form-control" style="width:100%;" name="PhoneNos[0].PhoneType" onchange="addcontact(this);">
                                                                                        <option value="1">Home</option>
                                                                                        <option value="2">Mobile</option>
                                                                                        <option value="3">Work</option>
                                                                                    </select>
                                                                                </td>
                                                                                <td><input class="form-control" name="PhoneNos[0].PhoneNo" type="text"></td>
                                                                                <td><input type="checkbox" value="true" name="PhoneNos[0].IsPrimary" data-val="true" id="IsPrimary" class="chcketbl" onchange="uncheckother(this);" /></td>
                                                                                <td><input class="form-control" type="text" data-val="true" name="PhoneNos[0].Notes" maxlength="100"></td>
                                                                                <td><input type="checkbox" style="width:50%;" disabled="disabled" name="PhoneNos[0].IsSms" value="true" class="chcketbl" /></td>
                                                                                <td><a href="javascript:void(0)" onclick="RemovePhoneE1(this);" style=" text-decoration:underline;">Delete</a></td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="btnwrp_subcal">
                                                            <button type="submit" id="btnEmergency" class="my-btn" value="SaveEmergencyDetail" onclick="return isValidEmergencyInfo();" name="Command">Submit</button>
                                                            <button tabindex="17" class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                            <input type="hidden" id="EmegencyId" name="EmegencyId" value="" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="modal fade" id="RestrcitedModel" role="dialog">
                                    <div class="modal-dialog income-popup width-auto">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3 id="Restrictedheading" class="text-center">Add Restricted<span class="extra-title muted"></span></h3>
                                            </div>
                                            <div class="control-group">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                        <div class="add-useragform">

                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>First Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Rfirstname, new { placeholder = "First Name", id = "Rfirstname", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Last Name <sup>*</sup></label>
                                                                    @Html.TextBoxFor(m => m.Rlastname, new { placeholder = "Last Name", id = "Rlastname", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Notes </label>
                                                                    @Html.TextBoxFor(m => m.RDescription, new { placeholder = "Notes", id = "RDescription", maxlength = "50", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Attach Profile Picture </label>
                                                                    @Html.TextBoxFor(m => m.RAvatar, new { id = "RAvatar", Name = "RAvatar", @accept = "image/*", @capture = "camera", type = "file", onchange = "ValidateSingleInput(this)", @class = "form-control" })
                                                                    <div class="img-iconavt">
                                                                        <img alt="" id="imgRAvatar" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.RAvatarUrl)' style="border-style:none;" />
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="btnwrp_subcal">
                                                            <button type="submit" id="btnRestricted" class="my-btn" value="SaveRestrictedData" name="Command" onclick="return isValidRestrictedInfo();">Submit</button>
                                                            <button tabindex="17" class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                            <input type="hidden" name="RestrictedId" id="RestrictedId" value="0">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                @Html.Partial("~/Views/Partialviews/EnrollmentStatusChangePartial.cshtml")




                                @*<div class="modal fade" id="ChangeclientStatus" role="dialog">
                                        <div class="modal-dialog income-popup width-auto">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h3 class="text-center">Change Status<span class="extra-title muted"></span></h3>
                                                </div>
                                                <div class="control-group">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main*">
                                                            <div class="add-useragform">

                                                                <div class="col-sm-12">
                                                                    <fieldset style="border: 1px solid #295b8f; ">
                                                                        <legend class="legend1"></legend>
                                                                        <div class="col-sm-9">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;">Name</label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <label style="width: 100%; font-size: 15px; color: #337ab7;" id="ClientNameAll"></label>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;">Current Status</label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <label style="width: 100%; font-size: 15px; color: #337ab7;" id="lblCurrentStatus"></label>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;">New Status</label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <label style="width: 100%; font-size: 15px; color: #337ab7;" id="lblNewStatus"></label>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9" style="margin-bottom:1%;">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;">Reason<sup>*</sup></label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <select id="ddlreason" style="width:100%;" onchange="Showreason(this);" class="form-control">
                                                                                    <option>Others</option>
                                                                                </select>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9" style="margin-bottom:1%;display:none;" id="Divreason">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;"></label>
                                                                            </div>
                                                                            <div class="col-sm-5">
                                                                                <textarea id="txtreason" placeholder="Reason" class="form-control"></textarea>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-9" style="margin-bottom:1%;display:none;" id="Divwaitinglist">
                                                                            <div class="col-sm-3">
                                                                                <label style="width:100%;">Place on Waiting List<sup>*</sup></label>
                                                                            </div>
                                                                            <div class="col-sm-5" id="rblwaitinglist">
                                                                                <div>
                                                                                    <label class="radio-inline">
                                                                                        <input data-val="true" id="rdWaintingList" name="waitinglist" tabindex="22" type="radio" value="1">                                                            <span>Yes</span>
                                                                                    </label>
                                                                                </div>
                                                                                <div>
                                                                                    <label class="radio-inline">
                                                                                        <input id="rdWaintingList" name="waitinglist" tabindex="23" type="radio" value="0">
                                                                                        <span>No  </span>
                                                                                    </label>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                    </fieldset>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                            <div class="btnwrp_subcal">
                                                                <button type="button" class="my-btn" onclick="return isValidChangestatus();">Submit</button>
                                                                <button tabindex="17" class="my-btn" data-dismiss="modal" type="button">Exit</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                            </form>

                            <div class="modal fade" id="matrix_addn2" role="dialog">
                                <input type="hidden" id="centerId" />
                                <input type="hidden" id="clsRoomId" />
                                <input type="hidden" id="centerName" />
                                <input type="hidden" id="clsRoomName" />
                                <input type="hidden" id="hDateTime" value="" />
                                <input type="hidden" id="hChildID" />
                                <div class="modal-dialog modal-dialog-ch">

                                    <!-- Modal content-->
                                    <div class="modal-content">

                                        <div class="modal-body">
                                            <button type="button" class="close" data-dismiss="modal"><img src="~/Content/CaseNote/images/close.png" /></button>
                                            <h2>Center / Classroom Change</h2>
                                            <div class="max_items_addn popup-addn-scroll">
                                                <div class="addn_sep_boder">
                                                    <h3>Center / Classroom</h3>
                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Date of Move<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <input class="form-control ui-autocomplete-input txt-date mandatory" type="text" id="txtDateOfChange" placeholder="MM/DD/YYYY" value="">
                                                                <input type="hidden" class="hdn-casenoteid" />
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Date of move is required</span>
                                                                    <span class="err-date-message">Invalid date</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Center Name<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <select id="Centers" style="height:40px !important;" class="form-control mandatory clsCenters"></select>
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Center name is required</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Classroom Name<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <select id="ddClassroom" style="height:40px !important;" class="form-control mandatory clsClassRooms"></select>
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Classroom name is required</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Total Seat Availability</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1" style="padding-top:10px;">
                                                                <div>
                                                                    <p style="background: #87e3ae;border: none;width: auto;display: none;color:#000;" id="ptotalSeats" class="">
                                                                        <span id="spnClassName"></span>
                                                                        <span>(Open Seats - </span>
                                                                        <span id="spnAvailableCount"></span>
                                                                        <span>)</span>

                                                                    </p>
                                                                </div>
                                                                <div>
                                                                    <span class="errorAvailableSeat" style="display:  none; color: red; font-size:12px;">Seats not available. Please select other classroom</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Reason<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <div>
                                                                    <select id="changeClassReason" style="width:100%;" onchange="ShowChangeClassReason(this);" class="form-control mandatory">
                                                                        <option value="0">--Select--</option>

                                                                        @if (Model._ChangeReasonList.Count() > 0)
                                                                        {
                                                                            foreach (var reason in Model._ChangeReasonList)
                                                                            {
                                                                                <option value="@reason.Value">@reason.Reason</option>
                                                                            }
                                                                            <option value="-1">Others</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="-1">Others</option>
                                                                        }

                                                                    </select>
                                                                    <div class="err-container irr-error">
                                                                        <span class="err-message">Reason is required</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 addn-al" style="margin-bottom:1%;display:none;" id="DivChangeClassReason">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>New Reason<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <div>
                                                                    <textarea id="txtChangeClassReason" placeholder="Reason" class="form-control" style="height:50px !important"></textarea>
                                                                    <div class="err-container irr-error">
                                                                        <span class="err-message">New Reason is required</span>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="addn_sep_boder addn_sep_casenote">
                                                    <h3>Case Note</h3>
                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Date<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <input class="form-control ui-autocomplete-input txt-date mandatory" type="text" id="txtCaseNoteDate" placeholder="MM/DD/YYYY" value="@DateTime.Now.ToString("MM/dd/yyy")">
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Date is required</span>
                                                                    <span class="err-date-message">Invalid date</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Title<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <input type="text" maxlength="100" id="CaseNotetitle" name="CaseNotetitle" class="mandatory form-control ui-autocomplete-input">
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Title is required</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Note<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <textarea id="Note" name="Note">  </textarea>
                                                                <div class="err-container irr-error">
                                                                    <span class="err-casenote-note">Note is required</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Clients</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1 ClientDiv">

                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Tags<span class="error-notify">*</span></label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1">
                                                                <input type="text" id="CaseNotetags" name="CaseNotetags mandatory" class="form-control" />
                                                                <div class="err-container irr-error">
                                                                    <span class="err-message">Tag is required</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>




                                                    <div class="col-xs-12 addn-al" style="padding: 0;">
                                                        <div class="col-sm-4">
                                                            <div class="addn-poup-div">
                                                                <label>Developmental Team</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <div class="addn-poup-div1 StaffDiv">

                                                                @if (TempData["UserList"] != null)
                                                                {
                                                                    foreach (var item1 in ((List<FingerprintsModel.RosterNew.User>)TempData["UserList"]))
                                                                    {
                                                                        <div class="col-sm-12"><input type="checkbox" name="TeamIds.IDS" value="@item1.Id" /><span> @item1.Name</span></div>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 bdr-popup"></div>
                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                <div class="Status-title-addn btn-save-note" style="text-align: right;">
                                                    <button type="button" id="SaveNoteSubmit" style="background:#2ecc71;" class="my-btn pull-right">Save</button>
                                                    <button type="button" class="my-btn pull-right" data-dismiss="modal" style="background:#db4437;">Exit</button>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>



                            <!-- Modal -->
                            <div id="showDentalModal" class="modal fade" role="dialog">
                                <div class="modal-dialog">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            @*<h4 class="modal-title">Modal Header</h4>*@
                                        </div>
                                        <div class="modal-body">


                                            <strong>Has pregnant mother had a professional dental exam since last year's PIR?</strong>
                                            <input type="hidden" id="pregID" />
                                            <div id="DentalServicesID" style="text-align:center;margin-top:20px;">
                                                <div class="radio radio-info">
                                                    <input type="radio" name="DentalServicesradio" value="1">
                                                    <label>Yes</label>
                                                </div>
                                                <div class="radio radio-info">
                                                    <input type="radio" name="DentalServicesradio" value="0">
                                                    <label>No</label>
                                                </div>

                                                <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                    <span class="err-message err-message-ms">Medical services is required</span>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-success" onclick="updateDentalQuestion(this);">Accept</button>
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>

                                </div>
                            </div>


                            @using (Html.BeginForm("CaseNotesclient", "Roster", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <div class="modal fade scroll-modal in" id="ModalAddCasenote" role="dialog" aria-hidden="false" style="display: none;">
                                    <div class="modal-dialog modal-dialog-ch">
                                        <div class="modal-content">
                                            <div class="modal-body">
                                                <button type="button" class="close" data-dismiss="modal"><img src="/Content/CaseNote/images/close.png"></button>
                                                <h2 id="CaseNoteHeading" class="extra-title muted">List of Case Note</h2>
                                                <div class="col-sm-12 col-xs-12 pull-right" style="padding-right:0;display:none;">
                                                    <div class="btnwrp_subcal" style="padding:0; margin:0;">
                                                        <h3 id="CaseNoteTitle" class="text-center pull-left"><span class="extra-title muted"></span></h3>

                                                        <input id="CN_ClientId" type="hidden" name="ClientId" />
                                                        <input id="CN_CenterId" type="hidden" name="CenterId" />
                                                        <input id="CN_ProgramId" type="hidden" name="ProgramId" />
                                                        <input id="CN_HouseHoldId" type="hidden" name="HouseHoldId" value="@Model.Encrypthouseholid" />
                                                        <input id="CN_CaseNoteid" type="hidden" name="CasenoteId" value="0" />
                                                        <input id="Mode" type="hidden" name="Mode" value="3" />

                                                        <div class="clear"></div>
                                                    </div>
                                                </div>
                                                <div class="max_items_addn popup-addn-scroll">
                                                    <div class="col-xs-12 search-section">

                                                        <div class="col-sm-6 col-xs-12 no-padding searchhousehold" style="display:none;">
                                                            <label>Search by Household Members</label>
                                                            <select class="form-control" id="selHouseholdList">
                                                                <option value="0"> Select Household  </option>
                                                                @if (Model._Clist != null && Model._Clist.Count > 0)
                                                                {
                                                                    foreach (var item in Model._Clist)
                                                                    {
                                                                        <option centerid="@item.CenterId" householdid="@Model.HouseholdId" value="@item.ChildId"> @item.Cfirstname  </option>
                                                                    }
                                                                }
                                                                @if (Model.ParentID != 0)
                                                                {

                                                                    <option value="@Model.ParentID"> @Model.Pfirstname   </option>

                                                                }
                                                                @if (Model.ParentID1 != 0)
                                                                {
                                                                    <option value="@Model.ParentID1"> @Model.P1firstname </option>
                                                                }
                                                                @if (Model._Olist != null && Model._Olist.Count > 0)
                                                                {
                                                                    foreach (var item in Model._Olist)
                                                                    {
                                                                        <option value="@item.OthersId"> @item.Ofirstname  </option>
                                                                    }
                                                                }
                                                            </select>
                                                            <div class="addn-search-btn btn-search">
                                                                <a href="#" householdid="@Model.HouseholdId" onclick="LoadCasenoteDetails(this);">Search</a>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 no-padding searchtags">

                                                            <div class="icefu_form table-headfix" style="overflow-y: hidden;">
                                                                <table id="settab_edu" class="table table-responsive table-headfix fold-table">
                                                                    <thead>
                                                                        <tr>
                                                                            <th style="text-align:left!important;width:30%!important;">Tag Count</th>
                                                                            <th style="text-align:left!important;">List of Tags</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>

                                                                        @*<tr class="view" onclick="accessRole.CarouselOpen(this)">

                                                                            <td enc-id="rr">Area Manager</td>
                                                                            <td class="deve-td">
                                                                                <div class="tag-radio-btn">

                                                                                    <div class="radio radio-info">
                                                                                        <input type="radio" name="InsType" id="MedicareInsurance" class="InsuranceType" value="1">
                                                                                        <label>Medicare / Chip</label>
                                                                                    </div>

                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="input_smtmarg" style="">
                                                                            <td colspan="2" style="background-color: #163b69;">
                                                                                <div class="sub_table_icc">
                                                                                    <table class="table table-bordered table-responsive">
                                                                                        <thead>
                                                                                            <tr>
                                                                                                <th></th>
                                                                                                <th style="text-align: center !important;">
                                                                                                    <input name="" onchange="CheckAll(this,0)" class="edu_next selectall0" type="checkbox"><label>Select all</label>
                                                                                                </th>
                                                                                            </tr>
                                                                                        </thead>
                                                                                        <tbody>
                                                                                            <tr>

                                                                                                <td>Fingerprints Demo (Alternate Role)</td>
                                                                                                <td>
                                                                                                    <input type="checkbox" class="edu_next user0" checked="checked" name="Role[0].UserList[0].IsAllow" value="true">
                                                                                                </td>

                                                                                            </tr>
                                                                                        
                                                                                            <tr>
                                                                                                <td colspan="2" style="text-align: right;">
                                                                                                    <button class="btn btn-success" type="button" onclick="updateHousehold();">Submit</button>
                                                                                                </td>
                                                                                            </tr>

                                                                                        </tbody>
                                                                                    </table>
                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="view" onclick="accessRole.CarouselOpen(this)">

                                                                            <td enc-id="rr">Billing Manager</td>
                                                                            <td class="deve-td">
                                                                                <div class="tag-radio-btn">

                                                                                    <div class="radio radio-info">
                                                                                        <input type="radio" name="InsType" id="MedicareInsurance" class="InsuranceType" value="1">
                                                                                        <label>Medicare / Chip</label>
                                                                                    </div>

                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="input_smtmarg">
                                                                            <td colspan="2" style="background-color:#163b69;">
                                                                                <div class="sub_table_icc">
                                                                                    <table class="table table-bordered table-responsive">
                                                                                        <thead>
                                                                                            <tr>
                                                                                                <th></th>
                                                                                                <th style="text-align: center !important;">
                                                                                                    <input name="" onchange="accessRole.CheckAll(this,1)" class="edu_next selectall1" type="checkbox"><label>Select all</label>
                                                                                                </th>
                                                                                            </tr>
                                                                                        </thead>
                                                                                        <tbody>
                                                                                            <tr>
                                                                                                <td>Aravind Adhi</td>
                                                                                                <td>

                                                                                                    <input type="checkbox" class="edu_next user1" name="Role[1].UserList[0].IsAllow" value="true">


                                                                                                    <input type="hidden" class="edu_next" name="Role[1].UserList[0].RoleId">
                                                                                                    <input type="hidden" class="edu_next" name="Role[1].UserList[0].UserId" value="8ae86fcc-17e8-4864-969c-3453c7e1efc0">
                                                                                                </td>

                                                                                            </tr>
                                                                                            <tr>

                                                                                                <td>Thavamani Murugesan</td>
                                                                                                <td>

                                                                                                    <input type="checkbox" class="edu_next user1" name="Role[1].UserList[1].IsAllow" value="true">


                                                                                                    <input type="hidden" class="edu_next" name="Role[1].UserList[1].RoleId">
                                                                                                    <input type="hidden" class="edu_next" name="Role[1].UserList[1].UserId" value="b63db1a0-35ca-448c-84fc-625f7b7f24f2">
                                                                                                </td>

                                                                                            </tr>
                                                                                            <tr>
                                                                                                <td colspan="2" style="text-align: right;">
                                                                                                    <button class="btn btn-success" type="button" onclick="updateHousehold();">Submit</button>
                                                                                                </td>
                                                                                            </tr>
                                                                                        </tbody>
                                                                                    </table>
                                                                                </div>
                                                                            </td>
                                                                        </tr>*@
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                   
                                                        </div>

                                                    </div>
                                                    <h2 class="page-header page-header-change" style="border-bottom:2px solid #f9c751!important;margin:8px 0 12px !important;color:#1b5c96;font-size:20px;" id="tablebottom">
                                                        <i class="fa fa-table" aria-hidden="true"></i><span class="spnHeading" style="padding-left: 10px;">List of Case Notes</span>
                                                    </h2>
                                                    <div class="col-sm-12 no-padding block-div" style="background: #f1f5f8;border-radius: 5px;padding:0px;padding-bottom:0;overflow: hidden;">
                                                        <div id="no-more-tables7" class="col-xs-12 no-padding">
                                                            <table class="col-md-12 table-striped table-condensed cf table-change addn-table">
                                                                <thead class="scroll-thead">
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Title</th>
                                                                        <th>By</th>
                                                                        <th>Attachments</th>
                                                                        <th>References</th>
                                                                        <th>Action</th>

                                                                    </tr>
                                                                </thead>
                                                                <tbody class="addn-table-head scroll-tbody">
                                                                    <tr><td colspan="5"><div style="margin-top: 10px;">No Record Found</div></td></tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12" id="divCNDetails">

                                                        <div class="col-xs-12 case-info">
                                                            <h2 class="page-header page-header-change" style="border-bottom:2px solid #f9c751!important;margin:8px 0 12px !important;color:#1b5c96;font-size:20px;">
                                                                <i class="fa fa-book" aria-hidden="true"></i><span class="spnHeading" style="padding-left: 10px;">Case Note</span>
                                                            </h2>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Date <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <input type="text" id="New_CaseNoteDate" name="CaseNoteDate" onblur="CheckCaseNotedate(this);" placeholder="MM/DD/YYYY" class="form-control ui-autocomplete-input casenote-date">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Title <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <input type="text" maxlength="100" id="New_CaseNotetitle" name="CaseNotetitle" class="form-control ui-autocomplete-input">
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Note <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <textarea id="New_Note" name="Note" style="visibility: hidden; display: none;"></textarea>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Appended Notes </label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8 sub-notes-details">

                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Clients  <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8" style="padding: 0;">
                                                                    <div class="case-note New_ClientDiv">


                                                                    </div>
                                                                </div>
                                                                <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                    <div class="col-sm-4">
                                                                        <div class="addn-poup-div">
                                                                            <label>Tags <sup style="color:red">*</sup> </label>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-8">
                                                                        <div class="addn-poup-div1">

                                                                            <input type="text" id="New_CaseNotetags" name="CaseNotetags" class="form-control" />

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-xs-12 addn-al" style="padding: 0;">

                                                                    <div class="col-sm-12 adddivspace">
                                                                        <div class="col-sm-4">
                                                                            <div class="addn-poup-div">
                                                                                <label>Developmental Team</label>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-8" id="New_Divstaff" style="padding: 0;">
                                                                            <div class="New_StaffDiv">


                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                    <div class="col-sm-4">
                                                                        <div class="addn-poup-div">
                                                                            <label>Secure Note Level?</label>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-8">
                                                                        <div class="addn-poup-div1">
                                                                            <input type="checkbox" id="New_CaseNoteSecurity" value="true" name="CaseNoteSecurity" style="margin-left:5px;">
                                                                            <span>Yes</span>
                                                                        </div>
                                                                    </div>
                                                                </div>


                                                                <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                    <div class="col-xs-12 col-sm-12 adddivspace" id="statusattachmentsDiv">
                                                                        <div class="col-lg-4 col-xs-5" style="padding-left: 0;">
                                                                            <div class="enroll-sec" style="padding-left: 0;width: 100%;">
                                                                                <div class="transition-content-desc" style="position: relative;">
                                                                                    <p style="background: none;border: none;color: #163b69;font-size: 18px;text-align: right;font-weight: 400;margin-top: 5px;margin-bottom: 3px;width: 100%;">Attachment</p>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-lg-8 col-sm-7">
                                                                            <div class="col-sm-7 col-lg-6 no-padding">
                                                                                <input type="file" id="FirstFile" name="Attachments[0].file" class="form-control">
                                                                            </div>
                                                                            <div class="col-sm-3 col-lg-3 adddivspace response-addicspace">

                                                                                <a href="javascript:void(0)" id="Attachmectstag" title="Add Attachment" onclick="addMoreStatusAtt1(this);"><i class="fa fa-plus-circle"></i>&nbsp;Add</a>

                                                                            </div>
                                                                        </div>

                                                                        <div class="col-xs-12 col-lg-12" id="New_addAttachmentDiv" style="margin-left:33%">

                                                                    </div>

                                                                </div>

                                                                    <div id="Attachments" style="display:none;">
                                                                        <div class="col-sm-12 adddivspace" style="padding: 0;">
                                                                            <div class="col-sm-4">
                                                                                <div class="addn-poup-div">
                                                                                    <label>Download Attachment</label>
                                                                                </div>
                                                                            </div>
                                                                            <div id="New_Attach" class="col-sm-8 adddivspace">


                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 bdr-popup"></div>
                                                        <div class="col-xs-12" style="margin-top:10px;margin-bottom:15px;">
                                                            <div class="btnwrp_subcal" style="padding:0; margin:0;">
                                                                <button type="submit" id="SaveNoteSubmit" onclick="return Validatecasenote();" class="my-btn pull-right" style="background:#2ecc71;">Save</button>
                                                                <button type="button" class="my-btn pull-right" data-dismiss="modal" style="background:#db4437;">Exit</button>
                                                            </div>
                                                        </div>
                                                    </div>


                                                        <div class="col-xs-12 subcase-info" style="display:none;">
                                                            <h2 class="page-header page-header-change" style="border-bottom:2px solid #f9c751!important;margin:8px 0 12px !important;color:#1b5c96;font-size:20px;">
                                                                <i class="fa fa-book" aria-hidden="true"></i><span class="spnHeading" style="padding-left: 10px;">Append Case Note</span>
                                                            </h2>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Date <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <input class="form-control ui-autocomplete-input casenote-date subcasenoteDate" id="txtSubCaseNote" onblur="CheckCaseNotedate(this);" type="text" placeholder="MM/DD/YYYY" value="@DateTime.Now.ToString("MM/dd/yyyy")">
                                                                        <input type="hidden" class="hdn-casenoteid" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Name of the Staff <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <input class="form-control ui-autocomplete-input txt-name" readonly="readonly" type="text" placeholder="Enter the name" value="@Session["FullName"].ToString()">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Role <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <input class="form-control ui-autocomplete-input txt-role" type="text" readonly="readonly" placeholder="Enter the role" value="@ViewBag.Role">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Original Notes  <sup style="color:red">*</sup></label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8">
                                                                    <div class="addn-poup-div1">
                                                                        <div id="mainnotes" name="mainnotes" class="form-control ui-autocomplete-input txt-main-note" readonly="readonly" style="height:100px;overflow:auto;"></div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="col-sm-4">
                                                                    <div class="addn-poup-div">
                                                                        <label>Appended Notes  </label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-8 sub-notes-details">

                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 addn-al" style="padding: 0;">
                                                            <div class="col-sm-4">
                                                                <div class="addn-poup-div">
                                                                    <label>Append Notes <sup style="color:red">*</sup> </label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-8">
                                                                <div class="addn-poup-div1">
                                                                    <textarea id="subnotes" name="subnotes" class="form-control ui-autocomplete-input txt-note"></textarea>

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 addn-al" style="padding: 0;">
                                                            <div class="col-sm-4">
                                                                <div class="addn-poup-div">
                                                                    <label>Append Tags </label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-8">
                                                                <div class="addn-poup-div1">
                                                                    <input type="text" id="AppendCaseNotetags" name="AppendCaseNotetags" class="form-control ui-autocomplete-input" />

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 addn-al" style="padding: 0;">
                                                            <div class="col-sm-4">
                                                                <div class="addn-poup-div">
                                                                    <label>Attachment</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-8" style="text-align: left;">

                                                                <div class="brow_option">

                                                                    <div class="attachments-conatiner">

                                                                            <div class="form-group" style="margin-bottom:10px!important;">
                                                                                <div style="width:87%;display:inline-block;">
                                                                                    <input type="file" name="img[]" onchange="ShowFileName(this);" class="file fileAttachments" style="display:none;">
                                                                                    <div class="input-group col-xs-12">
                                                                                        <input type="text" class="form-control input-lg" disabled placeholder="Upload File">
                                                                                        <span class="input-group-btn">
                                                                                            <button class="browse btn btn-primary input-lg" style="height: 33px !important;" onclick="BrowseFile(this);" type="button"> Browse</button>

                                                                                        </span>
                                                                                    </div>
                                                                                </div>
                                                                                <div class="AddAttachments" onclick="AddAttachments();" style="width:auto;display:inline-block;vertical-align: top;">
                                                                                    <a href="javascript:void(0);" class="upl">
                                                                                        <img src="~/Content/EducationMaterial/images/upload.png" class="AddAttachments-1" style="border-radius: 5px;width: 40px;" />
                                                                                    </a>
                                                                                </div>
                                                                            </div>
                                                                            <div class="attachments-conatiner-append"></div>



                                                                    </div>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 bdr-popup"></div>
                                                            <div class="col-xs-12 addn-al" style="padding: 0;">
                                                                <div class="Status-title-addn btn-save-note" onclick="SaveSubnotes();" style="text-align: right;">
                                                                    <a style="margin-top: 0;text-transform: uppercase;margin: 0;cursor:pointer;width: auto;display: inline-block;padding: 7px 15px;margin-right: 10px;line-height:22px;">
                                                                        Save
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @*<script>
                                    $(".note-click").click(function () {
                                        if ($(".case-info").is(":hidden")) {
                                            $(".case-info").slideDown("slow");
                                        }
                                        else {
                                            $(".case-info").slideUp("slow");
                                        }
                                    });
                                    $(".note-click").click(function () {
                                        if ($(".subcase-info").is(":hidden")) {
                                            $(".subcase-info").slideDown("slow");
                                        } else {
                                            $(".subcase-info").slideUp("slow");
                                        }
                                    });
                                </script>*@



                            @{
                                Html.RenderPartial(Url.Content("~/Views/Partialviews/_FileInput_CameraUploadPartial.cshtml"));
                            }

}

