@{
    ViewBag.Title = "Staff Role Mapping";
    if (FingerprintsModel.StaffDetails.GetInstance().AgencyId == null)
    {

        Layout = "~/Views/Shared/SuperAdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/AgencyAdminLayout.cshtml";
    }
}

@model FingerprintsModel.StaffRoleMapping


@section MainContentHolder{
    <link href="~/Content/Select2-3.5.3/select2.css" rel="stylesheet" />
    <style type="text/css">

                        .staffrole-div {
                             display:inline-block;
                             padding:20px 0;
                                 height: 210px;
                    overflow-y: auto;background:#fff;
                        margin-top: 20px;
                           width:80%;
                           font-weight:bold;
                        }
                        .staffrole-div-label{width:190px!important;}
                        .page-wrapper-change,
                        #page-wrapper/*for superadmin layout*/
                         {
                    background-image: url(../../Images/body-bg.jpg);
                    background: url(../../Images/body-bg.jpg) center no-repeat #000 !important;
                    background-size: cover !important;
                    background-position: 100% 100% !important;
                }
                      .page-header {
                    border-bottom: 4px solid #f9c751 !important;
                    color: #fff;
                }
                        .add-useragform label{color:#fff;}
                        .table-bg-content
                        {
                                 width: 100%;
                    float: left;
                    margin-top: 0px;
                  /*  background-color: #f1f5f8;*/
                  background:#fff;
                    border-radius: 7px;
                    margin-bottom: 20px;
                    padding: 20px;
                    padding-bottom: 0;
                        }
                        .table-bg-content table thead tr {
                    background-color: #9B58B4;
                    color: #fff;
                }
                       .table-bg-content table tbody td {
                    color: #397ab7;
                    text-align: center;
                    font-weight: 600;
                }
                       .badge-text{    border-radius: 0px;
                    background: #1f5684;}

                       .divCenterList input.edu_next[type="checkbox"] {
            float: left;
        }
                input.edu_next[type="checkbox"]::before {
                    content: "";
                    position: absolute;
                    width: 15px;
                    height: 15px;
                    background-color: #fff;
                    border: 1px solid #174472;
                    left: 0px;
                }

                input.edu_next[type="checkbox"] {
                    position: relative;
                    outline: none;
                    margin-right: 10px;width:auto!important;
                }

                    input.edu_next[type="checkbox"]:checked::after {
                        content: "\2713";
                        position: absolute;
                        color: #449d44;
                        font-size: 15px;
                        font-weight: 600;
                        border-color: #449d44;
                        top: -3px;
                        left: 1px;
                    }


                    @@media (min-width: 992px) and (max-width: 1199px)
            {
                         .add-useragform .staffrole-div-label{width: 138px!important;}
                                 .add-useragform input[type="checkbox"]{width:auto!important;display:inline-block!important;}
                    }

                       @@media (min-width: 768px) and (max-width: 991px)
                       {
               .add-useragform label {
            width: 100% !important;margin-top:20px;
        }
               .staffrole-div{ width: 100% !important;}
                         /* Force table to not be like tables anymore */
                    #no-more-tables6 table,
                    #no-more-tables6 thead,
                    #no-more-tables6 tbody,
                    #no-more-tables6 th,
                    #no-more-tables6 td,
                    #no-more-tables6 tr {
                        display: block;
                        padding-left: 0;
                        padding-right: 0;
                    }

                    /* Hide table headers (but not display: none;, for accessibility) */
                    #no-more-tables6 thead tr {
                        position: absolute;
                        top: -9999px;
                        left: -9999px;
                    }

                    #no-more-tables6 tr {padding-top:10px;}

                    #no-more-tables6 td {
                        /* Behave  like a "row" */
                        border: none;
                        border-bottom: 1px solid #eee;
                        position: relative;
                        padding-left: 25%;
                        white-space: normal;
                        text-align:left;
                    }

                    #no-more-tables6 td:before {
                        /* Now like a table header */
                        position: absolute;
                        /* Top/left values mimic padding */
                        top: 6px;
                        left: 6px;
                        width: 45%;
                        padding-right: 10px;
                        white-space: nowrap;
                        text-align:left;
                        font-weight: bold;
                    }

                    /*
                    Label the data
                    */
                    #no-more-tables6 td:before { content: attr(data-title); }
                     }

                .select2-container {
                    width:300px;

                }
                .select2-choice {
                 height:35px !important;
                }



    </style>


    <div class="row">
        <div class="col-lg-12">
            <h2 class="page-header">
                Staff Role Mapping
            </h2>
        </div>
    </div>

    @{


    }

    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
            @*<form method="post" role="form" id="form1" autocomplete="off">*@
            <div class="add-useragform">

                @if (Session["RoleId"].ToString() == "f87b4a71-f0a8-43c3-aea7-267e5e37a59d") {  @*For Super Admin*@

                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12 mb10">
                        <div class="form-group">
                            <label for="DdlYakkrList" style="font-weight:bold;">Select Agency</label>
                            <input type="text" id="searchAgency-slct2" />
                        </div>
                    </div>
                </div>

                }
                <div class="row" id="mg-row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label for="DdlYakkrList" style="font-weight:bold;">Manager Role</label>

                            <select name="MangerRole" id="mangrole-drop">
                                @*<option value="0">--Select Role --</option>*@
                                @for (int i = 0; i < Model.RolesList.Count; i++)
                                {
                                    //if (Model.RolesList[i].RoleName.Contains("Manager"))
                                    //{
                                    @*<option @(Model.RolesList[i].RoleId == "944d3851-75cc-41e9-b600-3fa904cf951f" ? "selected" :"") value="@Model.RolesList[i].RoleId">@Model.RolesList[i].RoleName</option>*@
                                    <option @(i == 0 ? "selected" : "") value="@Model.RolesList[i].RoleId">@Model.RolesList[i].RoleName</option>
                                    // }
                                }

                            </select>



                        </div>
                    </div>
                </div>


                <div class="row mb20" id="staffrole-row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <label for="DdlYakkrList" class="staffrole-div-label" style="font-weight:bold;margin-top:20px;">Staff Roles</label>
                            <div class="staffrole-div">



                                @*@foreach (var item in Model.RolesList)
                                    {
                                        if (!item.RoleName.Contains("Manager"))
                                        {
                                            <p>
                                                <input type="checkbox" class="staffrole-check" value="@item.RoleId" />
                                                @item.RoleName
                                            </p>
                                        }
                                    }*@


                            </div>


                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top:20px;" id="btn-row">

                    <div class="col-lg-6 col-lg-offset-4">

                        <button class="btn btn-success" type="button" id="submit-roles" style="background-color: #449d44;border-color: #398439;border-radius: 0;text-transform:uppercase;margin-right: 10px;">Submit</button>
                        <button class="btn btn-info" type="button" id="clearrole-btn" style="background-color: #ac2925;border-color: #761c19;border-radius: 0;text-transform:uppercase;">Clear</button>
                    </div>
                </div>


                <div id="mg-role-table">
                    <div class="row">
                        <div class="col-lg-12">
                            <h2 class="page-header">
                                Manager Role List @if (Session["RoleId"].ToString() == "f87b4a71-f0a8-43c3-aea7-267e5e37a59d") {
                                <span id="agency-text"></span>
                                }
                            </h2>
                        </div>
                    </div>

                    <div class="row col-xs-12">
                        <div class="col-xs-12 table-bg-content">
                            <div class="col-xs-12" style="padding:0;">
                                <table class="table table-responsive table-bordered table-striped" id="mgrole-table">
                                    <thead>
                                        <tr>
                                            <th>Manager</th>
                                            <th style="max-width:800px;">Staff Role</th>
                                            @*<th>Action</th>*@
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var item in Model.ManagerRoleTableList) {
                                        <tr>
                                            <td data-title="Manager Role">
                                                @item.RoleName
                                            </td>
                                            <td data-title="Staff Role" style="max-width:800px;text-align:left;">
                                                @if (item.StaffRoles.Count > 0)
                                                                                  {
                                                                                  foreach (var staff in @item.StaffRoles)
                                                                                  {
                                                                                <span class="badge badge-text">@staff.RoleName</span>
                                                                                  }
                                                                                  }
                                                                                  else {
                                                                                <span>No Staff Role Assigned</span>
                                                                                  }

                                            </td>

                                        </tr>

                                                                      }


                                    </tbody>

                                </table>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
            @*</form>*@

        </div>
    </div>


}


@section Script{

    <script src="~/Content/Select2-3.5.3/select2.js"></script>
    <script type="text/javascript">

        var _SRMObj = {
            agencyId: "@(Session["AgencyID"] == null ? "" :Session["AgencyID"].ToString())",
            init: function () {
                var self = this;
                self.initEvents();
                //self.refreshManagerTable();

            },
            initEvents: function () {
                var self = this;

                @if (Session["RoleId"].ToString() == "f87b4a71-f0a8-43c3-aea7-267e5e37a59d") { @*SuperAdmin*@
                            <text>
                $("#staffrole-row, #mg-row, #btn-row, #mg-role-table").css("display", "none");
                </text>
                        }

                @if (Session["RoleId"].ToString() != "f87b4a71-f0a8-43c3-aea7-267e5e37a59d")
                  { @*Agency Admin*@
                              <text>
                var _initMRole = $("#mangrole-drop").val();
                if (_initMRole != '0') {
                    self.getStaffRoleListByMangRoleId(_initMRole, self.agencyId);
                }
                </text>
}

                $(document).on("click", "#clearrole-btn", function (e) {
                    $('#spinner').show();
                    self.getStaffRoleListByMangRoleId($("#mangrole-drop").val(), _SRMObj.agencyId);
                });

                //$(document).on("change", "#mangrole-drop", function (e) {

                //    var _mgRole = $(this).val();

                //    if (_mgRole == '0') return false;

                //    self.getStaffRoleListByMangRoleId(_mgRole)


                //});

                $(document).on("click", "#submit-roles", function (e) {

                    var _mgRole = $("#mangrole-drop").val();

                    if (_mgRole == '0') return false;

                    var _staffRoleIDs = [];

                    $('.staffrole-check').each(function (i, ele) {
                        if (ele.checked) {
                            _staffRoleIDs.push(ele.value);
                        }

                    })

                    self.insertStaffRoles(_mgRole, _staffRoleIDs);

                });


                $("#mangrole-drop").select2({
                    // placeholder: "Select a State"
                }).on("change", function (e) {
                    //var _mgRole = $(this).val();

                    // if (_mgRole == '0') return false;

                    self.getStaffRoleListByMangRoleId(e.val, self.agencyId);

                });

                $("#searchAgency-slct2").select2({
                    placeholder: "Select Agency",
                    minimumInputLength: 1,
                    ajax: {
                        url: "@Url.Action("AutoCompleteAgency", "SuperAdmin")",
                        dataType: 'json',
                        quietMillis: 250,
                        data: function (term, page) {


                            return {
                                term: term, Active: "1"


                            };
                        },
                        results: function (data, page) {

                            var selectAr = [];
                            if (data.length) {

                                data.forEach(function (obj) {
                                    selectAr.push({ id: obj.AgencyId, text: obj.AgencyName });
                                });

                            }

                            return { results: selectAr };

                        },
                        cache: true
                    },
                    initSelection: function (element, callback) {

                    },
                }).on("change", function (e) {
                    //console.log(e);
                    if (e.val) {
                        self.agencyId = e.val; //set agency id for super Admin
                        $("#mg-row, #staffrole-row, #btn-row, #mg-role-table").slideDown();
                        $("#agency-text").html('<span><i>of </i>' + e.added.text + '</span>')
                    }

                    $("#mangrole-drop").select2("val", $("#mangrole-drop option")[0].value);
                    var mgRole = $("#mangrole-drop").select2("val");
                    if (e.val && mgRole) {
                        self.getStaffRoleListByMangRoleId(mgRole, e.val);
                    }

                    //self.refreshManagerTable(self.agencyId);

                });


            },
            insertStaffRoles: function (mgRoleId, staffroleids, type) {
                $('#spinner').show(); //hide on after refreshManagerTable
                $.ajax({
                    dataType: 'json',
                    type: "POST",
                    url: '@Url.Action("UpdateStaffRoleMapping", "Agency")?mRoleId=' + mgRoleId + '&agencyId=' + _SRMObj.agencyId,
                    contentType: "application/json;",
                    data: JSON.stringify({ staffRoleIds: staffroleids }),
                    success: function (data) {
                        console.log(data);
                        if (data) {
                            // _SRMObj.refreshManagerTable(_SRMObj.agencyId);

                            if (data.hasOwnProperty("ManagerRoleTableList")) {
                                _SRMObj.renderManagerTable(data.ManagerRoleTableList);
                            }
                        }
                    },
                    fail: function (res) {

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }

                });


            },
            refreshManagerTable: function (agencyid) {
                $("#mgrole-table tbody").html("");
                $.ajax({
                    dataType: 'json',
                    type: "GET",
                    url: '@Url.Action("GetManagerRoleMapList", "Agency")?agencyId=' + agencyid,
                    contentType: "application/json;",
                    success: function (data) {
                        if (data && data.length) {
                            data.forEach(function (obj, i) {

                                var _row = '<tr>'; var _staffroleStr = "";
                                _row += '<td data-title="Manager Role">' + obj.RoleName + '</td>';
                                if (obj.StaffRoles && obj.StaffRoles.length) {
                                    obj.StaffRoles.forEach(function (sRobj, k) {
                                        _staffroleStr += '<span class="badge badge-text" style="margin-right:5px;">' + sRobj.RoleName + '</span>';
                                    });
                                }
                                _staffroleStr = _staffroleStr == "" ? "No Staff Role Assigned" : _staffroleStr;
                                _row += '<td data-title="Staff Role" style="max-width:800px;text-align:left;">' + _staffroleStr + '</td>'

                                $("#mgrole-table tbody").append(_row);
                            });

                        }
                        $('#spinner').hide();
                    },
                    fail: function (data) {

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }

                });

            },
            renderManagerTable: function (data) {


                if (data && data.length) {
                    $("#mgrole-table tbody").html("");
                    data.forEach(function (obj, i) {

                        var _row = '<tr>'; var _staffroleStr = "";
                        _row += '<td data-title="Manager Role">' + obj.RoleName + '</td>';
                        if (obj.StaffRoles && obj.StaffRoles.length) {
                            obj.StaffRoles.forEach(function (sRobj, k) {
                                _staffroleStr += '<span class="badge badge-text" style="margin-right:5px;">' + sRobj.RoleName + '</span>';
                            });
                        }
                        _staffroleStr = _staffroleStr == "" ? "No Staff Role Assigned" : _staffroleStr;
                        _row += '<td data-title="Staff Role" style="max-width:800px;text-align:left;">' + _staffroleStr + '</td>'

                        $("#mgrole-table tbody").append(_row);
                    });

                }

            },
            getStaffRoleListByMangRoleId: function (mgRoleId, agencyId) {

                $.ajax({
                    dataType: 'json',
                    type: "GET",
                    url: '@Url.Action("GetStaffRoleList", "Agency")?mRoleId=' + mgRoleId + '&agencyId=' + agencyId,
                    contentType: "application/json;",
                    success: function (data) {
                        console.log(data);
                        $(".staffrole-div").html('');
                        if (data.hasOwnProperty("RolesList") && data.RolesList.length) {

                            data.RolesList.forEach(function (obj, i) {
                                if (obj.RoleName.search("Manager") != -1 || obj.RoleName.search("Parent") != -1 ||
                              obj.RoleName.search("Super Admin") != -1 || obj.RoleName.search("Agency Admin") != -1
                                    || obj.RoleName == "Executive" || obj.RoleName == "GenesisEarth Administrator") return false;
                                var _chekbx = "";
                                var _checked = obj.Checked ? "checked" : "";
                                _chekbx += '<p class="col-lg-4 col-sm-6">  <input type="checkbox" class="staffrole-check edu_next RolesList" ' + _checked + ' value="' + obj.RoleId + '" />'
                                    + '' + obj.RoleName + '</p>';

                                $(".staffrole-div").append(_chekbx);
                            })


                        }

                        if (data.hasOwnProperty("ManagerRoleTableList")) {
                            _SRMObj.renderManagerTable(data.ManagerRoleTableList);
                        }

                        $('#spinner').hide();
                    },
                    fail: function (res) {

                    }

                });

            },
        };


        $(document).ready(function () {
            _SRMObj.init();
        });

    </script>
}
