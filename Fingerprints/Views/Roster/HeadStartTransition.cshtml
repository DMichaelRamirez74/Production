@model FingerprintsModel.Transition

@{
    ViewBag.Title = "HeadStartTransition";
    Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";


}

@section Style{

    <link href="~/Content/css/Transition.css" rel="stylesheet" />
    <style type="text/css">
        #transition-start-div {
            display: none;
        }

        strong.pir-Q-lbl {
            min-height: 60px;
            float: left;
        }

        @@media only screen and (min-width:768px) and (max-width:1200px) {
            .title-fixed {
                position: static;
                padding-left: 0;
            }

            strong.pir-Q-lbl {
                min-height: 0px;
                float: left;
            }

            .protype-solid span textarea {
                height: 50px;
                width: 100% !important;
            }

            .protype-solid span {
                width: 55% !important;
                float: left;
            }

            .protype-solid label {
                width: 45% !important;
                float: left;
            }

                .protype-solid label input {
                    width: 30px !important;
                    float: left;
                }
        }

        .edu-protextarea.edu_new_child textarea {
            width: 54%;
            margin-right: 15px;
        }

        .edu_new_child span {
            margin-top: 13px;
            float: left;
        }

        .parent-solid .protype-solid label input {
            margin-right: 8px;
        }

        label.ed-primary-color {
            color: #163b69;
        }

        .edu-boxmade label {
            color: #163b69 !important;
            font-weight: 300;
        }

        .edu-protextarea textarea {
            width: 65%;
            float: left;
            height: 60px;
            margin-bottom: 15px;
            max-width: 65%;
        }

        .protype-solid span textarea {
            height: 50px;
            width: 60%;
        }

        .protype-solid {
            width: 100%;
            float: left;
            margin-bottom: 15px;
        }

            .protype-solid label {
                width: 30%;
                float: left;
            }

            .protype-solid span {
                width: 70%;
                float: left;
            }












        .m-tp {
            margin-bottom: 5px;
        }

        .addapplicant2 {
            font-size: 20px;
            font-weight: bold;
            border-bottom: 2px solid #295b8f;
            color: #295b8f;
            padding: 15px 0;
            margin: 0 15px;
        }

        #page-wrapper {
            padding-left: 0;
            padding-right: 0;
        }

        .no-padding {
            padding: 0;
        }

        .right-side-container-ch {
            width: 100%;
            float: left;
            background: url('../../Images/body-bg.jpg') center no-repeat;
            background-size: cover;
            min-height: 689px;
        }

        .error-notify {
            position: relative;
            display: inline-block;
            vertical-align: top;
            color: red;
            font-size: 13px;
            margin-left: 2px;
            font-weight: bold;
        }

        .transition-inner .form-control {
            background: #fff;
            border: 1px solid #e7e7e7;
            padding: 10px 10px;
            color: #163b69;
            text-align: left;
            font-size: 15px;
            margin: 0;
            text-transform: none;
            width: 100%;
            float: left;
            height: 43px;
            box-shadow: none;
            border-radius: 0;
        }

        .err-container, irr-error {
            width: 100%;
            float: left;
            margin: 6px 0;
        }

        .err-message {
            display: none;
            color: red;
            font-size: 12px;
            margin: 6px;
            height: 10px;
        }
    </style>



}

@section Script{


    <script>

        var flags = 0;

        function getFormattedDate(date) {
            date = new Date(date);
            var year = date.getFullYear();

            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            return month + '/' + day + '/' + year;
        }

        function getTagsOnInput() {
            var tagInp = $('#status_CaseNotetags').val();
            var tagsArr = [];
            $.ajax({

                url: '/Roster/GetCaseNoteTagonInput',
                datatype: 'json',
                type: 'post',
                async: true,
                data: { searchText: tagInp },
                success: function (data) {
                    if (data != null) {
                        if (data.length > 0) {
                            $.each(data, function (i, tags) {
                                tagsArr.push(tags.Text);
                            });
                        }
                    }
                },
                error: function (data) {

                }

            });

            return tagsArr;
        }

        function uncheckdata() {
            if ($('#NONE').prop("checked")) {
                $('#TANF').prop("checked", false);
                $('#SSI').prop("checked", false);
                $('#WIC').prop("checked", false);
                $('#SNAP').prop("checked", false);
                //  $('#OGendermale').prop("checked", false);

            }
        }
        function uncheckdataNone() {




            if (($('#TANF').prop("checked")) || ($('#SSI').prop("checked")) || ($('#WIC').prop("checked")) || ($('#SNAP').prop("checked"))) {
                $('#NONE').prop("checked", false);

                //  $('#OGendermale').prop("checked", false);

            }

        }

        function RedirectToDashboard() {
            location.href = '/Roster/Roster';
        }



        function validatedateChild(inputTextObject) {

            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {

                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {

                    return true;
                }
                else {


                    return false;
                }

            }

        }

        function bindTransitionCaseNoteDetails() {

            var seleValue = $('#ddTransitioningType').val();
            var noteField = '';
            var caseNoteTag = '';
            var caseNoteTitle = '';
            var center = '';
            var classroom = '';


            if (CKEDITOR.instances['CaseNoteDetails_Note']) {
                CKEDITOR.instances['CaseNoteDetails_Note'].destroy(true);
            }




            $('#status_CaseNotetags').tagsInput({
                width: 'auto',
                height: 'auto',
                delimiter: [',', ';'],
                autocomplete: {
                    //'source': tags_array[0].split(/,\s*/)
                    'source': getTagsOnInput()
                },
                autocomplete_url: '',
            });

            switch (seleValue) {

                case '1':
                    center = $('#Centers option:selected').text() == '-Select Center-' ? '' : $('#Centers option:selected').text();
                    classroom = $('#Classroom option:selected').text() == '--Select classroom--' ? '' : $('#Classroom option:selected').text().split('(')[0];
                    noteField += "<div class='col-xs-12'><b>Transition to OUR Head Start Program</b></div>";


                    caseNoteTitle = "Transition to OUR Head Start Program";
                    caseNoteTag = 'Transition OUR HS,,;';

                    break;

                case '2':
                    noteField += "<div class='col-xs-12'><b>Transition to ANOTHER Head Start Program</b></div>";
                    caseNoteTitle = "Transition to ANOTHER Head Start Program";
                    caseNoteTag = 'Transition ANOTHER HS,,;';

                    break;

                case '3':
                    noteField += "<div class='col-xs-12'><b>Transition to OTHER Childhood Program</b></div>";
                    caseNoteTitle = "Transition to OTHER Childhood Program";
                    caseNoteTag = 'Transition OTHER,,;';

                    break;

                case '4':
                    noteField += "<div class='col-xs-12'><b>Transition to not enter into another Childhood Program</b></div>";
                    caseNoteTitle = "Transition to not enter into another Childhood Program";
                    caseNoteTag = 'Transition NOT CHILDHOOD,,;';
                    break;

                case '5':
                    noteField += "<div class='col-xs-12'><b>Not Returning</b></div>";
                    caseNoteTitle = "Not Returning to the program";
                    caseNoteTag = 'Not Returning,,;';
                    break;

                case '6':
                    noteField += "<div class='col-xs-12'><b>Transition to Kindergarden</b></div>";
                    caseNoteTitle = "Transition to kindergarden";
                    caseNoteTag = 'Kindergarden Transition,,;';
                    break;
                case '7':
                    noteField += "<div class='col-xs-12'><b>Transition to OUR Early Head Start Program</b></div>";
                    caseNoteTitle = "Enroll in OUR Early Head Start Program";
                    caseNoteTag = 'Transition OUR EHS,,;';
                    break;

                case '8':
                    noteField += "<div class='col-xs-12'><b>Transition to ANOTHER Early Head Start Program</b></div>";
                    caseNoteTitle = "Enroll in ANOTHER Early Head Start Program";
                    caseNoteTag = 'Transition ANOTHER EHS,,;';
                    break;




            }


            if (seleValue != '0') {

                $('#CaseNoteDetails_Note').val(noteField);

                $('#transitionCaseNotetitle').val(caseNoteTitle);
                $('#status_CaseNotetags').importTags(caseNoteTag);
                CKEDITOR.replace('CaseNoteDetails_Note', {
                    language: 'en-gb',
                    uiColor: '#295b8f',
                    disableNativeSpellChecker: false
                });
            }
        }

        function ValidateInput() {

            var isValid = true;
            debugger
            $('.errorAvailableSeat').hide();

            //$('.mandatory').each(function () {
            //    if ($(this).val() == "") {
            //        $(this).closest('div').find('.err-message').show();
            //        if (isValid)
            //            isValid = false;
            //    }
            //    if ($(this).hasClass('txt-date') && $(this).val()=="") {
            //        $(this).closest('div').find('.err-message').text("Transition date is required.");
            //        $(this).closest('div').find('.err-message').show();
            //        if (isValid)
            //            isValid = false;
            //    }
            //    if ($(this).hasClass('txt-date') && !validatedateChild(this)) {
            //        $(this).closest('div').find('.err-message').text("Invalid transition date");
            //        $(this).closest('div').find('.err-message').show();
            //        if (isValid)
            //            isValid = false;
            //    }

            //    if ($('.errorAvailableSeat').is(":visible") == true)
            //    {
            //        if (isValid)
            //            isValid = false;
            //    }


            //    if ($(this).hasClass('txt-date') && $(this).val() != "") {

            //        var transitionDate = new Date($(this).val());
            //        var todayDate = new Date();

            //        if (transitionDate > todayDate) {
            //            $(this).closest('div').find('.err-message').text("Transition date must be less than future date.");
            //            $(this).closest('div').find('.err-message').show();
            //            if (isValid)
            //                isValid = false;

            //        }
            //    }

            //    if ($(this).hasClass('clsTransitioningType') && $(this).val() == "0") {
            //        $(this).closest('div').find('.err-message').show();

            //        if (isValid)
            //            isValid = false;
            //    }

            //    if ($(this).hasClass('clsTransitioningType') && $(this).val() == "1") {

            //        if (($('#Centers').val() == "0" || $('#Centers').val() == "")) {
            //            $('#Centers').closest('div').find('.err-message').show();

            //            if (isValid)
            //                isValid = false;
            //        }

            //        if (($('#Classroom').val() == "0" || $('#Classroom').val() == "" || $('#Classroom').val() == null)) {
            //            $('#Classroom').closest('div').find('.err-message').show();

            //            if (isValid)
            //                isValid = false;
            //        }

            //    }



            //});


            //$('.transition-section').each(function () {

            //    //err - message - ehs
            //    if ($(this).find('input[name="InsType"]:checked').length == 0) {
            //        customAlert("Insurance type is required");

            //        if (isValid)
            //            isValid = false;
            //    }
            //    if ($(this).find('input[name="InsType"]:checked').length > 0) {
            //        $(this).find('.err-message-instype').hide();
            //        if ($(this).find('input[name="InsType"]:checked').val() == "C3D1" && $('#OtherInsuranceType').val() == "") {

            //               customAlert("Other insurance type is required");

            //                if (isValid)
            //                    isValid = false;
            //        }

            //    }

            //    if ($(this).find('input[name="ms"]:checked').length == 0) {
            //        $(this).find('.err-message-ms').show();
            //        if (isValid)
            //            isValid = false;
            //    }
            //    if ($(this).find('input[name="ds"]:checked').length == 0) {
            //        $(this).find('.err-message-ds').show();
            //        if (isValid)
            //            isValid = false;
            //    }
            //});

            //$('.err-message-instype').text("");
            //$('.err-message-instype').hide();


            return isValid;
        }

        function addMoreStatusAtt(ele) {
            var index = $(ele).closest('#section_attachment').parent('div').find('.houseless-attach').length;



            var appendDiv = '<div class="col-lg-9 col-sm-7 no-padding adddivspace">\
                                                   <div class="col-sm-7 col-lg-8 no-padding">\
                                                       <input type="file" id="FirstFile" name="Attachments[0].file" onchange="ValidateSingleInputpdf2(this)" class="form-control">\
                                                   </div>\
                                                   <div class="col-sm-3 col-lg-3 adddivspace">\
                                                       <a href="javascript:void(0)"  title="Remove Attachment" onclick="removeStatusAtt(this);"><i class="fa fa-minus-circle"></i>&nbsp;Remove</a>\
                                                   </div>\
                                               </div>';

            $(ele).parent('div').parent('div').siblings("#addAttachmentDiv").append(appendDiv);


        }


        function removeStatusAtt(ele) {
            $(ele).parent('div').parent('div').remove();
        }


        function checkStatusChangeDate(value) {



            isValid = true;
            if (!$(value).attr("readonly")) {

                if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                    var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                    var regex = new RegExp(dateformat);
                    if (!regex.test($(value).val())) {
                        customAlert("Invalid date format. ");
                        $(value).val('');
                        return false;
                    }
                    else {
                        var text = $(value).val();
                        var comp = text.split('/');
                        var m = parseInt(comp[0], 10);
                        var d = parseInt(comp[1], 10);
                        var y = parseInt(comp[2], 10);
                        var date = new Date(y, m - 1, d);
                        if (date.getFullYear() == y && date.getMonth() + 1 == m && date.getDate() == d) {

                        } else {
                            customAlert("Invalid date. ");
                            $(value).val('');
                            return false;
                        }



                    }
                }
                var txtdate = $(value).val();
                var selectedTimestampequal = new Date();
                var year = selectedTimestampequal.getFullYear();
                var month = selectedTimestampequal.getMonth() + 1;
                var day = selectedTimestampequal.getDate();
                today1 = month + '/' + day + '/' + year;
                var newinput = today1.split("/");
                var newday = newinput[1];
                var str = newday.substr(0, 1);
                var newdaynew = ('0' + newday).slice(-2);
                var newmonth = newinput[0];
                var str1 = newmonth.substr(0, 1);
                var newmonthnew = ('0' + newmonth).slice(-2);
                today = newmonthnew + '/' + newdaynew + '/' + year;
                if (today == txtdate) {
                    return true;
                }
                var testdatelocalinput = new Date(txtdate);
                var selectedTimestamp = new Date().getTime();
                var testdatelocalinputTS = testdatelocalinput.getTime();
                var timestamp = new Date().getTime() - (30 * 24 * 60 * 60 * 1000)
                if (testdatelocalinputTS > selectedTimestamp) {
                    customAlert("Case Note date must be less than or equal to today's date.");
                    $(value).val('');
                    return false;
                }
                else if (timestamp > testdatelocalinputTS) {
                    customAlert("Case Note date cannot be less than 30 days from today's date.");
                    $(value).val('');
                    return false;
                }
            }
            return true;
        }


        $(document).ready(function () {

            //  getList();


            $('#returningDiv').css('background-color', '');

            $('#btnTransOk').on('click', function () {

                //if ($('input[name=Returning]').length > 0 && $('input[name=Returning]:checked').length == 0) {
                //    $('#returningDiv').css('background-color', 'pink');
                //    customAlert('Please select option for Client returning for next program year');
                //    return false;
                //}

                $('#transition-start-div').show();
            });

            $('#btnTansCancel').on('click', function () {
                $('#spinner').show();
                location.href = '' + HostedDir + "/Roster/Roster";
            });


            $('input[name=Returning]').on('change', function () {

                var returningValue = $(this, ':checked').val();
                debugger;
                $('#returningDiv').css('background-color', '');
                $.ajax({

                    url: HostedDir + "/Roster/UpdateReturningTransitionClient",
                    datatype: 'json',
                    type: 'post',
                    beforeSend: function () { $('#spinner').show(); },
                    data: { returnValue: returningValue, clientId: $('#EClientID').val() },
                    success: function (data) {
                        $('#spinner').hide();

                        if (data) {
                            customAlert('Record updated successfully');
                        }
                        else {
                            customAlert('Some Error Occured.Please,try again later');
                        }
                    },
                    error: function (data) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }

                });

            });


            $('input[name=EHSHSEnrolled]').on('change', function () {
                var transType = parseInt($('#transType_hide').val());

                $('#divEHSProgramType,#divHSProgramType').hide();

                $('.divClassRoomName').find('#Classroom').find('option').remove().end();

                $('.divCenter').find('#Centers').val('0');

                $('.divCenter,.divClassRoomName').hide('slow');


                if ($(this).val() == '1') {

                    if (transType == 1) {



                        $('#ddTransitioningType').children('option[value=1]').hide();
                        $('#ddTransitioningType').children('option[value=2]').hide();





                        $('#ddTransitioningType').children('option[value=7]').show();
                        $('#ddTransitioningType').children('option[value=8]').show();



                        $('#ddTransitioningType').find('option[value=7]').insertAfter($('#ddTransitioningType').find('option[value=0]'));
                        $('#ddTransitioningType').find('option[value=8]').insertAfter($('#ddTransitioningType').find('option[value=7]'));





                        // $('#divEHSProgramType').find('#ehsProgramTypeRadioDiv').find('input:radio[name=radioEHSProgram]').prop('checked', false);
                        // $('#divEHSProgramType').show('slow');

                        // $('#insurancequestionDiv').hide();
                    }
                }

                else if ($(this).val() == '2') {

                    if (transType == 1) {

                        // $('#divHSProgramType').find('#hsProgramTypeRadioDiv').find('input:radio[name=radioHSProgram]').prop('checked', false);
                        // $('#divHSProgramType').show('slow');

                        //  $('#insurancequestionDiv').show();

                        $('#ddTransitioningType').children('option[value=7]').hide();
                        $('#ddTransitioningType').children('option[value=8]').hide();

                        $('#ddTransitioningType').children('option[value=1]').show();
                        $('#ddTransitioningType').children('option[value=2]').show();


                        $('#ddTransitioningType').children('option[value=1]').insertAfter($('#ddTransitioningType').find('option[value=0]'));
                        $('#ddTransitioningType').children('option[value=2]').insertAfter($('#ddTransitioningType').find('option[value=1]'));


                    }
                }

                $('#ddTransitioningType').val('0');

                $('#divTransitionType').show('slow');


            });


            $('body').on("change keyup", ".mandatory", function () {
                if ($(this).closest('div').find('.err-message').is(':visible'))
                    $(this).closest('div').find('.err-message').hide();
                cleanValidation();

            });

            $('body').on("change keyup", "#OtherInsuranceType", function () {
                $('.err-message-instype').text("");
                $('.err-message-instype').hide();
                cleanValidation();

            });

            $("body").on('keyup', '.txt-date', function (e) {

                flags = 0;
                if (e.keyCode != 193 && e.keyCode != 111) {
                    if (e.keyCode != 8) {
                        if ($(this).val().length == 2) {
                            $(this).val($(this).val() + "/");
                        } else if ($(this).val().length == 5) {
                            $(this).val($(this).val() + "/");
                        }
                    } else {
                        var temp = $(this).val();
                        if ($(this).val().length == 5) {
                            $(this).val(temp.substring(0, 4));
                        } else if ($(this).val().length == 2) {
                            $(this).val(temp.substring(0, 1));
                        }
                    }
                } else {
                    var temp = $(this).val();
                    var tam = $(this).val().length;
                    $(this).val(temp.substring(0, tam - 1));
                }


            });



            $('body').on("keydown", "#datecompleted,.txt-date", function (e) {
                flags++;
                if (flags > 1) {
                    e.preventDefault();
                }

                //var regex = /^[0-9]*(?:\.\d{1,2})?$/;


                //if( !regex.test(e.value) ) {
                //    return false;
                //}

                var key = e.charCode || e.keyCode || 0;

                // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
                // home, end, period, and numpad decimal
                return (key == 8 || key == 9 || key == 13 || key == 46 || key == 37 || key == 39 ||
                    key == 35 || key == 36 || key == 110 || key == 190 || key == 191 ||
                   (key >= 96 && key <= 111 || key >= 48 && key <= 57 && !e.shiftKey));
                //(e.which == keyCode.ENTER)


                var owner = this,
              pps = owner.properties,
              charCode = e.which || e.keyCode || e.charCode || 0;

                // hit backspace when last character is delimiter

                if (Util.isAndroid() &&
                    e.target.value.length &&
                    e.target.value.length === this._lastEventValue.length - 1 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)
                ) {
                    e.charCode = 8;
                }
                if (e.charCode === 8 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)) {
                    pps.backspace = true;
                }
                else {
                    pps.backspace = false;
                }
                this._lastEventValue = e.target.value;

            });





            $('#submitTransition').click(function () {

                var caseNotDate = $('#transitionCaseNoteDate');
                var caseNoteTitle = $('#transitionCaseNotetitle');
                var Note = $('#CaseNoteDetails_Note');
                $('#ehsProgramTypeRadioDiv,#hsProgramTypeRadioDiv').css('background-color', '');

                var Tags = '';
                $('#status_CaseNotetags_tagsinput .tag span').each(function () {
                    Tags = Tags + $(this).text().trim() + ',';
                });

                $("#status_CaseNotetags").val(Tags);
                Tags = '';




                var isValid = true;
                if ($('#ddTransitioningType').val() == "0") {
                    isValid = false;
                    customAlert("Please select transitiontype.");
                    plainValidation('#ddTransitioningType');
                    return isValid;

                }


                if ($('#childEHSHSdiv').is(':visible')) {
                    if ($('input[name=EHSHSEnrolled]:checked').length == 0) {
                        isValid = false;
                        customAlert('Please select EHS or HS');
                        return isValid;
                    }
                }

                if ($('#divEHSProgramType').is(':visible')) {
                    if ($('#ehsProgramTypeRadioDiv').find('input[name=radioEHSProgram]:checked').length == 0) {
                        isValid = false;
                        customAlert('Please select EHS program type');
                        $('#ehsProgramTypeRadioDiv').css('background-color', 'pink');
                        $('#ehsProgramTypeRadioDiv').find('input[type=radio]')[0].focus();
                        return isValid;
                    }
                }

                if ($('#divHSProgramType').is(':visible')) {
                    if ($('#hsProgramTypeRadioDiv').find('input[name=radioHSProgram]:checked').length == 0) {
                        isValid = false;
                        customAlert('Please select HS program type');
                        $('#hsProgramTypeRadioDiv').css('background-color', 'pink');
                        $('#hsProgramTypeRadioDiv').find('input[type=radio]')[0].focus();
                        return isValid;
                    }
                }


                if (($('#transType_hide').val() == '7' || $('#transType_hide').val() == '8')) {
                    if ($('.divCenter').find('#Centers').val() == '0' || $('.divCenter').find('#Centers').val() == '') {
                        isValid = false;
                        customAlert('Please select center');
                        plainValidation('#Centers');
                        return isValid;
                    }
                    else if ($('.divClassRoomName').find('#Classroom').val() == '' || $('.divClassRoomName').find('#Classroom').val() == '0') {
                        isValid = false;
                        customAlert('Please select classroom');
                        plainValidation('#Classroom');
                        return isValid;
                    }
                }

                if ($('.errorAvailableSeat').is(":visible") == true && ($('#transType_hide').val() == '7' || $('#transType_hide').val() == '8')) {

                    customAlert('Seats are filled in this classroom. Please select another center or classroom');
                    plainValidation('#Classroom');
                    if (isValid)
                        isValid = false;

                    return isValid
                }



                if (caseNotDate.val() == '') {
                    isValid = false;
                    plainValidation(caseNotDate);
                    customAlert('Please enter Case Note Date');
                    return isValid;
                }

                if (caseNoteTitle.val() == '') {
                    isValid = false;
                    plainValidation(caseNoteTitle);
                    customAlert('Please enter Case Note Title');
                    return isValid;
                }

                if (Note.val().trim() == '') {
                    isValid = false;
                    customAlert("Please enter Note");
                    plainValidation(Note);
                    return isValid;
                }
                if ($('#statusclientsDiv').find('input[type=checkbox]:checked').length == 0) {
                    isValid = false;
                    customAlert('Please select Client(s)');
                    $('#statusclientsDiv').find('input[type=checkbox]')[0].focus();
                    return isValid;
                }

                if ($('#status_CaseNotetags').val().trim() == "") {
                    isValid = false;
                    customAlert("Tags are  required.");
                    plainValidation('#status_CaseNotetags');
                    return isValid;
                }
                if ($('#statusStaffDiv').find('input[type=checkbox]:checked').length == 0) {
                    isValid = false;
                    customAlert('Please select Development Staff(s)');
                    ('#statusStaffDiv').find('input[type=checkbox]')[0].focus();
                    return isValid;
                }





                if (isValid) {

                    var Transition = {};


                    Transition.DateOfTransition = $('#transitionDate').val();

                    Transition.TransitioningType = $('#ddTransitioningType').val();

                    Transition.Enc_CenterID = $('#Centers').val();
                    Transition.Enc_ClassroomID = $('#Classroom').val();

                    Transition.ChildInsuranceType = $('#InsuranceTypeID').children('div :last').find('.btn-accept').next('.fa-check').is(':visible') ? $('input[name=InsType]:checked').val() : null;
                    Transition.ChildOtherInsuranceTypeDesc = $('#InsuranceTypeID').children('div :last').find('.btn-accept').next('.fa-check').is(':visible') ? $('#OtherInsuranceType').val() : null;
                    Transition.MedicalHome = $('#MedicalHomeID').find('.btn-accept').next('.fa-check').is(':visible') ? $('input[name=MedicalHome]:checked').val() : null;

                    Transition.MedicalServices = $('#MedicalServicesID').children('.btn-accept').next('.fa-check').is(':visible') ? $('input[name=MedicalServices]:checked').val() : null;

                    Transition.DentalHome = $('#DentalHomeID').children('.btn-accept').next('.fa-check').is(':visible') ? $('input[name=DentalHome]:checked').val() : null;
                    Transition.DentalServices = $('#DentalServicesID').children('.btn-accept').next('.fa-check').is(':visible') ? $('input[name=DentalServices]:checked').val() : null;


                    Transition.ImmunizationService = $('#immunizationTypeDiv').find('#btnAcceptImmune').next('.fa-check').is(':visible') ? $('input[name=ImmunizationService]:checked').val() : null;

                    Transition.TANF = $('#statusServicesDiv').next('div').find('.fa-check').is(':visible') ? $('#TANF').is(':checked') : null;
                    Transition.SSI = $('#statusServicesDiv').next('div').find('.fa-check').is(':visible') ? $('#SSI').is(':checked') : null;
                    Transition.WIC = $('#statusServicesDiv').next('div').find('.fa-check').is(':visible') ? $('#WIC').is(':checked') : null;
                    Transition.SNAP = $('#statusServicesDiv').next('div').find('.fa-check').is(':visible') ? $('#SNAP').is(':checked') : null;
                    Transition.NONE = $('#statusServicesDiv').next('div').find('.fa-check').is(':visible') ? $('#NONE').is(':checked') : null

                    //father//
                    Transition.ParentID = ($('#ParentID').length > 0) ? $('#ParentID').val() : "";
                    Transition.ShoolAchievement = $('#EducationID').find('input[name=EduType]').length > 0 && $('#EducationID').find('input[name=EduType]:last').parent('div').siblings('#btnAcceptdegree').next('.fa-check').is(':visible') ? $('input[name=EduType]:checked').val() : null;
                    Transition.JobTrainingFinished = ($('#parentJobTrainingDiv').length > 0 && $('#parentJobTrainingDiv').find('#btnAcceptJobTraining').length > 0) ? $('#JobTrainingFinishedID').find('#btnAcceptJobTraining').next('.fa-check').is(':visible') ? $('input[name=JobTrainingFinished]:checked').val() : null : null;
                    Transition.AcceptJobTrainingFinished = ($('#parentJobTrainingDiv').length > 0 && $('#parentJobTrainingDiv').find('#btnAcceptJobTraining').length > 0) ? $('#JobTrainingFinishedID').find('#btnAcceptJobTraining').next('.fa-check').is(':visible') ? true : false : false;


                    //mother//
                    Transition.ParentID2 = ($('#ParentID2').length > 0) ? $('#ParentID2').val() : "";
                    Transition.ShoolAchievement2 = $('#EducationID').find('input[name=EduType2]').length > 0 && $('#EducationID').find('input[name=EduType2]:last').parent('div').siblings('#btnAcceptdegree2').next('.fa-check').is(':visible') ? $('input[name=EduType2]:checked').val() : null;
                    Transition.JobTrainingFinished2 = ($('#parentJobTrainingDiv').length > 0 && $('#parentJobTrainingDiv').find('#btnAcceptJobTraining2').length > 0) ? $('#JobTrainingFinishedID').find('#btnAcceptJobTraining2').next('.fa-check').is(':visible') ? $('input[name=JobTrainingFinished2]:checked').val() : null : null;
                    Transition.AcceptJobTrainingFinished2 = ($('#parentJobTrainingDiv').length > 0 && $('#parentJobTrainingDiv').find('#btnAcceptJobTraining2').length > 0) ? $('#JobTrainingFinishedID').find('#btnAcceptJobTraining2').next('.fa-check').is(':visible') ? true : false : false;






                    Transition.TypeOfTransition = parseInt($('#transType_hide').val());
                    Transition.EHSHSEnrolled = $('#childEHSHSdiv').is(':visible') ? $('#childEHSHSdiv').find('input[name=EHSHSEnrolled]').is(':checked') ? $('#childEHSHSdiv').find('input[name=EHSHSEnrolled]:checked').val() : 0 : 0;



                    // Transition.MedicalServices = $('#medicalservices:checked').val();
                    Transition.DentalCare = $('#isDental:checked').val();
                    Transition.TransProgramTypeID = '0';

                    if ($('#divHSProgramType').is(':visible')) {
                        Transition.TransProgramTypeID = $('#hsProgramTypeRadioDiv').find('input:radio[name=radioHSProgram]:checked').val();
                    }

                    else if ($("#divEHSProgramType").is(':visible')) {
                        Transition.TransProgramTypeID = $('#ehsProgramTypeRadioDiv').find('input:radio[name=radioEHSProgram]:checked').val();
                    }






                    var fileData = new FormData();


                    $('#statusattachmentsDiv').find('input[type=file]').each(function () {

                        var fileUpload = $(this).get(0);
                        var files = fileUpload.files;

                        // Create FormData object


                        // Looping over all files and add it to FormData object
                        for (var i = 0; i < files.length; i++) {
                            fileData.append(files[i].name, files[i]);
                        }
                    });


                    // Looping over all files and add it to FormData object


                    var clientList = [];

                    $('#statusclientsDiv').find('input[type=checkbox]:checked').each(function (n, cli) {
                        clientList.push({ 'Id': $(cli).val(), 'Name': $(cli).next('span').text() });

                    });
                    var userList = [];

                    $('#statusStaffDiv').find('input[type=checkbox]:checked').each(function (n, cli) {
                        userList.push({ 'Id': $(cli).val(), 'Name': $(cli).next('span').text() });
                    });


                    var Users = {

                        'Clientlist': clientList,
                        'UserList': userList
                    }



                    var casenotes = {};
                    casenotes.CaseNoteDate = caseNotDate.val();
                    casenotes.CaseNotetitle = caseNoteTitle.val();
                    casenotes.Note = Note.val();
                    casenotes.CaseNotetags = $("#status_CaseNotetags").val();
                    Transition.Users = Users;
                    casenotes.CaseNoteSecurity = $('#CaseNoteSecurity').is(':checked');
                    Transition.CaseNoteDetails = casenotes;
                    Transition.EClientID = $('#EClientID').val();
                    Transition.HouseholdId = $('#HouseholdId').val();
                    Transition.Enc_ProgID = $('#Enc_ProgID').val();

                    fileData.append('transition', JSON.stringify(Transition));
                    $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        url: '/Roster/SaveHeadStartTransition',
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function (data) {
                            if (data == 1 || data == 3) {
                                $("#lblSeatsAvailability").text("Record updated successfully.");
                                $('#SeatsAvailability').modal('show');
                            }
                            else if (data == 2) {
                                $("#lblSeatsAvailability").text("Seats not available");
                                $('#SeatsAvailability').modal('show');
                            }
                            else {
                                customAlert('Error Occured. Please, try again later.');
                            }
                        }
                    });
                }
                //}
            });


            //Bind Case Note Section//

            //Case Note Date//
            $('#transitionCaseNoteDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $('#transitionCaseNoteDate').val(getFormattedDate(new Date()));

            //Note sectopm
            if (CKEDITOR.instances['CaseNoteDetails_Note']) {
                CKEDITOR.instances['CaseNoteDetails_Note'].destroy(true);
            }


            CKEDITOR.replace('CaseNoteDetails_Note', {
                language: 'en-gb',
                uiColor: '#295b8f',
                disableNativeSpellChecker: false
            });

            $('#status_CaseNotetags').tagsInput({
                width: 'auto',
                height: 'auto',
                delimiter: [',', ';'],
                autocomplete: {
                    //'source': tags_array[0].split(/,\s*/)
                    'source': getTagsOnInput()
                },
                autocomplete_url: '',
            });

            $('#statusclientsDiv').find('input[type=checkbox]').prop('checked', true);

            $('input[name=staff-check]').prop('checked', true);

            //On change Of PIR Questions//

            $('input[name=InsType]').on('change', function () {
                debugger;
                if ($(this).val() == '3') {
                    $('#OtherInsuranceType').val('');
                    $('#OtherInsuranceType').parent('div').show();
                }
                else {

                    $('#OtherInsuranceType').val('');
                    $('#OtherInsuranceType').parent('div').hide();
                }

                $(this).closest('#InsuranceTypeID').find('.btn-accept').next('i').hide();

            });

            $('input[name=MedicalHome]').on('change', function () {


                $(this).closest('#MedicalHomeID').find('.btn-accept').next('i').hide();

            });

            $('input[name=MedicalServices]').on('change', function () {


                $(this).closest('#MedicalServicesID').children('.btn-accept').next('i').hide();

            });



            $('input[name=DentalHome]').on('change', function () {


                $(this).closest('#DentalHomeID').children('.btn-accept').next('i').hide();

            });

            $('input[name=DentalServices]').on('change', function () {

                $(this).closest('#DentalServicesID').children('.btn-accept').next('i').hide();

            });


            $('input[name=ImmunizationService]').on('change', function () {

                $(this).closest('#immunizationTypeDiv').find('.btn-accept').next('i').hide();

            });

            $('#statusServicesDiv').find('input[type=checkbox]').on('change', function () {

                $(this).closest('#statusServicesDiv').siblings('div').find('.btn-accept').next('i').hide();


            });

            $('input[name=EduType]').on('change', function () {
                $('#EducationID').find('#btnAcceptdegree').next('i').hide();
            });


            $('input[name=EduType2]').on('change', function () {
                $('#EducationID').find('#btnAcceptdegree2').next('i').hide();
            });





            $('input[name=JobTrainingFinished]').on('change', function () {

                $(this).parent('div').parent('div').next('#btnAcceptJobTraining').next('i').hide();
            });

            $('input[name=JobTrainingFinished2]').on('change', function () {

                $(this).parent('div').parent('div').next('#btnAcceptJobTraining2').next('i').hide();
            });


            $('.btn-accept').on('click', function () {
                debugger;
                var fa_check = $(this).next('i');
                cleanValidation();

                if ($(this).parent('div').parent('div').attr('id') == 'InsuranceTypeID') {

                    if ($('#InsuranceTypeID').find('input[name=InsType]:checked').length == 0) {
                        plainValidation('#OtherInsuranceType');
                        customAlert('Please Select Insurance Type');
                        return false;
                    }

                    if ($('#InsuranceTypeID').find('input[name=InsType]:checked').val() == '3' && $('#OtherInsuranceType').val() == '') {

                        plainValidation('#OtherInsuranceType');
                        customAlert('Please specify other insurance');
                        return false;
                    }
                }

                if (!fa_check.is(':visible')) {
                    fa_check.show();
                }

                return true;

            });














            //$(".transition-radio-btn input[name='InsType']").click(function () {
            //    $('.err-message-instype').text("");
            //    $('.err-message-instype').hide();
            //    $('#OtherInsuranceType').val("");
            //    if ($('.InsuranceType:checked').val() == "C3D1" && $('#OtherInsuranceType').val() == "") {
            //        $('.divInsType').show();
            //        $('.err-message-instype').text("Please enter the other insurance type");
            //        $('.err-message-instype').show();

            //    }

            //    else {
            //        $('.err-message-instype').text("");
            //        $('.err-message-instype').hide();
            //        $('.divInsType').hide();
            //    }

            //});



            $(".transition-radio-btn input[name='ms']").click(function () {

                $('.err-message-ms').hide();

                if ($('#medicalservices:checked').val() == "1") {
                    $('.divMedicalHome').show();
                }
                else {
                    $('.divMedicalHome').hide();
                }

            });



            $(".transition-radio-btn input[name='ds']").click(function () {

                $('.err-message-ds').hide();


            });

        });


        //function getList() {
        //    $.ajax({
        //        url: "/Roster/GetCenterByAgency",
        //        type: "POST",
        //        data: {
        //        },
        //        dataType: "json",
        //        secureuri: false,
        //        async: false,
        //        success: function (data) {
        //            if (data.list.Centers != null && data.list.Centers.length > 0) {
        //                var option = "";
        //                if ($('#Centers').find('option').length < 1) {
        //                    option = option + '<option value="' + 0 + '" >' + '--Select Center--' + '</option>';
        //                    for (var i = 0; i < data.list.Centers.length; i++) {
        //                        option = option + '<option value="' + data.list.Centers[i].CenterId + '">' + data.list.Centers[i].Name + '</option>';
        //                    }
        //                    $('#Centers').find('option').remove().end().append(option);
        //                    $('#Centers').val('');
        //                }
        //                $('#Centers').prop('selectedIndex', 0);
        //            }
        //        }
        //        , error: function (response) {
        //            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
        //        }
        //    });
        //}


        function GetClassrooms(Select) {
            $('.errorAvailableSeat').hide();
            $('#spnClassName').text('');
            $('#spnAvailableCount').text('0');
            $('#ptotalSeats').hide();
            var url = '';

            if ($('#transType_hide').val() == '7' || $('#transType_hide').val() == '8' || $('#centerPara').hasClass('ctr-required')) {
                url = HostedDir + "/AgencyUser/GetClassroomWithSeats";
            }
            else {
                url = HostedDir + "/Roster/Getclassrooms";
            }

            $.ajax({
                url: url,
                type: "POST",
                data: {
                    centerId: $(Select).val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var option = "";
                        option = option + '<option value="' + 0 + '" >' + '--Select classroom--' + '</option>';

                        for (var i = 0; i < response.length; i++) {
                            option = option + '<option value="' + response[i].Enc_ClassRoomId + '">' + response[i].ClassName + '</option>';
                        }
                        $('#Classroom').find('option').remove().end().append(option);
                        $('#Classroom').val('0');
                    }
                    else {
                        $('#Classroom').find('option').remove();
                    }

                    bindTransitionCaseNoteDetails();
                }
                   , error: function (response) {
                       customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                   }
            });
        }

        function GetAvailableSeatsByClass(Select) {
            $('.errorAvailableSeat').hide();
            $.ajax({
                url: HostedDir + "/Roster/GetAvailablitySeatsByClass",
                type: "POST",
                data: {
                    CenterId: $('#Centers').val(), ClassRoomId: $(Select).val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (data) {

                    //$('#spnClassName').text($('#Classroom option:selected').text());
                    $('#ptotalSeats').show();
                    var num = parseInt(data);
                    $('.divTotalSeatAvailability').show();
                    if (data == "" || data == "0" || (num < 0)) {
                        $('#spnAvailableCount').text(0);

                        $('.errorAvailableSeat').show();
                    }

                    else {
                        $('#spnAvailableCount').text(data);

                        bindTransitionCaseNoteDetails();
                    }

                }
                   , error: function (response) {
                       customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                   }
            });
        }

        function GetTransitioningType(select) {

            if ($('#transType_hide').val() != '1') {
                $('#childEHSHSdiv').hide();
                $('#childEHSHSdiv').find('input[type=radio]').prop('checked', false);
            }




            $('#divHSProgramType,#divEHSProgramType').hide('slow');
            $('#divHSProgramType,#divEHSProgramType').find('input[type=radio]').prop('checked', false);


            $('#hsProgramTypeRadioDiv,#ehsProgramTypeRadioDiv').css('background-color', '');

            var transType = $('#ddTransitioningType').val();
            var transMode = parseInt($('#transType_hide').val());
            if (transType == 0) {
                $('#Centers').val(0)
                $('#Classroom').text("")
                $('.errorAvailableSeat').hide();
                // $('.divTotalSeatAvailability').hide();
                $('.divCenter').hide();
                $('.divClassRoomName').hide();

            }
            else if (transType == 1 || transType == 7) {

                $('#spnClassName').text('');
                $('#spnAvailableCount').text('0');
                $('#ptotalSeats').hide();
                //  $('.divTotalSeatAvailability').show();
                $('.divCenter').show('slow');
                $('.divClassRoomName').show('slow');


                if (transMode <= 5) {


                    if (transType == 1) {
                        $('#divHSProgramType').show('slow');
                        if ($('#divHSProgramType').find('input:radio').length == 1) {
                            $('#divHSProgramType').find('input:radio').prop('checked', true);
                        }
                    }
                    else if (transType == 7) {
                        $('#divEHSProgramType').show('slow');
                        if ($('#divEHSProgramType').find('input:radio').length == 1) {
                            $('#divEHSProgramType').find('input:radio').prop('checked', true);
                        }
                    }
                }

                //commented on 06/21/2018
                //if (transMode == 1 || transMode == 7) {
                //    $('#childEHSHSdiv').find('input[type=radio]').prop('checked', false);
                //    $('#childEHSHSdiv').show();
                //}

                if (transMode == 7) {
                    $('#divHSProgramType').show('slow');
                    if ($('#divHSProgramType').find('input:radio').length == 1) {
                        $('#divHSProgramType').find('input:radio').prop('checked', true);
                    }
                }
                //else if (transMode == 4) {

                //    //$('#insurancequestionDiv').hide();
                //}

            }

            else if (transType == 2 || transType == 3 || transType == 4 || transType == 5) {

                $('#spnClassName').text('');
                $('#spnAvailableCount').text('0');
                $('#ptotalSeats').hide();
                //  $('.divTotalSeatAvailability').show();
                $('.divCenter').hide('slow');
                $('.divClassRoomName').hide('slow');
                // $('#insurancequestionDiv').show();
            }




            else if (transType == 6 || transType == 7 || transType == 8 || transType == 9) {

                // $('#insurancequestionDiv').show();
            }


            else {
                $('#Centers').val(0)
                $('#Classroom').text("")
                //  $('.divTotalSeatAvailability').hide();
                $('.divCenter').hide();
                $('.divClassRoomName').hide('slow');
            }

            bindTransitionCaseNoteDetails();
        }

    </script>


}


@section MainContentHolder{

    <div class="container-fluid">
        <div class="row">
            <div class="right-side-container-ch">
                <div class="col-xs-12 no-padding">
                    @*<div class="col-xs-12 top-header-background no-padding">
                            <div class="top-header" style="margin-top:20px;">
                                <div class="nav-icon1">
                                    <img src="images/nav-bar.png">
                                </div>
                                <div class="col-xs-12 no-padding">
                                    <div class="top-header-title-transportation">
                                        <h1>Early Head Start Transition</h1>
                                    </div>
                                </div>
                            </div>
                        </div>*@

                    <div class="col-xs-12" style="padding:0px 15px;margin-bottom:20px;">


                        <div class="col-lg-12">
                            <h2 class="page-header page-header-change" style="border-bottom:5px solid #f9c751!important;color:#fff;">
                                <i class="fa fa-group"></i> @(Model.ReferenceProgram == "EHS" ? "Early Head Start Transition" : "Head Start Transition")

                                <span class="view-btn backto_listspan">
                                    <a href="/Roster/Roster" style="padding:10px;float: right;color: #fff;margin-right:0px;background-color:#9b59b6;border-radius: 4px;text-decoration:none;" class="backto_list">Back To Roster</a>

                                </span>
                            </h2>
                        </div>


                    </div>


                    <div class="col-xs-12 no-padding">
                        <div class="col-xs-12 no-padding">
                            <div class="col-xs-12 transition-section" style="margin-left: 52px;">

                                <div class="col-xs-12" style="margin-bottom: 10px;">
                                    <div class="col-lg-5 col-xs-5">
                                        <div class="transition-content-desc" style="position: relative;">
                                            <p style="background:none;border:none;">Client</p>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-xs-7">
                                        <div class="transition-inner" style="position: relative;">
                                            <label class="ed-primary-color">@Model.Name</label>
                                            @* @Html.TextBoxFor(m => m.Name,new { @class="form-control",placeholder="Client Name",@readonly=true})*@
                                            @Html.HiddenFor(m => m.HouseholdId)
                                            @Html.HiddenFor(m => m.EClientID)
                                            @Html.HiddenFor(m => m.Enc_ProgID)
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xs-12" style="margin-bottom: 10px;">
                                    <div class="col-lg-5 col-xs-5">
                                        <div class="transition-content-desc" style="position: relative;">
                                            <p style="background:none;border:none;">@(Model.ReferenceProgram == "EHS" ? "Age" : "LDA Age") <i><strong> (as on @Model.SchoolDistrictDate) </strong></i></p>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-xs-7">
                                        <div class="transition-inner" style="position: relative;">
                                            <label class="ed-primary-color">@Model.LDAAge</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xs-12" style="margin-bottom: 10px;">
                                    <div class="col-lg-5 col-xs-5">
                                        <div class="transition-content-desc" style="position: relative;">
                                            <p style="background:none;border:none;">Program Type</p>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-xs-7">
                                        <div class="transition-inner" style="position: relative;">
                                            <label class="ed-primary-color">@Model.ReferenceProgram</label>
                                        </div>
                                    </div>
                                </div>

                                @if (Model.TypeOfTransition > 5 && Model.TypeOfTransition != 9)
                                {
                                    <div class="col-xs-12" style="margin-bottom: 10px;">
                                        <div class="col-lg-5 col-xs-5">
                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: none;border: none;"> Parent indicated<strong> @Model.Name</strong> will return next program year</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-radio-btn enroll-sec" id="returningDiv">

                                                <div class="radio radio-info">
                                                    @Html.RadioButtonFor(m => m.Returning, 1)
                                                    <label>Yes</label>
                                                </div>

                                                <div class="radio radio-info">
                                                    @Html.RadioButtonFor(m => m.Returning, 2)
                                                    <label>No</label>
                                                </div>

                                                <div class="radio radio-info">
                                                    @Html.RadioButtonFor(m => m.Returning, 3)
                                                    <label>Undecided</label>
                                                </div>

                                            </div>

                                        </div>
                                    </div>
                                }

                                <div class="col-xs-12" style="margin-bottom: 10px;">
                                    <div class="col-lg-5 col-xs-5">
                                        <div class="enroll-sec">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;"> Click OK to start transition</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-xs-7">
                                        <button type="button" class="btn btn-primary" id="btnTransOk">OK</button>

                                        <button type="button" class="btn btn-primary" id="btnTansCancel">Cancel</button>
                                    </div>
                                </div>


                                <div class="col-xs-12 col-lg-12" id="transition-start-div">


                                    <div class="col-xs-12" style="margin-bottom: 10px;">
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background:none;border:none;"> Date of Transition<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div style="position: relative;">
                                                <span class="transition-field-style"></span>
                                                <input type="text" maxlength="10" class="form-control txt-date mandatory" style="height: 40px;" id="transitionDate" placeholder="MM/DD/YYYY" value="@Model.DateOfTransition" />
                                                <div class="err-container irr-error">
                                                    <span class="err-message">Transition date is required</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-xs-12" id="childEHSHSdiv" @if (Model.TypeOfTransition != 1) { <text> style="display:none;" </text>   }>
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background:none;border:none;">Parent indicated <strong>@Model.Name</strong> will be enrolled to EHS or HS <span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-radio-btn enroll-sec">
                                                <div class="radio radio-info">
                                                    @Html.RadioButtonFor(m => m.EHSHSEnrolled, 1)
                                                    <label>EHS</label>
                                                </div>
                                                <div class="radio radio-info">
                                                    @Html.RadioButtonFor(m => m.EHSHSEnrolled, 2)
                                                    <label>HS</label>
                                                </div>

                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-xs-12" id="divTransitionType" @if (Model.TypeOfTransition == 1) { <text> style="display:none;" </text>   }>
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: none;border: none;">Transition Type<span class="error-notify">*</span></p>
                                                </div>
                                            </div>
                                        </div>




                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-inner" style="position: relative;">


                                                <input type="hidden" id="transType_hide" value="@Model.TypeOfTransition" />

                                                <select id="ddTransitioningType" onchange="GetTransitioningType(this);" style="height:45px !important;" class="form-control  mandatory clsTransitioningType">
                                                    <option value="0">--Select Transition Type--</option>


                                                    @if (Model.TypeOfTransition == 1)   //new program year EHS to HS or EHS to EHS// >=3 and <4
                                                    {

                                                        <option value="1">Enroll in “OUR” Head Start Program</option>
                                                        <option value="2">Enroll in “ANOTHER” Head Start Program</option>
                                                        <option value="3">Enrolled in “OTHER” Childhood Program</option>
                                                        <option value="4">Did not enter into another Childhood Program</option>
                                                        <option value="7">Enroll in “OUR” Early Head Start Program</option>
                                                        <option value="8">Enroll in “ANOTHER” Early Head Start Program</option>
                                                    }

                                                    @if (Model.TypeOfTransition == 7)  //elective transition From EHS //>=3 and <4
                                                    {
                                                        <option value="1">Enroll in “OUR” Head Start Program</option>
                                                    }

                                                    @if (Model.TypeOfTransition == 2 || Model.TypeOfTransition == 8)  //new program year manditory EHS to HS//
                                                    {
                                                        <option value="1">Enroll in “OUR” Head Start Program</option>
                                                        <option value="2">Enroll in “ANOTHER” Head Start Program</option>
                                                        <option value="3">Enrolled in “OTHER” Childhood Program</option>
                                                        <option value="4">Did not enter into another Childhood Program</option>
                                                    }


                                                    @if (Model.TypeOfTransition == 3) //Mandatory new program year back to EHS//<3
                                                    {
                                                        <option value="7">Enroll in “OUR” Early Head Start Program</option>
                                                        <option value="8">Enroll in “ANOTHER” Early Head Start Program</option>
                                                        <option value="3">Enrolled in “OTHER” Childhood Program</option>
                                                        <option value="4">Did not enter into another Childhood Program</option>
                                                    }


                                                    @if (Model.TypeOfTransition == 4) //New program year manditory TRAN from HS//
                                                    {
                                                        <option value="1">Enroll in “OUR” Head Start Program</option>
                                                        <option value="2">Enroll in “ANOTHER” Head Start Program</option>
                                                        <option value="3">Enrolled in “OTHER” Childhood Program</option>
                                                        <option value="4">Did not enter into another Childhood Program</option>
                                                    }

                                                    @if (Model.TypeOfTransition == 5) //Mandatory Transition from HS to Kindergarden >=5
                                                    {
                                                        <option value="1">Enroll in “OUR” Head Start Program</option>
                                                        <option value="6">Transition to Kindergarden</option>
                                                    }

                                                </select>

                                                <div class="err-container irr-error">
                                                    <span class="err-message">Transition type is required</span>
                                                </div>


                                            </div>
                                        </div>


                                    </div>


                                    <div class="col-xs-12" id="divEHSProgramType" style="margin-bottom: 10px;display:none;">
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: none;border: none;">Program Type (EHS) <span class="error-notify">*</span></p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-inner" style="position: relative;">


                                                <div class="transition-radio-btn enroll-sec margin-enroll" id="ehsProgramTypeRadioDiv" style="margin-left:0px;">

                                                    @for (int m = 0; m < Model.EHSPrograms.Count; m++)
                                                    {
                                                        <div class="col-xs-12 col-lg-6 no-padding">
                                                            <div class="radio radio-info">
                                                                <input type="radio" name="radioEHSProgram" id="radioEHS_@m" value="@Model.EHSPrograms[m].Value" />
                                                                <label for="radioEHS_@m">@Model.EHSPrograms[m].Text</label>
                                                            </div>
                                                        </div>
                                                    }

                                                </div>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-xs-12" id="divHSProgramType" style="margin-bottom: 10px;display:none;">
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: none;border: none;">Program Type (HS) <span class="error-notify">*</span></p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-inner" style="position: relative;">

                                                <div class="transition-radio-btn enroll-sec margin-enroll" id="hsProgramTypeRadioDiv" style="margin-left:0px;">

                                                    @for (int m = 0; m < Model.HSPrograms.Count; m++)
                                                    {
                                                        <div class="col-xs-12 col-lg-6 no-padding">
                                                            <div class="radio radio-info">
                                                                <input type="radio" name="radioHSProgram" id="radioHS_@m" value="@Model.HSPrograms[m].Value" />
                                                                <label for="radioHS_@m">@Model.HSPrograms[m].Text</label>
                                                            </div>
                                                        </div>
                                                    }

                                                </div>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-xs-12 no-padding divCenter" style="margin-bottom: 10px;display:none;">
                                        <div class="col-lg-5 col-xs-5">
                                            <div class="enroll-sec">

                                                @if (Model.TypeOfTransition == 7 || Model.TypeOfTransition == 8)
                                                {
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;" class="ctr-required" id="centerPara">Center<span class="error-notify">*</span></p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;" id="centerPara">Center</p>
                                                    </div>
                                                }

                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-inner" style="position: relative;margin-left:3px;width:527px;">

                                                @{
                                                    List<SelectListItem> centerList = new List<SelectListItem>();
                                                    centerList = Fingerprints.Utilities.Helper.GetCentersByUserId(Session["UserID"].ToString(), Session["AgencyID"].ToString(), Session["RoleID"].ToString(), false, true);
                                                    centerList.ForEach(x =>
                                                    {
                                                        x.Value = (x.Value != "0") ? FingerprintsModel.EncryptDecrypt.Encrypt64(x.Value) : x.Value;
                                                    });

                                                }
                                                @Html.DropDownList("Centers", centerList, new { @class = "form-control mandatory clsCenters", onchange = "GetClassrooms(this);", style = "height:40px !important;" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 divClassRoomName" style="margin-bottom: 10px;display:none;">
                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="enroll-sec">

                                                @if (Model.TypeOfTransition == 7 || Model.TypeOfTransition == 8)
                                                {
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;" class="cls-required" id="clasPara">Classroom<span class="error-notify">*</span></p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;" id="clasPara">Classroom</p>
                                                    </div>
                                                }


                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-xs-7">
                                            <div class="transition-inner" style="position: relative;">

                                                @if (Model.TypeOfTransition == 7 || Model.TypeOfTransition == 8)
                                                {
                                                    <select id="Classroom" onchange="GetAvailableSeatsByClass(this);" style="height:40px !important;" class="form-control mandatory clsClassRooms"></select>
                                                }
                                                else
                                                {

                                                    <select id="Classroom" style="height:40px !important;" class="form-control mandatory clsClassRooms"></select>

                                                }

                                            </div>
                                        </div>
                                    </div>





                                    <div class="col-xs-12 divTotalSeatAvailability" style="margin-bottom: 10px;display:none">

                                        <div class="col-lg-5 col-xs-5 no-padding">
                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: none;border: none;">Total Seat(s) Availability <span class="error-notify"></span></p>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-lg-7 col-xs-7">

                                            <div class="enroll-sec">
                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background: #87e3ae;border: none;width: auto;display: none;color:#000;" id="ptotalSeats" class="">
                                                        <span id="spnClassName"></span>
                                                        <span>(Open Seats - </span>
                                                        <span id="spnAvailableCount"></span>
                                                        <span>)</span>
                                                    </p>

                                                    <div class="err-container irr-error">
                                                        <span class="err-message errorAvailableSeat">Seat not available. Please select other classroom.</span>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @*  <div class="col-xs-12 col-lg-12" id="insurancequestionDiv" @if (Model.TypeOfTransition <= 5) { <text> style="display:none;" </text>   }>*@

                                    <div class="col-xs-12 col-lg-12" id="insurancequestionDiv">


                                        <div class="alert alert-info col-xs-12" role="alert" style="border-radius:unset;line-height:25px;">
                                            <div class="col-lg-1 col-xs-2" style="font-weight:bold;margin-top:5px;">Note!&nbsp;</div>
                                            <div class="col-lg-11 col-xs-10">
                                                Options are selected default based on the Start of Enrollment of Client. In case, same as followed or change on option,
                                                Please, click on <button class="btn btn-primary">Accept</button> to see the effect of changes.
                                            </div>
                                        </div>


                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q1.&nbsp;</strong>Insurance Type</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;">


                                                <div class="transition-radio-btn enroll-sec margin-enroll" id="InsuranceTypeID" style="margin-left:0px;">
                                                    <div class="col-xs-12 no-padding">
                                                        <div class="radio radio-info">


                                                            <input type="radio" name="InsType" class="InsuranceType" value="1" @if (Model.InsuranceType == 1) { <text> checked="checked" </text>                         }>
                                                            <label>Medicare / Chip</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 no-padding">
                                                        <div class="radio radio-info">


                                                            <input type="radio" name="InsType" class="InsuranceType" value="2" @if (Model.InsuranceType == 2) { <text> checked="checked" </text>                         }>
                                                            <label>No Insurance</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 no-padding">
                                                        <div class="radio radio-info">


                                                            <input type="radio" name="InsType" class="InsuranceType" value="3" @if (Model.InsuranceType == 3) { <text> checked="checked" </text>                         }>
                                                            <label>Other Insurance</label>
                                                        </div>



                                                        <div class="col-lg-6" @if (Model.InsuranceType != 3) { <text> style="display:none;" </text>                    }>
                                                            <label style="color: #163b69;font-size: 14px;font-weight: normal;"><i>Please Specify</i></label>

                                                            <input type="text" class="form-control" id="OtherInsuranceType" value=@Model.ChildOtherInsuranceTypeDesc>

                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 no-padding">
                                                        <div class="radio radio-info">


                                                            <input type="radio" name="InsType" class="InsuranceType" value="4" @if (Model.InsuranceType == 4) { <text> checked="checked" </text>                         }>
                                                            <label>Private Health Insurance</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 no-padding">
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="InsType" class="InsuranceType" value="5" @if (Model.InsuranceType == 5) { <text> checked="checked" </text>                         }>
                                                            <label>State Funded</label>
                                                        </div>
                                                        <button type="button" class="btn btn-primary btn-accept" id="btnAcceptInsurance">Accept</button>
                                                        <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                                    </div>



                                                </div>

                                                <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                    <span class="err-message err-message-instype">Insurance type is required</span>
                                                </div>

                                            </div>
                                        </div>

                                        @*<div class="col-lg-12">
                                                <div class="form-group edu-boxmade">
                                                    <label for="email" class="col-md-2 col-xs-12" style="padding: 0;"><strong class="pir-Q-lbl">Q1.</strong>Insurance Type</label>
                                                    <div class="col-md-9 parent-solid" style="padding: 0;">

                                                        <div class="protype-solid">
                                                            <label><input type="checkbox">Medicaid/Chip</label>
                                                            <span><textarea class="form-control"></textarea></span>
                                                        </div>
                                                        <div class="protype-solid">
                                                            <label><input type="checkbox">No Insurance</label>
                                                            <span><textarea class="form-control"></textarea></span>
                                                        </div>
                                                        <div class="protype-solid">
                                                            <label><input type="checkbox">Other Insurance</label>
                                                            <span><textarea class="form-control"></textarea></span>
                                                        </div>
                                                        <div class="protype-solid">
                                                            <label><input type="checkbox">Private Health Insurance</label>
                                                            <span><textarea class="form-control"></textarea></span>
                                                        </div>
                                                        <div class="protype-solid">
                                                            <label><input type="checkbox">State Funded</label>
                                                            <span><textarea class="form-control"></textarea></span>
                                                        </div>

                                                    </div>
                                                </div>



                                            </div>

                                            <div class="col-lg-12 col-xs-12 edu-boxmade">
                                                <div class="form-group edu-protextarea edu_new_child">
                                                    <label for="email" class="col-md-2 col-xs-12" style="width:15%;padding: 0;">Insurance Notes </label>
                                                    <textarea class="form-control" cols="20" id="MedicalNote" maxlength="100" name="MedicalNote" placeholder="Insurance Notes" rows="2" tabindex="25"></textarea>
                                                    <span>
                                                        <button type="button" class="btn btn-primary btn-accept" id="btnAcceptInsurance">Accept</button>
                                                        <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                                    </span>
                                                </div>
                                            </div>*@

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q2.&nbsp;</strong>Ongoing source continuous, accessible health care?</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;">
                                                <div class="transition-radio-btn enroll-sec" id="MedicalHomeID">

                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.MedicalHome, true, new { id = "MedicalHome1", @class = "MedicalHome" })
                                                        <label>Yes</label>
                                                    </div>
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.MedicalHome, false, new { id = "MedicalHome2", @class = "MedicalHome" })
                                                        <label>No</label>
                                                    </div>
                                                    <button type="button" class="btn btn-primary btn-accept" id="btnacceptmedical">Accept</button>
                                                    <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>


                                                </div>

                                            </div>
                                        </div>

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl" style="min-height:80px;">Q3.&nbsp;</strong>Is the child up-to-date on a schedule of age-appropriate preventive and primary health care, according to the relevant state’s EPSDT schedule for well child care is required.</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;" id="MedicalServicesID">
                                                <div class="transition-radio-btn enroll-sec">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.MedicalServices, true, new { id = "MedicalService1", @class = "MedicalServices" })
                                                        <label>Yes</label>
                                                    </div>
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.MedicalServices, false, new { id = "MedicalService2", @class = "MedicalServices" })
                                                        <label>No</label>
                                                    </div>
                                                    <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                        <span class="err-message err-message-ms">Medical services is required</span>
                                                    </div>


                                                </div>
                                                <button type="button" class="btn btn-primary btn-accept" id="btnacceptSchedule">Accept</button>
                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                            </div>
                                        </div>

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q4.&nbsp;</strong>Did child have continual accessible dental care provided by a dentist</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;" id="DentalHomeID">
                                                <div class="transition-radio-btn enroll-sec">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.DentalHome, true, new { id = "DentalHome1", @class = "DentalHome" })
                                                        <label>Yes</label>
                                                    </div>
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.DentalHome, false, new { id = "DentalHome2", @class = "DentalHome" })
                                                        <label>No</label>
                                                    </div>
                                                    <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                        <span class="err-message err-message-ms">Medical services is required</span>
                                                    </div>


                                                </div>
                                                <button type="button" class="btn btn-primary btn-accept" id="btnAcceptDental">Accept</button>
                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                            </div>
                                        </div>

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q5.&nbsp;</strong>Up-to-date on a schedule of age-appropriate preventive and primary oral health care according to the relevant state’s EPSDT schedule?</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;" id="DentalServicesID">
                                                <div class="transition-radio-btn enroll-sec">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.DentalServices, true, new { id = "DentalServices1", @class = "DentalServices" })
                                                        <label>Yes</label>
                                                    </div>
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.DentalServices, false, new { id = "DentalServices2", @class = "DentalServices" })
                                                        <label>No</label>
                                                    </div>
                                                    <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                        <span class="err-message err-message-ms">Medical services is required</span>
                                                    </div>


                                                </div>
                                                <button type="button" class="btn btn-primary btn-accept" id="btnAcceptOral">Accept</button>
                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:  8px;font-size:  15px;color:  green;display:none;"></i>
                                            </div>
                                        </div>

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q6.&nbsp;</strong>Is Child up-to-date on all immunizations appropriate for their age?</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;" id="immunizationTypeDiv">
                                                @*<div class="transition-inner" style="position: relative;">
                                                        <select  style="height:45px !important;" class="form-control  mandatory clsTransitioningType">
                                                            <option value="">--Select--</option>
                                                            <option value="1">Yes</option>
                                                            <option value="2">No</option>
                                                            <option value="3">Child has not received all immunizations appropriate for their age</option>
                                                        </select>

                                                    </div>*@




                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">

                                                        @*@if(Model.ImmunizationService!=null && Model.ImmunizationService==1)
                                                            {

                                                            }*@

                                                        @Html.RadioButtonFor(m => m.ImmunizationService, 1, new { @class = "InsuranceType" })

                                                        @*  <input type="radio" name="ddImmunizationType" class="InsuranceType" value="1" @if (Model.ImmunizationService != null && Model.ImmunizationService == 1) { <text></text>} >*@


                                                        <label>Yes</label>


                                                    </div>


                                                </div>



                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.ImmunizationService, 2, new { @class = "InsuranceType" })


                                                        <label>Exempt</label>
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.ImmunizationService, 3, new { @class = "InsuranceType" })


                                                        <label>Child has not received all immunizations appropriate for their age</label>

                                                        <button type="button" class="btn btn-primary btn-accept" id="btnAcceptImmune">Accept</button>
                                                        <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>

                                                    </div>
                                                </div>

                                            </div>
                                        </div>


                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q7.&nbsp;</strong>Is the family receiving any of the following services?</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-5 col-xs-12" style="padding:0;" id="statusServicesDiv">
                                                <div class="transition-radio-btn enroll-sec">

                                                    <div class="col-xs-6 col-sm-2 no-padding">
                                                        <label class="checkbox-inline">


                                                            @Html.CheckBox("TANF", Model.TANF == null ? false : Model.TANF == true ? true : false, new { id = "TANF", Name = "TANF", onchange = "uncheckdataNone();", @class = "services", tabIndex = "16" })

                                                            <span>TANF</span>
                                                        </label>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2">
                                                        <label class="checkbox-inline">
                                                            @Html.CheckBox("SSI", Model.SSI == null ? false : Model.SSI == true ? true : false, new { id = "SSI", Name = "SSI", onchange = "uncheckdataNone();", @class = "services", tabIndex = "17" })
                                                            <span>SSI</span>
                                                        </label>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2">
                                                        <label class="checkbox-inline">

                                                            @Html.CheckBox("SNAP", Model.SNAP == null ? false : Model.SNAP == true ? true : false, new { id = "SNAP", Name = "SNAP", onchange = "uncheckdataNone();", @class = "services", tabIndex = "18" })
                                                            <span>SNAP</span>
                                                        </label>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2">
                                                        <label class="checkbox-inline">

                                                            @Html.CheckBox("WIC", Model.WIC == null ? false : Model.WIC == true ? true : false, new { id = "WIC", Name = "WIC", onchange = "uncheckdataNone();", @class = "services", tabIndex = "19" })
                                                            <span>WIC</span>
                                                        </label>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2">
                                                        <label class="checkbox-inline">

                                                            @Html.CheckBox("NONE", Model.NONE == null ? false : Model.NONE == true ? true : false, new { id = "NONE", Name = "NONE", onchange = "uncheckdata();", @class = "services", tabIndex = "20" })
                                                            <span>NONE</span>
                                                        </label>
                                                    </div>

                                                </div>


                                            </div>

                                            <div class="col-xs-6 col-sm-2 col-lg-2">
                                                <button type="button" style="margin-top:-10px;" class="btn btn-primary btn-accept" id="btnAcceptServices">Accept</button>
                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                            </div>
                                        </div>

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5 no-padding">
                                                <div class="enroll-sec">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;"><strong class="pir-Q-lbl">Q8.&nbsp;</strong>Has any parent/guardian completed the following (education)?</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7">
                                                <div class="transition-radio-btn enroll-sec margin-enroll" id="EducationID" style="margin-left:0px;">


                                                    @if (Model.FamilyType > 0)
                                                    {

                                                        if (Model.ParentID != null && Model.ParentID != "")
                                                        {

                                                            <label>@Model.ParentName</label>

                                                            @Html.HiddenFor(m => m.ParentID)
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType" class="Education" value="1" @if (Model.AdvancedDegree == true) { <text> checked="checked" </text>                       }>
                                                                    <label>Advanced Degree or Baccalaureate</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType" class="Education" value="2" @if (Model.AssociateDegree == true) { <text> checked="checked" </text>                      }>
                                                                    <label>Associate, Vocational, or some College</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType" class="Education" value="3" @if (Model.HighSchoolGraduate == true) { <text> checked="checked" </text>                       }>
                                                                    <label>High School Graduate or GED</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType" class="Education" value="4" @if (Model.HighSchool == true) { <text> checked="checked" </text>                       }>
                                                                    <label>Less than High school</label>
                                                                </div>

                                                                <button type="button" class="btn btn-primary btn-accept" id="btnAcceptdegree">Accept</button>
                                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                                            </div>

                                                        }


                                                        if (Model.FamilyType == 2)
                                                        {
                                                            <hr style="margin-top:10px;border: 1px solid #295b8f;">
                                                        }

                                                        if (Model.ParentID2 != null && Model.ParentID2 != "")
                                                        {

                                                            <label>@Model.ParentName2</label>

                                                            @Html.HiddenFor(m => m.ParentID2)
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType2" class="Education" value="1" @if (Model.AdvancedDegree2 == true) { <text> checked="checked" </text>                        }>
                                                                    <label>Advanced Degree or Baccalaureate</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType2" class="Education" value="2" @if (Model.AssociateDegree2 == true) { <text> checked="checked" </text>                       }>
                                                                    <label>Associate, Vocational, or some College</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType2" class="Education" value="3" @if (Model.HighSchoolGraduate2 == true) { <text> checked="checked" </text>                        }>
                                                                    <label>High School Graduate or GED</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="EduType2" class="Education" value="4" @if (Model.HighSchool2 == true) { <text> checked="checked" </text>                        }>
                                                                    <label>Less than High school</label>
                                                                </div>

                                                                <button type="button" class="btn btn-primary btn-accept" id="btnAcceptdegree2">Accept</button>
                                                                <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>
                                                            </div>



                                                        }



                                                    }




                                                </div>

                                            </div>

                                        </div>


                                        @if (Model.IsShowJobTrainingQuestion == true)
                                        {



                                            <div class="col-xs-12 no-padding" style="margin-bottom:10px;margin-top:20px;" id="parentJobTrainingDiv">
                                                <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                    <div class="enroll-sec" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background: none;border: none"><strong class="pir-Q-lbl">Q9.&nbsp;</strong>Has parent/guardian completed Job Training? </p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-xs-7" id="JobTrainingFinishedID">


                                                    @if (Model.JobTrainingSchool == true)
                                                    {
                                                        <label>@Model.ParentName</label>
                                                        <div class="transition-radio-btn enroll-sec">
                                                            <div class="radio radio-info">
                                                                @Html.RadioButtonFor(m => m.JobTrainingFinished, true, new { id = "JobTrainingFinished1", @class = "JobTrainingFinished" })
                                                                <label>Yes</label>
                                                            </div>
                                                            <div class="radio radio-info">
                                                                @Html.RadioButtonFor(m => m.JobTrainingFinished, false, new { id = "JobTrainingFinished1", @class = "JobTrainingFinished" })
                                                                <label>No</label>
                                                            </div>
                                                        </div>
                                                        <button type="button" class="btn btn-primary btn-accept" id="btnAcceptJobTraining">Accept</button>
                                                        <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>

                                                    }

                                                    @if (Model.FamilyType == 2 && Model.JobTrainingSchool == true)
                                                    {
                                                        <hr style="margin-top:10px;border: 1px solid #295b8f;">
                                                    }

                                                    @if (Model.JobTrainingSchool2 == true)
                                                    {

                                                        <label>@Model.ParentName2</label>
                                                        <div class="transition-radio-btn enroll-sec">
                                                            <div class="radio radio-info">
                                                                @Html.RadioButtonFor(m => m.JobTrainingFinished2, true, new { id = "JobTrainingFinished2", @class = "JobTrainingFinished" })
                                                                <label>Yes</label>
                                                            </div>
                                                            <div class="radio radio-info">
                                                                @Html.RadioButtonFor(m => m.JobTrainingFinished2, false, new { id = "JobTrainingFinished2", @class = "JobTrainingFinished" })
                                                                <label>No</label>
                                                            </div>
                                                        </div>
                                                        <button type="button" class="btn btn-primary btn-accept" id="btnAcceptJobTraining2">Accept</button>
                                                        <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>

                                                    }

                                                </div>


                                            </div>
                                        }


                                    </div>


                                    <div class="col-xs-12 col-lg-12 casenote-section" id="casenoteSectionDiv">
                                        <h3 class="addapplicant2"><i class="fa fa-book" aria-hidden="true"></i>  Case Note</h3>

                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Date<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-5 col-sm-7">

                                                @Html.TextBoxFor(m => m.CaseNoteDetails.CaseNoteDate, new { @class = "form-control", id = "transitionCaseNoteDate", onblur = "checkStatusChangeDate(this);", placeholder = "MM/DD/YYYY" })

                                            </div>
                                        </div>

                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Title<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-5 col-sm-7">

                                                @Html.TextBoxFor(m => m.CaseNoteDetails.CaseNotetitle, new { @class = "form-control", id = "transitionCaseNotetitle", placeholder = "Case Note Title" })
                                            </div>
                                        </div>


                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Note<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-5 col-sm-7">

                                                @Html.TextAreaFor(m => m.CaseNoteDetails.Note, new { @style = "display:none;" })
                                            </div>
                                        </div>

                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Clients<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-8 col-sm-7 no-padding" id="statusclientsDiv">
                                                @{
                                                    int i = 0;
                                                }

                                                @if (Model.Users != null && Model.Users.Clientlist != null && Model.Users.Clientlist.Count > 0)
                                                {
                                                    foreach (var item in Model.Users.Clientlist)
                                                    {
                                                        <div class="col-sm-12 adddivspace">


                                                            <input type="checkbox" name="Users.Clientlist['@i'].Id" value="@item.Id">
                                                            <span>@item.Name</span>
                                                        </div>
                                                        i++;
                                                    }

                                                }

                                            </div>
                                        </div>



                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Tags<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-5 col-sm-7">
                                                <input type="text" id="status_CaseNotetags" name="status_CaseNotetags" class="form-control ui-autocomplete-input">
                                            </div>
                                        </div>


                                        <div class="col-xs-12 col-sm-12 adddivspace" style="margin-bottom:10px;">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Developmental Team<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-8 col-sm-7 no-padding" id="statusStaffDiv">
                                                @{
                                                    int j = 0;
                                                }
                                                @if (Model.Users != null && Model.Users.UserList != null && Model.Users.UserList.Count > 0)
                                                {
                                                    foreach (var item2 in Model.Users.UserList)
                                                    {
                                                        <div class="col-sm-12 col-lg-12 m-tp">
                                                            <input type="checkbox" class="staff-check" name="staff-check" value="@item2.Id">
                                                            <span name="Users.UserList['@j'].Name">@item2.Name</span>
                                                        </div>

                                                        j++;
                                                    }
                                                }



                                            </div>
                                        </div>

                                        <div class="col-xs-12 col-sm-12 adddivspace">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Secure Note Level?</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-5 col-sm-7 text-center">
                                                <div class="addn-poup-div1">
                                                    <input type="checkbox" id="CaseNoteSecurity" value="true" name="CaseNoteSecurity" style="margin-left:5px;">
                                                    <span>Yes</span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-xs-12 col-sm-12 adddivspace" id="statusattachmentsDiv" style="margin-bottom:25px;">
                                            <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">Attachment</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-9 col-sm-7">
                                                <div class="col-sm-7 col-lg-6 no-padding">
                                                    <input type="file" id="FirstFile" name="Attachments[0].file" onchange="ValidateSingleInputpdf2(this)" class="form-control">
                                                </div>
                                                <div class="col-sm-3 col-lg-3 adddivspace">

                                                    <a href="javascript:void(0)" id="Attachmectstag" title="Add Attachment" onclick="addMoreStatusAtt(this);"><i class="fa fa-plus-circle"></i>&nbsp;Add</a>

                                                </div>
                                            </div>

                                            <div class="col-lg-9" id="addAttachmentDiv"></div>

                                        </div>




                                    </div>



                                    <div class="col-xs-12 text-center">
                                        <div class="transition-analysis-btn">
                                            <a id="submitTransition" style="cursor:pointer;">Submit</a>
                                            <a href="/Roster/Roster" style="background:#e74c3c;">Cancel</a>
                                        </div>
                                    </div>

                                </div>



                            </div>


                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
    <div class="modal fade" id="SeatsAvailability" role="dialog">
        <div class="modal-dialog">
            @*Modal content*@
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Information</h4>
                </div>

                <div class="form-group">
                    <label id="lblSeatsAvailability" style="width:  100%; text-align:  center;padding:  0; margin:  0;font-family: inherit;" class="control-label"></label>

                </div>
                <div class="modal-footer">
                    <button type="button" onclick="RedirectToDashboard()" class="my-btn1">OK</button>
                </div>
            </div>
        </div>
    </div>



}


