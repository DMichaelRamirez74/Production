@model FingerprintsModel.Transition


@{
    ViewBag.Title = "ChildHeadStartTransition";
    Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";

}




@section Style
{


    <link href="~/Content/css/Transition.css" rel="stylesheet" />
    <style type="text/css">
        strong.pir-Q-lbl {
            min-height: 60px;
            float: left;
        }

        .ipaddress-edu textarea {
            width: 56% !important;
        }

        @@media only screen and (min-width:768px) and (max-width:1200px) {
            .title-fixed {
                position: static;
                padding-left: 0;
            }

            strong.pir-Q-lbl {
                min-height: 0px;
                float: left;
            }

            .protype-solid span textarea {
                height: 50px;
                width: 100% !important;
            }

            .protype-solid span {
                width: 55% !important;
                float: left;
            }

            .protype-solid label {
                width: 45% !important;
                float: left;
            }

                .protype-solid label input {
                    width: 30px !important;
                    float: left;
                }
        }

        .edu-protextarea.edu_new_child textarea {
            width: 54%;
            margin-right: 15px;
        }

        .edu_new_child span {
            margin-top: 13px;
            float: left;
        }

        .parent-solid .protype-solid label input {
            margin-right: 8px;
        }

        label.ed-primary-color {
            color: #163b69;
        }

        .edu-boxmade label {
            color: #163b69 !important;
            font-weight: 300;
        }

        .edu-protextarea textarea {
            width: 65%;
            float: left;
            height: 60px;
            margin-bottom: 15px;
            max-width: 65%;
        }

        .protype-solid span textarea {
            height: 50px;
            width: 60%;
        }

        .protype-solid {
            width: 100%;
            float: left;
            margin-bottom: 15px;
        }

            .protype-solid label {
                width: 30%;
                float: left;
            }

            .protype-solid span {
                width: 70%;
                float: left;
            }

        strong.pir-Q-lbl {
            min-height: 60px;
            float: left;
        }

        @@media only screen and (min-width:768px) and (max-width:1200px) {
            .title-fixed {
                position: static;
                padding-left: 0;
            }

            strong.pir-Q-lbl {
                min-height: 0px;
                float: left;
            }

            .protype-solid span textarea {
                height: 50px;
                width: 100% !important;
            }

            .protype-solid span {
                width: 55% !important;
                float: left;
            }

            .protype-solid label {
                width: 45% !important;
                float: left;
            }

                .protype-solid label input {
                    width: 30px !important;
                    float: left;
                }
        }

        .edu-protextarea.edu_new_child textarea {
            width: 54%;
            margin-right: 15px;
        }

        .edu_new_child span {
            margin-top: 13px;
            float: left;
        }

        .parent-solid .protype-solid label input {
            margin-right: 4px;
        }

        label.ed-primary-color {
            color: #163b69;
        }

        .edu-boxmade label {
            color: #163b69 !important;
            font-weight: 300;
        }

        .edu-protextarea textarea {
            width: 65%;
            float: left;
            height: 60px;
            margin-bottom: 15px;
            max-width: 65%;
        }

        .protype-solid span textarea {
            height: 50px;
            width: 60%;
        }

        .protype-solid {
            width: 100%;
            float: left;
            margin-bottom: 15px;
        }

            .protype-solid label {
                width: 30%;
                float: left;
            }

            .protype-solid span {
                width: 70%;
                float: left;
            }







        .addapplicant2 {
            font-size: 20px;
            font-weight: bold;
            border-bottom: 2px solid #295b8f;
            color: #295b8f;
            padding: 15px 0;
            margin: 0 15px;
        }

        pir-q-p {
            background: none !important;
            border: none !important;
            display: inline-block;
        }

        .pir-Q-lbl {
            display: inline-block;
        }


        #page-wrapper {
            padding-left: 0;
            padding-right: 0;
        }

        .no-padding {
            padding: 0;
        }

        .right-side-container-ch {
            width: 100%;
            float: left;
            background: url('../../Images/body-bg.jpg') center no-repeat;
            background-size: cover;
            min-height: 689px;
        }

        .error-notify {
            position: relative;
            display: inline-block;
            vertical-align: top;
            color: red;
            font-size: 13px;
            margin-left: 2px;
            font-weight: bold;
        }

        .err-message, .other-ins-err {
            display: none;
            color: red;
            font-size: 12px;
            margin: 6px;
            height: 10px;
        }

        .addInnerChildContent {
            border: 1px solid #ddd;
            margin-bottom: 24px;
        }

        .err-container, irr-error {
            width: 100%;
            float: left;
            margin: 6px 0;
        }

        .icr-img img {
            margin-top: 5px;
            float: right;
        }

        .info-heading h2 {
            color: #000;
            font-size: 18px;
            text-transform: uppercase;
            padding: 20px 10px !important;
            text-align: center;
            display: block;
            font-weight: bold;
            margin: 0;
        }

        .enroll-sec-padding
        {

        }
    </style>





}

@section Script{



    <script type="text/javascript">
        var flags = 0;


        function RedirectToDashboard() {
            location.href = '/Roster/Roster';
        }

        function validatedateChild(inputTextObject) {

            if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {

                var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                var regex = new RegExp(dateformat);
                if (regex.test($(inputTextObject).val())) {

                    return true;
                }
                else {


                    return false;
                }

            }

        }


        function ValidateInput() {

            $('.err-message-prtrans').hide();
            $('.err-message').hide();
            cleanValidation();
            var isValid = true;
            $('.mandatory').each(function () {
                if ($(this).val() == "") {
                    $(this).closest('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }

                if ($(this).hasClass('transitionDate') && !validatedateChild(this)) {
                    $(this).closest('div').find('.err-message').text("Invalid transition date");
                    $(this).closest('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }
                else if ($(this).hasClass('transitionDate') && $(this).val() != "") {
                    var transitionDate = new Date($(this).val());
                    var todayDate = new Date();

                    if (transitionDate > todayDate) {
                        $(this).closest('div').find('.err-message').text("Transition date must be less than future date.");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;

                    }
                }
                else if ($(this).hasClass('transitionDate') && $(this).val() == "") {

                    $(this).closest('div').find('.err-message').text("Transition date is required.");
                    $(this).closest('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }


                if ($(this).hasClass('dob') && $(this).val() == "") {

                    $(this).closest('div').find('.err-message').text("Date of birth is required.");
                    $(this).closest('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }

                else if ($(this).hasClass('dob') && !validatedateChild(this)) {
                    $(this).closest('div').find('.err-message').text("Invalid date of birth");
                    $(this).closest('div').find('.err-message').show();
                    if (isValid)
                        isValid = false;
                }
                else if ($(this).hasClass('dob') && $(this).val() != "") {

                    var From_date = new Date($(this).val());
                    var To_date = new Date();

                    var startDay = new Date(From_date);
                    var endDay = new Date(To_date);
                    var millisecondsPerDay = 1000 * 60 * 60 * 24;

                    var millisBetween = endDay.getTime() - startDay.getTime();
                    var days = millisBetween / millisecondsPerDay;

                    // Round down.
                    var totalDays = Math.floor(days);
                    if (parseInt(totalDays) >= 60) {
                        $(this).closest('div').find('.err-message').text("A child date of birth must be less than 60 days.");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;

                    }
                }


            });



            if ($('#PregOtherInsuranceType').is(':visible') == true && $('#PregOtherInsuranceType').val() == "") {
                customAlert('Please enter other insurance type.');
                plainValidation('#PregOtherInsuranceType');
                //$('.other-ins-err').text("Other Insurance Type is Required.");
                //$('.other-ins-err').show();
                if (isValid)
                    isValid = false;
            }

            if ($('input[name=programyeartrans]').length > 0 && $('input[name=programyeartrans]:checked').length == 0) {
                $('input[name=programyeartrans]')[0].focus();
                $('.err-message-prtrans').text("Yes or No for new program year transition is required");
                $('.err-message-prtrans').show();
                if (isValid)
                    isValid = false;
            }

            $('.preginfo').each(function () {
                $(this).find('.err-message-preginstype').hide();
                $(this).find('.err-message-birthtype').hide();

                if ($(this).find('input[name="PregInsType"]:checked').length == 0) {
                    $(this).find('.err-message-preginstype').show();
                    if (isValid)
                        isValid = false;
                }
                if ($(this).find('input[name="PregInsType"]:checked').length > 0) {

                    if ($(this).find('input[name="PregInsType"]:checked').val() == "3") {
                        if ($(this).find('input[name="PregInsType"]:checked').closest('div').find('input[type="text"]').val() == "") {
                            $(this).closest('div').find('.other-ins-err').text("Other Insurance Type is Required.");
                            $('.other-ins-err').show();
                            if (isValid)
                                isValid = false;
                        }
                        else {
                            $('.other-ins-err').hide();
                        }
                    }
                }


                if ($('#birthTypeDiv').is(':visible')) {

                    if ($(this).find('input[name="BirthType"]:checked').length == 0) {
                        $(this).find('.err-message-birthtype').show();
                        $(this).find('input[name="BirthType"]').focus();
                        if (isValid)
                            isValid = false;
                    }

                    if ($('input[name="BirthType"]:checked').length > 0) {
                        if ($('input[name="BirthType"]:checked').val() == "3") {
                            if ($('input[name="BirthType"]:checked').closest('div').find('input[type="text"]').val() == "") {
                                $('.err-message-birthtype').text("Please enter number of child.");
                                $('.err-message-birthtype').show();
                                if (isValid)
                                    isValid = false;
                            }

                            else if ($('.addInnerChildContent').is(':visible') == false) {
                                $('.err-message-birthtype').text("Please load the form to enter child information.");
                                $('.err-message-birthtype').show();
                                if (isValid)
                                    isValid = false;
                            }
                            else {
                                $('.err-message-birthtype').hide();
                            }

                        }
                    }
                }
            });

            if ($('.addInnerChildContent').is(':visible') == true) {

                cleanValidation();


                $('.childmandatory').each(function () {
                    if ($(this).val() == "") {
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;
                    }
                    else {
                        $(this).closest('div').find('.err-message').hide();

                    }
                    if ($(this).hasClass('transitionDate') && !validatedateChild(this)) {
                        $(this).closest('div').find('.err-message').text("Invalid transition date");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;
                    }
                    else if ($(this).hasClass('transitionDate') && $(this).val() != "") {
                        var transitionDate = new Date($(this).val());
                        var todayDate = new Date();

                        if (transitionDate > todayDate) {
                            $(this).closest('div').find('.err-message').text("Transition date must be less than future date.");
                            $(this).closest('div').find('.err-message').show();
                            if (isValid)
                                isValid = false;

                        }
                    }
                    else if ($(this).hasClass('transitionDate') && $(this).val() == "") {

                        $(this).closest('div').find('.err-message').text("Transition date is required.");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;
                    }


                    if ($(this).hasClass('dob') && $(this).val() == "") {

                        $(this).closest('div').find('.err-message').text("Date of birth is required.");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;
                    }

                    else if ($(this).hasClass('dob') && !validatedateChild(this)) {
                        $(this).closest('div').find('.err-message').text("Invalid date of birth");
                        $(this).closest('div').find('.err-message').show();
                        if (isValid)
                            isValid = false;
                    }
                    else if ($(this).hasClass('dob') && $(this).val() != "") {

                        var From_date = new Date($(this).val());
                        var To_date = new Date();

                        var startDay = new Date(From_date);
                        var endDay = new Date(To_date);
                        var millisecondsPerDay = 1000 * 60 * 60 * 24;

                        var millisBetween = endDay.getTime() - startDay.getTime();
                        var days = millisBetween / millisecondsPerDay;

                        // Round down.
                        var totalDays = Math.floor(days);
                        if (parseInt(totalDays) >= 60) {
                            $(this).closest('div').find('.err-message').text("A child date of birth must be less than 60 days.");
                            $(this).closest('div').find('.err-message').show();
                            if (isValid)
                                isValid = false;

                        }
                    }


                });



                if ($('input[name="InsType"]:checked').length == 0) {

                    $('.err-message-instype').show();
                    $('input[name="InsType"]').focus();
                    if (isValid)
                        isValid = false;
                }


                if ($('input[name="InsType"]:checked').length > 0) {

                    if ($('input[name="InsType"]:checked').val() == "3") {
                        if ($('#OtherInsuranceType').val() == "") {
                            $('input[name="InsType"]').focus();
                            plainValidation('#OtherInsuranceType');
                            customAlert("Other Insurance Type is Required.");

                            if (isValid)
                                isValid = false;
                        }
                        else {
                            $('.other-ins-err').hide();
                        }

                    }
                }

                $('.addInnerChildContent').each(function () {
                    $(this).find('.err-message-instype').hide();
                    $(this).find('.err-message-gender').hide();
                    $(this).find('.err-message-ehs').hide();


                    if ($(this).find('input[name="yn"]:checked').length == 0) {
                        $(this).find('.err-message-gender').show();
                        $(this).find('input[name="yn"]').focus();
                        if (isValid)
                            isValid = false;
                    }
                    if ($(this).find('input[name="yn1"]:checked').length == 0) {
                        $(this).find('.err-message-ehs').show();
                        if (isValid)
                            isValid = false;
                    }
                });


            }


            if ($('#transitionCaseNoteDate').val() == '') {
                isValid = false;
                plainValidation('#transitionCaseNoteDate');
                customAlert('Please enter Case Note Date');
                return isValid;
            }

            if ($('#transitionCaseNotetitle').val() == '') {
                isValid = false;
                plainValidation('#transitionCaseNotetitle');
                customAlert('Please enter Case Note Title');
                return isValid;
            }


            if ($('#Note').val().trim() == '') {
                isValid = false;
                customAlert("Please enter Note");
                plainValidation('#Note');
                return isValid;
            }
            if ($('#statusclientsDiv').find('input[type=checkbox]:checked').length == 0) {
                isValid = false;
                customAlert('Please select Client(s)');
                $('#statusclientsDiv').find('input[type=checkbox]')[0].focus();
                return isValid;
            }


            var Tags = '';
            $('#status_CaseNotetags_tagsinput .tag span').each(function () {
                Tags = Tags + $(this).text().trim() + ',';
            });

            $("#status_CaseNotetags").val(Tags);
            Tags = '';

            if ($('#status_CaseNotetags').val().trim() == "") {
                isValid = false;
                customAlert("Tags are  required.");
                plainValidation('#status_CaseNotetags');
                return isValid;
            }
            if ($('#statusStaffDiv').find('input[type=checkbox]:checked').length == 0) {
                isValid = false;
                customAlert('Please select Developmental Staff(s)');
                $('#statusStaffDiv').find('input[type=checkbox]')[0].focus();

                return isValid;
            }




            return isValid;
        }


        function getFormattedDate(date) {
            date = new Date(date);
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;
            return month + '/' + day + '/' + year;
        }

        function getTagsOnInput() {
            var tagInp = $('#status_CaseNotetags').val();
            var tagsArr = [];
            $.ajax({

                url: '/Roster/GetCaseNoteTagonInput',
                datatype: 'json',
                type: 'post',
                async: true,
                data: { searchText: tagInp },
                success: function (data) {
                    if (data != null) {
                        if (data.length > 0) {
                            $.each(data, function (i, tags) {
                                tagsArr.push(tags.Text);
                            });
                        }
                    }
                },
                error: function (data) {

                }

            });

            return tagsArr;
        }

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }


        function checkStatusChangeDate(value) {



            isValid = true;
            if (!$(value).attr("readonly")) {

                if ($(value).val().trim() != "MM/DD/YYYY" && $(value).val().trim() != "") {
                    var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                    var regex = new RegExp(dateformat);
                    if (!regex.test($(value).val())) {
                        customAlert("Invalid date format. ");
                        $(value).val('');
                        return false;
                    }
                    else {
                        var text = $(value).val();
                        var comp = text.split('/');
                        var m = parseInt(comp[0], 10);
                        var d = parseInt(comp[1], 10);
                        var y = parseInt(comp[2], 10);
                        var date = new Date(y, m - 1, d);
                        if (date.getFullYear() == y && date.getMonth() + 1 == m && date.getDate() == d) {

                        } else {
                            customAlert("Invalid date. ");
                            $(value).val('');
                            return false;
                        }



                    }
                }
                var txtdate = $(value).val();
                var selectedTimestampequal = new Date();
                var year = selectedTimestampequal.getFullYear();
                var month = selectedTimestampequal.getMonth() + 1;
                var day = selectedTimestampequal.getDate();
                today1 = month + '/' + day + '/' + year;
                var newinput = today1.split("/");
                var newday = newinput[1];
                var str = newday.substr(0, 1);
                var newdaynew = ('0' + newday).slice(-2);
                var newmonth = newinput[0];
                var str1 = newmonth.substr(0, 1);
                var newmonthnew = ('0' + newmonth).slice(-2);
                today = newmonthnew + '/' + newdaynew + '/' + year;
                if (today == txtdate) {
                    return true;
                }
                var testdatelocalinput = new Date(txtdate);
                var selectedTimestamp = new Date().getTime();
                var testdatelocalinputTS = testdatelocalinput.getTime();
                var timestamp = new Date().getTime() - (30 * 24 * 60 * 60 * 1000)
                if (testdatelocalinputTS > selectedTimestamp) {
                    customAlert("Case Note date must be less than or equal to today's date.");
                    $(value).val('');
                    return false;
                }
                else if (timestamp > testdatelocalinputTS) {
                    customAlert("Case Note date cannot be less than 30 days from today's date.");
                    $(value).val('');
                    return false;
                }
            }
            return true;
        }

        function addMoreStatusAtt(ele) {
            var index = $(ele).closest('#section_attachment').parent('div').find('.houseless-attach').length;



            var appendDiv = '<div class="col-lg-9 col-sm-7 no-padding adddivspace">\
                                                   <div class="col-sm-7 col-lg-8 no-padding">\
                                                       <input type="file" id="FirstFile" name="Attachments[0].file" onchange="ValidateSingleInputpdf2(this)" class="form-control">\
                                                   </div>\
                                                   <div class="col-sm-3 col-lg-3 adddivspace">\
                                                       <a href="javascript:void(0)"  title="Remove Attachment" onclick="removeStatusAtt(this);"><i class="fa fa-minus-circle"></i>&nbsp;Remove</a>\
                                                   </div>\
                                               </div>';

            $(ele).parent('div').parent('div').siblings("#addAttachmentDiv").append(appendDiv);


        }


        function removeStatusAtt(ele) {
            $(ele).parent('div').parent('div').remove();
        }


        $.fn.destroyTagsInput = function (value) {
            $(this).tagsInput = null;
            $(this).next('.tagsinput').find('.tag').remove();
            // $(this).show();
        }


        $(document).ready(function () {


            $('input[name=Returning]').on('change', function () {

                var returningValue = $(this, ':checked').val();
                $('#returningDiv').css('background-color', '');
                $.ajax({

                    url: HostedDir + "/Roster/UpdateReturningTransitionClient",
                    datatype: 'json',
                    type: 'post',
                    beforeSend: function () { $('#spinner').show(); },
                    data: { returnValue: returningValue, clientId: $('#EClientID').val() },
                    success: function (data) {
                        $('#spinner').hide();

                        if (data) {
                            customAlert('Record updated successfully');
                        }
                        else {
                            customAlert('Some Error Occured.Please,try again later');
                        }
                    },
                    error: function (data) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }

                });

            });



            $('#btnTransOk').on('click', function () {

                //if ( $('#transType_hide').val()=='6' && $('input[name=Returning]:checked').length == 0) {
                //    $('#returningDiv').css('background-color', 'pink');
                //    customAlert('Please select option for Client returning for next program year');
                //    return false;
                //}

                $('#pregMomTransitionDiv').show();

                $('#casenoteSectionDiv').show();
                $('#submitCancelDiv').show();
            });

            $('#btnTansCancel').on('click', function () {
                $('#spinner').show();
                location.href = '' + HostedDir + "/Roster/Roster";
            });



            $('input[name=PregMomTransitionReady]').on('change', function () {


                if ($(this).val() == '2') {

                }
            });


            $("body").on('keyup', '.txt-date', function (e) {

                flags = 0;
                if (e.keyCode != 193 && e.keyCode != 111) {
                    if (e.keyCode != 8) {
                        if ($(this).val().length == 2) {
                            $(this).val($(this).val() + "/");
                        } else if ($(this).val().length == 5) {
                            $(this).val($(this).val() + "/");
                        }
                    } else {
                        var temp = $(this).val();
                        if ($(this).val().length == 5) {
                            $(this).val(temp.substring(0, 4));
                        } else if ($(this).val().length == 2) {
                            $(this).val(temp.substring(0, 1));
                        }
                    }
                } else {
                    var temp = $(this).val();
                    var tam = $(this).val().length;
                    $(this).val(temp.substring(0, tam - 1));
                }


            });



            $('body').on("keydown", "#datecompleted,.txt-date", function (e) {
                flags++;
                if (flags > 1) {
                    e.preventDefault();
                }

                //var regex = /^[0-9]*(?:\.\d{1,2})?$/;


                //if( !regex.test(e.value) ) {
                //    return false;
                //}

                var key = e.charCode || e.keyCode || 0;

                // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
                // home, end, period, and numpad decimal
                return (key == 8 || key == 9 || key == 13 || key == 46 || key == 37 || key == 39 ||
                    key == 35 || key == 36 || key == 110 || key == 190 || key == 191 ||
                   (key >= 96 && key <= 111 || key >= 48 && key <= 57 && !e.shiftKey));
                //(e.which == keyCode.ENTER)


                var owner = this,
              pps = owner.properties,
              charCode = e.which || e.keyCode || e.charCode || 0;

                // hit backspace when last character is delimiter

                if (Util.isAndroid() &&
                    e.target.value.length &&
                    e.target.value.length === this._lastEventValue.length - 1 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)
                ) {
                    e.charCode = 8;
                }
                if (e.charCode === 8 &&
                    Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)) {
                    pps.backspace = true;
                }
                else {
                    pps.backspace = false;
                }
                this._lastEventValue = e.target.value;

            });


            $('#submitTransition').click(function () {

                if (ValidateInput()) {
                    var Transition = {};
                    Transition.EClientID = '@ViewBag.ClientId';
                    Transition.Enc_ProgID = '@ViewBag.ProgramId';
                    Transition.DateOfTransition = $('.transitionDate').val();
                    Transition.TrnsInsuranceType = $('input[name=PregInsType]:last').parent('div').next('.btn-accept').next('.fa-check').is(':visible') ? $('.PregInsuranceType:checked').val() : null;
                    Transition.OtherInsuranceTypeDesc = $('#PregOtherInsuranceType').val();
                    Transition.ChildInsuranceType = $('.InsuranceType:checked').val();
                    Transition.ChildOtherInsuranceTypeDesc = $('#OtherInsuranceType').val();
                    Transition.BirthType = $('.ClsBirthType:checked').val();
                    Transition.DentalServices = $('#DentalServicesID').find('.btn-accept').next('.fa-check').is(':visible') ? $('#DentalServicesID').find('input[name=DentalServices]:checked').val().toLowerCase() : null;
                    Transition.NewProgramYearTransition = $('input[name=programyeartrans]').length > 0 && $('#newProgyearID').find('input[name=programyeartrans]:checked').val() == 'true' ? true : false;
                    Transition.HouseholdId = $('#enc_householdId').val();
                    Transition.TypeOfTransition = $('#transType_hide').val();
                    Transition.IsFutureApplication = false;
                    //Child Info List
                    var child = [];

                    if (!Transition.NewProgramYearTransition && Transition.TypeOfTransition != '6') {


                        //if ($('#allowFutureApplicationLbl').length > 0 && $('#allowFutureApplicationDiv').length==0  && $('#allowFutureInput').val() == '1' && $('#allowCurrentInput').val() == '0')
                        //{
                        //    Transition.IsFutureApplication = true;
                        //}
                        //else if($('#allowFutureApplicationLbl').length == 0 && $('#allowFutureApplicationDiv').length>0  && $('#allowFutureInput').val() == '1' && $('#allowCurrentInput').val() == '1')
                        //{
                        //    Transition.IsFutureApplication = $('#allowFutureApplicationDiv').find('#allowFutureRadioDiv').find('input:radio[name=radioFutureApp]:checked').val() == '1' ? true : false;
                        //}


                        $('.addInnerChildContent').each(function () {
                            var Child = {};
                            Child.FirstName = $(this).find('.childFirstName').val();
                            Child.LastName = $(this).find('.childLastName').val();
                            Child.Name = $(this).find('.childFirstName').val() + ' ' + $(this).find('.childLastName').val();
                            Child.DOB = $(this).find('.dob').val();
                            Child.Gender = $(this).find('input[name="yn"]:checked').val();
                            //  Child.InsuranceType = $(this).find('.InsuranceType').val();
                            Child.IsEHS = $(this).find('input[name="yn1"]:checked').val() == "true" ? true : false;
                            child.push(Child);
                        });
                    }

                    var fileData = new FormData();


                    $('#statusattachmentsDiv').find('input[type=file]').each(function () {

                        var fileUpload = $(this).get(0);
                        var files = fileUpload.files;

                        // Create FormData object


                        // Looping over all files and add it to FormData object
                        for (var i = 0; i < files.length; i++) {
                            fileData.append(files[i].name, files[i]);
                        }
                    });


                    // Looping over all files and add it to FormData object

                    var arr = [];

                    //$('#statusattachmentsDiv').find('input[type=file]').each(function (m, file) {
                    //      debugger;

                    //      var fileUpload = $(file).get(0);
                    //      var files = fileUpload.files;
                    //      arr.push({ 'Attachment': files[0] });
                    //  });



                    var casenotes = {};
                    casenotes.CaseNoteDate = $('#transitionCaseNoteDate').val();
                    casenotes.CaseNotetitle = $('#transitionCaseNotetitle').val();

                    casenotes.Note = $('#Note').val();
                    casenotes.CaseNotetags = $('#status_CaseNotetags').val();
                    casenotes.CaseNoteSecurity = $('#CaseNoteSecurity').is(':checked');
                    casenotes.CaseNoteAttachmentList = arr;

                    var clientList = [];

                    $('#statusclientsDiv').find('input[type=checkbox]:checked').each(function (n, cli) {
                        clientList.push({ 'Id': $(cli).val(), 'Name': $(cli).next('span').text() });

                    });
                    var userList = [];

                    $('#statusStaffDiv').find('input[type=checkbox]:checked').each(function (n, cli) {
                        userList.push({ 'Id': $(cli).val(), 'Name': $(cli).next('span').text() });
                    });


                    var Users = {

                        'Clientlist': clientList,
                        'UserList': userList
                    }

                    Transition.CaseNoteDetails = casenotes;
                    Transition.Users = Users;

                    fileData.append('Transition', JSON.stringify(Transition));
                    fileData.append('PregMomChilds', JSON.stringify(child));


                    $.ajax({

                        url: HostedDir + "/Roster/SaveChildEarlyHeadStartTranstion",
                        type: "POST",
                        async: true,
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function (data) {

                            var names = "";

                            for (var i = 0; i < data.length; i++) {

                                if (data[i].Result == 4) {
                                    names += " , " + data[i].ChildName;
                                }
                            }
                            if (names != "") {
                                names = names.slice(2);
                                $("#lblSeatsAvailability").text("No slot or classroom available for " + names + ". They will be moved to waiting list.");
                                $('#SeatsAvailability').modal('show');
                            }
                            else {
                                $("#lblSeatsAvailability").text("Record Updated Successfully.");
                                $('#SeatsAvailability').modal('show');
                            }

                            // console.log(data);
                            //alert("Saved Sccessfully");
                            //;
                        }
                    })
                }

            });


            //Append Child Dynamically
            $('#addChild').click(function () {
                $(this).find('img').show();
                $('.addNewChildBody').append($('.addNewChildBody').html());
                $('.addNewChildBody').addClass('childcontainer');

            });

            //$('.remove-child').click(function () {
            $('.addNewChildBody').on('click', '.remove-child', function () {

                if ($('.addInnerChildContent').length > 1) {
                    $(this).parent().parent().parent().parent().remove();
                }
                if ($('.addInnerChildContent').length == 1) {
                    $('.addNewChildBody').removeClass('childcontainer');
                    customAlert("Minimum one child is required.");
                }
            });





            $('body').on("change keyup", ".mandatory", function () {
                if ($(this).closest('div').find('.err-message').is(':visible'))
                    $(this).closest('div').find('.err-message').hide();

            });
            $('body').on("change keyup", ".childmandatory", function () {
                if ($(this).closest('div').find('.err-message').is(':visible'))
                    $(this).closest('div').find('.err-message').hide();

            });
            $('body').on("change keyup", ".optional", function () {
                if ($(this).closest('div').find('.other-ins-err').is(':visible'))
                    $(this).closest('div').find('.other-ins-err').hide();

            });

            //Disability Status
            $('body').on('change', 'input[name="yn1"]', function () {
                $('.err-message-ehs').hide();
            });

            //Gender Status
            $('body').on('change', 'input[name="yn"]', function () {
                $('.err-message-gender').hide();
            });





            //Change of Next Program year Transition//
            $('input[name=programyeartrans]').on('change', function () {

                var pregMomTags = '';

                if (CKEDITOR.instances['Note']) {
                    CKEDITOR.instances['Note'].destroy(true);
                }

                if ($(this).val() == 'true') {

                    $('#birthTypeDiv').find('input[type=radio]').prop('checked', false);
                    $('#birthTypeDiv').find('#MultiChildBirth').val('');
                    $('.addNewChild').hide();
                    $('.addNewChild').find('input[name=InsType]').prop('checked', false);
                    $('#birthTypeDiv').hide();
                    $('.addNewChild').find('.addInnerChildContent').find('input[type=text]').val('');
                    $('.addNewChild').find('.addInnerChildContent').find('input[type=radio]').prop('checked', false);
                    $('.addNewChild').find('.childcontainer').remove();
                    $('#Note').val('Pregnant Mother Transition to New Program Year');
                    pregMomTags = 'PM Transition,,;Returning,,;';
                }
                else if ($('#transType_hide').val() == '6') {

                    if ($('#birthTypeDiv').length > 0) {
                        $('#birthTypeDiv').hide();
                    }
                    $('#Note').val('Pregnant Mother has indicated, she is not planning on returning to our program.');
                    pregMomTags = 'PM Transition,,;Not Returning,,;';
                }
                else {

                    $('#Note').val('Pregnant Mother Transition');
                    $('#birthTypeDiv').show();
                    pregMomTags = 'PM Transition,,;';
                }

                CKEDITOR.replace('Note', {
                    language: 'en-gb',
                    uiColor: '#295b8f',
                    disableNativeSpellChecker: false
                });

                $('#status_CaseNotetags').destroyTagsInput();

                $('#status_CaseNotetags').tagsInput({
                    width: 'auto',
                    height: 'auto',
                    delimiter: [',', ';'],
                    autocomplete: {
                        //'source': tags_array[0].split(/,\s*/)
                        'source': getTagsOnInput()
                    },
                    autocomplete_url: '',
                });

                $('#status_CaseNotetags').importTags(pregMomTags);

            });



            $('.btn-accept').on('click', function () {

                var fa_check = $(this).next('i');
                cleanValidation();

                if ($(this).parent('div').parent('div').attr('id') == 'pregMomInsuranceDiv') {

                    if ($('#pregMomInsuranceDiv').find('input[name=PregInsType]:checked').length == 0) {
                        // plainValidation('#PregOtherInsuranceType');
                        customAlert('Please Select Insurance Type');
                        return false;
                    }

                    if ($('#pregMomInsuranceDiv').find('input[name=PregInsType]:checked').val() == '3' && $('#PregOtherInsuranceType').val() == '') {

                        plainValidation('#PregOtherInsuranceType');
                        customAlert('Please specify other insurance');
                        return false;
                    }
                }


                if (!fa_check.is(':visible')) {
                    fa_check.show();
                }

                return true;

            });


            //Bind Case Note Section//

            //Case Note Date//
            $('#transitionCaseNoteDate').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $('#transitionCaseNoteDate').val(getFormattedDate(new Date()));

            $('#transitionCaseNotetitle').val('Pregnant Mother Transition');
            //Note sectopm
            if (CKEDITOR.instances['Note']) {
                CKEDITOR.instances['Note'].destroy(true);
            }
            $('#Note').val('Pregnant Mother Transition');

            CKEDITOR.replace('Note', {
                language: 'en-gb',
                uiColor: '#295b8f',
                disableNativeSpellChecker: false
            });

            $('#status_CaseNotetags').tagsInput({
                width: 'auto',
                height: 'auto',
                delimiter: [',', ';'],
                autocomplete: {
                    //'source': tags_array[0].split(/,\s*/)
                    'source': getTagsOnInput()
                },
                autocomplete_url: '',
            });

            $('#statusclientsDiv').find('input[type=checkbox]').prop('checked', true);
            $('#statusStaffDiv').find('input[type=checkbox]').prop('checked', true);


            $('#status_CaseNotetags').importTags("PM Transition,,;");


            $(".transition-radio-btn input[name='PregInsType']").click(function () {

                var val = "0";
                $('#PregOtherInsuranceType').val('');
                if ($(this).is(":checked")) {
                    val = $(this).val();
                }
                if (val == "3") {
                    $('#PregOtherInsuranceType').parent('div').show();
                }
                else {

                    $('#PregOtherInsuranceType').parent('div').hide();
                }
                $(this).closest('#pregMomInsuranceDiv').find('.btn-accept').next('.fa-check').hide();

            });

            $('#DentaldivPrgChild').find('input[name=DentalServices]').on('change', function () {

                $("#DentalServicesID").find('.btn-accept').next('.fa-check').hide();

            });

            $(".transition-radio-btn input[name='InsType']").click(function () {

                var val = "0";
                $('#OtherInsuranceType').val('');
                if ($(this).is(":checked")) {
                    val = $(this).val();
                }
                if (val == "3") {
                    $('#OtherInsuranceType').parent('div').show();
                }
                else {

                    $('#OtherInsuranceType').parent('div').hide();
                }
                //  $(this).closest('#pregMomInsuranceDiv').find('.btn-accept').next('.fa-check').hide();

            });


            $(".transition-radio-btn input[name='BirthType']").click(function () {

                //addNewChild
                var val = "0";
                var caseNoteText = '';
                var prgtags = '';

                if ($(this).is(":checked")) {
                    val = $(this).val();

                }

                if (val == "0") {
                    $('.addNewChild').hide();
                    $('.divBirthType').hide();
                    caseNoteText = 'Pregnant Mother Transition with No Birth';
                    prgtags = 'Transition,,;No Birth,,;';
                }
                else if (val == "1") {
                    $('.addNewChild').hide();
                    $('.divBirthType').hide();
                    caseNoteText = 'Pregnant Mother Transition with Left Before Birth of Child';
                    prgtags = 'Transition,,;Left Before Birth of Child,,;'
                }
                else if (val == "2") {
                    $('#InsTypeHeading').text("Insurance Type For Child");
                    $('.addNewChild').show();
                    $('.divBirthType').hide();
                    caseNoteText = 'Pregnant Mother Transition with Single Child of Birth';
                    prgtags = 'Transition,,;Single Child Birth,,;'
                    if ($('.addInnerChildContent.childcontainer').length >= 1) {
                        $('.addInnerChildContent.childcontainer').each(function (i) {
                            $(this).remove();
                        });
                    }
                }
                else if (val == "3") {
                    $('.addNewChild').hide();
                    // $('.addNewChildBody').addClass('childcontainer');
                    $(this).closest('div').find('.divBirthType').show();
                    caseNoteText = 'Pregnant Mother Transition with Multi Child Birth';
                    prgtags = 'Transition,,;Multi Child Birth,,;'
                }
                else {

                    $('.divBirthType').hide();
                }

                if (CKEDITOR.instances['Note']) {
                    CKEDITOR.instances['Note'].destroy(true);
                }
                $('#Note').val(caseNoteText);

                CKEDITOR.replace('Note', {
                    language: 'en-gb',
                    uiColor: '#295b8f',
                    disableNativeSpellChecker: false
                });


                $('#status_CaseNotetags').destroyTagsInput();

                $('#status_CaseNotetags').tagsInput({
                    width: 'auto',
                    height: 'auto',
                    delimiter: [',', ';'],
                    autocomplete: {
                        //'source': tags_array[0].split(/,\s*/)
                        'source': getTagsOnInput()
                    },
                    autocomplete_url: '',
                });

                $('#status_CaseNotetags').importTags(prgtags);

            });

            $(".transition-radio-btn input[name='InsType']").click(function () {

                var val = "0";
                if ($(this).is(":checked")) {
                    val = $(this).val();
                }
                if (val == "C3D1") {
                    $(this).closest('div').find('.divInsType').show();
                }
                else {

                    $('.divInsType').hide();
                }
            });


            $('#spnMultiChildBirth').click(function () {
                $('.err-message-birthtype').hide();
                if ($('#MultiChildBirth').val() == "" || $('#MultiChildBirth').val() == null) {
                    $('#spnMultiChildBirthErr').text("Please enter number of child.");
                    $('#spnMultiChildBirthErr').show();
                    return false;
                }

                $('#InsTypeHeading').text("Insurance Type For Children");
                if ($('.addInnerChildContent.childcontainer').length >= 1) {
                    $('.addInnerChildContent.childcontainer').each(function (i) {
                        $(this).remove();
                    });
                }
                $('.addNewChild').show();

                var multiChild = parseInt($('#MultiChildBirth').val());

                var htmlContent = $('.addNewChildBody').html();
                for (var i = 1; i < multiChild; i++) {
                    $('.addNewChildBody').append(htmlContent);

                }
                var inc = 1;
                $('.addInnerChildContent').each(function (i) {
                    if (inc != 1) {
                        $(this).addClass('childcontainer');
                    }
                    inc++;
                });
            })





        });


    </script>






}


@section MainContentHolder{

    <div class="container-fluid">
        <div class="row">
            <div class="right-side-container-ch">
                <div class="col-xs-12 no-padding">
                    <div class="col-xs-12 top-header-background no-padding">
                        <div class="top-header" style="margin-top:20px;">
                            <div class="nav-icon1">
                                <img src="images/nav-bar.png">
                            </div>
                            <div class="col-xs-12 no-padding">
                                <div class="top-header-title-transportation">
                                    <h1>Pregnant Mother Transition</h1>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-xs-12 no-padding">
                        <div class="col-xs-12 no-padding">



                            <div class="col-xs-12  mCustomScrollbar">
                                <div class="col-xs-12 transition-section">
                                    <div class="col-xs-12 info-heading">

                                    </div>
                                    <div class="col-xs-12 preginfo">

                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">

                                                <div class="transition-content-desc" style="position: relative;">
                                                    <p style="background:none;border:none;">Client</p>
                                                </div>
                                            </div>
                                            <div class="col-lg-5 col-xs-7 no-padding">
                                                <div class="transition-inner" style="position: relative;">
                                                    <label class="ed-primary-color">@Model.Name</label>
                                                    <input type="hidden" id="enc_householdId" value="@Model.HouseholdId" />
                                                    @Html.HiddenFor(m => m.EClientID)
                                                    @Html.HiddenFor(m => m.Enc_ProgID)
                                                    @Html.Hidden("transType_hide", Model.TypeOfTransition)
                                                </div>
                                            </div>
                                        </div>



                                        @if (Model.TypeOfTransition == 6)
                                        {



                                            <div class="col-xs-12 no-padding" style="margin-bottom: 10px;" id="returningDiv">
                                                <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background:none;border:none;"><strong>@Model.Name</strong> will return next program year</p>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-xs-7 no-padding">
                                                    <div class="transition-radio-btn enroll-sec" id="returningDiv">

                                                        <div class="radio radio-info">
                                                            @Html.RadioButtonFor(m => m.Returning, 1)
                                                            <label>Yes</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            @Html.RadioButtonFor(m => m.Returning, 2)
                                                            <label>No</label>
                                                        </div>

                                                        <div class="radio radio-info">
                                                            @Html.RadioButtonFor(m => m.Returning, 3)
                                                            <label>Undecided</label>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>

                                        }



                                        @*<div class="col-xs-12 no-padding" style="margin-bottom: 10px;" id="pregMomReadyTransDiv">
                                                <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                    <div class="enroll-sec" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background: none;border: none;"><strong>@Model.Name</strong> ready for Transtion?<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-xs-7" style="padding:0;">
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.PregMomTransitionReady, 1)
                                                        <label>Yes</label>
                                                    </div>
                                                    <div class="radio radio-info">
                                                        @Html.RadioButtonFor(m => m.PregMomTransitionReady, 2)
                                                        <label>No</label>
                                                    </div>
                                                </div>
                                            </div>*@



                                        <div class="col-xs-12 no-padding" style="margin-bottom: 10px;" id="PregMomNewProgYeartrans">
                                            <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                <div class="enroll-sec" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background: none;border: none;">
                                                            Is <strong>@Model.Name</strong> ready for transition?. Click OK to start transition or Cancel to exit

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-7 col-xs-7" style="padding:0;">
                                                <button type="button" class="btn btn-primary" id="btnTransOk">OK</button>

                                                <button type="button" class="btn btn-primary" id="btnTansCancel">Cancel</button>
                                            </div>
                                        </div>


                                        <div class="col-xs-12 col-lg-12 no-padding" style="display:none;" id="pregMomTransitionDiv">

                                            <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                                <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p style="background:none;border:none;">Date of Transition<span class="error-notify">*</span></p>
                                                    </div>
                                                </div>
                                                <div class="col-lg-5 col-xs-7 no-padding">
                                                    <div class="transition-inner" style="position: relative;">
                                                        <span class="transition-field-style"></span>
                                                        <input type="text" maxlength="10" placeholder="MM/DD/YYYY" style="margin-bottom: 5px;" class="form-control txt-date mandatory transitionDate" value="@Model.DateOfTransition" />
                                                        <div class="err-container irr-error">
                                                            <span class="err-message">Date is required</span>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>



                                            <div class="alert alert-info col-xs-12" role="alert" style="border-radius:unset;line-height:25px;">
                                                <div class="col-lg-1 col-xs-2" style="font-weight:bold;margin-top:5px;">Note!&nbsp;</div>
                                                <div class="col-lg-11 col-xs-10">
                                                    Options are selected default based on the Start of Enrollement of Client. In case, same as followed or change on option,
                                                    Please, click on <button class="btn btn-primary">Accept</button> to see the effect of changes.
                                                </div>
                                            </div>

                                            <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                                <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                    <div class="transition-content-desc" style="position: relative;">
                                                        <p class="pir-q-p" style="background:none;border:none;"><strong class="pir-Q-lbl">Q1.</strong>&nbsp;Insurance Type</p>
                                                    </div>
                                                </div>

                                                <div class="col-lg-7 col-xs-7" style="padding:0;">
                                                    <div class="transition-radio-btn enroll-sec margin-enroll" style="margin-left:0px;" id="pregMomInsuranceDiv">
                                                        <div class="col-xs-12 no-padding">
                                                            <div class="radio radio-info">
                                                                @*<input type="radio" name="PregInsType" class="PregInsuranceType" value="C3A2" @if (instype == "C3A1") { <text> checked="checked" </text>           }>*@
                                                                <input type="radio" name="PregInsType" class="PregInsuranceType" value="1" @if (Model.InsuranceType == 1) { <text> checked="checked" </text>                }>

                                                                <label>Medicare / Chip</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 no-padding">
                                                            <div class="radio radio-info">
                                                                @* <input type="radio" name="PregInsType" class="PregInsuranceType" value="C4" @if (instype == "C4") { <text> checked="checked" </text>           }>*@

                                                                <input type="radio" name="PregInsType" class="PregInsuranceType" value="2" @if (Model.InsuranceType == 2) { <text> checked="checked" </text>                }>

                                                                <label>No Insurance</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 no-padding">
                                                            <div class="radio radio-info">
                                                                @*<input type="radio" name="PregInsType" class="PregInsuranceType" value="C3D2" @if (instype == "C3D1") { <text> checked="checked" </text>           }>*@
                                                                <input type="radio" name="PregInsType" class="PregInsuranceType" value="3" @if (Model.InsuranceType == 3) { <text> checked="checked" </text>                }>

                                                                <label>Other Insurance</label>
                                                            </div>

                                                            <div class="col-lg-6" @if (Model.InsuranceType != 3) { <text> style="display:none;" </text>          }>
                                                                <label style="color: #163b69;font-size: 14px;font-weight: normal;"><i>Please Specify</i></label>
                                                                <input type="text" class="form-control" id="PregOtherInsuranceType" value="@Model.OtherInsuranceTypeDesc">
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 no-padding">
                                                            <div class="radio radio-info">
                                                                @* <input type="radio" name="PregInsType" class="PregInsuranceType" value="C3C2" @if (instype == "C3C1") { <text> checked="checked" </text>           }>*@

                                                                <input type="radio" name="PregInsType" class="PregInsuranceType" value="4" @if (Model.InsuranceType == 4) { <text> checked="checked" </text>                }>

                                                                <label>Private Health Insurance</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 no-padding">
                                                            <div class="radio radio-info">


                                                                @*<input type="radio" name="PregInsType" class="PregInsuranceType" value="C3B2" @if (instype == "C3B1") { <text> checked="checked" </text>           }>*@

                                                                <input type="radio" name="PregInsType" class="PregInsuranceType" value="5" @if (Model.InsuranceType == 5) { <text> checked="checked" </text>                }>

                                                                <label>State Funded</label>



                                                            </div>
                                                            <button type="button" class="btn btn-primary btn-accept" id="btnAcceptInsurance">Accept</button>
                                                            <i class="fa fa-check" aria-hidden="true" style="padding-left:8px;font-size:15px;color:green;display:none;"></i>

                                                        </div>
                                                    </div>

                                                    <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                        <span class="err-message err-message-preginstype">Insurance type is required</span>
                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-xs-12 no-padding" id="DentaldivPrgChild" style="margin-bottom: 10px;">
                                                <div class="col-lg-5 col-xs-5" style="padding-left:0;">
                                                    <div class="enroll-sec">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;" class="pir-q-p" id="pregchild-p"><strong class="pir-Q-lbl">Q2.</strong>&nbsp;Has pregnant mother had a professional dental exam since last year's PIR?</p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-xs-7 no-padding" id="DentalServicesID">
                                                    <div class="transition-radio-btn enroll-sec">
                                                        <div class="radio radio-info">

                                                            @Html.RadioButtonFor(m => m.DentalServices, true, new { @class = "DentalServices" })
                                                            @* <input type="radio" name="DentalServices" class="DentalServices"  value="true" >*@
                                                            <label>Yes</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            @Html.RadioButtonFor(m => m.DentalServices, false, new { @class = "DentalServices" })


                                                            @*<input type="radio" name="DentalServices" class="DentalServices" value="false">*@
                                                            <label>No</label>
                                                        </div>

                                                        <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                            <span class="err-message err-message-ms">Medical services is required</span>
                                                        </div>


                                                    </div>

                                                    <button type="button" class="btn btn-primary btn-accept" id="btnAcceptOral">Accept</button>
                                                    <i class="fa fa-check" aria-hidden="true" style="padding-left:  8px;font-size:  15px;color:  green;display:none;"></i>

                                                </div>
                                            </div>


                                            @if(Model.TypeOfTransition==6)
                                            {

                                            <div class="col-xs-12 no-padding" id="currentFuturTran" style="margin-bottom: 10px;">
                                                <div class="col-lg-5 col-xs-5" style="padding-left:0;">
                                                    <div class="enroll-sec">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;" class="pir-q-p" id="pregchild-p"><strong class="pir-Q-lbl">Q3.</strong>&nbsp;Will pregnant mother transition to new program year?<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-xs-7 no-padding" id="newProgyearID">
                                                    <div class="transition-radio-btn enroll-sec">
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="programyeartrans" class="programyeartrans" value="true">
                                                            <label>Yes</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="programyeartrans" class="programyeartrans" value="false">
                                                            <label>No</label>
                                                        </div>

                                                        <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                            <span class="err-message err-message-prtrans"></span>
                                                        </div>


                                                    </div>


                                                </div>
                                            </div>
                                            }

                                            @if (Model.TypeOfTransition != 6)
                                            {
                                                <div class="col-xs-12" style="margin-bottom: 10px;" id="birthTypeDiv">
                                                    <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;">Type of Birth<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>


                                                    <div class="col-lg-7 col-xs-7" style="padding:0;">
                                                        <div class="transition-radio-btn enroll-sec margin-enroll" style="margin-left:0px;">
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="BirthType" class="ClsBirthType" value="0">
                                                                    <label>No Birth</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="BirthType" class="ClsBirthType" value="1">
                                                                    <label>Left Before Birth of Child</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info">
                                                                    <input type="radio" name="BirthType" class="ClsBirthType" value="2">
                                                                    <label>Single Child Birth</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 no-padding">
                                                                <div class="radio radio-info" style="width:100%;">
                                                                    <input type="radio" name="BirthType" class="ClsBirthType" value="3">
                                                                    <label>Multi Child Birth</label>
                                                                    <div class="transition-inner divBirthType col-xs-12 no-padding" style="position: relative;display: none;">
                                                                        <span class="transition-field-style"></span>
                                                                        <input type="text" class="form-control" id="MultiChildBirth" value="" style="width: 80px;display:inline-block;height: 36px;margin-top: 3px;" onkeypress="return isNumber(event)">
                                                                        <span id="spnMultiChildBirth" style="display:inline-block;background: #1e5482;/* width: 42px; *//* height: 42px; */text-align: center;line-height: 32px;color: #fff;font-size: 24px;cursor: pointer;font-size: 15px;padding: 0 10px;border-radius: 5px;margin-left: 10px;margin-top: 6px;">Load Forms</span>

                                                                    </div>
                                                                    <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                                        <span id="spnMultiChildBirthErr" class="err-message"></span>

                                                                    </div>
                                                                </div>




                                                            </div>

                                                        </div>

                                                        <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                            <span class="err-message err-message-birthtype">Type of child birth is required</span>
                                                        </div>

                                                    </div>
                                                </div>
                                            }


                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-12   mCustomScrollbar">

                                <div class="col-xs-12 transition-section addNewChild" style="display:none;">



                                    <div class="col-xs-12 info-heading">
                                        <h2 id="InsTypeHeading"></h2>
                                    </div>

                                    <div class="col-xs-12 no-padding" style="margin-bottom: 10px;">
                                        <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background:none;border:none;">Insurance Type<span class="error-notify">*</span></p>
                                            </div>
                                        </div>

                                        <div class="col-lg-7 col-xs-7" style="padding:0;">
                                            <div class="transition-radio-btn enroll-sec margin-enroll" style="margin-left:0px;">
                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        <input type="radio" name="InsType" class="InsuranceType" value="1">
                                                        <label>Medicare / Chip</label>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        <input type="radio" name="InsType" class="InsuranceType" value="2">
                                                        <label>No Insurance</label>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        <input type="radio" name="InsType" class="InsuranceType" value="3">
                                                        <label>Other Insurance</label>
                                                    </div>

                                                    <div class="col-lg-6" style="display:none;">
                                                        <label style="color: #163b69;font-size: 14px;font-weight: normal;"><i>Please Specify</i></label>
                                                        <input type="text" class="form-control optional" id="OtherInsuranceType" value="">
                                                    </div>

                                                </div>
                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        <input type="radio" name="InsType" class="InsuranceType" value="4">
                                                        <label>Private Health Insurance</label>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 no-padding">
                                                    <div class="radio radio-info">
                                                        <input type="radio" name="InsType" class="InsuranceType" value="5">
                                                        <label>State Funded</label>

                                                    </div>

                                                </div>
                                            </div>

                                            <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                <span class="err-message err-message-instype">Insurance type is required</span>
                                            </div>

                                        </div>
                                    </div>





                                    @*@if (Model.TransitionProgramType != null)
                                    {
                                        if (Model.TransitionProgramType.AllowCurrentApplication == true && Model.TransitionProgramType.AllowFutureApplication == true)
                                        {

                                            <input type="hidden" id="allowFutureInput" value="1" />
                                            <input type="hidden" id="allowCurrentInput" value="1" />

                                            <div class="col-xs-12 no-padding" id="allowFutureApplicationDiv" style="margin-bottom: 10px;">
                                                <div class="col-lg-6 col-xs-12" style="padding-left:0;">
                                                    <div class="enroll-sec">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p class="pir-q-p" style="border:none;background:none;padding:10px 0;">Accept Application for Next Program Year <span id="spanYear">@("(" + Model.TransitionProgramType.FutureProgramYear + ")")</span> ? <span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-xs-12 no-padding" id="allowFutureRadioDiv">
                                                    <div class="transition-radio-btn enroll-sec enroll-sec-padding">
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="radioFutureApp" value="1">
                                                            <label>Yes</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="radioFutureApp" value="0">
                                                            <label>No</label>
                                                        </div>

                                                        <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                            <span class="err-message err-message-ms" style="display: none;">This field is required</span>
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>
                                    }

                                    if (Model.TransitionProgramType.AllowCurrentApplication == false && Model.TransitionProgramType.AllowFutureApplication == true)
                                    {
                                            <input type="hidden" id="allowFutureInput" value="1" />
                                            <input type="hidden" id="allowCurrentInput" value="0" />
                                                        <div class="col-xs-12 no-padding" id="allowFutureApplicationLbl" style="margin-bottom: 15px; padding: 4px 12px;">

                                                            <div class="info" style="background-color: #d9edf7; border-left: 6px solid #2196F3;padding:10px;">
                                                                <p><strong>Note! </strong>This Application will be accepted to the Program Year <strong id="strongYear">@("("+Model.TransitionProgramType.FutureProgramYear+")")</strong></p>
                                                            </div>
                                                        </div>
                                        }
                                        else
                                        {
                                            <input type="hidden" id="allowFutureInput" value="0" />
                                            <input type="hidden" id="allowCurrentInput" value="0" />
                                        }

                                    }*@



                                    <div class="col-xs-12 info-heading">
                                        <h2>Child Information</h2>
                                    </div>
                                    <div class="col-xs-12 addNewChildBody">
                                        <div class="col-xs-12 addInnerChildContent no-padding">
                                            <form role="form">
                                                <div class="col-lg-6 col-xs-12" style="margin-bottom: 10px;margin-top:15px;">
                                                    <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;">First Name<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7 col-xs-7 no-padding">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <input type="text" style="margin-bottom: 5px;" class="form-control childmandatory childFirstName" placeholder="First Name"/>

                                                            <div class="err-container irr-error">
                                                                <span class="err-message">First name is required</span>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-xs-12" style="margin-bottom: 10px;margin-top:15px;">
                                                    <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;">Last Name<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7 col-xs-7 no-padding">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <input type="text" style="margin-bottom: 5px;" class="form-control childmandatory childLastName" placeholder="Last Name" />

                                                            <div class="err-container irr-error">
                                                                <span class="err-message">Last name is required</span>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-xs-12" style="margin-bottom: 10px;">
                                                    <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;">DOB<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7 col-xs-7 no-padding">
                                                        <div class="transition-inner" style="position: relative;">
                                                            <span class="transition-field-style"></span>
                                                            <input type="text" maxlength="10" class="form-control txt-date childmandatory dob" style="margin-bottom: 5px;" placeholder="MM/DD/YYYY" value="" />
                                                            <div class="err-container  irr-error">
                                                                <span class="err-message">Date of birth is required</span>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="col-lg-6 col-xs-12" style="margin-bottom: 10px;">
                                                    <div class="col-lg-5 col-xs-5" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background:none;border:none;">Gender<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7 col-xs-7 no-padding transition-radio-btn">
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="yn" class="gender" value="1">
                                                            <label>Male</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="yn" class="gender" value="2">
                                                            <label>Female</label>
                                                        </div>

                                                        <div class="err-container col-xs-12  irr-error" style="padding:0;">
                                                            <span class="err-message err-message-gender">Gender is required</span>
                                                        </div>
                                                    </div>



                                                </div>


                                                <div class="col-xs-12" style="margin-bottom: 10px;">
                                                    <div class="enroll-sec" style="padding-left: 0;">
                                                        <div class="transition-content-desc" style="position: relative;">
                                                            <p style="background: none;border: none;">Will the newborn be enrolled into the EHS program?<span class="error-notify">*</span></p>
                                                        </div>
                                                    </div>
                                                    <div class="transition-radio-btn enroll-sec">
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="yn1" class="IsEHS" value="true">
                                                            <label>Yes</label>
                                                        </div>
                                                        <div class="radio radio-info">
                                                            <input type="radio" name="yn1" class="IsEHS" value="false">
                                                            <label>No</label>
                                                        </div>

                                                        <div class="err-container irr-error col-xs-12" style="padding:0;">
                                                            <span class="err-message err-message-ehs">EHS program is required</span>
                                                        </div>
                                                    </div>


                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            @* case note *@


                            <div class="col-xs-12 col-lg-12 casenote-section transition-section" id="casenoteSectionDiv" style="display:none;">
                                <h3 class="addapplicant2"><i class="fa fa-book" aria-hidden="true"></i>  Case Note</h3>

                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Date<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-5 col-sm-7">

                                        <input type="text" id="transitionCaseNoteDate" class="form-control" placeholder="MM/DD/YYYY" onblur="checkStatusChangeDate(this);" />
                                        @* @Html.TextBoxFor(m => m.CaseNoteDetails.CaseNoteDate, new { @class = "form-control", id = "transitionCaseNoteDate", onblur = "checkStatusChangeDate(this);", placeholder = "MM/DD/YYYY" })*@

                                    </div>
                                </div>

                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Title<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-5 col-sm-7">

                                        @*@Html.TextBoxFor(m => m.CaseNoteDetails.CaseNotetitle, new { @class = "form-control", id = "transitionCaseNotetitle", placeholder = "Case Note Title" })*@
                                        <input type="text" id="transitionCaseNotetitle" class="form-control" placeholder="Case Note Title" />
                                    </div>
                                </div>


                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Note<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-5 col-sm-7">

                                        @*@Html.TextAreaFor(m => m.CaseNoteDetails.Note, new { @style = "display:none;" })*@

                                        <textarea style="display:none;" id="Note"></textarea>
                                    </div>
                                </div>

                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Clients<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-8 col-sm-7 no-padding" id="statusclientsDiv">
                                        @{
                                            int i = 0;
                                        }

                                        @if (Model.Users != null && Model.Users.Clientlist != null && Model.Users.Clientlist.Count > 0)
                                        {
                                            foreach (var item in Model.Users.Clientlist)
                                            {
                                                <div class="col-sm-12 adddivspace" style="margin-top:8px;">


                                                    <input type="checkbox" name="Users.Clientlist['@i'].Id" value="@item.Id">
                                                    <span>@item.Name</span>
                                                </div>
                                                i++;
                                            }

                                        }

                                    </div>
                                </div>



                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Tags<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-5 col-sm-7">
                                        <input type="text" id="status_CaseNotetags" name="status_CaseNotetags" class="form-control ui-autocomplete-input">
                                    </div>
                                </div>


                                <div class="col-xs-12 col-sm-12 adddivspace" style="margin-bottom:10px;">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Developmental Team<span class="error-notify">*</span></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-8 col-sm-7 no-padding" id="statusStaffDiv">
                                        @{
                                            int j = 0;
                                        }
                                        @if (Model.Users != null && Model.Users.UserList != null && Model.Users.UserList.Count > 0)
                                        {
                                            foreach (var item2 in Model.Users.UserList)
                                            {
                                                <div class="col-sm-12 col-lg-12 m-tp" style="margin-top:8px;">
                                                    <input type="checkbox" class="staff-check" name="staff-check" value="@item2.Id">
                                                    <span name="Users.UserList['@j'].Name">@item2.Name</span>
                                                </div>

                                                j++;
                                            }
                                        }



                                    </div>
                                </div>

                                <div class="col-xs-12 col-sm-12 adddivspace">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Secure Note Level?</p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-5 col-sm-7 text-center">
                                        <div class="addn-poup-div1">
                                            <input type="checkbox" id="CaseNoteSecurity" value="true" name="CaseNoteSecurity" style="margin-left:5px;">
                                            <span>Yes</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xs-12 col-sm-12 adddivspace" id="statusattachmentsDiv" style="margin-bottom:25px;">
                                    <div class="col-lg-3 col-xs-5" style="padding-left: 0;">
                                        <div class="enroll-sec" style="padding-left: 0;">
                                            <div class="transition-content-desc" style="position: relative;">
                                                <p style="background: none;border: none;">Attachment</p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-9 col-sm-7">
                                        <div class="col-sm-7 col-lg-6 no-padding">
                                            <input type="file" id="FirstFile" name="Attachments[0].file" onchange="ValidateSingleInputpdf2(this)" class="form-control">
                                        </div>
                                        <div class="col-sm-3 col-lg-3 adddivspace">

                                            <a href="javascript:void(0)" id="Attachmectstag" title="Add Attachment" onclick="addMoreStatusAtt(this);"><i class="fa fa-plus-circle"></i>&nbsp;Add</a>

                                        </div>
                                    </div>

                                    <div class="col-lg-9" id="addAttachmentDiv"></div>

                                </div>




                            </div>





                            <div class="col-xs-12" id="submitCancelDiv" style="display:none;">
                                <div class="transition-analysis-btn">
                                    <a id="submitTransition" style="cursor:pointer;">Submit</a>
                                    <a href="/Roster/Roster" style="background:#e74c3c;">Cancel</a>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
    <div class="modal fade" id="SeatsAvailability" role="dialog">
        <div class="modal-dialog">
            @*Modal content*@
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Information</h4>
                </div>

                <div class="form-group">
                    <label id="lblSeatsAvailability" style="width:  100%; text-align:  center;padding:  0; margin:  0;font-family: inherit;" class="control-label"></label>

                </div>
                <div class="modal-footer">
                    <button type="button" onclick="RedirectToDashboard()" class="my-btn1">OK</button>
                </div>
            </div>
        </div>
    </div>



}


