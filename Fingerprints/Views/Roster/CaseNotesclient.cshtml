@model FingerprintsModel.CaseNoteByClientID


@{
    @section Title
{
        Case Notes Client

    }



    if (Session["Roleid"] != null && (Session["Roleid"].ToString().Contains("a65bb7c2-e320-42a2-aed4-409a321c08a5") || Session["Roleid"].ToString().Contains("3b49b025-68eb-4059-8931-68a0577e5fa2")))
    {
        Layout = "~/Views/Shared/AgencyAdminLayout.cshtml";
    }
    else
    {

        Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";
    }

}



@using FingerprintsModel;

@section Style{



    <link href="~/Content/CaseNote/css/style.css" rel="stylesheet" />
    <style>

        body:after
        {
            height: 16px!important;
        }
       
            .fa-checkbox.all-notes-check label {
        display: inline-block;
        vertical-align: middle;
        position: relative;
        padding-left: 22px;
        color: #163b69;
        font-size: 15px;
        font-weight: bold;
    }


            .fa-checkbox.all-notes-check input[type="checkbox"]:checked + label:before {
        color: #3FC593;
        width: 14px;
        height: 14px;
        content: '';
        position: absolute;
        top: 3px;
        left: 0;
        /* background-image: url(../../Images/checked.png); */
        content: "\f14a";
        font: normal normal normal 16px/1 FontAwesome;
    }

            .fa-checkbox.all-notes-check input[type="checkbox"] + label:before {
        position: absolute;
        top: 3px;
        width: 14px;
        height: 14px;
        left: 0;
        /* background-image: url(../../Images/check.png); */
        content: "\f096";
        color: #333;
        margin-right: 10px;
        font: normal normal normal 16px/1 FontAwesome;
    }


        .scroll-thead th {
            border: 1px solid #f1f5f8;
        }

        .scroll-thead {
            display: table;
            width: 100%;
            table-layout: fixed;
            width: 98.3%;
        }

        .scroll-tbody tr td, .scroll-tbody1 tr td {
            word-break: break-word;
        }

        .scroll-tbody {
            display: block;
            height: 250px;
            overflow: auto;
            overflow-x: hidden;
        }

            .scroll-tbody tr {
                display: table;
                width: 100%;
                table-layout: fixed;
            }




       


        .backto_list {
        }

        .backto_list {
            padding: 9px 20px;
            background-color: #3498db;
            color: #fff;
            font-size: 14px;
            border-style: none;
            border-radius: 5px;
        }

        #txtSearch_tagsinput {
            width: 60% !important;
            min-height: 38px;
            height: 38px;
            display: inline-block !important;
            position: relative;
            top: 12px;
        }

        .download-attachment a i {
            font-size: 25px;
        }

        .download-attachment a {
            display: inline-block;
            width: auto !important;
            padding-top: 8px;
            padding-right: 10px;
        }

        .download-attachment span {
            padding-top: 18px;
            float: left;
        }

        .sub-text {
            float: left;
            width: 100%;
            line-height: 25px;
        }

        .addn-poup-div, .tag-text-block {
            float: left;
            width: 100%;
        }

        .sub-text-block {
            /*padding: 10px;*/
            background: #f9f9f9;
            /*margin-top: 5px;*/
        }

            .sub-text-block p {
                margin: 0;
                padding: 0;
                /*font-weight: bold;*/
                color: #34495e;
            }

        .tag-text-block {
            padding: 0;
        }

            .tag-text-block label {
                width: auto;
                display: inline-block;
                float: left;
                font-size: 16px;
                font-weight: normal;
            }

        .tag-text {
            width: auto;
            display: inline-block;
            float: left;
            padding: 10px;
            text-decoration: none;
            background: #295b8f;
            color: #fff;
            margin-left: 5px;
            margin-bottom: 5px;
            font-family: helvetica;
            font-size: 13px;
            margin-top: 7px;
        }

        .sub-text-block {
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            -webkit-box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .tag-text-block p, .tag-text-block i {
            width: auto;
            display: inline-block;
            float: left;
            margin-top: 6px;
            margin-left: 5px;
        }

        .tag-text-block i {
            margin-top: 10px;
        }

        .page-header {
            margin: 8px 0px 20px !important;
        }

        #DeleteCaseNote_Modal .modal-body {
            position: relative;
        }

        #DeleteCaseNote_Modal .modal-body {
            background: #34495e none repeat scroll 0 0;
            border: 6px solid #ffffff;
            border-radius: 3px;
            /* color: #ffffff; */
            float: left;
            padding: 15px 3%;
            position: relative;
            width: 100%;
        }

            #DeleteCaseNote_Modal .modal-body > h2 {
                margin-top: 10px;
                float: left;
                font-size: 24px;
                font-weight: 600;
                text-align: center;
                width: 100%;
                margin-bottom: 20px;
                color: #fff;
            }

        #DeleteCaseNote_Modal .close {
            opacity: 1;
            position: absolute;
            right: -14px;
            top: -15px;
        }

        #subnote-tbl thead tr,
        #mainnote-tbl thead tr {
            background: #9B58B4;
            color: #fff;
        }

        #subnote-tbl tbody tr,
        #mainnote-tbl tbody tr {
            text-align: center;
        }

        [name="maincase"],
        .subcasecheck {
            width: 20px;
            height: 20px;
        }
    </style>



}
@section Script{
    <script type="text/javascript">

        //var tags_array = ["lorem, ipsum, dolar, sit, amet"];
        function ShowSecurityAlert() {
            BootstrapDialog.show({
                title: 'Secure Case Note Alert',
                message: "Can't view the secured Case Note",
                buttons: [{
                    label: 'OK',
                    action: function (dialog) {
                        dialog.close();
                    }

                }]
            });

        }

        $(document).ready(function () {



            if ('@TempData["CaseNoteMessage"]' != '') {
                customAlert('@TempData["CaseNoteMessage"]');
            }


            $('button.save-casenote').attr('type', 'button');

            $('#div-pagination-casenote').ApplinkPG({
                'totalRecords': $('#totalCountSpan_casenote').html(),
                'sortrOrder': 'DESC',
                'sortColumn': 'th1',
                'isEnableSorting': true,
                'getRecordUrl': HostedDir + '/Roster/GetCaseNotes',
                'dataType': 'html',
                'data': {
                    'CenterID': $('#CenterId_casenote').val(),
                    'Enc_ClientID': $('#ClientId_casenote').val(),
                    'Enc_HouseholdID': $('#HouseHoldId_casenote').val(),
                    'TagNames': '',
                    'IsCaseNoteManager':true
                },
                bindData: function (events, data) {
                    debugger;
                    var tbody = $('.glossy-table-body');

                    var appendText = '';
                    
                    if (events.options.dataType.toLowerCase() == 'json') {

                        events.options.totalRecords = data != null ? data.TotalRecord : 0;


                        if (data != null && data.CaseNoteList != null && data.CaseNoteList.length > 0) {




                            $.each(data.CaseNoteList, function (i, caseNote) {

                                appendText += '<tr casenoteid=' + caseNote.CaseNoteid + '>\
                                                            <td data-title="Date">\
                                                              <p>'+ caseNote.Date + '</p>\
                                                               </td>';

                                appendText += '<td data-title="Title">';
                                if (caseNote.IsAllowSecurityCN) {

                                    if (caseNote.IsEditable) {
                                        appendText += '<p data-editable="true" style="text-decoration: underline;cursor:pointer;" onclick="Getcasenote(true,' + caseNote.CaseNoteid + ',' + caseNote.Householid + ',' + caseNote.ClientId + ',this)" data-toggle="tooltip" title=' + caseNote.Title + '>' + caseNote.Title + '</p>';

                                    }
                                    else {
                                        appendText += '<p data-editable="false" style="text-decoration: underline;cursor:pointer;" onclick="Getcasenote(true,' + caseNote.CaseNoteid + ',' + caseNote.Householid + ',' + caseNote.ClientId + ', this)" data-toggle="tooltip" title=' + caseNote.Title + '>' + caseNote.Title + '</p>';

                                    }
                                }

                                else if (caseNote.WrittenBy.toLowerCase() == '@Session["UserID"].ToString().ToLowerInvariant()') {


                                    if (caseNote.IsEditable) {
                                        appendText += '<p data-editable="true" style="text-decoration: underline;cursor:pointer;" onclick="Getcasenote(true,' + caseNote.CaseNoteid + ',' + caseNote.Householid + ',' + caseNote.ClientId + ', this)" data-toggle="tooltip" title=' + caseNote.Title + '>' + caseNote.Title + '</p>';

                                    }
                                    else {
                                        appendText += '<p data-editable="false" style="text-decoration: underline;cursor:pointer;" onclick="Getcasenote(true,' + caseNote.CaseNoteid + ',' + caseNote.Householid + ',' + caseNote.ClientId + ',this)" data-toggle="tooltip" title=' + caseNote.Title + '>' + caseNote.Title + '</p>';

                                    }


                                }
                                else {

                                    appendText += ' <p style="text-decoration: underline;cursor:pointer;" onclick="ShowSecurityAlert()">Secured case note</p>'
                                }

                                appendText += '</td>';

                                appendText += '<td data-title="By">\
                                    <p data-toggle="tooltip" title='+ caseNote.BY + '>' + caseNote.BY + '</p>\
                                               </td>';

                                appendText += '<td data-title="Attachments">\
                                     <p>'+ caseNote.Attachment + '</p>\
                             </td>\
                             <td data-title="References">\
                                     <p>'+ caseNote.References + '</p\
                             </td>';

                                appendText += '<td data-title="Action">';


                                if ((caseNote.IsAllowSecurityCN) || (caseNote.WrittenBy.toLowerCase() == '@Session["UserID"].ToString().ToLowerInvariant()' && caseNote.SecurityLevel)) {
                                    appendText += '<p style="padding: 5px;">\
                                                <i class="fa fa-paperclip add-new" aria-hidden="true" data-toggle="tooltip" style="cursor:pointer; font-size :18px;background :#237646;color :#fff;padding :7px 12px;border-radius: 7px;margin-right :8px;" title="Append case notes"></i>\
                                                &nbsp;\
                                                <i class="fa fa-print export-new" aria-hidden="true" data-toggle="tooltip" style="cursor:pointer; font-size :18px;background :#2e628d;color :#fff;padding :7px 12px;border-radius: 7px;margin-right :8px;" title="Export to pdf"></i>\
                                            </p>';
                                }

                                if ('@FingerprintsModel.Role.RolesDictionary[(int)FingerprintsModel.Enums.RoleEnum.AgencyAdmin].ToLowerInvariant()' == '@Session["RoleId"].ToString().ToLowerInvariant()'
|| '@FingerprintsModel.Role.RolesDictionary[(int)FingerprintsModel.Enums.RoleEnum.GenesisEarthAdministrator].ToLowerInvariant()' == '@Session["RoleId"].ToString()') {

                                    appendText += ' <button type="button" class="btn delete-casenote" style="border-radius: 0px;color: #fff;margin-left: 8px;background: #e43838;" data-id=' + caseNote.CaseNoteid + '>Delete</button>';

                                }


                            });






                        }

                    }

                    else if (events.options.dataType.toLowerCase() == 'html') {


                        appendText = data;
                    }

                    tbody.html(appendText);

                    events.options.totalRecords = parseInt(tbody.closest('.div_table_responsive_' + events.paginationIndex + '').find('#totalCountSpan_casenote').html());


                    console.log(data);
                }
            });

            $(document).on("change", '[name="maincase"]', function () {

                var _val = $(this).prop("checked");

                if (_val) {
                    //$(".subcasecheck").
                    $(".subcasecheck").prop("checked", true);
                    $(".subcasecheck").prop("disabled", true);

                } else {
                    $(".subcasecheck").prop("checked", false);
                    $(".subcasecheck").prop("disabled", false)
                }

            });

            $(document).on("click", "#deletecasenote_btn", function () {

                var _MainSlcted = $('[name="maincase"]').prop("checked");
                var _MainId = $('[name="maincase"]').val(), appendId = [];
                //if (_MainSlcted) {
                //    _MainId = $('[name="maincase"]:checked').val();
                //}

                $.each($(".subcasecheck:checked"), function (ind, ele) {
                    //console.log(ele.value);

                    appendId.push(ele.value);
                });

                if (!_MainSlcted && !appendId.length) {

                    customAlert("Please select case note or append case note");
                    return false;
                }

                $.ajax({
                    type: "POST",
                    datatype: "json",
                    contentType: 'application/json',
                    beforeSend: function () { $("#spinner").show() },
                    url: "@Url.Action("DeleteCaseNote", "Roster")",
                    data: JSON.stringify({ casenoteid: _MainId, appendcid: appendId, deletemain: _MainSlcted }),
                    success: function (data) {
                        if (data) {
                            customAlert("Case Note has been deleted successfully");
                            // $('tr[casenoteid="10743"]').hide()
                            setTimeout(function () {
                                //   window.location.reload();
                                window.location.href = window.location.href.replace("#", "")
                            }, 2000);

                        } else {
                            customAlert("Something went wrong");
                        }
                    }, fail: function (res) {
                        customAlert("Something went wrong, try again");
                    }, complete: function (res) {
                        $("#spinner").hide();
                        $("#DeleteCaseNote_Modal").modal("hide");
                    }


                });

            });

            $(document).on("click", ".delete-casenote", function (e) {
                e.preventDefault();

                var _cid = $(this).data('id');
                var _noteLoaded = false, _subnoteLoaded = false, _mainNote = {}, _subNotes = [];

                $("#spinner").show();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetcasenotedetailByCaseNoteId", "Roster")?CaseNoteId=" + _cid,
                    success: function (data) {
                        _noteLoaded = true;
                        _mainNote = data;//_mainNote = data[0];
                    },
                    fail: function (res) {

                    },
                    complete: function (res) {
                        if (_subnoteLoaded == true) {
                            //  $("#spinner").hide();
                            loadModalData(_mainNote, _subNotes);
                        }

                    }

                });


                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetSubNotes", "Roster")?CaseNoteId=" + _cid,
                    success: function (data) {
                        _subnoteLoaded = true; _subNotes = data;
                    },
                    fail: function (res) {

                    },
                    complete: function (res) {
                        if (_noteLoaded == true) {
                            // $("#spinner").hide();
                            loadModalData(_mainNote, _subNotes);

                        }

                    }

                });




            });

            function loadModalData(mainNote, subNote) {

                $("#spinner").hide();
                $("#DeleteCaseNote_Modal").modal("show");
                var _mNt = {};
                if (Array.isArray(mainNote) && mainNote.length > 0) {
                    _mNt = mainNote[0];
                } else {
                    _mNt = mainNote;
                }

                $("#mainnote-tbl tbody, #subnote-tbl tbody").html('');


                var str = '<tr><td><input type="checkbox" data-CaseNoteid="' + _mNt.CaseNoteid + '" name="maincase" value="' + _mNt.CaseNoteid + '" /></td>';
                str += '<td>' + _mNt.Date + '</td><td>' + $('<div>' + _mNt.Note + '</div>').text().slice(0, 70) + "..." + '</td></tr>';

                $("#mainnote-tbl tbody").html(str);

                var _subStr = "";

                if (Array.isArray(subNote) && subNote.length > 0) {

                    subNote.forEach(function (obj, ind) {

                        _subStr += '<tr><td><input class="subcasecheck" data-SubCasenoteid="' + obj.SubCasenoteid + '" type="checkbox" name="subcase_' + ind + '" value="' + obj.SubCasenoteid + '" /></td>';

                        _subStr += '<td>' + moment(obj.WrittenDate).format('MM/DD/YYYY') + '</td><td>' + $('<div>' + obj.Notes + '</div>').text().slice(0, 70) + "..." + '</td></tr>';
                    });


                } else {
                    _subStr += '<tr><td colspan="3">No append Notes</td></tr>';
                }
                $("#subnote-tbl tbody").html(_subStr);
                //<tr><td><input type="checkbox" name="maincase" /></td>
                //                     <td>11/05/2018</td><td>Test String</td></tr>

                //                     subnote-tbl

                // <tr>
                //                         <td><input type="checkbox" name="subcase[0]" /></td>
                //                         <td>11/07/2018</td>
                //                         <td>Test append1</td>
                //                     </tr>

                console.log(mainNote, subNote);
            };


            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');
                    // $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                }
            });
            if ('@ViewBag.message' != '') {
                customAlert('@ViewBag.message');
            }
            $('#Rosterli').addClass("active");
            $('#Yakkrli').removeClass("active");
            $('#Appointmentli').removeClass("active");






            $('#txtSearch').tagsInput({
                width: 'auto',
                // height: '38px',
                height: 'auto',
                delimiter: ['', ''],
                autocomplete_url: '/Roster/GetCaseNoteTag',
                //autocomplete: {
                //    'source': getTagsOnInput()
                //},

            });

            $('#txtSearch_tag').attr({ 'placeholder': 'Search by Tags' });






            //CKEDITOR.replace('subnotes_caseNote', {
            //    language: 'en-gb',
            //    uiColor: '#295b8f',
            //    disableNativeSpellChecker: false
            //});


            //$(window).bind("load resize", function () {

            //    topOffset = 50;
            //    width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;
            //    if (width < 768) {
            //        topOffset = 100; // 2-row-menu
            //    }

            //    height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;

            //    height = height - topOffset;
            //    if (height < 1) height = 1;
            //    if (height > topOffset) {
            //        var fileHeight = height - 25;

            //        $('.right-side-container-ch').css('min-height', (fileHeight - 5) + 'px');
            //        $('.scroll-tbody').height(fileHeight - 317);

            //    }

            //    //reSizeContent();
            //});


            $('#clientSelect').on('change', function () {

                $.ajax({
                    url: '/Roster/GetCaseNoteByClient',
                    type: 'POST',
                    beforeSend: function () { $('#spinner').show() },
                    data: { 'clientId': $(this).val(), 'householdId': $('#HouseHoldId').val() },
                    success: function (data) {
                        $('#spinner').hide();

                        bindCaseNoteTableSection(data);

                    },
                    error: function (data) {
                        $('#spinner').hide();
                    }



                });


            });


            $('.btn-search').click(function () {

                var $this = this;
                debugger;

                $('#div-pagination-casenote').ApplinkPG(

                    'searchData',
                     {
                         'CenterID': $('#CenterId_casenote').val(),
                         'Enc_ClientID': $('#ClientId_casenote').val(),
                         'Enc_HouseholdID': $('#HouseHoldId_casenote').val(),
                         'TagNames': $('#txtSearch').val(),
                         'IncludeNotesByOtherStaffs': $('#allnotesChk').is(':checked')

                     }
                    //'bindInitialLoad':true
                );

                //$.ajax({
                //    type: "POST",
                //    url: "/Roster/GetCaseNoteByTags",
                //    beforeSend: function () { $('#spinner').show() },
                //    data: { 'Householdid': $('#HouseHoldId').val(), 'centerid': $('#CenterId').val(), 'ClientId': $('#ClientId').val(), 'TagName': $('#txtSearch').val() },
                //    success: function (data) {
                //        $('#spinner').hide();
                //        bindCaseNoteTableSection(data)
                //    },
                //    error: function (data) {
                //        $('#spinner').hide();
                //        console.log(data);
                //    }
                //});
            });


            $('.casenote-date').val(getFormattedDateNumber(new Date()));



        });


        function bindCaseNoteTableSection(data) {
            $('.addn-table-head').empty();
            $('.appendRole').val(data.Role);
            console.log(data);
            $((data.CaseNoteList)).each(function (i, val) {

                var row = '<tr casenoteid="{casenoteid}">\
                                                    <td data-title="Date">\
                                                        <div class="addn-content-desc" style="position: relative;">\
                                                            <p>{Date}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="Title">\
                                                        <div  class="addn-content-desc" style="position: relative;cursor: pointer;">\
                                                            <p data-editable="' + val.IsEditable + '" style="text-decoration: underline;" onclick="{function}({Id})">{Title}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="By">\
                                                        <div class="addn-content-desc" style="position: relative;">\
                                                            <p>{BY}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="Attachments">\
                                                        <div class="addn-content-desc">\
                                                            <p>{Attachment}</p>\
                                                        </div>\
                                                    </td>\
                                                    <td data-title="References">\
                                                        <div class="addn-content-desc">\
                                                            <p>{References}</p>\
                                                        </div>\
                                                    </td>   \
                                                     <td data-title="Actions">\
                                                        <div class="addn-content-desc">{SUBNOTE}\
                                                            </div>\
                                                        </td>\</tr>';
                var subnote = '<p style="padding: 5px;">\
                                                                <span class="Status-title-addn note-click">\<a href="#" data-toggle="modal" class="add-new" onclick="AppendCaseNote({AppendCaseNoteID})" style="margin-top: 0;padding-left: 15px;">\
                                                                        <span style="width: auto;display: inline-block;margin-right: 2px;font-size: 20px;">+</span>\
                                                                        Append Case Note\
                                                                    </a> </span>\
                                                            </p>';


                row = row.replace('{casenoteid}', val.CaseNoteid);
                row = row.replace('{AppendCaseNoteID}', val.CaseNoteid);
                row = row.replace('{Date}', val.Date);
                row = row.replace('{Id}', val.CaseNoteid);
                if (val.IsAllowSecurityCN == true) {
                    row = row.replace('{Title}', val.Title);
                    row = row.replace('{function}', "Getcasenote");
                    row = row.replace('{SUBNOTE}', subnote);
                }
                else if (val.WrittenBy == $('#UserId').val() && val.SecurityLevel) {
                    row = row.replace('{Title}', val.Title);
                    row = row.replace('{function}', "Getcasenote");
                    row = row.replace('{SUBNOTE}', subnote);
                }
                else {
                    row = row.replace('{Title}', "Secured Case Note");
                    row = row.replace('{function}', "ShowSecurityAlert");
                    row = row.replace('{SUBNOTE}', "<p style='padding: 5px;height:50px;'>");
                }

                row = row.replace('{BY}', val.BY);
                row = row.replace('{Attachment}', val.Attachment);
                row = row.replace('{References}', val.References);
                $('.addn-table-head').append(row);
            });
        }


       


        function Getcasenote(isEdit, Casenoteid, Householdid, clientId, ele) {

            var isEditable = Casenoteid == null || Casenoteid == '' || Casenoteid == '0' ? true : $(ele).attr("data-editable") == 'true';

            $('#CaseNoteid').val(Casenoteid);

            $('.div-add-edit-casenote').ApplinkCaseNote({
                isPopup: true,
                isSection: false,
                caseNoteType: isEdit?2:1,   //1- New/Edit 2- Append //
                getCaseNoteUrl: HostedDir + "/Roster/Getcasenotedetails",
                caseNoteId: Casenoteid,
                householdId: Householdid,
                clientId: clientId,
                isEditable: isEditable,
                isShowSubmitButton: true,
                forceLoad:true,
                isShowExportIcon: (Casenoteid != null && Casenoteid != "" && Casenoteid != "0") ? true : false,
                successCaseNoteSave: function (data) {

                    if (data == '1') {

                        $('#spinner').hide();

                        customAlert('Record saved successfully');
                        $('.modal:visible').modal('hide');

                        $('#div-pagination-casenote').ApplinkPG(

                'searchData',
                 {
                     'CenterID': $('#CenterId_casenote').val(),
                     'Enc_ClientID': $('#ClientId_casenote').val(),
                     'Enc_HouseholdID': $('#HouseHoldId_casenote').val(),
                     'TagNames': $('#txtSearch').val(),
                     'IncludeNotesByOtherStaffs': $('#allnotesChk').is(':checked')

                 }
                
            );

                    }

                    else {
                        $('.modal:visible').modal('hide');
                        $('#spinner').hide();
                        customAlert('Error occurred. Please, try again later');
                    }

                }
                
            });

        }





        function Getcasenote1(Casenoteid) {
            $('#CaseNoteid').val(Casenoteid);
            $.ajax({
                url: HostedDir + "/Roster/Getcasenotedetails",
                type: "POST",

                data: {
                    casenoteId: Casenoteid,
                    clientId: $('#ClientId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (Data) {
                    console.log(Data);
                    BindCaseNotelist1(Data);
                }
            , error: function (Data) {
                customAlert("Error occurred please try again later.");
            }
            });
        }


      


      

        function BindCaseNotelist1(Data) {
            cleanValidation();
            //$('#Attachment').hide();
            $('#Attachments').show();
            $('#Attach').empty();
            $('.download-attachment').empty();
            //$('#SaveNoteSubmit').hide();
            console.log('Test');
            console.log(Data);
            $('.tag').remove();
            var outputArray = [];
            var Attachments = [];
            debugger;
            if (Data != null && Data.length > 0) {

                if (Data[0].GroupCaseNote == 0) {

                    $('#CaseNoteHeading').text(' Edit Case Note');
                    $('#Attachmectstag').removeAttr("onclick");
                    $('#Attachmectstag').attr("onclick", "AddMore();");
                    $('#FirstFile').removeAttr("disabled");
                    $('#SaveNoteSubmit').show();
                    $('#txtCaseNoteDate').val('');
                    $('#CaseNoteTitle').val('');
                    $('#CaseNotesNote').val('');
                    $('#ClientName').val('');
                    $('#ClientNameModel').val('');
                    $('#CaseNoteSecurity').prop("checked", false);
                    $('#CaseNoteSecurity').removeAttr("disabled");
                    $('#ClientDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).removeAttr("disabled");
                    });
                    $('#StaffDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).removeAttr("disabled");
                    });

                    $('#txtCaseNoteDate').val(Data[0].Date);

                    $('#txtCaseNoteTitle').val(Data[0].Title);
                    CKEDITOR.instances['txtareaCaseNote'].setData(Data[0].Note);
                    $('.main-date').text(getFormattedDate(Data[0].Date));
                    $('.main-note').empty();
                    $('.main-note').append(Data[0].Note);
                    $('#ClientName').text(Data[0].Name);
                    $('#ClientNameModel').text(Data[0].Name);

                    if (Data[0].SecurityLevel)
                        $('#CaseNoteSecurity').prop("checked", true);
                    for (var i = 0; i < Data.length; i++) {
                        $('#ClientDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].clientid)
                                $(this).prop("checked", true);
                        });
                    }

                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Tagname, outputArray)) == -1) {
                            outputArray.push(Data[i].Tagname);
                        }
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Attachment, Attachments)) == -1) {
                            Attachments.push(Data[i].Attachment);
                        }
                    }


                    for (var i = 0; i < Attachments.length; i++) {
                        if (Attachments[i] != "0" && Attachments[i] != "")
                            $('#Attach').add('.download-attachment').append("<a title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + Attachments[i] + ",CaseNote,0'><i class='fa fa-download' aria-hidden='true' style='font-size:18px;'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");

                    }
                    if ($('#Attach').children().length < 1) {
                        $('#Attach').append("<span>No file available</span>");
                    }
                    if ($('.download-attachment').children().length < 1) {
                        $('.download-attachment').append("<span>No file available</span>");
                    }
                    for (var i = 0; i < outputArray.length; i++) {
                        $('#CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + outputArray[i] + '&nbsp;&nbsp;</span><a href="#" onclick="removetag(this);" title="Removing tag">x</a></span>');
                    }
                    for (var i = 0; i < Data.length; i++) {
                        $('#StaffDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].Staffid)
                                $(this).prop("checked", true);
                        });
                    }
                    $('#StaffName').text(Data[0].BY);
                    $('#CaseNoteDate').attr("Readonly", true);
                    $('#CaseNoteTitle').attr("Readonly", true);
                    //$('#CaseNoteSecurity').attr("disabled",true);
                    CKEDITOR.instances['txtareaCaseNote'].setReadOnly(true);
                    //$('#ClientDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});
                    //$('#StaffDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});
                    $('#CaseNotetags_tag').removeAttr("disabled");
                }
                else if (Data[0].GroupCaseNote == 1) {
                    $('#CaseNoteHeading').text('Group Case Note');
                    $('#Attachmectstag').removeAttr("onclick");
                    $('#Attachmectstag').attr("onclick", "return false;");
                    $('#SaveNoteSubmit').hide();
                    $('#CaseNoteDate').val('');
                    $('#CaseNoteTitle').val('');
                    $('#CaseNotesNote').val('');
                    $('#ClientName').val('');
                    $('#ClientNameModel').val('');
                    $('#CaseNoteSecurity').prop("checked", false);
                    $('#CaseNoteSecurity').attr("disabled", "disabled");
                    $('#CaseNotetags_tag').attr("disabled", "disabled");
                    $('#FirstFile').attr("disabled", "disabled");

                    $('#ClientDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).attr("disabled", "disabled");
                    });
                    $('#StaffDiv input[type=checkbox]').each(function () {
                        $(this).prop("checked", false);
                        $(this).attr("disabled", "disabled");
                    });
                    $('.main-date').text(getFormattedDateNumber(new Date(Data[0].Date)));
                    $('.main-note').empty();
                    $('.main-note').append(Data[0].Note);
                    $('#CaseNoteDate').val(Data[0].Date);
                    $('#CaseNoteTitle').val(Data[0].Title);
                    CKEDITOR.instances['txtareaCaseNote'].setData(Data[0].Note);
                    $('#ClientName').text(Data[0].Name);
                    $('#ClientNameModel').text(Data[0].Name);
                    if (Data[0].SecurityLevel)
                        $('#CaseNoteSecurity').prop("checked", true);
                    for (var i = 0; i < Data.length; i++) {
                        $('#ClientDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].clientid) {
                                $(this).prop("checked", true);
                            }
                        });
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Tagname, outputArray)) == -1) {
                            outputArray.push(Data[i].Tagname);
                        }
                    }
                    for (var i = 0; i < Data.length; i++) {
                        if ((jQuery.inArray(Data[i].Attachment, Attachments)) == -1) {
                            Attachments.push(Data[i].Attachment);
                        }
                    }
                    for (var i = 0; i < Attachments.length; i++) {
                        if (Attachments[i] != "0" && Attachments[i] != "")
                            $('#Attach').add('.download-attachment').append("<a  title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + Attachments[i] + ",CaseNote,0'><i class='fa fa-download'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");

                    }
                    if ($('#Attach').children().length < 1) {
                        $('#Attach').append("<span>No file available</span>");
                    }
                    if ($('.download-attachment').children().length < 1) {
                        $('.download-attachment').append("<span>No file available</span>");
                    }
                    for (var i = 0; i < outputArray.length; i++) {
                        $('#CaseNotetags_tagsinput').prepend('<span class="tag"><span>' + outputArray[i] + '&nbsp;&nbsp;</span><a href="#"  title="Removing tag">x</a></span>');
                    }
                    for (var i = 0; i < Data.length; i++) {
                        $('#StaffDiv input[type=checkbox]').each(function () {
                            if ($(this).val() == Data[i].Staffid)
                                $(this).prop("checked", true);
                        });
                    }
                    $('#StaffName').text(Data[0].BY);
                    $('#CaseNoteDate').attr("Readonly", true);
                    $('#CaseNoteTitle').attr("Readonly", true);
                    //$('#CaseNoteSecurity').attr("disabled",true);
                    CKEDITOR.instances['txtareaCaseNote'].setReadOnly(true);
                    //$('#ClientDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});
                    //$('#StaffDiv input[type=checkbox]').each(function () {
                    //    $(this).attr("disabled",true);
                    //});





                }



                //if (!$('#ModalAddCasenote').hasClass('in'))
                //    $('#ModalAddCasenote').modal('toggle');
                //$('#ModalAddCasenote').modal('show');
            }
        }

        function removetag(object) {
            $(object).parent('.tag').remove();

        }

        function AddNewCaseNote(casenoteId, householdId, clientid, ele) {



            Getcasenote(false, casenoteId, householdId, clientid, ele);


           
        }



      


        function SaveFile() {
            var data = new FormData();
            $('.fileAttachments').each(function (i, vak) {
                var files = $(this).get(0).files;
                console.log(files);
                console.log($(this).val());
                if (files.length > 0) {
                    data.append("MyImages" + i + "", files[0]);
                }
            });

            $.ajax({
                url: "/Roster/UploadFiles",
                type: "POST",
                processData: false,
                contentType: false,
                asyn: false,
                data: data,
                success: function (data) {
                    console.log(data);

                },
                error: function (er) {
                    alert(er);
                }
            });

        }


        //function GetSubNotes(id) {
        //    $.ajax({
        //        type: "POST",
        //        url: "/Roster/GetSubNotes",
        //        async: false,
        //        data: { 'CaseNoteId': id },
        //        success: function (data) {
        //            //alert(data);
        //            $('.divAppendedNotes').show();
        //            $('.sub-notes-details').empty();
        //            console.clear();
        //            console.log(data);
        //            debugger;
        //            if (data != null && data.length > 0) {
        //                $(data).each(function (i, val) {
        //                    debugger
        //                    var attachments = '';
        //                    var tagsName = '';
        //                    for (var i = 0; i < val.Attachment.length; i++) {
        //                        if (val.Attachment[i] != "0" && val.Attachment[i] != "")
        //                            attachments += ("<a  title='Click here to download' href='" + HostedDir + "/Agencyuser/getpdfimage1/" + val.Attachment[i] + ",CaseNote,0'><i class='fa fa-download'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;");
        //                    }
        //                    for (var i = 0; i < val.Tags.length; i++) {
        //                        if (val.Tags[i] != "0" && val.Tags[i] != "")
        //                            tagsName += ('<span id="subTags" class="tag-text">' + val.Tags[i] + '</span>');
        //                    }
        //                    if (tagsName == "") {
        //                        tagsName = "<span>No tags available</span>";
        //                    }
        //                    var template = '   <div class="addn-poup-div sub-text-block">\
        //                                     <h4>\
        //                                         Posted on <span>{date},</span> by <span>{name}</span>\
        //                                     </h4>\
        //                          <div class="col-xs-12 tag-text-block">\
        //                              <label>Tags:</label>\
        //                               {SubTags}\
        //                        </div><div class="col-xs-12 tag-text-block">\
        //                         <label>Notes:</label>\
        //                            {notes}\
        //                              <div id="subAttachments" class="sub-text">\
        //                         <label>Attachments:</label>{SubAttach}</div>\
        //                        </div></div>';
        //                    template = template.replace('{date}', val.WrittenDate);
        //                    template = template.replace('{name}', val.Name);
        //                    template = template.replace('{notes}', val.Notes);
        //                    template = template.replace('{SubAttach}', attachments);
        //                    template = template.replace('{SubTags}', tagsName);
        //                    $('.sub-notes-details').append(template);
        //                });
        //            }
        //            else {
        //                var template = '   <div class="addn-poup-div no-padding">\
        //                                     <h4>\
        //                                         No record found\
        //                                     </h4>\
        //                                     \
        //                                 </div>';
        //                $('.sub-notes-details').append(template);
        //            }
        //        },
        //        error: function (data) {
        //            console.log(data);
        //        }
        //    });
        //}

    </script>

    <script type="text/javascript">
        $(document).ready(function () {

           

            var linkys = document.getElementsByClassName('dropdown-toggle');
            for (var i = 0; i < linkys.length; ++i) {
                linkys[i].onclick = function (e) {
                    this.focus();
                    e.preventDefault();
                };
            }


            $('.txt-date').val();
            $('.txt-name').val();
            $('.txt-role').val();
            $('body').on('click', '.dropdown', function () {
                setTimeout(function ()
                { $('.dropdown').addClass('open'); }, 100);

            });

            $('body').on('click', '.append-casenote', function () {


              
              //  getCaseNotesByNote(this);

              


                $('#caseNoteAppendDiv').ApplinkCaseNote({
                    isPopup: true,
                    isSection: false,
                    caseNoteType: 3, //AppendCaseNote
                    forceLoad:true,
                    caseNoteId: $(this).closest('tr').attr('casenoteid'),
                    householdId: $('#HouseHoldId_casenote').val(),
                    centerId: $('#CenterId_casenote').val()
                });


            });


          






        });




    </script>
    <script type="text/javascript">
        function toggleIcon(e) {
            $(e.target)
                    .prev('.panel-heading')
                    .find(".more-less")
                    .toggleClass('glyphicon-plus glyphicon-minus');
        }
        $('.panel-group').on('hidden.bs.collapse', toggleIcon);
        $('.panel-group').on('shown.bs.collapse', toggleIcon);
        $(document).on('click', '.browse', function () {
            var file = $(this).parent().parent().parent().find('.file');
            file.trigger('click');
        });
        $(document).on('change', '.file', function () {
            $(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
        });

    </script>



}
@section MainContentHolder{



    <div class="row Zoom">
        <div class="col-xs-12" style="padding:0;">
            <div class="page-wrapper-change">

                <div class="container-fluid">
                    <div class="row">
                        <div class="glossy-right-side-container" style="padding-top: 30px;">

                            <div class="col-xs-12" style="padding:0px 15px;margin-bottom:20px;">
                                <div class="col-lg-12">
                                    <h2 class="page-header page-header-change" style="border-bottom:5px solid #f9c751!important;color:#fff;">
                                        <i class="fa fa-briefcase" aria-hidden="true"></i>&nbsp;Case Note Manager

                                        <span class="view-btn backto_listspan">

                                            @if (Model != null && Request.QueryString["Householdid"] != null && Request.QueryString["Householdid"] != "0" && StaffDetails.GetInstance().RoleId.ToString().ToLowerInvariant() == EnumHelper.GetEnumDescription(FingerprintsModel.Enums.RoleEnum.FamilyServiceWorker).ToLowerInvariant())
                                            {



                                                <a href="~/Agencyuser/FamilyDetails/@Model.Enc_HouseholdID" style="text-decoration:none;" class="anchor_yellow glossy-button-button">
                                                    Back to Family Intake

                                                    <span class="glossy-button-before"></span>
                                                    <span class="glossy-button-after"></span>


                                                </a>

                                            }
                                            else if (StaffDetails.GetInstance().RoleId.ToString().ToLowerInvariant() == EnumHelper.GetEnumDescription(FingerprintsModel.Enums.RoleEnum.Teacher).ToLowerInvariant() || StaffDetails.GetInstance().RoleId.ToString().ToLowerInvariant() == EnumHelper.GetEnumDescription(FingerprintsModel.Enums.RoleEnum.TeacherAssistant).ToLowerInvariant())
                                            {
                                                <a href="@Url.Content("~/Teacher/Roster")" style="text-decoration:none;" class="anchor_yellow glossy-button-button">
                                                    Back to Roster

                                                    <span class="glossy-button-before"></span>
                                                    <span class="glossy-button-after"></span>
                                                </a>

                                            }
                                            else
                                            {

                                                <a href="@Url.Content("~/Roster/Roster")" style="text-decoration:none;" class="anchor_yellow glossy-button-button">
                                                    Back to Roster

                                                    <span class="glossy-button-before"></span>
                                                    <span class="glossy-button-after"></span>
                                                </a>
                                            }
                                        </span>
                                    </h2>



                                </div>
                            </div>

                            <div class="col-lg-12">

                                @*<span class="view-btn backto_listspan" id="BackToList" style="padding-right: 15px;padding-bottom:15px;">

                            <a href="#" onclick="AddNewCaseNote('@Model.Enc_ClientID');" class="backto_list">Add New Case Note</a>


                        </span>*@


                                <div class="col-xs-12 glossy_btn text-right">
                                    <button class="glossy-button-button button-green" onclick="AddNewCaseNote('0','@Model.Enc_HouseholdID','@Model.Enc_ClientID',this);" style="padding:0 24px;">
                                        Add New Case Note
                                        <span class="glossy-button-before"></span>
                                        <span class="glossy-button-after"></span>
                                    </button>
                                </div>



                                <div class="col-xs-12 ">
                                    <div class="col-xs-12  glossy-panel-div" style="margin-bottom:60px;">
                                        <div class="col-xs-12 serch-addn-block">

                                            <div class="top-header-title-addn1 col-md-4 col-xs-12 no-padding">
                                                @if (ViewBag.Name != null && ViewBag.Name != "")
                                                {
                                                    <h2 style="color:#333;">@ViewBag.Name</h2>
                                                    <span id="clientName" style="color: #285b8f;display:none;">@ViewBag.Name</span>
                                                }
                                            </div>


                                            <div class="col-md-12 col-xs-12 serch-addn-block" style="text-align: left;margin-top:auto;margin-bottom:auto;">
                                                <input type="text" id="txtSearch" placeholder="Search by Tags" class="addn-select" autocomplete="off" />

                                            </div>

                                            <div class="col-xs-12">

                                                <div class="fa-checkbox all-notes-check" style="margin-top:25px;margin-bottom:25px;">
                                                    <input type="checkbox" id="allnotesChk" name="allnotesChk" value="true" style="display:none;" class="abtCheckbox">
                                                    <label for="allnotesChk">Include case notes written by other staff members</label>
                                                </div>
                                            </div>


                                            @*<div class="addn-search-btn btn-search col-xs-12">
                                        <a href="javascript:void(0);">Search</a>
                                    </div>*@

                                            <div class="col-xs-12 glossy_btn">
                                                <button type="button" class="glossy-button-button button-blue btn-search">
                                                    Search
                                                    <span class="glossy-button-before"></span>
                                                    <span class="glossy-button-after"></span>
                                                </button>
                                            </div>

                                        </div>
                                        <input type="hidden" id="UserId" value="@Session["UserId"].ToString()" />
                                        <input id="ClientId_casenote" type="hidden" name="ClientId_casenote" value="@Model.Enc_ClientID" />
                                        <input id="CenterId_casenote" type="hidden" name="CenterId_casenote" value="@Model.CenterID" />
                                        <input id="ProgramId_casenote" type="hidden" name="ProgramId_casenote" value="@ViewBag.Programid" />
                                        <input id="HouseHoldId_casenote" type="hidden" name="HouseHoldId_casenote" value="@Model.Enc_HouseholdID" />

                                        @{

                                            Html.RenderPartial("~/Views/Roster/_CaseNoteListClient.cshtml", Model);
                                        }

                                    </div>
                                </div>


                            </div>


                        </div>

                    </div>
                </div>
            </div>

        </div>

    </div>
    




    






    


    <!--Delete Case Note Modal-->
    <div class="modal fade" id="DeleteCaseNote_Modal" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-ch">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal"><img src="~/Content/CaseNote/images/close.png" /></button>
                    <h2>Delete Case Note</h2>
                    <div class="max_items_addn popup-addn-scroll">
                        <div class="col-xs-12 addn-al" style="padding: 0;">

                            <div>
                                <h4>Main Case Note</h4>

                                <table class="table table-bordered table-responsive table-striped" id="mainnote-tbl">
                                    <thead><tr><th style="width:100px;">Delete</th><th style="width:200px;">Date</th><th>Note</th></tr></thead>
                                    <tbody>

                                        @*<tr><td><input type="checkbox" name="maincase" /></td>
                                            <td>11/05/2018</td><td>Test String</td></tr>*@
                                        <tr>
                                            <td><input type="checkbox" name="maincase" /></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td><input type="checkbox" name="maincase" /></td>
                                            <td></td>
                                            <td></td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>

                            <div>

                                <h4>Append Case Note</h4>

                                <table class="table table-bordered table-responsive table-striped" id="subnote-tbl">
                                    @*<thead><tr><th></th><th>Date</th><th>Note</th></tr></thead>*@
                                    
                                    <thead><tr><th style="width:100px;">Delete</th><th style="width:200px;">Date</th><th>Note</th></tr></thead>
                                    <tbody></tbody>
                                </table>


                            </div>

                            <div class="col-md-12 text-center" style="margin-top:20px;">
                                <button type="button" class="glossy-button-button button-red" id="deletecasenote_btn">Delete</button>

                                @*<button type="button" class="glossy-button-button button-red" data-dismiss="modal">Cancel</button>*@
                               
                                <button type="button" class="glossy-button-button button-blue" data-dismiss="modal">Exit</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="row qualifierdiv">
        <form method="post" enctype="multipart/form-data" role="form" id="form2" autocomplete="off">

            <div class="div-add-edit-casenote">

            </div>

            @*@{
                    Html.RenderPartial("~/Views/Partialviews/_CaseNotePopup.cshtml", Model);
                }*@

        </form>
    </div>
    <div class="row qualifierdiv" id="caseNoteAppendDiv">


        @*@{
            Html.RenderPartial("~/Views/Partialviews/_AppendCaseNotePopup.cshtml");

        }*@

    </div>

    <div class="row qualifierdiv">

        @{
            Html.RenderPartial("~/views/partialviews/_multiplecamerauploadpartial.cshtml");




        }

    </div>





}

