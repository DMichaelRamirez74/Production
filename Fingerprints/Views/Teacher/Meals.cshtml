@model FingerprintsModel.TeacherModel

@{
    @section Title
{
        Meals
    }
    ViewBag.Title = "Meals";
    Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";

}








@section Style{


    <style type="text/css">
        #modal-daily-observation #clientcasenote-div .max_items_addn {
            border: unset;
        }

        .div-filter-section {
            margin-bottom: 10px;
            padding: 0;
        }

        #modal-daily-observation .addapplicant {
            font-size: 20px;
            font-weight: bold;
            border-bottom: 2px solid #295b8f;
            color: #295b8f;
            padding: 5px 0;
            margin: 0 15px;
        }

        #modal-daily-observation .form-group {
            margin-bottom: 15px !important;
        }

        #modal-daily-observation .lbl-popup-cn {
            text-align: right;
            color: #295b8f;
            font-weight: bold;
        }

        #modal-daily-observation .div-popup-clients-cn, #modal-daily-observation .div-popup-dev-cn, #modal-daily-observation .div-popup-secure-cn {
            padding-left: 0;
        }

        #modal-daily-observation #div-edit-modal-img-gallery {
            margin-left: 17%;
        }

        .kbw-signature {
            width: 400px;
            height: 200px;
        }

        #div-table-responsive .search-block-main table thead th {
            background-color: #285B90 !important;
        }


        .edu_class_room {
            width: 100%;
            float: left;
            margin-top: 15px;
            margin-bottom: 30px;
        }

        .edu_clrtable {
            width: 100%;
            float: left;
            padding: 15px;
            background-color: #fff;
            border-radius: 7px;
        }

            .edu_clrtable table tbody tr td {
                color: #163b69;
                text-align: center;
            }

        td.edu_chk {
            color: #27ae60 !important;
        }

        td.edu_ntchk {
            color: #c0392b !important;
        }

        .edu_clrtable table thead tr th {
            background-color: #2c3e50;
            color: #fff;
            text-align: center;
        }

        .edu_clrm_head {
            width: 100%;
            float: left;
            margin-bottom: 15px;
        }

            .edu_clrm_head h3 {
                background-color: #f9c751;
                color: #000;
                padding: 15px;
                border-radius: 7px;
                font-weight: 600;
            }

            .edu_clrm_head small {
                color: #000;
            }

        .edu_frm_ps label {
            float: left;
            width: 40%;
        }

        .edu_frm_ps label {
            float: left;
            width: 40%;
            color: #163b69;
            font-weight: 300;
        }

        .edu_meal_detail {
            width: 100%;
            float: left;
            background-color: #f1f5f8;
            padding: 30px 15px;
            margin-bottom: 28px;
            border-radius: 7px;
        }

        .edu_frm_chk input[type="checkbox"] {
            float: left;
            width: auto;
        }

        .edu_frm_chk label {
            float: left;
            width: auto;
            padding-left: 9px;
            padding-top: 2px;
            color: #163b69;
            font-weight: 300;
        }

        .edu_frm_ps select {
            width: 60%;
            -webkit-appearance: none;
            float: left;
            background: #fff url(../images/class-room/arr-down.png) no-repeat 97% center;
        }

        .part_edubtn {
            width: 100%;
            float: left;
            text-align: center;
        }

        .btn-edu-sucess {
            background-color: #2ecc71;
            border-radius: 0 !important;
            color: #fff !important;
            padding: 7px 15px !important;
            outline: none !important;
        }

        .part_edubtn button.btn-edu-sucess {
            margin-right: 20px;
        }

        .btn-edu-exit {
            background-color: #e74c3c;
            border-radius: 0 !important;
            color: #fff !important;
            padding: 7px 15px !important;
            outline: none !important;
        }

        .edu_frm_chk {
            float: right;
            width: 60%;
        }

        .edu_frm_ps select, .edu_frm_ps input {
            width: 60%;
            float: left;
        }
        /*start Pop-up*/
        .modal-content.add_screen {
            background-color: #6a51a3;
            border: 5px solid #fff;
            max-width: 1200px;
            width: 100%;
        }

            .modal-content.add_screen .modal-header {
                border-bottom: none;
                padding: 10px;
            }

                .modal-content.add_screen .modal-header .close {
                    margin-top: -2px;
                    position: absolute;
                    top: -14px;
                    right: -14px;
                    background-color: #db4437;
                    border-radius: 50%;
                    /* padding: 12px 9px; */
                    opacity: 1;
                    width: 40px;
                    height: 40px;
                    color: #fff;
                }

        .pop_title {
            background-color: #e67e22;
            padding: 7px;
            border-radius: 5px;
            margin-bottom: 30px;
            color: #fff;
            text-align: center;
            font-size: 20px;
        }

        .modal-dialog.view_pop {
            max-width: 1200px;
            width: 100%;
        }

        .modal-content.add_screen .modal-body {
            background-color: #f1f5f8;
            width: 100%;
            float: left;
            padding: 0px;
            border-radius: 46px 47px 0px 0px;
        }

        .nopadding {
            padding: 0px;
        }

        .modal-content.add_screen .modal-body h4 {
            background-color: #34495e;
            color: #fff;
            text-align: center;
            padding: 15px;
        }

        .pop_list {
            background-color: #fff;
            padding: 10px;
            margin: 20px;
            max-height: 570px;
            height: 570px;
        }

            .pop_list ul li.pink {
                background-color: #ffcccc;
            }

            .pop_list ul li {
                list-style: none;
                text-align: center;
                padding: 10px;
                margin-bottom: 15px;
            }

        .pop_content {
            margin: 20px;
        }

        .nopadding {
            padding: 0px !important;
        }

            .nopadding h4 {
                margin: 0px;
            }

        .pop_list ul {
            margin: 10px 5px;
        }

            .pop_list ul li {
                cursor: pointer;
            }

                .pop_list ul li.blue {
                    background-color: #c5eff7;
                }

                .pop_list ul li.green {
                    background-color: #b2f5a8;
                }

                .pop_list ul li.yellow {
                    background-color: #f7d794;
                }

                .pop_list ul li.black {
                    background-color: #34495e;
                    color: #fff;
                }

        .file_attach {
            margin: 5px;
        }

        .form_filed {
            margin-top: 25px;
        }

            .form_filed label {
                color: #164978;
                font-size: 16px;
                font-weight: normal;
            }

            .form_filed sup {
                color: red;
            }

        .modal-dialog.view_pop {
            margin: 1% auto 0 !important;
        }

        .form_filed ::placeholder {
            color: #164978 !important;
        }

        .form_filed .form-control {
            color: #164978 !important;
            margin-bottom: 15px;
            height: 40px;
            border: 1px solid #e7e7e7;
            box-shadow: none;
        }

        .pop_list.form_section {
            overflow-y: scroll;
        }

        .modal-content.add_screen .modal-footer {
            text-align: center;
        }

        .pop_footer {
            margin-top: 30px;
            width: 100%;
            float: left;
        }

            .pop_footer button.btn.btn-success {
                width: auto !important;
                padding: 6px 25px;
                font-weight: bold;
            }

            .pop_footer button.btn.btn-default {
                width: auto !important;
                padding: 6px 25px;
                background-color: #34495e !important;
                border: 1px solid #34495e !important;
                font-weight: bold;
            }

        h4.right_radius {
            border-radius: 4px 0px 0px 0px;
        }

        h4.left_radius {
            border-radius: 0px 4px 0px 0px;
        }

        #email ::placeholder {
            color: #164978;
        }

        select.form-control.edu_arr {
            background: #fff url(../images/class-room/arr-down.png) no-repeat 97% center;
            -webkit-appearance: none;
        }
        /*pop-up*/


        @@media screen and (max-width:1200px) {
            .glossy-table {
                -webkit-box-shadow: unset;
                -moz-box-shadow: unset;
                box-shadow: unset;
            }



            #div-table-responsive .search-block-main {
                border: unset !important;
            }

            .div-check-all {
                float: right !important;
            }
        }

        @@media screen and (max-width:991px) {
            #modal-daily-observation .lbl-popup-cn {
                text-align: left;
            }
        }

        @@media screen and (max-width:1199px) {
            #modal-daily-observation .lbl-popup-cn {
                text-align: left;
            }
        }
    </style>

}


@section Script{



    <script type="text/javascript">

        var front = true;

        $(document).ready(function () {
            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');

                }
            });

            if ('@TempData["message"]' != null && '@TempData["message"]' != '') {
                customAlert('@TempData["message"]');
            }



            $.each($('#schedule-school-table tbody#classdays-tbody').find('tr'), function (i, row) {

                $.each($(row).find('td:gt(0)'), function (j, td) {


                    var mealtypeSelected = $('select#MealType').val();

                    if (mealtypeSelected != null && mealtypeSelected != '') {
                        switch (mealtypeSelected) {
                            case '1':
                                if (j == 0) {
                                    $(td).find('input:checkbox').prop('disabled', false);
                                }
                                else {
                                    $(td).find('input:checkbox').prop('disabled', true);
                                }
                                break;
                            case '2':
                                if (j == 1) {
                                    $(td).find('input:checkbox').prop('disabled', false);
                                }
                                else {
                                    $(td).find('input:checkbox').prop('disabled', true);

                                }
                                break;

                            case '3':

                                if (j == 2) {
                                    $(td).find('input:checkbox').prop('disabled', false);
                                }
                                else {
                                    $(td).find('input:checkbox').prop('disabled', true);

                                }
                                break;
                            case '4':
                                if (j == 3) {
                                    $(td).find('input:checkbox').prop('disabled', false);
                                }
                                else {
                                    $(td).find('input:checkbox').prop('disabled', true);

                                }
                                break;
                            default:
                                $(td).find('input:checkbox').prop('disabled', false);
                                break;




                        }
                    }


                    $(td).find('input:checkbox').off('click').on('click', function () {

                        if ($(this).is(':checked')) {
                            $(this).siblings('.servedTime').val(new Date().toJSON());
                        }
                        else {
                            $(this).siblings('.servedTime').val('');

                        }



                    });
                });

            });




            $('#MealSelected').on('blur', function () {
                if ($(this).val() != null && $(this).val() != '' && parseInt($(this).val()) > 0) {
                    if ($('#MealType').val() != '') {
                        switch ($('#MealType').val()) {

                            case '1':
                                if ($('#ABreakfastServedOn').val() == null || $('#ABreakfastServedOn').val() == '') {
                                    $('#ABreakfastServedOn').val(new Date().toJSON());
                                }
                                break;

                            case '2':
                                if ($('#ALunchServedOn').val() == null || $('#ALunchServedOn').val() == '') {
                                    $('#ALunchServedOn').val(new Date().toJSON());
                                }
                                break;

                            case '3':
                                if ($('#ASnackServedOn').val() == null || $('#ASnackServedOn').val() == '') {
                                    $('#ASnackServedOn').val(new Date().toJSON());
                                }
                                break;

                            case '4':
                                if ($('#ADinnerServedOn').val() == null || $('#ADinnerServedOn').val() == '') {
                                    $('#ADinnerServedOn').val(new Date().toJSON());
                                }
                                break;
                        }
                    }
                }
            });

            $('#modal-daily-observation').find('#btn-modal-cn-submit').on('click', function (evt) {

                evt.preventDefault();

                var $modal = $('#modal-daily-observation');
                var $caseNoteDiv = $modal.find('#clientcasenote-div');
                var $caseNoteSection = $caseNoteDiv.find('#divCaseNoteSection');
                var $guid = $caseNoteSection.attr('data-current-id');

                cleanValidation();


                var result = false;


                result = $caseNoteDiv.ApplinkCaseNote('caseNoteValidation');

                if (result)
                {
                   
                  //  var Tags = '';
                    var caseNote = {};
                    var clientArray = [];
                    var staffArray = [];
                    var cameraDocumentsArray = [];

                    //$caseNoteSection.find('#txtCaseNoteTags_'+$guid+'_tagsinput .tag span').each(function () {
                    //    Tags = Tags + $(this).text().trim() + ',';
                    //});

                    //$caseNoteSection.find("#txtCaseNoteTags_"+$guid+"").val(Tags);

                    //$caseNoteSection.find('#txtareaCaseNote_'+$guid+'').val(CKEDITOR.instances['txtareaCaseNote_'+$guid+''].getData());
                   
                    $.each($caseNoteSection.find('#divCaseNoteClients_' + $guid + '').find('input:checkbox:checked'), function () {

                        clientArray.push($(this).val());
                    });
                   
                    $.each($caseNoteSection.find('#divCaseNoteStaffs_' + $guid + '').find('input:checkbox:checked'), function () {

                        staffArray.push($(this).val());
                    });

                    $caseNoteSection.find('#caseNoteAttachmentsDiv_' + $guid + '').find('input:file').each(function (a, b) {
                        var fileInput = $(this);
                        if (fileInput.val() != undefined && fileInput.val() != null && fileInput.val() != '') {
                            var fileUpload = fileInput.get(0);
                            var files = fileUpload.files;

                            for (var i = 0; i < files.length; i++) {


                                var convImage = fileInput.attr('conv-img');

                                if (convImage != null && convImage != "")
                                    cameraDocumentsArray.push({ AttachmentFileName: files[i].name, AttachmentFileExtension: '.' + files[i].name.split('.')[files[i].name.split('.').length - 1], AttachmentJson: convImage });


                            }
                        }
                    });



                    var $cameraDocuments = $caseNoteSection.find(".div-edit-gallery_" + $guid + "").find('.setup_viewscreen');



                    if ($cameraDocuments.length > 0) {

                        $.each($cameraDocuments, function (j, doc) {

                            var $doc = $(doc).find('img');
                            cameraDocumentsArray.push({ AttachmentFileName: 'CaseNoteDocument', AttachmentFileExtension: '.png', AttachmentJson: getBase64Image($doc) });

                        });
                    }



                    caseNote.ClientId = $caseNoteSection.find('#hidden_clientId_' + $guid + '').val();
                    caseNote.CenterId = $caseNoteSection.find('#hidden_centerId_' + $guid + '').val();
                    caseNote.Classroomid = $caseNoteSection.find('#hidden_classroomId_' + $guid + '').val();
                    caseNote.HouseHoldId = $caseNoteSection.find('#hidden_householdId_' + $guid + '').val();
                    caseNote.CaseNoteid = $caseNoteSection.find('#hdn-casenoteid_' + $guid + '').val();
                    caseNote.ProgramId = $caseNoteSection.find('#hidden_programId_' + $guid + '').val();
                    caseNote.ClientIds = clientArray.join(',');
                    caseNote.StaffIds = staffArray.join(',');
                    caseNote.CaseNoteDate = $caseNoteSection.find('#txtCaseNoteDate_' + $guid + '').val();
                    caseNote.CaseNoteTitle = $caseNoteSection.find('#txtCaseNoteTitle_' + $guid + '').val();
                    caseNote.CaseNotetags = $caseNoteSection.find('#txtCaseNoteTags_' + $guid + '').val();
                    caseNote.Note = $caseNoteSection.find('#txtareaCaseNote_' + $guid + '').val();
                    caseNote.CaseNoteSecurity = $caseNoteSection.find('#checkboxSecureNote_' + $guid + '').is(':checked');
                    caseNote.CaseNoteAttachmentList = cameraDocumentsArray;

                    console.log(caseNote);


                    $.ajax({
                        type: "POST",
                        url: "/Roster/SaveCaseNote",
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        beforeSend: function () {
                            $('#spinner').show();
                        },
                        data: JSON.stringify(caseNote),
                        success: function (data) {


                            if (data == '1') {

                                $('#spinner').hide();

                                customAlert('Record saved successfully');

                                $modal.modal('hide');

                            }

                            else {
                                $modal.modal('hide');
                                $('#spinner').hide();
                                customAlert('Error occurred. Please, try again later');
                            }

                        },
                        error: function (data) {
                            console.log(data);
                        },
                        complete: function (data) {
                            $('#spinner').hide();
                        }
                    });

                }
                else {
                    return result;
                }

               


              





              





            });




            $('#modal-daily-observation').on('shown.bs.modal', function (event) {


                $('body').css({ 'padding-right': '0px' });

            });



            $('#modal-daily-observation').on('hidden.bs.modal', function () {

                if ($('#modal-uploaddocument').is(':visible')) {

                    return false;
                }

                var $modal = $('#modal-daily-observation');

                $modal.find('#clientcasenote-div').html('');

                $modal.find('#lbl-popup-client').html('');

            });

        });
        $(window).on('popstate', function () {
            var anchor = location.hash || $("a[data-toggle=tab]").first().attr("href");
            $('a[href=' + anchor + ']').tab('show');
        });


        function isNumberKey(evt) {
            isValid = true;
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57)) {
                customAlert("Enter Numbers only for Adult Meals. ");
                plainValidation('#MealSelected');
                isValid = false;
            }

            return isValid;
        }


        function ValidateData() {

            isValid = true;
            var meals = $("#MealType").val();
            $('#MealTypeSelected').val(meals);


            if ($("#MealType").val() == 0) {
                isValid = false;
                customAlert("Meal Type is Required. ");
                plainValidation('#MealType');
                return isValid;
            }

            if ($('#schedule-school-table').find('tbody tr').length > 0 && $('#schedule-school-table').find('tbody tr').find('input:checkbox:checked').length == 0) {

                isValid = false;
                customAlert("Please select clients against the meal type selected");
                return isValid;
            }
            else if ($('#schedule-school-table').find('tbody tr').length == 0 && ($('#MealSelected').val() == null || $('#MealSelected').val('') || $('#MealSelected').val('0'))) {

                isValid = false;
                customAlert("Number of adult meals served is required");
                plainValidation('#MealSelected');
                return isValid;
            }

            if (isValid) {
                $('#schedule-school-table').find('tbody tr').find('input:checkbox').prop('disabled', false);
                $('#spinner').show();
            }

            return isValid;
        }
        function CheckAll(element) {

            isValid = true;
            var chk = element.checked;
            var meals = $("#MealType").val();
            $('#MealTypeSelected').val(meals);

            if ($("#MealType").val() == 0) {
                isValid = false;
                customAlert("Meal Type is Required. ");
                plainValidation('#MealType');

                $(element).prop('checked', false);
                return isValid;
            } else {

                var mealtype = $("#MealType").val();


                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {

                    var $chkbox = $(tr).find('td:eq(' + mealtype + ')').find('p input:checkbox');
                    if (chk && !$chkbox.is(':checked')) {
                        $chkbox.prop('checked', chk).siblings('.servedTime').val(chk ? new Date().toJSON() : "");
                    }
                    else if (!chk) {
                        $chkbox.prop('checked', chk).siblings('.servedTime').val(chk ? new Date().toJSON() : "");

                    }

                });





                isValid = true;
            }

            return isValid;

        }



        function MealChanged() {
            var mealtype = $("#MealType").val();
            if (mealtype == "1") {


                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {

                    var $breakCheckBox = $(tr).find('td:eq(1)').find('p input:checkbox');
                    var $breakChecked = $breakCheckBox.hasClass('breakfast-checked');

                    var $lunchCheckbox = $(tr).find('td:eq(2)').find('p input:checkbox');
                    var $lunchChecked = $lunchCheckbox.hasClass('lunch-checked');

                    var $snackCheckbox = $(tr).find('td:eq(3)').find('p input:checkbox');
                    var $snackChecked = $snackCheckbox.hasClass('snack-checked');

                    var $dinnerCheckbox = $(tr).find('td:eq(4)').find('p input:checkbox');
                    var $dinnerChecked = $dinnerCheckbox.hasClass('dinner-checked');


                    $breakCheckBox.removeAttr("disabled");


                    $lunchCheckbox.attr("disabled", "disabled");
                    if (!$lunchChecked) {
                        $lunchCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }



                    if (!$snackChecked) {
                        $snackCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }
                    $snackCheckbox.attr("disabled", "disabled");

                    $dinnerCheckbox.attr("disabled", "disabled");
                    if (!$dinnerChecked) {
                        $dinnerCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }

                });




                $('#MealSelected').val($("#AdultBreakfast").val());
                $('#ABreakfastServedOn').val($('#AdultBreakfastServedOn').val());

            } else if (mealtype == "2") {


                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {

                    var $breakCheckBox = $(tr).find('td:eq(1)').find('p input:checkbox');
                    var $breakChecked = $breakCheckBox.hasClass('breakfast-checked');

                    var $lunchCheckbox = $(tr).find('td:eq(2)').find('p input:checkbox');
                    var $lunchChecked = $lunchCheckbox.hasClass('lunch-checked');

                    var $snackCheckbox = $(tr).find('td:eq(3)').find('p input:checkbox');
                    var $snackChecked = $snackCheckbox.hasClass('snack-checked');


                    var $dinnerCheckbox = $(tr).find('td:eq(4)').find('p input:checkbox');
                    var $dinnerChecked = $dinnerCheckbox.hasClass('dinner-checked');

                    $breakCheckBox.attr("disabled", "disabled");
                    if (!$breakChecked) {
                        $breakCheckBox.prop('checked', false).siblings('.servedTime').val('');
                    }



                    $lunchCheckbox.removeAttr("disabled");


                    $snackCheckbox.attr("disabled", "disabled");
                    if (!$snackChecked) {
                        $snackCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }


                    $dinnerCheckbox.attr("disabled", "disabled");
                    if ($dinnerChecked) {
                        $dinnerCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }


                });


                $('#MealSelected').val($("#AdultLunch").val());
                $('#ALunchServedOn').val($('#AdultLunchServedOn').val());

            } else if (mealtype == "3") {





                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {



                    var $breakCheckBox = $(tr).find('td:eq(1)').find('p input:checkbox');
                    var $breakChecked = $breakCheckBox.hasClass('breakfast-checked');

                    var $lunchCheckbox = $(tr).find('td:eq(2)').find('p input:checkbox');
                    var $lunchChecked = $lunchCheckbox.hasClass('lunch-checked');

                    var $snackCheckbox = $(tr).find('td:eq(3)').find('p input:checkbox');
                    var $snackChecked = $snackCheckbox.hasClass('snack-checked');


                    var $dinnerCheckbox = $(tr).find('td:eq(4)').find('p input:checkbox');
                    var $dinnerChecked = $dinnerCheckbox.hasClass('dinner-checked');


                    $breakCheckBox.attr("disabled", "disabled");
                    if (!$breakChecked) {
                        $breakCheckBox.prop('checked', false).siblings('.servedTime').val('');

                    }

                    $lunchCheckbox.attr("disabled", "disabled");
                    if (!$lunchChecked) {
                        $lunchCheckbox.prop('checked', false).siblings('.servedTime').val('');

                    }

                    $snackCheckbox.removeAttr("disabled");

                    $dinnerCheckbox.attr("disabled", "disabled");
                    if (!$dinnerChecked) {
                        $dinnerCheckbox.prop('checked', false).siblings('.servedTime').val('');

                    }

                });

                $('#MealSelected').val($("#AdultSnack").val());
                $('#ASnackServedOn').val($('#AdultSnackServedOn').val());



            } else if (mealtype == "4") {

                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {


                    var $breakCheckBox = $(tr).find('td:eq(1)').find('p input:checkbox');
                    var $breakChecked = $breakCheckBox.hasClass('breakfast-checked');

                    var $lunchCheckbox = $(tr).find('td:eq(2)').find('p input:checkbox');
                    var $lunchChecked = $lunchCheckbox.hasClass('lunch-checked');

                    var $snackCheckbox = $(tr).find('td:eq(3)').find('p input:checkbox');
                    var $snackChecked = $snackCheckbox.hasClass('snack-checked');


                    var $dinnerCheckbox = $(tr).find('td:eq(4)').find('p input:checkbox');
                    var $dinnerChecked = $dinnerCheckbox.hasClass('dinner-checked');


                    $breakCheckBox.attr("disabled", "disabled");
                    if (!$breakChecked) {
                        $breakCheckBox.prop('checked', false).siblings('.servedTime').val('');
                    }

                    $lunchCheckbox.attr("disabled", "disabled");
                    if (!$lunchChecked) {
                        $lunchCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }

                    $snackCheckbox.attr("disabled", "disabled");
                    if (!$snackChecked) {
                        $snackCheckbox.prop('checked', false).siblings('.servedTime').val('');
                    }

                    $dinnerCheckbox.removeAttr("disabled");

                });

                $('#MealSelected').val($("#AdultDinner").val());
                $('#ADinnerServedOn').val($('#AdultDinnerServedOn').val());

            }



            else {

                $.each($('#schedule-school-table tbody').find('tr'), function (i, tr) {


                    var $breakCheckBox = $(tr).find('td:eq(1)').find('p input:checkbox');
                    var $breakChecked = $breakCheckBox.hasClass('breakfast-checked');

                    var $lunchCheckbox = $(tr).find('td:eq(2)').find('p input:checkbox');
                    var $lunchChecked = $lunchCheckbox.hasClass('lunch-checked');

                    var $snackCheckbox = $(tr).find('td:eq(3)').find('p input:checkbox');
                    var $snackChecked = $snackCheckbox.hasClass('snack-checked');


                    var $dinnerCheckbox = $(tr).find('td:eq(4)').find('p input:checkbox');
                    var $dinnerChecked = $dinnerCheckbox.hasClass('dinner-checked');


                    if (!$breakChecked) {
                        $breakCheckBox.attr("disabled", "disabled").prop('checked', false).siblings('.servedTime').val('');

                    }

                    if (!$lunchChecked) {
                        $lunchCheckbox.attr("disabled", "disabled").prop('checked', false).siblings('.servedTime').val('');

                    }
                    if (!$snackChecked) {
                        $snackCheckbox.attr("disabled", "disabled").prop('checked', false).siblings('.servedTime').val('');

                    }

                    if (!$dinnerChecked) {
                        $dinnerCheckbox.attr("disabled", "disabled").prop('checked', false).siblings('.servedTime').val('');

                    }

                });


                $('#MealSelected').val();
            }
        }



        function getCaseNoteSection(ele, clientId) {


            var $modal = $('#modal-daily-observation');
            var $caseNoteDiv = $modal.find('#clientcasenote-div');


            $caseNoteDiv.ApplinkCaseNote({
                isPopup: false,
                isSection: true,
                caseNoteType: 1,   //1- New 2- Edit / 3- Append //
                getCaseNoteUrl: HostedDir + "/Roster/GetCaseNoteSectionPartial",
                caseNoteId: 0,
                householdId: 0,
                clientId: clientId,
                isEditable: true,
                isShowSubmitButton: false,
                isShowExportIcon: false,
                forceLoad: true,

                modalOnShown: function (element) {

                },
                ajaxComplete: function (element) {

                    $modal.find('#lbl-popup-client').html($(ele).closest('td').parent('tr').find(' td:eq(0)').find('p').html().trim());


                    var $guid = element.find('#divCaseNoteSection').attr('data-current-id');

                    //  element.css({ 'margin-left': '-25px', 'padding': '0px' });

                    element.find('#txtCaseNoteTags_' + $guid + '').importTags("Meal Observation");

                    CKEDITOR.instances['txtareaCaseNote_' + $guid + ''].setData("Meal Observation");

                    element.find('#txtCaseNoteTitle_' + $guid + '').val("Meal Observation");

                    element.find('#txtCaseNoteDate_' + $guid + '').mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

                    element.find('#txtCaseNoteDate_' + $guid + '').val(getFormattedDateNumber(new Date()));

                    element.find('#txtCaseNoteDate_' + $guid + '').prop('disabled', false);

                    element.find('.img-camera').attr('target-id', 'clientcasenote-div');

                    element.css('border', 'unset!important');

                    //  element.find('#divCaseNoteStaffs_' + $guid + '').parent('div').hide();


                    element.find('#divCaseNoteClients_' + $guid + '').find('input:checkbox').each(function () {


                        if ($(this).val() == clientId || $(this).next('label').html().indexOf('Parent') > -1) {

                            if ($(this).val() == clientId) {
                                $(this).prop('checked', true);
                                $(this).prop('disabled', true);
                            }
                        }
                        else {
                            $(this).parent('div').remove();
                        }


                    });

                    showCameraOption(element);

                    element.find('#uploadImageCamera').hide();

                    setIntervalUserMedia(element);

                    $modal.modal('show');
                }

            });




          
        }




        function saveDocumentCamera(ele) {
            var docImage = $('#modalScreenDoc').find('#capt-img');

            if (docImage[0].src.replace('data:,', '') == '') {
                customAlert('Please capture image using camera');
                return false;
            }
            else {

                saveScreeningDoc(docImage, 2);

            }

        }
    </script>


}


@section MainContentHolder{





    <div class="row Zoom">
        <div class="col-lg-12" style="padding:0;">
            <div class="page-wrapper-change">
                <div class="container-fluid" style="padding-top:15px;">
                    <div class="row">

                        <!-----Right Side Container Section------->
                        <div class="glossy-right-side-container col-xs-12">

                            <!----Heading Section------>
                            <div class="col-xs-12" style="padding:0px;margin-bottom:20px;">

                                <div class="edu_clrm_head">


                                    <h3>
                                        Meal Detail <small><i>for </i></small>@Model.Tdate


                                    </h3>
                                </div>

                            </div>


                            <!-------Children table section------->
                            @using (Html.BeginForm("Meals", "Teacher"))
                            {
                                <div id="no-more-tables8" class="col-xs-12" style="margin-bottom: 20px;">

                                    <div class="col-xs-12 glossy-panel-div" id="div-table-responsive">




                                        @Html.HiddenFor(m => m.Tdate)

                                        <div class="col-xs-12 div-filter-section">


                                            <div class="col-md-3 col-xs-12 col-sm-5">

                                                <div class="form-group">
                                                    <label class="lbl-text">Meals Offered</label>



                                                    @Html.DropDownListFor(m => m.MealType, new SelectList(Model.Meallst, "MealID", "MealType", Model.MealType), "-Select one-", new { @class = "glossy-select", @onchange = "MealChanged();" })

                                                </div>
                                            </div>

                                            <div class="col-md-3 col-xs-12 col-sm-5">
                                                <div class="form-group">
                                                    <label class="lbl-text">Adult Meals Served</label>

                                                    @Html.TextBoxFor(m => m.MealSelected, new { @class = "glossy-input", onkeypress = "return isNumberKey(event);", @style = "padding:0px 10px;" })
                                                    @Html.HiddenFor(m => m.ABreakfastServedOn)
                                                    @Html.HiddenFor(m => m.ALunchServedOn)
                                                    @Html.HiddenFor(m => m.ASnackServedOn)
                                                    @Html.HiddenFor(m => m.ADinnerServedOn)


                                                </div>
                                            </div>

                                            <div class="col-md-3 col-sm-12 col-xs-12 div-check-all">


                                                <div class="form-group">
                                                    <label class="lbl-text" style="visibility:hidden">Select All Clients</label>

                                                    <input type="checkbox" placeholder="0" value="" onchange="return CheckAll(this)" />&nbsp;&nbsp;<span><strong>Check All</strong></span>



                                                </div>


                                            </div>
                                        </div>

                                        <table class="col-md-12 glossy-table table-striped table-condensed cf table-change ersea-table" id="schedule-school-table">
                                            <thead class="table-hd scroll-thead">
                                                <tr>
                                                    <th>
                                                        Client

                                                    </th>

                                                    <th>
                                                        Breakfast
                                                    </th>


                                                    <th>
                                                        Lunch
                                                    </th>

                                                    <th>
                                                        Snack
                                                    </th>
                                                    <th>
                                                        Dinner
                                                    </th>
                                                    <th>Meal Observation Notes</th>
                                                </tr>
                                            </thead>
                                            <tbody class="ersea-table-head glossy-table-body bind_body scroll-tbody" id="classdays-tbody">


                                                @{
                                                    int i = 0;
                                                }
                                                @foreach (var j in Model.Itemlst)
                                                {
                                                    <tr>


                                                        @if (j.AttendanceType == "1")
                                                        {
                                                            <td style="text-align:left;" data-title="Client">
                                                                <p>
                                                                    @j.CName
                                                                </p>
                                                                @Html.HiddenFor(m => m.Itemlst[i].ClientID)
                                                            </td>
                                                            <td style="text-align:left;" data-title="Breakfast">
                                                                <p>

                                                                    @Html.CheckBoxFor(m => m.Itemlst[i].Breakfast, new { @style = "width:auto!important;", @class = (Model.Itemlst[i].Breakfast ? "breakfast-checked" : "check-braeakfast"), @disabled = "disabled" })
                                                                    @Html.HiddenFor(m => m.Itemlst[i].BreakfastServedOn, new { @class = "servedTime" })
                                                                    @*@Html.HiddenFor(m => m.Itemlst[i].MealType)*@
                                                                    @* <input type="checkbox" name="ClientIDB" value="@j.ClientID" style="width:auto!important" @if (j.Breakfast) { <text> checked="checked" </text>     } />*@
                                                                </p>
                                                            </td>
                                                            <td style="text-align:left;" data-title="Lunch">
                                                                <p>
                                                                    @Html.CheckBoxFor(m => m.Itemlst[i].Lunch, new { @style = "width:auto!important;", @class = (Model.Itemlst[i].Lunch ? "lunch-checked" : "check-lunch"), @disabled = "disabled" })

                                                                    @Html.HiddenFor(m => m.Itemlst[i].LunchServedOn, new { @class = "servedTime" })
                                                                    @*@Html.HiddenFor(m => m.Itemlst[i].MealType)*@

                                                                    @*<input type="checkbox" name="ClientIDL" value="@j.ClientID" style="width:auto!important;" @if (j.Lunch) { <text> checked="checked" </text>    } />*@
                                                                </p>
                                                            </td>

                                                                <td style="text-align:left;" data-title="Snack">
                                                                    <p>
                                                                        @Html.CheckBoxFor(m => m.Itemlst[i].Snack, new { @style = "width:auto!important;", @class = (Model.Itemlst[i].Snack ? "snack-checked" : "check-snack"), @disabled = "disabled" })
                                                                        @Html.HiddenFor(m => m.Itemlst[i].SnackServedOn, new { @class = "servedTime" })
                                                                        @*@Html.HiddenFor(m => m.Itemlst[i].MealType)*@



                                                                        @*<input type="checkbox" name="ClientIDS" value="@j.ClientID" style="width:auto!important;" @if (j.Snack) { <text> checked="checked" </text>   } />*@

                                                                    </p>

                                                                </td>
                                                                <td style="text-align:left;" data-title="Dinner">
                                                                    <p>
                                                                        @Html.CheckBoxFor(m => m.Itemlst[i].Dinner, new { @style = "width:auto!important;", @class = (Model.Itemlst[i].Dinner ? "dinner-checked" : "check-dinner"), @disabled = "disabled" })
                                                                        @Html.HiddenFor(m => m.Itemlst[i].DinnerServedOn, new { @class = "servedTime" })
                                                                        @*@Html.HiddenFor(m => m.Itemlst[i].MealType)*@







                                                                        @*<input type="checkbox" name="ClientIDD" value="@j.ClientID" style="width:auto!important;" @if (j.Dinner) { <text> checked="checked" </text>   } />*@
                                                                    </p>

                                                                </td>


                                                                @*<td style="text-align:left;display:none;">
                                                                        <p>

                                                                            @Html.CheckBoxFor(m => m.Itemlst[i].Snack2, new { @style = "width:auto!important;" })

                                                                            @Html.HiddenFor(m => m.Itemlst[i].Snack2ServedOn)
                                                                        </p>
                                                                    </td>*@

                                                                <td style="color:slategrey;text-align:left;" data-title="Meal Observation Notes"><p><a style="text-decoration:underline;cursor:pointer;" title="Click here for Case Notes" href="javascript:void(0);" onclick="getCaseNoteSection(this, '@Model.Itemlst[i].ClientID');"><img src="~/Images/referral.png" /></a></p></td>


                                                        }

                                                    </tr>

                                                    i++;
                                                }


                                            </tbody>



                                        </table>




                                    </div>





                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 referrals">
                                    <div class="add-useragform student-scroll full-border full-border-margin">
                                        <div id="sig"></div>

                                        <input type="hidden" id="childid" value="@Model.ClientID" />



                                    </div>



                                    <div class="form-group final-btn text-center glossy_btn adddivspace">

                                        @Html.HiddenFor(m => m.CenterID)
                                        @Html.HiddenFor(m => m.ClassID)

                                        <button class="glossy-button-button button-green" type="submit" onclick="return ValidateData();" id="post">
                                            <span class="glossy-button-after"></span>
                                            <span class="glossy-button-before"></span>
                                            Submit
                                        </button>
                                        &nbsp;&nbsp;
                                        <button class="glossy-button-button button-red" type="button" onclick="location.href='@Url.Action("Roster", "Teacher")';return false;">
                                            <span class="glossy-button-after"></span>
                                            <span class="glossy-button-before"></span>
                                            Exit
                                        </button>
                                    </div>








                                </div>

                                <div id="no-more-tables8" class="col-xs-12" style="margin-bottom: 20px;">

                                    <div class="col-xs-12 glossy-panel-div" id="div-table-responsive">






                                        <div class="col-xs-12 col-md-12 col-lg-6 pull-right search-block-main table-responsive">


                                            <table class="col-md-12 table table-condensed table-striped glossy-table total-details-table  table_size">

                                                <thead>
                                                    <tr>
                                                        <th>Adult Breakfast</th>
                                                        <th>Adult Lunch</th>
                                                        <th>Adult Snack</th>
                                                        <th>Adult Dinner</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="ersea-table-head glossy-table-body bind_body scroll-tbody">

                                                    @foreach (var A in Model.Itemlst)
                                                    {

                                                        <tr>

                                                            <td data-title="Adult Breakfast">
                                                                <p>
                                                                    @A.ABreakfast
                                                                    @Html.Hidden("AdultBreakfast", A.ABreakfast)
                                                                    @Html.Hidden("AdultBreakfastServedOn", A.ABreakfastServedOn)
                                                                </p>
                                                            </td>

                                                            <td data-title="Adult Lunch">
                                                                <p>
                                                                    @A.ALunch
                                                                    @Html.Hidden("AdultLunch", A.ALunch)
                                                                    @Html.Hidden("AdultLunchServedOn", A.ALunchServedOn)


                                                                </p>
                                                            </td>

                                                            <td data-title="Adult Snack">
                                                                <p>
                                                                    @A.ASnack
                                                                    @Html.Hidden("AdultSnack", A.ASnack)
                                                                    @Html.Hidden("AdultSnackServedOn", A.ASnackServedOn)


                                                                </p>

                                                            </td>

                                                            <td data-title="Adult Dinner">
                                                                <p>
                                                                    @A.ADinner
                                                                    @Html.Hidden("AdultDinner", A.ADinner)
                                                                    @Html.Hidden("AdultDinnerServedOn", A.ADinnerServedOn)


                                                                </p>

                                                            </td>
                                                        </tr>

                                                        break;
                                                    }






                                                </tbody>
                                            </table>

                                        </div>





                                        <table class="col-md-12 glossy-table table-striped table-condensed cf table-change ersea-table" id="schedule-school-table-report">
                                            <thead class="table-hd scroll-thead">
                                                <tr>
                                                    <th>Client</th>
                                                    <th>Breakfast</th>
                                                    <th>Lunch</th>
                                                    <th>Snack</th>
                                                    <th>Dinner</th>
                                                </tr>
                                            </thead>
                                            <tbody class="ersea-table-head glossy-table-body bind_body scroll-tbody">

                                                @foreach (var j in Model.Itemlst)
                                                {
                                                    <tr>
                                                        <td style="text-align:left;" data-title="Client"><p>@j.CName</p></td>
                                                        <!-- THIS NEEDS TO GO TO CASE NOTES FOR MEALS OBSERVATIONS -->
                                                        @if (j.Breakfast == true)
                                                        {
                                                            <td data-title="Breakfast">
                                                                <p>
                                                                    <img src="~/Images/tick-sign.svg" style="height:15px;width:15px;" />

                                                                    <span style="float:right;margin-left:15px;">@Convert.ToDateTime(j.BreakfastServedOn).ToString("hh:mm tt")</span>

                                                                </p>


                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td data-title="Breakfast">
                                                                <p>
                                                                    <img src="~/Images/cross-sign.svg" style="height:15px;width:15px;" />


                                                                </p>
                                                            </td>
                                                        }

                                                        @if (j.Lunch == true)
                                                        {
                                                            <td data-title="Lunch">
                                                                <p>
                                                                    <img src="~/Images/tick-sign.svg" style="height:15px;width:15px;" />

                                                                    <span style="float:right;margin-left:15px;">@Convert.ToDateTime(j.LunchServedOn).ToString("hh:mm tt")</span>
                                                                </p>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td data-title="Lunch"><p><img src="~/Images/cross-sign.svg" style="height:15px;width:15px;" /> </p></td>
                                                        }
                                                        @if (j.Snack == true)
                                                        {
                                                            <td data-title="Snack">
                                                                <p>
                                                                    <img src="~/Images/tick-sign.svg" style="height:15px;width:15px;" />

                                                                    <span style="float:right;margin-left:15px;">@Convert.ToDateTime(j.SnackServedOn).ToString("hh:mm tt")</span>
                                                                </p>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td data-title="Snack"><p><img src="~/Images/cross-sign.svg" style="height:15px;width:15px;" /> </p></td>
                                                        }
                                                        @if (j.Dinner == true)
                                                        {
                                                            <td data-title="Dinner">
                                                                <p>
                                                                    <img src="~/Images/tick-sign.svg" />
                                                                    <span style="float:right;margin-left:15px;">@Convert.ToDateTime(j.DinnerServedOn).ToString("hh:mm tt")</span>
                                                                </p>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td data-title="Dinner"><p><img src="~/Images/cross-sign.svg" style="height:15px;width:15px;" /></p> </td>
                                                        }

                                                    </tr>

                                                }

                                            </tbody>



                                        </table>




                                    </div>





                                </div>


                                                    }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!--- Observation Notes Popup ----->


    <div class="modal fade scroll-modal custom-modal in" id="modal-daily-observation" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-ch">
            <div class="modal-content">
                <div class="modal-body">
                    <h2 id="CaseNoteHeading" class="extra-title muted">Meal Observation Notes </h2>
                    <button type="button" class="close" data-dismiss="modal"><img src="/Content/CaseNote/images/close.png"></button>

                    <form id="formEditInkind" enctype="multipart/form-data">

                        <div class="max_items_addn popup-addn-scroll">

                            <div class="form-group col-xs-12">



                                <label for="lbl-popup-client" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Client</label>
                                <label id="lbl-popup-client" class="col-md-5 col-lg-8 col-xs-12" style="font-weight:normal;"></label>
                            </div>

                            <div id="clientcasenote-div">

                            </div>


                        </div>


                        <div class="form-group final-btn text-center glossy_btn adddivspace">

                            <button class="glossy-button-button button-green" type="button" id="btn-modal-cn-submit">
                                <span class="glossy-button-after"></span>
                                <span class="glossy-button-before"></span>
                                Save
                            </button>
                            &nbsp;
                            <button class="glossy-button-button button-red" type="button" id="btn-modal-cn-cancel" data-dismiss="modal">
                                <span class="glossy-button-after"></span>
                                <span class="glossy-button-before"></span>
                                Exit
                            </button>
                        </div>

                    </form>


                </div>
            </div>
        </div>

    </div>


    <!----- ------>
    <!----modal upload multiple document using camera--->


    @{
        Html.RenderPartial("~/Views/Partialviews/_MultipleCameraUploadPartial.cshtml");

    }


    <!------>



}


