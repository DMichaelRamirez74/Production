@model FingerprintsModel.InkindReportModel

@{
    ViewBag.Title = "InkindReport";
    if (Session["Roleid"] != null && (Session["Roleid"].ToString().Contains("a65bb7c2-e320-42a2-aed4-409a321c08a5") || Session["Roleid"].ToString().Contains("3b49b025-68eb-4059-8931-68a0577e5fa2")))
    {
        Layout = "~/Views/Shared/AgencyAdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/AgencyStaffLayout.cshtml";
    }

}

@section Title
{
    In-kind Report

}

@section Script
{

    <script type="text/javascript">

        REQUESTED_PAGE = 1;
        PAGE_SIZE = 10;
        FIRST_INDEX = 0;
        START_INDEX = 0;
        LAST_INDEX = 0;
        PAGE_LOADED_FIRST = false;
        TOTAL_RECORDS = 0;
        NUM_OF_PAGES = 0;
        MAX_HRS_MIN_ENTRY = '12:00';
        WARNING_HRS_ENTRY = '08:00';

        var self = null;
        var _allowExceedingWarninghrs = false;
        var _sortOrder = null;
        var _sortColumn = null;
         _validFileExtensions = [".pdf", ".jpg", ".jpeg", ".bmp", ".gif", ".png"];

        var inKindReport = {

            init: function () {
                self = this;

                self.initializeElements();
                self.initEvents();
                self.resetElements();
            },
            inkindPeriods:@Html.Raw(Json.Encode(Model.InkindPeriodList)),

            inkindBudgetPeriods:[],


            elements: {

                'inKindFilter': null,
                'inkindFromDate': null,
                'inkindToDate': null,
                'inkindDateEntered':null,
                'divEnteredByDropdown':null,
                'dropdownEnteredBy':null,
                'inkindSearch': null,
                'inkindExport':null,
                'divCenterDropdown': null,
                'dropdownCenter': null,
                //  'divAgencyDropdown': null,
                //  'dropdownAgency': null,
                'divContributorDropdown': null,
                'dropdownContributor': null,
                'divContributionActivityDropdown': null,
                'dropdownContributionActivity': null,
                'tableInkind': null,
                'tbodyInkind': null,
                'divTableResponsive': null,
                'dropdownRecordsPerpage': null,
                'dropdownPageNumber': null,
                'buttonPagingBack': null,
                'buttonPagingFirst': null,
                'buttonPagingNext': null,
                'buttonPagingLast': null,
                'ulPaging': null,
                'divPagination': null,
                'spanTotalRecord': null,
                'modalEditInkind': null,
                'modalDescriptionText': null,
                'modalinkindActivityDate': null,
                'modalselectInkindActivity': null,
                'modalinkindHoursText': null,
                'modalinkindMinutesText': null,
                'modalinkindActivityMiles': null,
                'modalinkindAmount': null,
                'modalselectinkindcenter': null,
                'modalselectinkindclassroom': null,
                'modalbuttonInkindSave': null,
                'modalbuttonInkindCancel': null,
                'modallabelContactName': null,
                'modallabelActivityType': null,
                'modallabelAmountRate': null,
                'modalhiddenTransID': null,
                'textSearchInkind': null,
                'buttonSearchAutoComplete':null,
                'divAddAttachments':null,
                'divDownloadAttachments':null,
                'modalAddAttachment':null,
                'modallabelInkindActivity':null,
                'modalspanAllowedDates':null,
                'modalImageUploadCamera':null,
                'modalUploadDocument':null,
                'modal_buttonAdd_uploadDocument':null,
                'modal_div_uploadDocument_image_gallery':null



            },

            filterType: {
                'Center': 1,
                'Contributor': 2,
                'ContributionActivity': 3,
                'DateEntered':4,
                'EnteredBy':5
            },
            amountType: {
                'Miles': 1,
                'Hours': 2,
                'Fixed': 3
            },
            documentType:{

                'pdf':'.pdf',
                'doc':['.doc','.docx'],
                'txt':'.txt',
                'xls':['.xslx','.xls'],
                'image':['.png','.image','.jpg' ,'.tiff']
            },

            ajaxParameters: {

                'filterType': null,
                'selectedOption': null,
                'centers':null,
                'fromDate': null,
                'toDate': null,
                'requestedPage': REQUESTED_PAGE,
                'pageSize': PAGE_SIZE,
                'sortOrder': null,
                'sortColumn': null,
                'searchTerm': null,
                'searchTermType:': null,
                'dateEntered':null

            },

            initializeElements: function () {

                var $selfElements = self.elements;
                $selfElements.inKindFilter = $('#selectFilterBy');
                $selfElements.inkindFromDate = $('#fromDateDateTimePicker');
                $selfElements.inkindToDate = $('#toDateDateTimePicker');
                $selfElements.inkindDateEntered=$('#dateEnteredDateTimePicker');
                $selfElements.divEnteredByDropdown=$('#div-enteredby-dropdown');
                $selfElements.dropdownEnteredBy=$('#selectEnteredBy');
                $selfElements.inkindSearch = $('#btnSearchInkind');
                $selfElements.inkindExport=$('#btninkindExport');
                $selfElements.divCenterDropdown = $('#div-center-dropdown');
                $selfElements.dropdownCenter = $('#selectCenter');

                $selfElements.divAgencyDropdown = $('#div-agency-dropdown');
                //  $selfElements.dropdownAgency = $('#selectAgency');

                $selfElements.divContributorDropdown = $('#div-contributor-dropdown');
                $selfElements.dropdownContributor = $('#selectContributor');

                $selfElements.divContributionActivityDropdown = $('#div-contributionactivity-dropdown');
                $selfElements.dropdownContributionActivity = $('#selectContributonActivity');

                $selfElements.tableInkind = $('#inkind-table');
                $selfElements.tbodyInkind = $('#inkind-tbody');
                $selfElements.divTableResponsive = $('#div-table-responsive');
                $selfElements.dropdownRecordsPerpage = $("#ddlpagetodisplay");
                $selfElements.dropdownPageNumber = $('#ddlpaging');
                $selfElements.divPagination = $('#divPaging');
                $selfElements.ulPaging = $selfElements.divPagination.find('#ulPaging');
                $selfElements.buttonPagingBack = $selfElements.ulPaging.find('#Back');
                $selfElements.buttonPagingFirst = $selfElements.ulPaging.find('#First');
                $selfElements.buttonPagingNext = $selfElements.ulPaging.find('#Next');
                $selfElements.buttonPagingLast = $selfElements.ulPaging.find('#Last');


                $selfElements.spanTotalRecord = $('#totalCountSpan');
                $selfElements.modalEditInkind = $('#modal-edit-inkind');
                $selfElements.modalinkindActivityDate = $selfElements.modalEditInkind.find('#inkindActivityDate');
                $selfElements.modalselectInkindActivity = $selfElements.modalEditInkind.find('#select-inkind-activity');
                $selfElements.modalDescriptionText = $selfElements.modalEditInkind.find('#textarea-inkind-description');
                $selfElements.modalinkindHoursText = $selfElements.modalEditInkind.find('#inkindHoursText');
                $selfElements.modalinkindMinutesText = $selfElements.modalEditInkind.find('#inkindMinutesText');
                $selfElements.modalinkindActivityMiles = $selfElements.modalEditInkind.find('#inkindActivityMiles')
                $selfElements.modalinkindAmount = $selfElements.modalEditInkind.find('#inkindAmount');
                $selfElements.modalselectinkindcenter = $selfElements.modalEditInkind.find('#select-inkind-center');
                $selfElements.modalselectinkindclassroom = $selfElements.modalEditInkind.find('#select-inkind-classroom');
                $selfElements.modalbuttonInkindSave = $selfElements.modalEditInkind.find('#btn-modal-submit');
                $selfElements.modalbuttonInkindCancel = $selfElements.modalEditInkind.find('#btn-modal-cancel');
                $selfElements.modallabelContactName = $selfElements.modalEditInkind.find('#lbl-contact-name');
                $selfElements.modallabelActivityType = $selfElements.modalEditInkind.find('#lbl-activity-type');
                $selfElements.modallabelAmountRate = $selfElements.modalEditInkind.find('#lbl-amount-rate');
                $selfElements.modalhiddenTransID = $selfElements.modalEditInkind.find('#hide-trans-id');
                $selfElements.textSearchInkind = $selfElements.divTableResponsive.find('#searchInkindText');
                $selfElements.buttonSearchAutoComplete = $selfElements.divTableResponsive.find('#btnSearchauto');
                $selfElements.divDownloadAttachments=$selfElements.modalEditInkind.find('#div-download-inkind-attachments');
                $selfElements.divAddAttachments=$selfElements.modalEditInkind.find('#add-inkind-attachments-div');
                $selfElements.modalAddAttachment=$selfElements.modalEditInkind.find('#Attachmectstag');
                $selfElements.modallabelInkindActivity=$selfElements.modalEditInkind.find('#lbl-inkind-activity');
                $selfElements.modalspanAllowedDates=$selfElements.modalEditInkind.find('#spanAllowedDates');
                $selfElements.modalImageUploadCamera=$selfElements.modalEditInkind.find('#uploadImageCamera');

                $selfElements.modalUploadDocument=$('#modal-uploaddocument');
                $selfElements.modal_buttonAdd_uploadDocument=$selfElements.modalUploadDocument.find('#btn-modal-doc-add');
                $selfElements.modal_div_uploadDocument_image_gallery=$selfElements.modalUploadDocument.find('.div-image-snap-gallery');


            },

            resetElements: function () {

                self = this;

                self.elements.inKindFilter.val('');
                self.elements.dropdownContributionActivity.val('');


                var $minDate=(self.inkindPeriods!=null && self.inkindPeriods.length>0)?new Date(self.inkindPeriods[0].StartDate).setHours(0,0,0,0):null;
                //var $maxDate=(self.inkindPeriods!=null && self.inkindPeriods.length>0)?new Date(self.inkindPeriods[0].EndDate).setHours(0,0,0,0):null;

                self.elements.inkindFromDate.datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    validateOnBlur: false,
                    mask: true,
                    minDate: $minDate,
                    maxDate: new Date()
                    //  validateOnBlur: true

                });



                self.elements.inkindToDate.datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    validateOnBlur: false,
                    mask: true,
                    minDate: $minDate,
                    maxDate: new Date()
                    //validateOnBlur: true
                });


                self.elements.inkindDateEntered.datetimepicker({
                    timepicker:false,
                    format:'m/d/Y',
                    validateOnBlur:false,
                    mask:true,
                    minDate:$minDate,
                    maxDate:new Date()
                });



                // self.elements.divCenterDropdown.hide();

                self.elements.divAgencyDropdown.hide();
                self.elements.divContributionActivityDropdown.hide();
                self.elements.divContributorDropdown.hide();

                self.elements.modalinkindAmount.prop('disabled', true);

                // self.elements.inkindFromDate.val('');
                // self.elements.inkindToDate.val('');


            },

            initEvents: function () {
                self = this;

                var $selfElements = self.elements;



                $('[data-toggle="tooltip"]').tooltip();
              //  $('[data-toggle="popover"]').popover();


               self.getOptionsByFilterType(self.filterType.Center);

                $selfElements.modalImageUploadCamera.on('click',function(){
                    $selfElements.modalEditInkind.modal('hide');
                    //$('body').addClass('modal-open');

                    $selfElements.modalUploadDocument.find('.div-image-snap-gallery').html('');
                    $selfElements.modalUploadDocument.modal('show');
                });




                $selfElements.modalEditInkind.on('shown.bs.modal',function(event){
                


                    //if($selfElements.modalImageUploadCamera.is(':visible'))
                    //{
                    
                    //    $selfElements.modalImageUploadCamera.popover('destroy');
                    //    $selfElements.modalImageUploadCamera.popover({

                    //        title:function(){

                    //            return 'Upload document using Webcam is available';
                    //        }

                    //    });

                    //    $selfElements.modalImageUploadCamera.popover('show');
                    //}

                    $('body').css({'padding-right':'0px'});

                });

                $selfElements.modalUploadDocument.on('shown.bs.modal', function (event) {
                    $('body').addClass('modal-open');

                    showVideoStream();


                    
                   

                    //$selfElements.modalEditInkind.modal('hide');
                }).on('hidden.bs.modal',function(event){
                
                    stopIntervalUserMedia();
                    $selfElements.modalEditInkind.modal('show');
                });


                $selfElements.inKindFilter.on('change', function (e) {



                    e.preventDefault();


                    self.elements.divAgencyDropdown.hide('slow');
                 //   self.elements.divCenterDropdown.hide('slow');
                    self.elements.divContributionActivityDropdown.hide('slow');
                    self.elements.divContributorDropdown.hide('slow');
                    self.elements.divEnteredByDropdown.hide('slow');




                    var $filterOption=parseInt($(this).val())


                    switch($filterOption)
                    {
                        case self.filterType.DateEntered:


                            self.elements.inkindFromDate.parent('div').parent('div').hide('slow');
                            self.elements.inkindToDate.parent('div').parent('div').hide('slow');
                            self.elements.inkindDateEntered.val('');
                            self.elements.inkindDateEntered.parent('div').parent('div').show('slow');

                            break;


                        case self.filterType.EnteredBy:


                      
                            self.elements.inkindDateEntered.val('');
                            self.elements.inkindDateEntered.parent('div').parent('div').hide('slow');
                            self.elements.dropdownEnteredBy.parent('div').parent('div').show('slow');
                            self.elements.inkindFromDate.parent('div').parent('div').show('slow');
                            self.elements.inkindToDate.parent('div').parent('div').show('slow');
                            self.getOptionsByFilterType($filterOption);
                            break;

                        default:

                            self.elements.inkindFromDate.parent('div').parent('div').show('slow');
                            self.elements.inkindToDate.parent('div').parent('div').show('slow');
                            self.elements.inkindDateEntered.val('');
                            self.elements.inkindDateEntered.parent('div').parent('div').hide('slow');


                            self.getOptionsByFilterType($filterOption);

                            break;
                    }






                });

                $selfElements.inkindSearch.on('click', function (e) {

                    e.preventDefault();


                    if(!self.validateFilterSection())
                    {
                        return false;
                    }

                    else {

                        self.elements.dropdownPageNumber.val('1');

                        REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                        PAGE_SIZE = self.elements.dropdownRecordsPerpage.val();

                        self.ajaxParameters.searchTerm="";
                        self.ajaxParameters.searchTermType="";
                        self.elements.textSearchInkind.val('');

                        self.getInkindTransactionsReport(self.bindAjaxParameters());

                        self.elements.buttonPagingFirst.attr('disabled', true);
                        self.elements.buttonPagingBack.attr('disabled', true);

                    }





                });

                $selfElements.inkindFromDate.next('.datepicker-icon').on('click', function (e) {
                    e.preventDefault();
                    $selfElements.inkindFromDate.datetimepicker('show');

                });

                $selfElements.inkindFromDate.on('blur', function () {

                    if ($(this).val() != null && $(this).val() != '')
                    {
                        if (!self.validateDate($(this).val())) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Please enter valid date');
                            return false;
                        }

                        if (new Date($(this).val()).setHours(0, 0, 0, 0) > new Date().setHours(0, 0, 0, 0)) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Future dates are not allowed');
                            return false;
                        }
                    }



                });



                $selfElements.inkindToDate.next('.datepicker-icon').on('click', function (e) {
                    e.preventDefault();
                    $selfElements.inkindToDate.datetimepicker('show');

                });

                $selfElements.inkindToDate.on('blur', function () {


                    if ($(this).val() != null && $(this).val() != '') {

                        if (!self.validateDate($(this).val())) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Please enter valid date');
                            return false;
                        }

                        if (new Date($(this).val()).setHours(0, 0, 0, 0) > new Date().setHours(0, 0, 0, 0)) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Future dates are not allowed');
                            return false;
                        }

                    }
                });



                $selfElements.inkindDateEntered.next('.datepicker-icon').on('click', function (e) {
                    e.preventDefault();
                    $selfElements.inkindDateEntered.datetimepicker('show');

                });

                $selfElements.inkindDateEntered.on('blur', function () {


                    if ($(this).val() != null && $(this).val() != '') {

                        if (!self.validateDate($(this).val())) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Please enter valid date');
                            return false;
                        }

                        if (new Date($(this).val()).setHours(0, 0, 0, 0) > new Date().setHours(0, 0, 0, 0)) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Future dates are not allowed');
                            return false;
                        }

                    }
                });




                $selfElements.inkindExport.on('click',function(e){


                    e.preventDefault();

                    if(self.validateFilterSection())
                    {

                        self.bindAjaxParameters();

                        window.location.href = HostedDir + '/InKind/ExportInkindReport?filterType='+self.ajaxParameters.filterType+
                            '&selectedOption='+self.ajaxParameters.selectedOption+'&centers='+self.ajaxParameters.centers+' &fromDate='+self.ajaxParameters.fromDate+'&toDate='+self.ajaxParameters.toDate+
                            '&dateEntered='+self.ajaxParameters.dateEntered+'&requestedPage='+0+'&pageSize='+0+
                            '&sortOrder='+self.ajaxParameters.sortOrder+'&sortColumn='+self.ajaxParameters.sortColumn+'&searchTerm='+self.ajaxParameters.searchTerm+
                            '&searchTermType=""';

                    }
                    else
                    {
                        return false;
                    }
                });






                $selfElements.buttonSearchAutoComplete.on('click', function () {


                    if(self.elements.textSearchInkind.val()==null || self.elements.textSearchInkind.val()=='')
                    {
                        plainValidation(self.elements.textSearchInkind);
                        customAlert('Please enter any term to search');
                        return false;
                    }

                    else {

                        self.elements.dropdownPageNumber.val('1');
                        REQUESTED_PAGE = self.elements.dropdownPageNumber.val();

                        self.getInkindTransactionsReport(self.bindAjaxParameters());
                    }

                });



                $selfElements.modalinkindActivityDate.next('.datepicker-icon').on('click', function (e) {
                    e.preventDefault();
                    $selfElements.modalinkindActivityDate.datetimepicker('show');

                });

                $selfElements.modalinkindActivityDate.on('blur', function () {
                    if ($(this).val() != null && $(this).val() != '') {

                        if (!self.validateDate($(this).val())) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Please enter valid date');
                            return false;
                        }

                        if (new Date($(this).val()).setHours(0, 0, 0, 0) > new Date().setHours(0, 0, 0, 0)) {
                            plainValidation($(this));
                            $(this).val('');
                            customAlert('Future dates are not allowed');
                            return false;
                        }
                    }

                });












                $selfElements.modalselectInkindActivity.on('change', function () {

                    self.onActivitySelectChange(this);

                });

                $selfElements.modalinkindHoursText.on('keypress', function () {

                    return self.isNumber(this.event);
                });

                $selfElements.modalinkindMinutesText.on('keypress', function () {

                    return self.isNumber(this.event);
                });

                $selfElements.modalinkindAmount.on('keydown', function () {

                    var input = $(this);
                    var oldVal = input.val();
                    var regex = new RegExp(input.attr('pattern'), 'g');
                    // var regex = new RegExp('^\d*(\.\d{0,2})?$', 'g');
                    setTimeout(function () {
                        var newVal = input.val();
                        if (!regex.test(newVal)) {
                            input.val(oldVal);
                        }
                    }, 0);

                });

                //Validates the Input. allows only numericals//

                $selfElements.modalinkindActivityMiles.on('keypress', function (event) {
                    if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                        event.preventDefault();
                    }
                });





                $selfElements.modalinkindHoursText.on('input', function () {


                    return self.getInkindAmountOnInput(this);

                }).popover({

                    html: true,
                    content: function () {
                        //  return $($(this).data('target-selector')).html();
                        return '<p class="text-center">Are you sure, you want to continue?</p>\
         <p class="text-center"><button type="button" class="btn btn-success allow-yes">Yes</button>&nbsp;&nbsp;<button type="button" class="btn btn-danger allow-no">No</button></p>';

                    },
                    title: function () {

                        return $(this).data('title');

                    },
                    trigger: 'manual',
                    delay: { "show": 500, "hide": 100 }
                }).on('shown.bs.popover', function (e) {

                    var _popover = $(this);

                    _popover.parent().find('div.popover .allow-yes').on('click', function () {
                        _allowExceedingWarninghrs = true;
                        _popover.popover('hide');
                    });

                    _popover.parent().find('div.popover .allow-no').on('click', function () {
                        _allowExceedingWarninghrs = false;
                        self.elements.modalinkindHoursText.val(0);
                        self.elements.modalinkindMinutesText.val(0);
                        self.elements.modalinkindAmount.val(0);

                        _popover.popover('hide');
                    });




                });

                $selfElements.modalinkindMinutesText.on('input', function () {

                    return self.getInkindAmountOnInput(this);

                });

                $selfElements.modalinkindActivityMiles.on('input', function () {

                    return self.getInkindAmountOnInput(this);
                });


                $selfElements.modalselectinkindcenter.on('change', function (e) {
                    e.preventDefault();

                    if ($(this).val() == '0') {
                        self.elements.modalselectinkindclassroom.find('option').remove();
                        return false;
                    }

                    self.getClassrooms($(this).val(), self.elements.modalselectinkindclassroom, self.bindClassrooms);
                });



                $selfElements.modalAddAttachment.on('click',function(){

                    self.addMoreInkindAttachments(this);

                });



                $(document).on('click','.anchor-remove-attachment',function(){


                    $(this).parent('div').remove();

                });

                $(document).on("click", ".popover .close" , function(){
                    $(this).parents(".popover").popover('hide');
                });



                $selfElements.modalbuttonInkindSave.on('click', function () {

                    var $selfElements = self.elements;

                    if ($selfElements.modalinkindActivityDate.val() === '') {
                        plainValidation($selfElements.modalinkindActivityDate);
                        customAlert('Please Enter Activity Date');
                        return false;
                    }

                    if(!self.isValidAllowedDates($selfElements.modalinkindActivityDate.val()))
                    {
                        plainValidation($selfElements.modalinkindActivityDate);
                        customAlert('Entered date is not allowed');
                        return false;
                    }

                    if ($selfElements.modalinkindActivityDate.val() != '' && !self.validatedates($selfElements.modalinkindActivityDate)) {
                        return false;
                    }


                    if ($selfElements.modalDescriptionText.val() === '') {
                        plainValidation($selfElements.modalDescriptionText);
                        customAlert('Please Enter Activity Description');
                        return false;
                    }


                    if ($selfElements.modalinkindHoursText.parent('div').parent('div').is(':visible')) {
                        if ($selfElements.modalinkindHoursText.val() === '') {
                            plainValidation($selfElements.modalinkindHoursText);
                            customAlert('Please Enter Hours');
                            return false;
                        }

                        if ($selfElements.modalinkindMinutesText.val() === '') {
                            plainValidation($selfElements.modalinkindMinutesText);
                            customAlert('Please Enter Minutes');
                            return false;
                        }

                        if (self.getTotalhoursMinutes($selfElements.modalinkindHoursText.val(), $selfElements.modalinkindMinutesText.val()) <= 0) {

                            plainValidation($selfElements.modalinkindHoursText);
                            plainValidation($selfElements.modalinkindMinutesText);
                            customAlert('Please enter valid hours and minutes');
                            return false;
                        }

                        if (!self.validateHoursMinutes($selfElements.modalinkindHoursText) || !self.validateHoursMinutes($selfElements.modalinkindMinutesText)) {
                            return false;
                        }

                        if (self.getTotalhoursMinutes($selfElements.modalinkindHoursText.val(), $selfElements.modalinkindMinutesText.val()) > parseFloat(WARNING_HRS_ENTRY.split(':')[0]) && _allowExceedingWarninghrs == false) {
                            return false;
                        }




                    }

                    if ($selfElements.modalinkindActivityMiles.parent('div').parent('div').is(':visible') && $selfElements.modalinkindActivityMiles.val() === '') {

                        plainValidation($selfElements.modalinkindActivityMiles);
                        customAlert('Please Enter Miles Driven');
                        return false;

                    }




                    if ($selfElements.modalinkindAmount.val() === '') {
                        plainValidation($selfElements.modalinkindAmount);
                        customAlert('Please Enter Amount');
                        return false;
                    }

                    if ($selfElements.modalselectinkindcenter.val() === '0') {
                        plainValidation($selfElements.modalselectinkindcenter);
                        customAlert('Please Select Center');
                        return false;
                    }

                    else {

                        var InKindTransactions = {};
                        var InKindDonarsContact = {};

                        var InKindTransactionsList = [];

                        var activeCodeArray = [];
                        activeCodeArray.push($selfElements.modallabelInkindActivity.data('inkind-activity'));


                        if (activeCodeArray.length > 0) {
                            $.each(activeCodeArray, function (m, activeCode) {
                                //var amtType = $('option:selected', $selfElements.modalselectInkindActivity).attr('amt-type');
                                var amtType=parseInt( $selfElements.modallabelInkindActivity.data('amt-type'));
                                var minutes = '0';
                                var hrs = '0';
                                var miles = '0';

                                if (amtType ===self.amountType.Miles)//Miles
                                {
                                    miles = ($selfElements.modalinkindActivityMiles.parent('div').parent('div').is(':visible')) ? $selfElements.modalinkindActivityMiles.val() : '0';
                                    hrs = '0';
                                    minutes = '0';
                                }
                                else if (amtType === self.amountType.Hours)//Hours
                                {
                                    miles = '0';
                                    hrs = ($selfElements.modalinkindHoursText.val() == null || $selfElements.modalinkindHoursText.val() == '') ? 0 : parseInt($selfElements.modalinkindHoursText.val());
                                    minutes = ($selfElements.modalinkindMinutesText.val() == null || $selfElements.modalinkindMinutesText.val() == '') ? 0 : parseInt($selfElements.modalinkindMinutesText.val());
                                }

                                else if (amtType === self.amountType.Fixed)//fixed
                                {
                                    miles = '0';
                                    hrs = '0';
                                    minutes = '0';


                                }







                                InKindTransactions = {};

                                InKindTransactions.ActivityNotes = $selfElements.modalDescriptionText.val();
                                InKindTransactions.InKindAmount = parseFloat($selfElements.modalinkindAmount.val());
                                InKindTransactions.ActivityID = parseInt(activeCode);
                                InKindTransactions.IsActive = true;
                                InKindTransactions.DonorSignature = null;
                                InKindTransactions.StaffSignature = {'Signature':'','SignatureCode': ''};
                                InKindTransactions.IsCompany = false;
                                InKindTransactions.Hours = hrs;
                                InKindTransactions.Minutes = minutes;
                                InKindTransactions.CenterID = 0
                                InKindTransactions.ClassroomID = 0
                                InKindTransactions.Enc_CenterID = $selfElements.modalselectinkindcenter.val();
                                InKindTransactions.Enc_ClassroomID = $selfElements.modalselectinkindclassroom.val();
                                InKindTransactions.FromNo = 0;
                                InKindTransactions.ActivityDate = $selfElements.modalinkindActivityDate.val();
                                InKindTransactions.ClientID = "0";
                                InKindTransactions.ParentID = 0;
                                InKindTransactions.MilesDriven = miles;
                                InKindTransactions.ParentType = false;
                                InKindTransactions.InkindTransactionID = $selfElements.modalhiddenTransID.val();
                                InKindTransactionsList.push(InKindTransactions);
                            });
                        }


                        InKindDonarsContact.IsInsert = false;
                        InKindDonarsContact.InKindDonarId = 0;
                        InKindDonarsContact.CorporateName = '';
                        InKindDonarsContact.ContactName = '';
                        InKindDonarsContact.FirstName = '';
                        InKindDonarsContact.LastName = '';
                        InKindDonarsContact.AddressLine1 = '';
                        InKindDonarsContact.AddressLine2 = '';
                        InKindDonarsContact.City = '';
                        InKindDonarsContact.County = '';
                        InKindDonarsContact.ApartmentNo = '';
                        InKindDonarsContact.State = '';
                        InKindDonarsContact.ZipCode = '';
                        InKindDonarsContact.PhoneNo = '';
                        InKindDonarsContact.EmailId = '';
                        InKindDonarsContact.Gender = '';
                        InKindDonarsContact.IsCompany = false;
                        InKindDonarsContact.PhoneType = '';



                        var model1 = {
                            "InkindTransactionsList": InKindTransactionsList,
                            "InKindDonarsContact": InKindDonarsContact
                        }


                        var fileData = new FormData();
                        $selfElements.divAddAttachments.find('input:file').each(function (a, b) {

                            var fileInput = $(this);
                            if (fileInput.val() != undefined && fileInput.val() != null && fileInput.val() != '') {
                                var fileUpload = fileInput.get(0);
                                var files = fileUpload.files;

                                for (var i = 0; i < files.length; i++) {
                                    fileData.append(files[i].name, files[i]);
                                }
                            }
                        });

                        fileData.append('modelString', JSON.stringify(model1));


                        var $cameraDocuments=$selfElements.modalEditInkind.find("#div-edit-modal-img-gallery").find('.setup_viewscreen');

                        var cameraDocumentsArray=[];

                        if($cameraDocuments.length>0)
                        {

                            $.each($cameraDocuments,function(j,doc){

                                var $doc=$(doc).find('img');
                                cameraDocumentsArray.push({'Text':'InkindDocument','Value':self.getBase64Image($doc)});
                            
                            });
                        }

                        fileData.append("cameraUploads", JSON.stringify(cameraDocumentsArray));



                        $.ajax({

                            url: HostedDir + '/InKind/InsertInkindTransactions',
                            datatype: 'json',
                            type: 'post',
                            contentType: false,
                            processData: false,
                            data: fileData,
                            success: function (data) {
                                if (data === 2) {
                                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                                }
                                else if (data === 1) {
                                    customAlert('Record saved successfully');

                                    self.elements.modalEditInkind.modal('hide');


                                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                                    PAGE_SIZE = self.elements.dropdownRecordsPerpage.val();

                                    self.getInkindTransactionsReport(self.bindAjaxParameters());
                                }

                                else {
                                    customAlert('Some Error Occurred. Please,try again later.');
                                }

                                return false;
                            },
                            error: function (data) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                                return false;
                            }

                        });

                        _allowExceedingWarninghrs = false;


                    }



                });



                $selfElements.modal_buttonAdd_uploadDocument.on('click',function(){
                

                    var $imageGallerylength= $selfElements.modal_div_uploadDocument_image_gallery.find('.setup_viewscreen').length;

                    if($imageGallerylength==0)
                    {
                        customAlert('Please capture image using camera');
                        return false;
                    }


                    $('#div-edit-modal-img-gallery').append($selfElements.modal_div_uploadDocument_image_gallery.html());

                    $selfElements.modal_div_uploadDocument_image_gallery.html('');

                    $selfElements.modalUploadDocument.modal('hide');

                });



                $selfElements.modalEditInkind.on('hidden.bs.modal', function () {

                    if($selfElements.modalUploadDocument.is(':visible'))
                    {
                      
                        return false;
                    }


                    $selfElements.modallabelContactName.html('');
                    $selfElements.modalinkindActivityDate.val('');
                    $selfElements.modalinkindActivityDate.datetimepicker('destroy');
                    $selfElements.modallabelActivityType.html('');

                    //   $selfElements.modalselectInkindActivity.html('');

                    $selfElements.modallabelInkindActivity.html('');

                    $selfElements.modallabelInkindActivity.attr({'data-inkind-activity':'0','data-amt-type':'0'});

                    $selfElements.modalDescriptionText.val('');
                    $selfElements.modalinkindHoursText.val('');
                    $selfElements.modalinkindMinutesText.val('');
                    $selfElements.modalinkindActivityMiles.val('');
                    $selfElements.modallabelAmountRate.html('');
                    $selfElements.modalinkindAmount.val('');
                    $selfElements.modalselectinkindcenter.html('');
                    $selfElements.modalselectinkindclassroom.html('');
                    $selfElements.modalinkindAmount.prop('disabled', true);

                    $selfElements.modalEditInkind.find('#div-edit-modal-img-gallery').html('');

                    //$selfElements.modalImageUploadCamera.hide();

                });
                



                $selfElements.dropdownRecordsPerpage.on('change', function () {

                    LAST_INDEX = 0;


                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                    PAGE_SIZE = self.elements.dropdownRecordsPerpage.val();

                    self.getInkindTransactionsReport(self.bindAjaxParameters());

                    $selfElements.buttonPagingFirst.attr('disabled', true);
                    $selfElements.buttonPagingBack.attr('disabled', true);
                });

                $selfElements.buttonPagingFirst.on('click', function () {

                    var $thisValue = 'First';

                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                    self.fnChangePage($thisValue);

                });

                $selfElements.buttonPagingBack.on('click', function () {

                    var $thisValue = 'Back';

                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                    self.fnChangePage($thisValue);

                });

                $selfElements.dropdownPageNumber.on('change', function () {


                    self.getListafterupdation();
                });

                $selfElements.buttonPagingNext.on('click', function () {

                    var $thisValue = 'Next';

                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                    self.fnChangePage($thisValue);

                });

                $selfElements.buttonPagingLast.on('click', function () {

                    var $thisValue = 'Last';

                    REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                    self.fnChangePage($thisValue);

                });



                $(document).on('click','.view-file',function(){

                    var $attchmentId=$(this).closest('.attachment-icons-block').data('attach-id');
                    var $inkindtransactionId=self.elements.modalhiddenTransID.val();
                    self.getInkindAttachment($attchmentId,$inkindtransactionId);
                });


                $(document).on('click','.delete-file',function(){
                    //BootstrapDialog.show({
                    //    title:'Confirmation',
                    //    message:'<p>You are about to delete this attachment.</p><p>Click <strong>OK</strong> to proceed.',
                    //    closable: true,
                    //    closeByBackdrop: false,
                    //    closeByKeyboard: false,
                    //    buttons: [{
                    //        label: '<span class="glossy-button-after"></span>\
                    //                    <span class="glossy-button-before"></span>Cancel',
                    //        cssClass:'glossy-button-button button-red',
                    //        action: function(dialogItself) {
                    //            dialogItself.close();
                    //        }
                    //    }, {
                    //        label: '<span class="glossy-button-after"></span>\
                    //                    <span class="glossy-button-before"></span>OK',
                    //        cssClass:'glossy-button-button button-green',
                    //        action: function(dialog) {
                    //            dialog.setTitle('Title 2');
                    //        }
                    //    }]


                    //});

                    $(this).attr({'data-toggle':'popover','title':'Confirmation','data-placement':'top'});

                    $(this).popover('show');

                });



                $(document).on('click','.delete-file-upload',function(){
                    
                    $(this).closest('.setup_viewscreen').remove();

                });


                
                $(document).on('click','.view-file-upload',function(){
                    
                  //  window.open($(this)., 'newwindow','width=500,height=500');

                    var imageAttr=  $(this).closest('.setup_viewscreen').find('.setup_viewscreen-camera').attr('src');
                 //   imageAttr=   imageAttr.replace(/^data:image\/(png|jpg);base64,/, "");
                    console.log(imageAttr);

                    //imageAttr='<embed src='+imageAttr+'></embed>';
                    //window.open(imageAttr, 'newwindow','width=500,height=500');



                    var w = window.open('about:blank','newwindow','width=500,height=500');

                    setTimeout(function(){ //FireFox seems to require a setTimeout for this to work.
                        w.document.body.appendChild(w.document.createElement('img'))
                            .src = imageAttr;
                    }, 0);

                });



                $(document).ajaxStart(function () {

                    $('#spinner').show();
                });

                $(document).ajaxStop(function () {

                    $('#spinner').hide();
                });



            },

            validateFilterSection:function(){

                cleanValidation();
                var $selfElements=self.elements;

                if ($selfElements.inKindFilter.val() == null || $selfElements.inKindFilter.val() == '') {
                    plainValidation($selfElements.inKindFilter);
                    customAlert('Please select Filter option');
                    return false;
                }





                //else if ($selfElements.inKindFilter.val() == self.filterType.Center
                //       && ($selfElements.dropdownCenter.val() == null
                //      || $selfElements.dropdownCenter.val() == '') ) {

                //    plainValidation($selfElements.dropdownCenter);
                //    customAlert('Please select center');
                //    return false;
                //}



                else if (($selfElements.inKindFilter.val() == self.filterType.Contributor 
                                      || $selfElements.inKindFilter.val()==self.filterType.ContributionActivity
                                      || $selfElements.inKindFilter.val()== self.filterType.DateEntered
                                      || $selfElements.inKindFilter.val()==self.filterType.EnteredBy)
                                 && ($selfElements.dropdownCenter.val() == null
                                || $selfElements.dropdownCenter.val() == '') ) {

                    plainValidation($selfElements.dropdownCenter);
                    customAlert('Please select center');
                    return false;
                }

                else if ($selfElements.inKindFilter.val() == self.filterType.Contributor
                        && ($selfElements.dropdownContributor.val() == null
                        || $selfElements.dropdownContributor.val() == '') ) {

                    plainValidation($selfElements.dropdownContributor);
                    customAlert('Please select Contributor');
                    return false;
                }

                else if ($selfElements.inKindFilter.val() == self.filterType.ContributionActivity
                    && ($selfElements.dropdownContributionActivity.val() == null
                    || $selfElements.dropdownContributionActivity.val() == '')) {

                    plainValidation($selfElements.dropdownContributionActivity);
                    customAlert('Please select Contribution Activity');
                    return false;
                }

                

                else if ($selfElements.inKindFilter.val() == self.filterType.EnteredBy
                && ($selfElements.dropdownEnteredBy.val() == null
                || $selfElements.dropdownEnteredBy.val() == '')) {

                    plainValidation($selfElements.dropdownEnteredBy);
                    customAlert('Please select Entered By');
                    return false;
                }


               

                else if ($selfElements.inKindFilter.val() == self.filterType.DateEntered
           && ($selfElements.inkindDateEntered.val() == null
           || $selfElements.inkindDateEntered.val() == '')) {

                    plainValidation($selfElements.inkindDateEntered);
                    customAlert('Please enter date');
                    return false;
                }



                else if (($selfElements.inkindFromDate.val() == null || $selfElements.inkindFromDate.val() == '' || $selfElements.inkindFromDate.val() == "__/__/____")
                     && parseInt($selfElements.inKindFilter.val())!=self.filterType.DateEntered
                     && parseInt($selfElements.inKindFilter.val())==self.filterType.EnteredBy
                    
                    ) {
                    plainValidation($selfElements.inkindFromDate);
                    customAlert('Please enter From date');
                    return false;
                }

                else if (($selfElements.inkindToDate.val() == null || $selfElements.inkindToDate.val() == '' || $selfElements.inkindToDate.val() == "__/__/____")
                     && parseInt($selfElements.inKindFilter.val())!=self.filterType.DateEntered
                    && parseInt($selfElements.inKindFilter.val())==self.filterType.EnteredBy) {
                    plainValidation($selfElements.inkindToDate);
                    customAlert('Please enter To date');
                    return false;
                }
                else if ((new Date($selfElements.inkindToDate.val()).setHours(0, 0, 0, 0)
                         < new Date($selfElements.inkindFromDate.val()).setHours(0, 0, 0, 0))
                     && parseInt($selfElements.inKindFilter.val())!=self.filterType.DateEntered
                    && parseInt($selfElements.inKindFilter.val())==self.filterType.EnteredBy) {
                    plainValidation($selfElements.inkindToDate);
                    customAlert('To date should by greater than or equal to From date');
                    return false;
                }

                //else if(self.inkindPeriods!=null && self.inkindPeriods.length>0)
                //{

                //    if(new Date($selfElements.inkindFromDate.val()).setHours(0, 0, 0, 0) < new Date(self.inkindPeriods[0].StartDate).setHours(0,0,0,0))
                //    {
                //        plainValidation($selfElements.inkindFromDate);
                //        customAlert('From date should by greater than in-kind dates');
                //        return false;
                //    }


                //    if(new Date($selfElements.inkindToDate.val()).setHours(0, 0, 0, 0) < new Date(self.inkindPeriods[0].StartDate).setHours(0,0,0,0))
                //    {
                //        plainValidation($selfElements.inkindToDate);
                //        customAlert('To date should by greater than in-kind dates');
                //        return false;
                //    }
                //}

                return true;
            },

            validateDate: function (text) {
                var isValid = true;
                var comp = text.split('/');
                if (comp.length !== 3)
                    return false;
                if (comp[2].length != 4)
                    return false;
                if (comp[2] <= 1901)
                    return false;
                if (new Date(text).toString() == "Invalid Date")
                    return false;
                if (!self.isvalid_mdy(text))
                    return false;
                var TodayDate = new Date();
                var endDate = new Date(text);

                return isValid;
            },
            isvalid_mdy: function (s) {

                var day, A = s.match(/[1-9][\d]*/g);
                try {
                    A[0] -= 1;
                    day = new Date(+A[2], A[0], +A[1]);

                    if (day.getMonth() == A[0] && day.getDate() == A[1]) return day;
                }
                catch (er) {
                    return er.message;
                }
            },

            isValidAllowedDates:function(enteredDate)
            {

                var $inkindPeriods= self.inkindBudgetPeriods;
                var $isAllowed=false;
                if($inkindPeriods!=null && $inkindPeriods.length>0)
                {

                    
                    $.each($inkindPeriods,function(){

                        if( new Date(enteredDate).setHours(0,0,0,0) >= new Date($(this)[0].StartDate).setHours(0,0,0,0)
                            && new Date(enteredDate).setHours(0,0,0,0)<=new Date($(this)[0].EndDate).setHours(0,0,0,0))
                        {
                            $isAllowed=true;
                            return $isAllowed;
                        }



                    });

                    return $isAllowed;

                }
                else
                {
                    $isAllowed=true;
                    return $isAllowed;
                }




            },



            getFormattedDate:function(date) {
                date = new Date(date);
                var year = date.getFullYear();

                var month = (1 + date.getMonth()).toString();
                month = month.length > 1 ? month : '0' + month;

                var day = date.getDate().toString();
                day = day.length > 1 ? day : '0' + day;

                return month + '/' + day + '/' + year;
            },

            getOptionsByFilterType: function (filterType) {
                self = this;

                $.ajax({

                    url: HostedDir + '/InKind/GetInkindOptionByFilterType',
                    type: 'post',
                    datatype: 'json',
                    data: { filterType: filterType },
                    success: function (data) {
                        if (data != null && data.length > 0) {
                            var appendSection = '';

                            $.each(data, function (i, option) {

                                appendSection += '<option value=' + option.Value + '>' + option.Text + '</option>';
                            });

                           

                            switch (filterType) {

                                case self.filterType.Center:

                                    self.elements.dropdownCenter.multiselect('destroy');

                                    self.elements.dropdownCenter.html(appendSection);
                                    self.elements.dropdownCenter.val('');

                                    self.elements.dropdownCenter.multiselect({

                                        maxHeight: 200,
                                        includeSelectAllOption: true,
                                        enableFiltering: true,
                                        filterPlaceholder: 'Search Center',
                                        enableCaseInsensitiveFiltering: true,
                                        numberDisplayed: 1

                                    });
                                    self.elements.divCenterDropdown.find('.multiselect').addClass('glossy-select').removeClass('btn btn-default');
                                    self.elements.divCenterDropdown.find('.btn-group').css({ 'width': '100%' });
                                    self.elements.divCenterDropdown.show('slow');

                                    break;

                                case self.filterType.Contributor:

                                    self.elements.dropdownContributor.multiselect('destroy');

                                    self.elements.dropdownContributor.html(appendSection);
                                    self.elements.dropdownContributor.val('');

                                    self.elements.dropdownContributor.multiselect({

                                        maxHeight: 200,
                                        includeSelectAllOption: true,
                                        enableFiltering: true,
                                        filterPlaceholder: 'Search Contributor',
                                        enableCaseInsensitiveFiltering: true,
                                        numberDisplayed: 1
                                    });
                                    self.elements.divContributorDropdown.find('.multiselect').addClass('glossy-select').removeClass('btn btn-default');
                                    self.elements.divContributorDropdown.find('.btn-group').css({ 'width': '100%' });
                                    self.elements.divContributorDropdown.show('slow');

                                    break;

                                case self.filterType.ContributionActivity:

                                    self.elements.dropdownContributionActivity.multiselect('destroy');

                                    self.elements.dropdownContributionActivity.html(appendSection);
                                    self.elements.dropdownContributionActivity.val('');
                                    self.elements.dropdownContributionActivity.multiselect({

                                        maxHeight: 200,
                                        includeSelectAllOption: true,
                                        enableFiltering: true,
                                        filterPlaceholder: 'Search Contribution Activity',
                                        enableCaseInsensitiveFiltering: true,
                                        numberDisplayed: 1
                                    });
                                    self.elements.divContributionActivityDropdown.find('.multiselect').addClass('glossy-select').removeClass('btn btn-default');
                                    self.elements.divContributionActivityDropdown.find('.btn-group').css({ 'width': '100%' });
                                    self.elements.divContributionActivityDropdown.show('slow');

                                    break;



                                case self.filterType.EnteredBy:


                                    self.elements.dropdownEnteredBy.multiselect('destroy');


                                    self.elements.dropdownEnteredBy.html(appendSection);
                                    self.elements.dropdownEnteredBy.val('');
                                    self.elements.dropdownEnteredBy.multiselect({

                                        maxHeight: 200,
                                        includeSelectAllOption: true,
                                        enableFiltering: true,
                                        filterPlaceholder: 'Search Staffs',
                                        enableCaseInsensitiveFiltering: true,
                                        numberDisplayed: 1
                                    });
                                    self.elements.divEnteredByDropdown.find('.multiselect').addClass('glossy-select').removeClass('btn btn-default');
                                    self.elements.divEnteredByDropdown.find('.btn-group').css({ 'width': '100%' });
                                    self.elements.divEnteredByDropdown.show('slow');

                                    break;

                            }

                        }

                        else {
                            customAlert('Error occurred. Please, try again later.');
                        }
                    },
                    error: function (data) {

                    },
                    complete: function (data) {

                    }



                });

            },


            validatedates: function (inputTextObject) {

                if ($(inputTextObject).val().trim() != "MM/DD/YYYY" && $(inputTextObject).val().trim() != "") {
                    var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                    var regex = new RegExp(dateformat);
                    if (!regex.test($(inputTextObject).val())) {
                        customAlert("Invalid date.");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else if (new Date($(inputTextObject).val()).setHours(0, 0, 0, 0) > new Date().setHours(0, 0, 0, 0)) {
                        customAlert("Entered Date should be less than or equal to today's date");
                        $(inputTextObject).val('');
                        return false;
                    }
                    else {
                        return true;
                    }

                }

            },
            getInkindTransactionsReport: function (_ajaxParameters) {



                self = this;
                self.elements.tableInkind.find('thead').find('tr').find('th').eq(0).show();
                self.elements.tableInkind.find('thead').find('tr').find('th').eq(1).show();
                self.elements.tableInkind.find('thead').find('tr').find('th').eq(2).show();


                $.ajax({

                    url: HostedDir + '/InKind/GetInkindReportPartial',
                    type: 'post',
                    datatype: 'json',
                    data: _ajaxParameters,
                    async: false,
                    success: function (data) {

                        self.elements.divTableResponsive.html(data);

                        self.initializeElements();

                        self.getTotalRecord(parseInt(self.elements.spanTotalRecord.html()));

                        self.elements.tbodyInkind.find('[data-toggle="tooltip"]').tooltip();

                        self.elements.tbodyInkind.find('.btn-edit-trans').on('click', function () {

                            var $transId = $(this).parent('td').find('#hide-trans-id').val();

                            self.editInkindTransaction($transId);

                        });

                        self.elements.tableInkind.find('thead th').on('click', function () {



                            if ($(this).find('i').length > 0) {
                                _sortColumn = 'th' + ($(this).index() + 1);

                                if ($(this).find('i').is(':visible')) {
                                    if ($(this).find('.i-asc').is(':visible')) {
                                        _sortOrder = "DESC";
                                        $(this).find('.i-asc,.i-desc').toggle();
                                    }
                                    else if ($(this).find('.i-desc').is(':visible')) {
                                        _sortOrder = "ASC";
                                        $(this).find('.i-asc,.i-desc').toggle();
                                    }
                                }
                                else {
                                    _sortOrder = 'ASC';
                                    $(this).find('.i-asc').show();
                                }


                                REQUESTED_PAGE = self.elements.dropdownPageNumber.val() == null ? REQUESTED_PAGE : self.elements.dropdownPageNumber.val();

                                PAGE_SIZE = self.elements.dropdownRecordsPerpage.val();
                                self.getInkindTransactionsReport(self.bindAjaxParameters());
                            }
                            else {
                                return false;
                            }



                        });


                        self.elements.tbodyInkind.find('.btn-delete-trans').on('click', function () {

                            var $transId = $(this).parent('td').find('#hide-trans-id').val();

                            var $clientname = $(this).closest('td').parent('tr').children('td:eq(0)').find('p').html();
                            var $activityDate = $(this).closest('td').parent('tr').children('td:eq(3)').find('p').html();

                            BootstrapDialog.show({
                                title: 'Confirmation',
                                message: "<p><i class='fa fa-warning' aria-hidden='true' style='font-weight:bold;color:red;'></i>&nbsp;You are about to delete the In-Kind Activity of <strong>" + $clientname + "</strong> dated " + $activityDate + " .</p><p style='margin-left:18px;'>Click <strong>OK</strong> to proceed.</p>",
                                closable: true,
                                closeByBackdrop: false,
                                closeByKeyboard: false,

                                buttons: [{
                                    label: '<span class="glossy-button-after"></span> <span class="glossy-button-before"></span> Cancel',
                                    cssClass: 'glossy-button-button button-green button-red',
                                    action: function (dialogItself) {
                                        dialogItself.close();
                                    }
                                }, {
                                    label: '<span class="glossy-button-after"></span> <span class="glossy-button-before"></span> OK',
                                    cssClass: 'glossy-button-button button-green',
                                    autospin: true,
                                    action: function (dialogItself) {

                                        self.delteInkindTransaction($transId);

                                        window.setTimeout(function () {

                                            dialogItself.close();

                                        }, 1000);
                                    }
                                }]
                            });

                        });

                       
                        self.elements.textSearchInkind.autocomplete({
                            search: function (event, ui) {
                              
                                if (self.elements.textSearchInkind.val().trim().length > 0 && self.elements.textSearchInkind.val().length > 2) {
                                    //$('#Search').hide();
                                    //$('#Searchloader').show();
                                }
                            },
                            minLength: 1,
                            source: function (request, response) {
                                //$.ajax({
                                //    url: HostedDir + "/InKind/AutoCompleteInkindTransactions",
                                //    type: "POST",
                                //    dataType: "json",
                                //    data: self.bindAjaxParameters(),
                                //    success: function (data) {
                                //        response($.map(data, function (item) {
                                //            return { label: item.FirstName, id: item.AgencyStaffId };
                                //        }));
                                //    }

                                //});



                                var _ajaxParameters = self.bindAjaxParameters();
                                _ajaxParameters.searchTerm = request.term;

                                self.elements.buttonSearchAutoComplete.attr({ 'data-search-item': '0' });

                                $.ajax({
                                    url: HostedDir + "/InKind/AutoCompleteInkindTransactions",
                                    type: "POST",
                                    dataType: "json",
                                    data: _ajaxParameters,
                                    beforSend: function () { $('#spinner').hide(); },
                                    success: function (data) {

                                        //var keyPairData = {
                                        //    'Text': null,
                                        //    'Value': null

                                        //}
                                        //var arr = new Array();

                                        //if (data != null && data.InkindReportList != null && data.InkindReportList.length > 0) {
                                        //    $.each(data.InkindReportList, function (j, report) {


                                        //        if (report.Name != null && report.Name != '') {
                                        //            keyPairData.Text = report.Text;
                                        //            keyPairData.Value = '1';
                                        //            arr.push(keyPairData);
                                        //        }





                                        //        if (report.CenterName != null && report.CenterName != '') {
                                        //            keyPairData.Text = report.CenterName;
                                        //            keyPairData.Value = '2';
                                        //            arr.push(keyPairData);
                                        //        }

                                        //        if (report.ActivityDescription != null && report.ActivityDescription != '') {
                                        //            keyPairData.Text = report.ActivityDescription;
                                        //            keyPairData.Value = '3';
                                        //            arr.push(keyPairData);
                                        //        }

                                        //        if (report.StaffEntered != null && report.StaffEntered != '') {
                                        //            keyPairData.Text = report.StaffEntered;
                                        //            keyPairData.Value = '4';
                                        //            arr.push(keyPairData);
                                        //        }

                                        //    });
                                        //}

                                        response($.map(data, function (item) {
                                            return { label: item.Text, id: item.Value };
                                        }));
                                    }

                                });

                                // self.getInkindResultBySearch(request, response);

                            },
                            // source:self.getInkindResultBySearch(request,response),

                            focus: function (event, ui) {
                                self.elements.textSearchInkind.val(ui.item.label);
                                self.elements.buttonSearchAutoComplete.attr({ 'data-search-item': ui.item.id });
                                return false;
                            },
                            select: function (event, ui) {

                                self.ajaxParameters.searchTerm = ui.item.label;
                                self.ajaxParameters.searchTermType = 'ser' + ui.item.id.toString();

                                self.elements.dropdownPageNumber.val('1');

                                REQUESTED_PAGE = self.elements.dropdownPageNumber.val();

                                self.getInkindTransactionsReport(self.bindAjaxParameters());
                                // window.location.href = HostedDir + '/AgencyUser/editStaff/' + ui.item.id;
                                return false;
                            },
                            messages: {
                                noResults: 'No results found.',
                                results: function (count) {
                                    self.elements.textSearchInkind.css({ 'border-bottom-left-radius': '0px;' });
                                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                                }
                            },

                        });



                        self.elements.buttonSearchAutoComplete.on('click', function () {


                            if (self.elements.textSearchInkind.val() == null || self.elements.textSearchInkind.val() == '') {
                                plainValidation(self.elements.textSearchInkind);
                                customAlert('Please enter any term to search');
                                return false;
                            }

                            else {

                                self.elements.dropdownPageNumber.val('1');
                                REQUESTED_PAGE = self.elements.dropdownPageNumber.val();

                                self.getInkindTransactionsReport(self.bindAjaxParameters());
                            }

                        });

                    },
                    error: function (data) {

                    },
                    complete: function (data) {

                    }
                })

            },

            fnChangePage: function (val) {

                if (self.elements.tbodyInkind.find('tr').find('td[data-title="Action"]').length === 0) {

                    return false;
                }





                window.setTimeout(function () {

                    var $selfElements = self.elements;

                    PAGE_LOADED_FIRST = false;

                    PAGE_SIZE = $selfElements.dropdownRecordsPerpage.val();

                    if (val == 'First') {
                        START_INDEX = 0;

                        LAST_INDEX = parseInt(PAGE_SIZE) + parseInt(LAST_INDEX * REQUESTED_PAGE);

                        REQUESTED_PAGE = ((START_INDEX / 10) + 1);

                        self.gotoNextPage(REQUESTED_PAGE, PAGE_SIZE);

                        $selfElements.buttonPagingFirst.attr('disabled', true);
                        $selfElements.buttonPagingBack.attr('disabled', true);
                        $selfElements.buttonPagingNext.attr('disabled', false);
                        $selfElements.buttonPagingLast.attr('disabled', false);

                        LAST_INDEX = 0;
                    }
                    else if (val == 'Last') {

                        START_INDEX = parseInt((TOTAL_RECORDS - 1) / PAGE_SIZE) * PAGE_SIZE;

                        LAST_INDEX = TOTAL_RECORDS;

                        REQUESTED_PAGE = NUM_OF_PAGES;

                        self.gotoNextPage(REQUESTED_PAGE, PAGE_SIZE);


                        $selfElements.buttonPagingFirst.attr('disabled', false);
                        $selfElements.buttonPagingBack.attr('disabled', false);
                        $selfElements.buttonPagingNext.attr('disabled', true);
                        $selfElements.buttonPagingLast.attr('disabled', true);

                    }
                    else if (val == 'Next') {


                        LAST_INDEX = parseInt(PAGE_SIZE) + parseInt(LAST_INDEX);

                        REQUESTED_PAGE = (parseInt(LAST_INDEX / PAGE_SIZE) + 1);

                        self.gotoNextPage(REQUESTED_PAGE, PAGE_SIZE);

                        $selfElements.buttonPagingFirst.attr('disabled', false);
                        $selfElements.buttonPagingBack.attr('disabled', false);

                        if (parseInt(LAST_INDEX) + parseInt(PAGE_SIZE) >= TOTAL_RECORDS) {

                            $selfElements.buttonPagingNext.attr('disabled', true);
                            $selfElements.buttonPagingLast.attr('disabled', true);
                        }
                        else if (parseInt(LAST_INDEX) - parseInt(PAGE_SIZE) < TOTAL_RECORDS) {

                            $selfElements.buttonPagingNext.attr('disabled', false);
                            $selfElements.buttonPagingLast.attr('disabled', false);
                        }
                    }
                    else if (val == 'Back') {


                        REQUESTED_PAGE = REQUESTED_PAGE - 1;

                        LAST_INDEX = parseInt(LAST_INDEX) - parseInt(PAGE_SIZE);

                        self.gotoNextPage(REQUESTED_PAGE, PAGE_SIZE);

                        if (parseInt(LAST_INDEX) + parseInt(PAGE_SIZE) > TOTAL_RECORDS) {

                            $selfElements.buttonPagingNext.attr('disabled', true);
                            $selfElements.buttonPagingLast.attr('disabled', true);

                        }
                        else if (parseInt(LAST_INDEX) - parseInt(PAGE_SIZE) < TOTAL_RECORDS) {
                            $selfElements.buttonPagingNext.attr('disabled', false);
                            $selfElements.buttonPagingLast.attr('disabled', false);

                        }
                        if (REQUESTED_PAGE == 1) {
                            $selfElements.buttonPagingFirst.attr('disabled', true);
                            $selfElements.buttonPagingBack.attr('disabled', true);
                        }
                    }
                    else {
                    }

                }, 10)
            },
            gotoNextPage: function (reqPage, pageSize) {
                

                self.getInkindTransactionsReport(self.bindAjaxParameters());

            },

            getTotalRecord: function (data) {
                self = this;

                var $selfElements = self.elements;

                $selfElements.buttonPagingFirst.attr('disabled', false);
                $selfElements.buttonPagingBack.attr('disabled', false);
                $selfElements.buttonPagingNext.attr('disabled', false);
                $selfElements.buttonPagingLast.attr('disabled', false);

                PAGE_SIZE = $selfElements.dropdownRecordsPerpage.val();

                if (data > 0) {

                    TOTAL_RECORDS = parseInt(data);

                    if (TOTAL_RECORDS <= PAGE_SIZE) {


                        $selfElements.buttonPagingFirst.attr('disabled', true);
                        $selfElements.buttonPagingBack.attr('disabled', true);
                        $selfElements.buttonPagingNext.attr('disabled', true);
                        $selfElements.buttonPagingLast.attr('disabled', true);

                    }

                    NUM_OF_PAGES = parseInt(TOTAL_RECORDS / PAGE_SIZE) + ((TOTAL_RECORDS % PAGE_SIZE == 0) ? 0 : 1);

                    $selfElements.dropdownPageNumber.empty();

                    for (i = 1; i <= NUM_OF_PAGES; i++) {

                        var newOption = "<option value='" + i + "'>" + i + "</option>";
                        $selfElements.dropdownPageNumber.append(newOption);
                    }

                    $selfElements.dropdownPageNumber.val(REQUESTED_PAGE);
                }
                else {
                    $selfElements.buttonPagingFirst.attr('disabled', true);
                    $selfElements.buttonPagingBack.attr('disabled', true);
                    $selfElements.buttonPagingNext.attr('disabled', true);
                    $selfElements.buttonPagingLast.attr('disabled', true);
                }
            },
            getListafterupdation: function () {
                self = this;

                PAGE_SIZE = self.elements.dropdownRecordsPerpage.val();
                REQUESTED_PAGE = self.elements.dropdownPageNumber.val();

                START_INDEX = (PAGE_SIZE * (REQUESTED_PAGE - 1)) + 1;
                LAST_INDEX = parseInt(PAGE_SIZE * REQUESTED_PAGE) - parseInt(PAGE_SIZE);

                
                var $selfElements = self.elements;

               

                self.getInkindTransactionsReport(self.bindAjaxParameters());

                if (REQUESTED_PAGE == 1) {
                    $selfElements.buttonPagingFirst.attr('disabled', true);
                    $selfElements.buttonPagingBack.attr('disabled', true);
                    $selfElements.buttonPagingNext.attr('disabled', false);
                    $selfElements.buttonPagingLast.attr('disabled', false);
                }
                else if (REQUESTED_PAGE == NUM_OF_PAGES) {

                    $selfElements.buttonPagingFirst.attr('disabled', false);
                    $selfElements.buttonPagingBack.attr('disabled', false);
                    $selfElements.buttonPagingNext.attr('disabled', true);
                    $selfElements.buttonPagingLast.attr('disabled', true);
                }
                else {



                    $selfElements.buttonPagingFirst.attr('disabled', false);
                    $selfElements.buttonPagingBack.attr('disabled', false);
                    $selfElements.buttonPagingNext.attr('disabled', false);
                    $selfElements.buttonPagingLast.attr('disabled', false);

                }



              
            },

            bindAjaxParameters: function () {
                self = this;

                self.ajaxParameters.filterType = self.elements.inKindFilter.val();

                self.ajaxParameters.selectedOption = parseInt(self.elements.inKindFilter.val()) == self.filterType.Contributor ? self.elements.dropdownContributor.val().join(',')
                                                    : parseInt(self.elements.inKindFilter.val()) == self.filterType.ContributionActivity ? self.elements.dropdownContributionActivity.val().join(',')
                                                    :parseInt(self.elements.inKindFilter.val()) == self.filterType.EnteredBy ? self.elements.dropdownEnteredBy.val().join(','):[];


                self.ajaxParameters.centers= self.elements.dropdownCenter.val().join(',');

                self.ajaxParameters.fromDate = parseInt(self.elements.inKindFilter.val()) != self.filterType.DateEntered 
                                              ? self.elements.inkindFromDate.val():"";

                self.ajaxParameters.toDate = parseInt(self.elements.inKindFilter.val()) != self.filterType.DateEntered
                                            ? self.elements.inkindToDate.val():"";

                self.ajaxParameters.dateEntered = parseInt(self.elements.inKindFilter.val()) == self.filterType.DateEntered
                                                ? self.elements.inkindDateEntered.val():"";

                self.ajaxParameters.requestedPage = REQUESTED_PAGE;
                self.ajaxParameters.pageSize = PAGE_SIZE;
                self.ajaxParameters.sortOrder = _sortOrder;
                self.ajaxParameters.sortColumn = _sortColumn;
                return self.ajaxParameters;

            },
            editInkindTransaction: function (_transId) {
                self.getInkindTransactionDetailsById(_transId, self.bindInkindData);
            },
            bindInkindData: function (data) {
                cleanValidation();
               
                var $selfElements = self.elements;

               
                if (data != null && data.inkind != null) {
                    $selfElements.modallabelContactName.html(data.inkind.InKindTransactions.Name);
                    $selfElements.modalinkindActivityDate.val(data.inkind.InKindTransactions.ActivityDate);
                    $selfElements.modalhiddenTransID.val(data.inkind.InKindTransactions.InkindTransactionID);
                    $selfElements.modallabelActivityType.html(data.inkind.InkindActivityList[0].ActivityType == '1' ? 'Center' : 'Home');

                    var $inkindAmountType =null;
                    if (data.inkind.InkindActivityList != null && data.inkind.InkindActivityList.length > 0) {

                        //$selfElements.modalselectInkindActivity.html('');

                        //$.each(data.inkind.InkindActivityList, function (i, activity) {

                        //    $selfElements.modalselectInkindActivity.append('<option value=' + activity.ActivityCode + ' amt-type=' + activity.ActivityAmountType + ' >' + activity.ActivityDescription + '</option>');

                        //});


                        $inkindAmountType = $.grep(data.inkind.InkindActivityList, function (element, index) {

                            return element.ActivityCode == data.inkind.InKindTransactions.ActivityID
                        });


                        $selfElements.modallabelInkindActivity.html($inkindAmountType[0].ActivityDescription);
                        $selfElements.modallabelInkindActivity.attr({'data-inkind-activity':$inkindAmountType[0].ActivityCode,'data-amt-type':$inkindAmountType[0].ActivityAmountType});
                    }






                    var $inkindAmountRate = '$ 0';


                    if ($inkindAmountType != null && $inkindAmountType.length > 0) {
                        $inkindAmountRate = '$' + ' ' + parseFloat($inkindAmountType[0].ActivityAmountRate).toFixed(2).toString();

                        if($('.attachparticic_myactive').length>0)
                        {
                            $selfElements.divAddAttachments.find('.attachparticic_myactive').html('');

                        }

                        $selfElements.divAddAttachments.find('input[type=file]').val('');

                        if($inkindAmountType[0].IsAllowDocumentUpload==1)
                        {
                            $selfElements.divDownloadAttachments.hide();
                            $selfElements.divAddAttachments.show();


                            if(data.inkind.InKindTransactions.InkindAttachmentsList!=null && data.inkind.InKindTransactions.InkindAttachmentsList.length>0)
                            {

                                var $appendAttachment="";


                                $.each(data.inkind.InKindTransactions.InkindAttachmentsList,function(i,attachment){


                                    // var doctype=self.documentType.in attachment.InkindAttachmentFileExtension.toString().toLowerCase()


                                    $appendAttachment+='<div class="attachment-icons-block" data-attach-id='+attachment.InkindAttachmentID+' >\
                                    <div class="attachment-icon" data-toggle="tooltip" title='+attachment.InkindAttachmentFileName+' >';


                                    var $docType= self.documentType.doc.indexOf(attachment.InkindAttachmentFileExtension.toString().toLowerCase())>-1 ?
                                                  'doc':
                                                  self.documentType.txt.indexOf(attachment.InkindAttachmentFileExtension.toString().toLowerCase())>-1 ?
                                                  'txt':
                                                   self.documentType.pdf.indexOf(attachment.InkindAttachmentFileExtension.toString().toLowerCase())>-1 ?
                                                   'pdf':
                                                    self.documentType.xls.indexOf(attachment.InkindAttachmentFileExtension.toString().toLowerCase())>-1 ?
                                                   'xls':
                                                    self.documentType.image.indexOf(attachment.InkindAttachmentFileExtension.toString().toLowerCase())>-1 ?
                                                   'image':'N/A';


                                    switch($docType)
                                    {
                                        case 'doc':

                                            $appendAttachment+=  '<img src="/Images/doc.png" />';

                                            break;


                                        case 'pdf':

                                            $appendAttachment+='<img src="/Images/pdf.png" />';

                                            break;


                                        case 'image':

                                            $appendAttachment+='<img src="/Images/picture.png" />';
                                            break;

                                        case 'xls':

                                            $appendAttachment+='<img src="/Images/excel.png" />';
                                            break;

                                        case 'txt':
                                            $appendAttachment+='<img src="/Images/file.png"/>';
                                            break;

                                        default:
                                            $appendAttachment+='<label>No Image</label>';
                                            break;
                                    }






                                    $appendAttachment+=' </div>\
                                     <div class="attach-icon-div"> <i class="fa fa-trash delete-file" data-toggle="popover" data-placement="top" aria-hidden="true"  title="Delete Attachment"></i> \
                                      <i class="fa fa-eye view-file" data-toggle="tooltip" tile="view file" aria-hidden="true" ></i></div> \
                                  </div>';

                                });


                                $selfElements.divDownloadAttachments.find('#inkind-attachments-div').html($appendAttachment);

                                //  $('[data-toggle="popover"]').popover();


                                $selfElements.divDownloadAttachments.find('#inkind-attachments-div').find('.delete-file').popover({

                                    html: true,
                                    content: function () {
                                        //  return $($(this).data('target-selector')).html();
                                        var $attachmentID=$(this).closest('.attachment-icons-block').data('attach-id');
                                        $('#delete-doc-content .btn-ok').attr({'data-attachment-id':$attachmentID});
                                        return $('#delete-doc-content').html();

                                    },
                                    title: function () {
                                        //  return $(this).data('title') + '<span class="close">&times;</span';
                                        return 'Delete Attachment';

                                    },

                                    trigger: 'manual',
                                    delay: { "show": 500, "hide": 100 }
                                }).on('shown.bs.popover', function (e) {

                                    var _popover = $(this);


                                    _popover.parent().find('div.popover .btn-ok').on('click', function () {

                                        var $inkindTransactionID=self.elements.modalhiddenTransID.val();

                                        var $attachmentID=$(this).data('attachment-id');

                                        self.deleteInkindAttachment($attachmentID,$inkindTransactionID,self.hidePopOver,_popover);

                                        //  _popover.popover('hide');


                                    });

                                    _popover.parent().find('div.popover .btn-cancel').on('click', function () {

                                        _popover.popover('hide');

                                    });




                                });

                                $selfElements.divDownloadAttachments.show();

                            }

                            else{
                                $selfElements.divDownloadAttachments.find('#inkind-attachments-div').html('<label>N/A</label>');
                                $selfElements.divDownloadAttachments.hide();
                               
                            }

                         
                        }
                        else{
                            $selfElements.divAddAttachments.hide();
                            $selfElements.divDownloadAttachments.hide();
                        }

                        $inkindAmountType = $inkindAmountType[0].ActivityAmountType;

                    }
                    else {
                        $inkindAmountRate = 0;
                    }

                    $selfElements.modallabelAmountRate.html($inkindAmountRate);

                    $selfElements.modallabelAmountRate.parent('div').show();
                    $selfElements.modalinkindAmount.prop('disabled',true);
                    if ($inkindAmountType == self.amountType.Hours) {
                        $selfElements.modalinkindActivityMiles.parent('div').parent('div').hide();
                        $selfElements.modalinkindHoursText.parent('div').parent('div').show();
                        $selfElements.modalinkindHoursText.val(data.inkind.InKindTransactions.Hours);
                        $selfElements.modalinkindMinutesText.val(data.inkind.InKindTransactions.Minutes);

                    }

                    else if ($inkindAmountType == self.amountType.Miles) {
                        $selfElements.modalinkindActivityMiles.parent('div').parent('div').show();
                        $selfElements.modalinkindHoursText.parent('div').parent('div').hide();
                        $selfElements.modalinkindActivityMiles.val(data.inkind.InKindTransactions.MilesDriven);

                    }
                    else if ($inkindAmountType == self.amountType.Fixed) {

                        $selfElements.modalinkindActivityMiles.parent('div').parent('div').hide();
                        $selfElements.modalinkindHoursText.parent('div').parent('div').hide();
                        $selfElements.modallabelAmountRate.parent('div').hide();
                        $selfElements.modalinkindAmount.prop('disabled',false);
                    }


                  //  $selfElements.modalselectInkindActivity.val(data.inkind.InKindTransactions.ActivityID);

                    $selfElements.modalDescriptionText.val(data.inkind.InKindTransactions.ActivityNotes);
                    $selfElements.modalinkindAmount.val(data.inkind.InKindTransactions.InKindAmount);


                    if (data.centerList != null && data.centerList.length > 0) {


                        $selfElements.modalselectinkindcenter.html('');

                        $.each(data.centerList, function (j, center) {
                            $selfElements.modalselectinkindcenter.append('<option value=' + center.Value + '>' + center.Text + '</option>');
                        });
                    }
                    $selfElements.modalselectinkindcenter.val(data.inkind.InKindTransactions.Enc_CenterID);


                    self.getClassrooms(data.inkind.InKindTransactions.CenterID, $selfElements.modalselectinkindclassroom, self.bindClassrooms);

                    $selfElements.modalselectinkindclassroom.val(data.inkind.InKindTransactions.Enc_ClassroomID);


                    //inkind Budget Dates//

                    self.inkindBudgetPeriods=[];
                    var $appendData="";
                    var $modalMinDate=null;
                    
                    if(data.inkind.InkindPeriodsList!=null && data.inkind.InkindPeriodsList.length>0)
                    {

                        self.inkindBudgetPeriods=data.inkind.InkindPeriodsList;

                        $modalMinDate=new Date(self.inkindBudgetPeriods[0].StartDate);

                        $.each(self.inkindBudgetPeriods,function(i,inkind){

                            var $endDate=new Date(inkind.EndDate).setHours(0,0,0,0);

                            $endDate=$endDate>new Date().setHours(0,0,0,0)? self.getFormattedDate(new Date()):$endDate;

                             $appendData+=   '<p>\
                                            <span>Dates allowed from'+' '+ inkind.StartDate+' '+'to'+' '+ self.getFormattedDate($endDate) +'</span>\
                                        </p>';

                        });

                    }
                 
                
                    self.elements.modalEditInkind.find('#imageinfoInkindDates').removeAttr('data-original-title');
                    self.elements.modalEditInkind.find('#imageinfoInkindDates').attr('title','Dates Allowed');
                    self.elements.modalEditInkind.find('#imageinfoInkindDates').popover('destroy');

                    window.setTimeout(function(){

                        self.elements.modalEditInkind.find('#imageinfoInkindDates').popover({

                            html: true,
                            content: function () {
                                //  return $($(this).data('target-selector')).html();
                                return $appendData;

                            },
                            title: function () {

                                return 'Dates Allowed <a href="javascript:void(0);" class="close" data-dismiss="alert">&times;</a>';

                            },
                          
                            delay: { "show": 300, "hide": 100 }
                        });

                    },200);

                  
       

                    self.elements.modalinkindActivityDate.datetimepicker({
                        timepicker: false,
                        format: 'm/d/Y',
                        validateOnBlur: false,
                        mask: true,
                        minDate: $modalMinDate,
                        maxDate:new Date(),
                        onSelectDate:function(e, ele){
                            if(!self.isValidAllowedDates(e)){

                                customAlert('Entered date is not allowed');
                                plainValidation(self.elements.modalinkindActivityDate);
                                return false;
                            }
                         
                        },
                        onChangeDateTime:function(e, ele){

                            if(!self.isValidAllowedDates(e)){

                                customAlert('Entered date is not allowed');
                                plainValidation(self.elements.modalinkindActivityDate);
                                return false;
                            }
                        },

                        validateOnBlur: true
                    });



                }

           showCameraOption();

            



                $selfElements.modalImageUploadCamera.hide();

                setIntervalUserMedia();



               

                $selfElements.modalEditInkind.modal('show');
            },
            delteInkindTransaction: function (_transId) {
                $.ajax({

                    url: HostedDir + '/InKind/DeleteInkindTransactions',
                    type: 'post',
                    datatype: 'json',
                    data: { inkindTransactionId: _transId },
                    success: function (data) {
                        if (data) {
                            customAlert('Record deleted successfully');
                            return true;
                            self.getInkindTransactionsReport(self.bindAjaxParameters());
                        }
                        else {
                            return false;
                            customAlert('Error occurred. Please, try again later.');
                        }
                    },
                    error: function (data) {

                    },
                    fail: function (data) {

                    },
                    complete: function (data) {


                    }

                });
            },

            getInkindTransactionDetailsById: function (transId, callback) {


                $.ajax({

                    url: HostedDir + '/InKind/GetInkindTransactions',
                    type: 'post',
                    datatype: 'json',

                    data: { transactionId: transId },
                    success: function (data) {

                        if (data != null && data.inkind != null) {
                            callback(data);
                        }
                        //else {
                        //    customAlert('Error occurred. Please, try again later.');
                        //}


                    },
                    error: function (data) {

                    },
                    complete: function (data) {

                    }



                })
            },

            getClassrooms: function (_centerId, bindElement, callback) {

                $.ajax({
                    url: HostedDir + '/InKind/GetClassRoomsForInkind',
                    type: 'post',
                    datatype: 'json',
                    data: { Centerid: _centerId },
                    async: false,
                    success: function (data) {
                        if (data != null && data.length > 0) {
                            callback(data, bindElement);

                        }
                        else {
                            customAlert('Error occurred. Please, try again later');
                        }
                    },
                    error: function (data) {

                    },
                    complete: function (data) {

                    }


                });


            },
            bindClassrooms: function (data, bindElement) {
                if (data != null && data.length > 0) {
                    bindElement.html('');

                    $.each(data, function (k, classroom) {
                        bindElement.append('<option value=' + classroom.Enc_ClassRoomId + '>' + classroom.ClassName + '</option>');
                    });

                    bindElement.val('');
                }
            },
            onActivitySelectChange: function (ele) {
                cleanValidation();

                var activityValue = $(ele).val();
                var arry = [];
                arry.push(activityValue);

                var $selfElements = self.elements;


                if (activityValue === '0') {

                    $selfElements.modalDescriptionText.parent('div').parent('div').hide();
                    $selfElements.modalinkindHoursText.parent('div').parent('div').hide();
                    $selfElements.modalinkindActivityMiles.parent('div').parent('div').hide();
                    $selfElements.modalinkindAmount.parent('div').parent('div').hide();
                    $selfElements.modallabelAmountRate.parent('div').hide();


                    //$modalEditInkind.find('#descriptionTextArea,.inkind-hours-div,.inkind-miles-div,.amount-div').hide();
                }
                else {
                    $.ajax({
                        url: HostedDir + '/InKind/GetDetailsByActivityType',
                        datatype: 'json',
                        type: 'post',
                        data: { activityCode: JSON.stringify(arry), reqDetails: 1, hours: '' },
                        success: function (data) {


                            $selfElements.modalinkindHoursText.val('');
                            $selfElements.modalinkindMinutesText.val('');
                            $selfElements.modalinkindAmount.val('');
                            $selfElements.modalinkindActivityMiles.val('');
                            $selfElements.modalinkindAmount.prop('disabled', true);
                            $selfElements.modalDescriptionText.val(data.ActivityDescription);
                            $selfElements.modallabelAmountRate.html('$' + ' ' + parseFloat(data.ActivityAmountRate).toFixed(2).toString());

                            $selfElements.divAddAttachments.find('input:file').val('');
                            $selfElements.divAddAttachments.find('.attachparticic_myactive').html('');

                            if(data.IsAllowDocumentUpload==1)
                            {


                                $selfElements.divAddAttachments.show();
                                $selfElements.divDownloadAttachments.hide();
                            }
                            else
                            {
                                $selfElements.divAddAttachments.hide();
                                $selfElements.divDownloadAttachments.hide();
                            }


                            if (parseInt(data.ActivityAmountType) === parseInt(self.amountType.Hours))//Hours Type
                            {

                                $selfElements.modalinkindHoursText.parent('div').parent('div').show();
                                $selfElements.modalinkindActivityMiles.parent('div').parent('div').hide();
                                $selfElements.modalinkindAmount.parent('div').parent('div').show();
                                $selfElements.modallabelAmountRate.parent('div').show();

                            }

                            else if (parseInt(data.ActivityAmountType) === parseInt(self.amountType.Miles)) {//Miles Type

                                $selfElements.modalinkindHoursText.parent('div').parent('div').hide();
                                $selfElements.modalinkindHoursText.val('');
                                $selfElements.modalinkindMinutesText.val('');
                                $selfElements.modalinkindActivityMiles.parent('div').parent('div').show();
                                $selfElements.modalinkindAmount.parent('div').parent('div').show();
                                $selfElements.modallabelAmountRate.parent('div').show();

                            }

                            else if (parseInt(data.ActivityAmountType) === parseInt(self.amountType.Fixed)) { //Fixed Type


                                $selfElements.modalinkindHoursText.parent('div').parent('div').hide();
                                $selfElements.modalinkindActivityMiles.parent('div').parent('div').hide();
                                $selfElements.modalinkindAmount.parent('div').parent('div').show();
                                $selfElements.modallabelAmountRate.parent('div').hide();
                                $selfElements.modalinkindAmount.prop('disabled', false);
                            }

                        },
                        error: function (data) {

                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }


                    });
                }

            },
            //function to check, entered value is number or not//
            isNumber: function (evt) {
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                return true;
            },
            getInkindAmountOnInput: function (ele) {

                var $this = $(ele);
                var $selfElements = self.elements;

                var hoursText = ($selfElements.modalinkindHoursText.val() == null || $selfElements.modalinkindHoursText.val() == '') ? '0' : $selfElements.modalinkindHoursText.val();
                var minsTxt = ($selfElements.modalinkindMinutesText.val() == null || $selfElements.modalinkindMinutesText.val() == '') ? '0' : $selfElements.modalinkindMinutesText.val();
                var actCode = [];

                if ($this.attr('id') == 'inkindHoursText' && !self.validateHoursMinutes(ele)) {
                    return false;
                }

                if ($this.attr('id') == 'inkindMinutesText' && !self.validateHoursMinutes(ele)) {
                    return false;
                }




                actCode.push($selfElements.modallabelInkindActivity.data('inkind-activity'));

                var milesTxt = ($selfElements.modalinkindActivityMiles.val() == null || $selfElements.modalinkindActivityMiles.val() == '') ? '0' : $selfElements.modalinkindActivityMiles.val();
                $.ajax({

                    url: HostedDir + '/InKind/GetDetailsByActivityType',
                    datatype: 'json',
                    type: 'post',
                    data: { activityCode: JSON.stringify(actCode), reqDetails: 2, hours: hoursText, minutes: minsTxt, miles: milesTxt },
                    success: function (data) {
                        if (data != null) {

                            console.log(data);

                            $selfElements.modalinkindAmount.val(data.ActivityAmount);
                        }
                        else {
                            $selfElements.modalinkindAmount.val('');

                        }
                        return false;
                    },
                    error: function (data) {
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        return false;
                    }
                });

                return false;
            },

            // validation check for In-kind hours and minutes, should not greater than 12 hours//
            validateHoursMinutes: function (ele) {

                //   $(ele).css({ 'background-color': '' });

                //   activityHrs.popover('hide');
                cleanValidation();
                var _isValidhours = true;
                var _isHours = 0;

                if ($(ele)[0].id == self.elements.modalinkindHoursText[0].id) {
                    _isHours = 1;
                }
                if ($(ele)[0].id == self.elements.modalinkindMinutesText[0].id) {
                    _isHours = 0;
                }

                try {
                    if (self.elements.modalinkindHoursText.val() != '') {


                        var _activtiyHrsMins = self.getTotalhoursMinutes(self.elements.modalinkindHoursText.val(), self.elements.modalinkindMinutesText.val());

                        if (_activtiyHrsMins > parseInt(MAX_HRS_MIN_ENTRY.split(':')[0])) {
                            customAlert('Activity time should not greater than 12 hours');
                            plainValidation(self.elements.modalinkindHoursText);
                            self.elements.modalinkindAmount.val(0);
                            if (self.elements.modalinkindMinutesText.val() != '') {
                                plainValidation(self.elements.modalinkindMinutesText);
                            }
                            _isValidhours = false;
                        }

                        else if (_activtiyHrsMins > parseFloat(WARNING_HRS_ENTRY.split(':')[0]) && _allowExceedingWarninghrs == false) {

                            self.elements.modalinkindHoursText.popover('show');
                        }
                        else {
                            self.elements.modalinkindHoursText.popover('hide');
                        }



                    }



                }
                catch (error) {
                    console.log(error);
                    _isValidhours = false;
                }

                return _isValidhours;

            },
            getTotalhoursMinutes: function (_hrs, _mins) {

                _hrs = (_hrs != '') ? parseFloat(_hrs) : 0;
                _mins = (_mins != '') ? parseFloat(_mins) : 0;
                return (_hrs + (_mins / 60));
            },
            getInkindResultBySearch:function(request, response)
            {

                var _ajaxParameters = self.bindAjaxParameters();
                _ajaxParameters.searchTerm = request.term;



                $.ajax({
                    url: HostedDir + "/InKind/AutoCompleteInkindTransactions",
                    type: "POST",
                    dataType: "json",
                    data: _ajaxParameters,
                    success: function (data) {

                        var keyPairData = {
                            'Text':null,
                            'Value':null

                        }
                        var arr = new Array();

                        if (data != null && data.InkindReportList != null && data.InkindReportList.length > 0)
                        {
                            $.each(data.InkindReportList, function (j, report) {


                                if(report.Name!=null && report.Name!='')
                                {
                                    keyPairData.Text = report.Text;
                                    keyPairData.Value = '1';
                                    arr.push(keyPairData);
                                }





                                if (report.CenterName != null && report.CenterName != '') {
                                    keyPairData.Text = report.CenterName;
                                    keyPairData.Value = '2';
                                    arr.push(keyPairData);
                                }

                                if (report.ActivityDescription != null && report.ActivityDescription != '') {
                                    keyPairData.Text = report.ActivityDescription;
                                    keyPairData.Value = '3';
                                    arr.push(keyPairData);
                                }

                                if (report.StaffEntered != null && report.StaffEntered != '') {
                                    keyPairData.Text = report.StaffEntered;
                                    keyPairData.Value = '4';
                                    arr.push(keyPairData);
                                }

                            });
                        }

                        response($.map(arr, function (item) {
                            return { label: item.Text, id: item.Value };
                        }));
                    }

                });

            },

            addMoreInkindAttachments:function(ele) {
                //  var divLength = $('#inkind-info-form').find('.attach-div').find('input:file').length;

                var attachmentLength=self.elements.divAddAttachments.find('input:file').length;

                var appendDiv = '<div class="sum_attachparticic list_panic_info">\
                                   <input type="file" name="InkindAttachmentsList[' + attachmentLength + '].InkindAttachmentFile" class="form-control text-bg" onchange="self.ValidateSingleInputpdf(this)" />\
                                   <a href="javascript:void(0)" title="Remove Attachment" class="anchor-remove-attachment"><i class="fa fa-minus-circle"></i>&nbsp;Remove</a>\
                               </div>';


                self.elements.divAddAttachments.find('.attachparticic_myactive').append(appendDiv);

            },
            getInkindAttachment:function(attachmentId,inkindTransactionId)
            {
                window.open(HostedDir+'/InKind/GetInkindAttachment?attachmentId='+attachmentId+'&inkindTransactionId='+inkindTransactionId+'', 'newwindow','width=500,height=500');
            },
            deleteInkindAttachment:function(attachmentId,inkindTransactionId,callback,callbackParameter)
            {
                $.ajax({

                    url: HostedDir+'/InKind/DeleteInkindAttachments',
                    type:'post',
                    datatype:'json',
                    data:{attachmentId:attachmentId,inkindTransactionId:inkindTransactionId},
                    success:function(data)
                    {
                        if(data)
                        {
                            customAlert('Attachment deleted successfully');
                            callback(callbackParameter,data);
                        }
                        else
                        {
                            customAlert('Error occurred. Please, try again later.');
                        }

                    },
                    error:function(data)
                    {

                    },
                    complete:function(data)
                    {

                    }
                });
            },
            hidePopOver:function(ele,result)
            {

                if(result)
                {
                    ele.popover('hide');
                    ele.closest('.attachment-icons-block').remove();
                }
              
            },

            ValidateSingleInputpdf:function(oInput) {


            if (oInput.type == "file") {
                var sFileName = oInput.value;
                if (sFileName.length > 0) {

                    var blnValid = false;
                    var valid_size = 3 * 1000 * 1000;
                    var v = oInput.files[0].size;
                    if (v <= valid_size) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                //  $('#documentlabel').text(oInput.files[0].name);
                                break;
                            }
                        }
                        if (!blnValid) {
                            oInput.value = "";
                            customAlertforlongtime("Only (pdf,jpg,jpeg,bmp,gif,png) of file type allowed.");
                            // $('#documentlabel').text("");
                            return false;
                        }
                    }
                    else {
                        oInput.value = "";
                        customAlertforlongtime("File size should not be greater than 3 MB. ");
                        $('#documentlabel').text("");
                        return false;

                    }

                }
            }



           

            return true;
         },

         convertStringToByteArray:function(inputString)
         {
             var bytes = []; // char codes
             var bytesv2 = []; // char codes

             for (var i = 0; i < inputString.length; ++i) {
                 var code = inputString.charCodeAt(i);
  
                 bytes = bytes.concat([code]);
  
                 bytesv2 = bytesv2.concat([code & 0xff, code / 256 >>> 0]);
             }
         },
         getBase64Image:function(img) {
          

            return $(img)[0].src.replace(/^data:image\/(png|jpg);base64,/, "");
     }

        }




        var videoSelect =null;
        var screenshotButton=null;
        var img =null;
        var canvas=null;
        var button=null;
        var currentStream;
        var video;
        var constraints = {};
        var front = true;

        $(function () {


            inKindReport.init();



          



            //camera option for document upload//



            videoSelect = document.querySelector('select#videoSource');
            video = document.querySelector('#setup-camera-div video');
            video.setAttribute('autoplay', '');
            video.setAttribute('muted', '');
            video.setAttribute('playsinline', '')
         

            screenshotButton = document.querySelector('#anchor-capture');

         






            screenshotButton.onclick = video.onclick = function () {

                var $index=  $('#modal-uploaddocument').find('.div-image-snap-gallery').find('.setup_viewscreen').length;

                var $imageQuery='<div class="setup_viewscreen col-xs-12 col-sm-12 col-lg-12" style="margin-bottom:10px;" id="image_gallery_'+$index+'">\
                                        <img id="capt-img" class="setup_viewscreen-camera" src="">\
                                        <div class="attach-icon-div-gallery">\
                                            <i class="fa fa-eye view-file-upload" data-toggle="tooltip" tile="view file" aria-hidden="true" data-original-title="" title=""></i>\
                                            <i class="fa fa-trash delete-file-upload"  data-placement="top" aria-hidden="true" title="" data-original-title="Delete Attachment"></i>\
                                        </div>\
                                    </div>';

                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                canvas.getContext('2d').drawImage(video, 0, 0);
                // Other browsers will fall back to image/png
                console.log(canvas);
               // img.src = canvas.toDataURL('image/png');

                $('#modal-uploaddocument').find('.div-image-snap-gallery').append($imageQuery);


              

                $('#modal-uploaddocument').find('.div-image-snap-gallery').find('#image_gallery_'+$index+'').find('img').attr('src', canvas.toDataURL('image/png'));
            };

            function handleSuccess(stream) {
                screenshotButton.disabled = false;
                video.srcObject = stream;
            }

            function stopMediaTracks(stream) {
             
                stream.getTracks().forEach(function (track) { track.stop(); })

            }

            
            //new code//


    

            videoSelect.addEventListener('change', function (event) {

                getStream();
            });

            navigator.mediaDevices.enumerateDevices().then(gotDevices);



            
       






             canvas = document.createElement('canvas');



         


        });



     
          
  


 


        function stopMediaTracks(stream) {
            stream.getTracks().forEach(function (track) {
                track.stop();
            });
        }

        function gotDevices(mediaDevices) {

            videoSelect.innerHTML = '';
            // videoSelect.appendChild(document.createElement('option'));
            var count = 1;
            mediaDevices.forEach(function (mediaDevice) {
                if (mediaDevice.kind === 'videoinput') {
                    const option = document.createElement('option');
                    option.value = mediaDevice.deviceId;
                    const label = mediaDevice.label || 'Camera '+(count++)+'';
                    const textNode = document.createTextNode(label);
                    option.appendChild(textNode);
                    videoSelect.appendChild(option);
                }
            });





        }

        function getStream() {
            // alert('change event');
            if (typeof currentStream !== 'undefined') {
                stopMediaTracks(currentStream);
            }
            const videoConstraints = {};
            if (videoSelect.value === '') {
                videoConstraints.facingMode = 'environment';
            } else {
                videoConstraints.deviceId = { exact: videoSelect.value };
            }
            const constraints = {
                video: videoConstraints,
                audio: false
            };
            navigator.mediaDevices
              .getUserMedia(constraints)
              .then(function (stream) {
                  currentStream = stream;
                  video.srcObject = stream;
                  return navigator.mediaDevices.enumerateDevices();
              })
              .then(gotDevices)
              .catch(function (error) {
                  console.error(error);
                  //alert(error);
              });
        }

        function showCameraOption(ele) {

            var videoInputAvailable = 0;
            $('#uploadImageCamera').tooltip('hide');
            $('#uploadImageCamera').hide();
          
            navigator.mediaDevices.enumerateDevices().then(function (devices) {

                console.log(devices);
                devices.forEach(function (device) {


                    if (device.kind == 'videoinput') {
                        videoInputAvailable++;
                    }

                });


                if (videoInputAvailable == 0) {
                  $('#uploadImageCamera').hide();
                  $('#uploadImageCamera').tooltip('hide');
                  
                }
                else {
                    $('#uploadImageCamera').show();
                    $('#uploadImageCamera').tooltip('show');
                }

                console.log(videoInputAvailable);

            }).catch(function (err) {
                console.log(err.name + ": " + err.message);
            });


            //if (videoSelect.options.length > 0) {
            //    getStream();
            //}




        }

        function showVideoStream()
        {
            if (videoSelect.options.length > 0) {
                getStream();
            }

        }


        function checkUserMedia()
        {

                
           
           
                 navigator.getMedia = ( navigator.getUserMedia || // use the proper vendor prefix
                       navigator.webkitGetUserMedia ||
                       navigator.mozGetUserMedia ||
                       navigator.msGetUserMedia);

            navigator.getMedia({video: true}, function() {
            
                if(!$('#uploadImageCamera').is(':visible'))
                {

                    $('#uploadImageCamera').show();
                    $('#uploadImageCamera').tooltip('show');
                }

          

            }, function() {
                
                $('#uploadImageCamera').hide();
                $('#uploadImageCamera').tooltip('hide');

               
            });

           
        }

        var userMediaInterval=null;

        function setIntervalUserMedia(){

            userMediaInterval=  setInterval(function(){
            
               checkUserMedia();
            
            },1000);



        }

        function stopIntervalUserMedia(){
            clearInterval(userMediaInterval);
        }

        function getBase64Image(img) {
            //debugger;
            //var canvas = document.createElement("canvas");
            //canvas.width = img.width;
            //canvas.height = img.height;
            //var ctx = canvas.getContext("2d");
            //ctx.drawImage(img, 0, 0);
            //var dataURL = ctx.toDataURL("image/png");
            //return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");

            return $(img)[0].src.replace(/^data:image\/(png|jpg);base64,/, "");
        }


        function saveDocumentCamera(ele) {
            var docImage = $('#modalScreenDoc').find('#capt-img');

            if (docImage[0].src.replace('data:,', '') == '') {
                customAlert('Please capture image using camera');
                return false;
            }
            else {

                saveScreeningDoc(docImage, 2);

            }

        }


    </script>

    <script src="~/Scripts/multiselect.js"></script>

}

@section Style
{

    <link href="~/Content/multiselect.css" rel="stylesheet" />


    <style type="text/css">


       

    

        .img-camera {
            height: 30px;
            width: 30px;
            margin-left: 40px;
            cursor: pointer;
        }

        .attachment-icons-block {
            width: 60px;
            height: 60px;
            border: 1px solid #bfbcbc;
            display: inline-block;
            padding: 5px;
            position: relative;
            margin-right: 35px;
            margin-bottom: 15px;
        }

        .attachment-icon {
            height: 50px;
            width: 100%;
            position: relative;
        }

            .attachment-icon img {
                position: absolute;
                left: 0;
                max-width: 100%;
                max-height: 100%;
                margin: auto;
            }

        .attachment-icons-block .fa-trash {
            position: relative;
            width: 100%;
            /*top: -3px;
            right: -15px;*/
            color: #f00;
            cursor: pointer;
        }

        .attachment-icons-block .fa-eye {
            position: relative;
            width: 100%;
            /*top: 17px;
            right: -17px;*/
            color: #000;
            cursor: pointer;
        }

        .attach-icon-div {
            position: absolute;
            top: -1px;
            right: -21px;
            border: 1px solid #bfbcbc;
            width: 20px;
            text-align: center;
            padding: 2px 0;
            /* background: #ffffff; */
            border-left: 0;
        }

       

        #modal-edit-inkind .text-bg , #modal-uploaddocument .text-bg {
            text-shadow: 0 1px #7e50b7;
            background-color: #5f477d;
            background-clip: padding-box;
            border: 1px solid !important;
            border-color: #7e50b7 #684494 #5d3e84 !important;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px rgba(255, 255, 255, 0.4), 0 1px 2px rgba(0, 0, 0, 0.2);
            box-shadow: inset 0 1px rgba(255, 255, 255, 0.4), 0 1px 2px rgba(0, 0, 0, 0.2);
            background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: -moz-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            border-right: 1px solid #87759e !important;
            color: #fff;
        }

       

        .container-fluid {
            margin-top: 15px;
        }

       

        .header_ge {
            color: #fff;
        }

        .logo-place {
            padding-left: 0 !important;
            min-height: 150px;
        }



        #page-wrapper {
            background-color: #fff;
            min-height: 568px;
            padding: 30px 15px 0;
        }

     



      

        .ersa-search-btn, .ersa-search-btn:hover {
            /*font-size: 18px;*/
            text-transform: capitalize;
            text-align: center;
            display: inline-block;
            background: #f9c751;
            color: #212121;
            margin: 0;
            border-radius: 4px;
            width: 100px;
            padding: 7px 9px;
            margin: auto;
            font-weight: bold;
            line-height: 20px;
            border: none;
        }

       

       

     

      

    

        /*Edit In-Kind Transactions Modal*/

        #modal-edit-inkind .modal-dialog-ch {
            width: 70%;
            margin: 20px 15%;
        }

        #modal-edit-inkind .modal-body, #modal-uploaddocument .modal-body {
            background: #34495e none repeat scroll 0 0;
            border: 6px solid #ffffff;
            border-radius: 3px;
            /* color: #ffffff; */
            float: left;
            padding: 15px 3%;
            position: relative;
            width: 100%;
        }

        #modal-edit-inkind .close ,  #modal-uploaddocument .close {
            opacity: 1;
            position: absolute;
            right: -14px;
            top: -15px;
        }

        #modal-edit-inkind .modal-body > h2 ,  #modal-uploaddocument .modal-body>h2{
            margin-top: 10px;
            float: left;
            font-size: 24px;
            font-weight: 600;
            text-align: center;
            width: 100%;
            margin-bottom: 20px;
            color: #fff;
        }

        #modal-edit-inkind .max_items_addn,  #modal-uploaddocument .max_items_addn {
            background: #f1f5f8 none repeat scroll 0 0;
            border: 3px solid #ffffff;
            float: left;
            padding: 10px;
            width: 100%;
            margin-bottom: 20px;
            border-radius: 4px;
        }

        #modal-edit-inkind .sum_attachparticic input ,  #modal-uploaddocument .sum_attachparticic input{
            width: 67%;
            float: left;
            margin-right: 10px;
        }

        #modal-edit-inkind .sum_attachparticic a,  #modal-uploaddocument .sum_attachparticic a {
            padding-top: 10px;
            float: left;
        }

        #modal-edit-inkind .attachparticic_myactive,  #modal-uploaddocument .attachparticic_myactive {
            /*width: 64%;
    float: right;*/
            margin-top: 10px;
        }

        #modal-edit-inkind .sum_attachparticic.list_panic_info,  #modal-uploaddocument .sum_attachparticic.list_panic_info {
            width: 100%;
            margin-bottom: 10px;
            float: left;
        }

        .form-group {
            margin-bottom: 15px !important;
        }


        .mb-3, .my-3 {
            margin-bottom: 1rem !important;
        }

      

        .fa-custom-sort-date-asc,
        .fa-custom-sort-date-desc {
            position: relative;
            width: 32px;
        }

            .fa-custom-sort-date-asc::before,
            .fa-custom-sort-date-desc::before {
                content: "\f175";
                position: relative;
                right: 7px;
            }

            .fa-custom-sort-date-asc::after,
            .fa-custom-sort-date-desc::after {
                position: absolute;
                width: 18px;
                top: 0px;
                right: 0px;
                font-size: 10px;
                line-height: 8px;
                font-family: "courier new",monospace;
                font-weight: bold;
            }

            .fa-custom-sort-date-asc::after {
                content: "JAN DEC";
            }

            .fa-custom-sort-date-desc::after {
                content: "DEC JAN";
            }




        .group {
            float: left;
        }

        .pair {
            margin: 5px;
        }

        .clear {
            clear: both;
        }


        #div-filter-section .form-group > label {
            color: #1d5381;
        }



        button.btn.btn-default.multiselect-clear-filter .glyphicon-remove-circle {
            margin-top: 3px;
            margin-bottom: 5px;
        }


        .glossy_btn button, .backto_listspan .anchor_yellow {
            width: auto;
            display: inline-block;
            position: relative;
            cursor: pointer;
            overflow: hidden;
        }

        .glossy-button-button {
            display: inline-block;
            vertical-align: top;
            position: relative;
            overflow: hidden;
            min-width: 96px;
            padding: 0 24px;
            font-size: 14px;
            color: white;
            text-align: center;
            text-decoration: none;
            text-shadow: 0 1px #154c86;
            background-color: #247edd;
            background-clip: padding-box;
            border: 1px solid;
            border-color: #1c65b2 #18589c #18589c;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px rgba(255, 255, 255, 0.4), 0 1px 2px rgba(0, 0, 0, 0.2);
            box-shadow: inset 0 1px rgba(255, 255, 255, 0.4), 0 1px 2px rgba(0, 0, 0, 0.2);
            background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: -moz-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.12) 51%, rgba(0, 0, 0, 0.04));
            height: 32px;
        }

        .glossy-button-after {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 0%;
            height: 100%;
            background-color: rgba(255,255,255,0.4);
            -webkit-transition: none;
            -moz-transition: none;
            -ms-transition: none;
            -o-transition: none;
            transition: none;
        }

        .glossy-button-before {
            position: absolute;
            top: -25%;
            bottom: -25%;
            left: -20%;
            right: -20%;
            border-radius: 50%;
            background: transparent;
            -webkit-box-shadow: inset 0 0 38px rgba(255, 255, 255, 0.5);
            -moz-box-shadow: inset 0 0 38px rgba(255, 255, 255, 0.5);
            -ms-box-shadow: inset 0 0 38px rgba(255, 255, 255, 0.5);
            -o-box-shadow: inset 0 0 38px rgba(255, 255, 255, 0.5);
            box-shadow: inset 0 0 38px rgba(255, 255, 255, 0.5);
        }

        .button-green {
            text-shadow: 0 1px #0d4d09;
            background-color: #1ca913;
            border-color: #147b0e #11640b #11640b;
            padding: 0;
            margin-bottom: 5px;
        }


        .glossy_btn button:hover .glossy-button-after, .backto_listspan .anchor_yellow:hover .glossy-button-after,
        .screening_footer .glossy-button-button:hover .glossy-button-after,
        .btnwrp_subcal .glossy-button-button:hover .glossy-button-after,
        .bootstrap-dialog-footer-buttons:hover .glossy-button-after {
            width: 120%;
            background-color: rgba(255,255,255,0);
            -webkit-transition: all 0.3s ease-out;
            -moz-transition: all 0.3s ease-out;
            -ms-transition: all 0.3s ease-out;
            -o-transition: all 0.3s ease-out;
            transition: all 0.3s ease-out;
        }

        .button-blue {
            text-shadow: 0 1px #2495ea;
            background-color: #19F;
            border-color: #32a7ff #2f9def #2797eb;
            padding: 0;
            margin-bottom: 5px;
        }

        .button-red {
            text-shadow: 0 1px #e0382a;
            background-color: #d24a3e;
            border-color: #db6d63 #ce6157 #c45349;
            padding: 0;
            margin-bottom: 5px;
        }

        .ersea-table thead tr {
            color: #fff;
            text-align: left;
            background: rgba(203,96,179,1);
            background: -moz-linear-gradient(top, rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            background: -webkit-gradient(left top, rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            background: -webkit-linear-gradient(top,rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            background: -o-linear-gradient(top, rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            background: -ms-linear-gradient(top, rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            background: linear-gradient(to bottom, rgb(218, 174, 208) 0%, rgb(167, 113, 149) 1%, rgb(234, 137, 209) 18%, rgb(167, 27, 126) 51%, rgb(146, 28, 112) 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#cb60b3', endColorstr='#a80077', GradientType=0 );
        }

        .glossy-button-button-ch {
            min-width: 80px;
        }

        #ulPaging a {
            color: #333;
            width: 34px;
            padding: 0px 12px 3px;
        }


            #ulPaging a[disabled="disabled"] {
                pointer-events: none;
            }


        #ulPaging li {
            display: inherit;
        }

        .bootstrap-dialog-title {
            margin-top: 15px;
        }

        .glossy-select{
            height:32px;
        }


        @@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1200px) {


            #inkind-table, #inkind-table thead, #inkind-table tbody, #inkind-table th, #inkind-table td, #inkind-table tr {
                display: block;
                border: none;
            }

            #inkind-table {
                float: left;
                width: 100%;
            }

                #inkind-table tbody tr td:first-child a {
                    width: initial !important;
                    text-overflow: initial !important;
                }

                #inkind-table thead tr {
                    position: absolute;
                    top: -9999px;
                    left: -9999px;
                }

                #inkind-table tr {
                    margin: 0 7px 2em 0;
                    box-shadow: 8px 8px 8px rgba(0,0,0,0.2);
                    float: left;
                    width: 100%;
                }

                    #inkind-table tr:nth-child(odd) {
                        background: #ffffff;
                        border: 1px solid #ccc;
                        border-radius: 8px;
                    }

                    #inkind-table tr:nth-child(even) {
                        background: #f1f5f8;
                        border: 1px solid #ccc;
                        border-radius: 8px;
                    }

                #inkind-table td {
                    border: none;
                    border-bottom: 1px solid #eee;
                    position: relative;
                    float: left;
                    width: 100%;
                }

                    #inkind-table td:before {
                        position: relative;
                        top: 10px;
                        left: 0;
                        width: 35%;
                        padding-right: 10px;
                        white-space: nowrap;
                        height: auto;
                        display: inline-block;
                        float: left;
                    }

            .table-div {
                border: none !important;
            }



            #inkind-table td:before {
                content: attr(data-title);
                text-align: left;
                padding-top: 0.6em;
                margin-left: 1em;
            }

            #inkind-table > tbody > tr > td {
                text-align: right !important;
                margin-right: 2em;
            }

            #inkind-tbody tr td p {
                padding: 10px 10px 10px 10px;
                text-align: right;
                font-size: 14px;
                margin: 0;
                border-right: 0;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                width: 55%;
                margin-right: 0;
                display: inline-block;
            }

           
        }


        #modal-edit-inkind .sum_attachparticic input ,  #modal-uploaddocument .sum_attachparticic input{
            width: 64%;
        }



/*camera popup section*/
        #modal-uploaddocument .camera-radio {
    width: 100%;
    float: left;
    text-align: center;
    padding: 30px 0;
}

        #modal-uploaddocument .select_camera {
    display: inline-block;
    float: none;
    font-size: 16px;
    margin-right: 11px;
}

        #modal-uploaddocument .sel_opt_camera {
    display: inline-block;
    float: none;
}


        #modal-uploaddocument select#videoSource {
    width: 180px;
    height: 36px;
    font-size: 14px;
}


#modal-uploaddocument .setup-camo {
    width: 100%;
    float: left;
    text-align: center;
}

    #modal-uploaddocument .setup-snap {
    position: absolute;
    bottom: 19px;
    left: 0;
    right: 0;
    margin: auto;
    text-align: center;
}

#modal-uploaddocument .setup-snap a {
    color: #fff;
    width: 100px;
    height: 100px;
    border: 2px solid #fff;
    padding: 11px 12px;
    border-radius: 46px;
    font-size: 24px;
    cursor: pointer;
}


    #modal-uploaddocument .setup_viewscreen,  #modal-edit-inkind .setup_viewscreen {
    /*width: 96%;
    float: none;
    display: inline-block;
    background-color: #000;
    height: 350px;
    max-width: 100%;*/
        width: 130px;
    float: left;
    display: inline-block;
    background-color: #000;
    height: 90px;
    max-width: 100%;
    padding: 0;
    border-radius: 5px;
    position: relative;
    margin-right: 10px;
}

    #modal-uploaddocument .setup_viewscreen-camera, #modal-edit-inkind .setup_viewscreen-camera {
    /*height: 350px;*/
    max-width: 100%;
    max-height: 100%;
    width: 100%;
    height: 100%;
    border-radius: 5px;
}

    #modal-uploaddocument video {
    background: #222;
    margin: 0 0 20px 0;
    width: 100%;
    height: 100%;
}

     #modal-uploaddocument .bdr-popup {
    margin-top: 20px;
    margin-bottom: 20px;
    width: 100%;
    height: 1px;
    background: #c6c3c3;
}

     .mob-div-pad
        {
          height: 260px;
    margin-bottom: 30px;
        }
     .mob-div-pad video
        {
            height: 265px;
        }
     .attach-icon-div-gallery {
   position: absolute;
    top: 0;
    right: 0;
    border: none;
    width: 20px;
    text-align: center;
    padding: 0px 0;
    /* background: #ffffff; */
    border-left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    border-radius: 5px;
    line-height: 90px;z-index:9;
    opacity:0;
    -webkit-transition:  all 0.5s linear;
  -moz-transition: all 0.5s linear;
  -o-transition: all 0.5s linear;
  transition: all 0.5s linear;
}
     .no-padding{padding:0;}
     .attach-icon-div-gallery .delete-file-upload {
       color: #fff;
    background: #ce635a;
    padding: 5px;
    border-radius: 100%;
    width: 25px;
    height: 25px;
    font-size: 13px;margin-left:5px;
    cursor: pointer;
}
     .attach-icon-div-gallery .view-file-upload {
     color: #fff;
    background: #42af3c;
    padding: 5px;
    border-radius: 100%;
    width: 25px;
    height: 25px;
    font-size: 13px;
    cursor: pointer;
}
      .setup_viewscreen{
         -webkit-transition:  all 0.5s linear;
  -moz-transition: all 0.5s linear;
  -o-transition: all 0.5s linear;
  transition: all 0.5s linear;
     }
     .setup_viewscreen:hover .attach-icon-div-gallery{
         opacity:1;
         -webkit-transition:  all 0.5s linear;
  -moz-transition: all 0.5s linear;
  -o-transition: all 0.5s linear;
  transition: all 0.5s linear;
     }


     .search-block, .glossy-search-block {
          margin-top: 70px;
     }

        @@media (min-width: 768px) and (max-width: 991px) {
            .search-block-main {
                display: block !important;
            }

            .search-block input ,  .glossy-search-block input {
                width: 81% !important;
            }

            .total-details-table {
                width: auto;
                float: left !important;
                margin-top: 20px;
            }

            .search-block, .glossy-search-block {
                width: 100% !important;
            }
        }

        @@media (min-width: 768px) {
            #page-wrapper {
                border-left: 1px solid #e7e7e7;
                margin-left: 250px;
                position: inherit;
            }
        }

               @@media (max-width: 767px) {
               .search-block-main{display:block!important;}
               .search-block, .glossy-search-block{width:100%!important;}
               .search-block input, .glossy-search-block input{width:70%!important;}
               .multiselect-container{max-width:260px!important;}
               #modal-edit-inkind .modal-dialog-ch {width: 96%!important;margin: 20px 0%!important;}
               #modal-edit-inkind .max_items_addn{padding:10px 0!important;}
               #modal-edit-inkind .max_items_addn .form-group{padding:0!important;}
               .img-camera{margin-left:10px!important;}
                .glossy-search-block{margin-top:10px!important;margin-bottom:20px!important;}
                }
    </style>

    }



    @section MainContentHolder
{

        <div class="row Zoom">
            <div class="col-lg-12" style="padding:0;">
                <div class="page-wrapper-change">
                    <div class="container-fluid">
                        <div class="row">
                           
                            <!-----Right Side Container Section------->
                            <div class="glossy-right-side-container col-xs-12">

                                <!----Heading Section------>
                                <div class="col-xs-12" style="padding:0px;margin-bottom:20px;">
                                    <div class="col-lg-12">
                                        <h2 class="page-header page-header-change" style="border-bottom:5px solid #f9c751!important;color:#fff;">
                                            <i class="fa fa-file" aria-hidden="true"></i>&nbsp;In-Kind Report

                                            <span class="view-btn backto_listspan">

                                                @*<a href="/Roster/Roster" style="padding:10px;float: right;color: #fff;margin-right:0px;background-color:#9b59b6;border-radius: 4px;text-decoration:none;" class="backto_list">Back to Roster</a>*@

                                            </span>
                                        </h2>
                                    </div>
                                </div>

                                <!--Filter and Search Form----->
                                <form class="col-xs-12">


                                    <!--Filter Section----->
                                    <div class="col-xs-12 glossy-panel-div" id="div-filter-section">

                                        <!---Filter Type Section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12">
                                            <label for="selectFilterBy" class="lbl-text" >Filter By <sup>*</sup></label>

                                            <select class="glossy-select" id="selectFilterBy">



                                                @*<option value="@((int)FingerprintsModel.InkindReportFilterEnum.Center)">@FingerprintsModel.EnumHelper.GetEnumDescription(FingerprintsModel.InkindReportFilterEnum.Center)</option>*@

                                                <option value="@((int)FingerprintsModel.InkindReportFilterEnum.Contributor)">@FingerprintsModel.EnumHelper.GetEnumDescription(FingerprintsModel.InkindReportFilterEnum.Contributor)</option>

                                                <option value="@((int)FingerprintsModel.InkindReportFilterEnum.ContributionActivity)">@FingerprintsModel.EnumHelper.GetEnumDescription(FingerprintsModel.InkindReportFilterEnum.ContributionActivity)</option>

                                                <option value="@((int)FingerprintsModel.InkindReportFilterEnum.DateEntered)">@FingerprintsModel.EnumHelper.GetEnumDescription(FingerprintsModel.InkindReportFilterEnum.DateEntered)</option>

                                                <option value="@((int)FingerprintsModel.InkindReportFilterEnum.EnteredBy)">@FingerprintsModel.EnumHelper.GetEnumDescription(FingerprintsModel.InkindReportFilterEnum.EnteredBy)</option>

                                            </select>

                                        </div>


                                        <!---Center dropdown section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12" id="div-center-dropdown" >
                                            <label for="selectCenter"  class="lbl-text">Center <sup>*</sup></label>

                                            <select id="selectCenter" class="glossy-select" multiple="multiple"></select>

                                        </div>


                                        <!----Contributor section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12" id="div-contributor-dropdown" style="display:none;">
                                            <label for="selectContributor"  class="lbl-text">Contributor <sup>*</sup></label>

                                            <select class="glossy-select" id="selectContributor" multiple="multiple"></select>

                                        </div>

                                        <!-----Contribution Activity section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12" id="div-contributionactivity-dropdown" style="display:none;">
                                            <label for="selectContributonActivity"  class="lbl-text">Contribution Activity</label>

                                            <select class="glossy-select" id="selectContributonActivity" multiple="multiple">
                                                <option value="@FingerprintsModel.InkindAmountTypeEnum.Miles.ToString()">@FingerprintsModel.InkindAmountTypeEnum.Miles.ToString()</option>

                                                <option value="@FingerprintsModel.InkindAmountTypeEnum.Hours.ToString()">@FingerprintsModel.InkindAmountTypeEnum.Hours.ToString()</option>
                                                <option value="@FingerprintsModel.InkindAmountTypeEnum.Fixed.ToString()">@FingerprintsModel.InkindAmountTypeEnum.Fixed.ToString()</option>


                                            </select>

                                        </div>


                                        <!-----In-kind activity Date Entered section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12" style="display:none;">
                                            <label for="dateEnteredDateTimePicker"  class="lbl-text">Date Entered <sup>*</sup></label>
                                            <div class="input-group date">
                                                <input type="text" class="form-control glossy-date-input" maxlength="12" placeholder="MM/DD/YYYY" id="dateEnteredDateTimePicker">
                                                <span class="input-group-addon datepicker-icon seats-icon" id="1" style="cursor:pointer;">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                        
                                        <!-----In-kind activity Date Entered section-->
                                       


                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12" id="div-enteredby-dropdown" style="display:none;">
                                            <label for="selectEnteredBy"  class="lbl-text">Entered By <sup>*</sup></label>

                                            <select class="glossy-select" id="selectEnteredBy" multiple="multiple"></select>

                                        </div>

                                      
                                            

                                        <!-----In-kind activity From date section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12">
                                            <label for="fromDateDateTimePicker">From Date <sup style="color:red;">*</sup></label>
                                            <div class="input-group date">
                                                <input type="text" class="form-control glossy-date-input" maxlength="12" placeholder="MM/DD/YYYY" id="fromDateDateTimePicker">
                                                <span class="input-group-addon datepicker-icon seats-icon" id="1" style="cursor:pointer;">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                        <!-----In-kind activity To date section-->
                                        <div class="form-group col-lg-2 col-sm-6 col-xs-12">
                                            <label for="toDateDateTimePicker">To Date <sup style="color:red;">*</sup></label>
                                            <div class="input-group date">
                                                <input type="text" class="form-control glossy-date-input" maxlength="12" placeholder="MM/DD/YYYY" id="toDateDateTimePicker">
                                                <span class="input-group-addon datepicker-icon seats-icon" id="1" style="cursor:pointer;">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                        <!-----In-kind activity Search section-->
                                        <div class="form-check col-lg-2 col-xs-12 glossy_btn" style="width: 127px;">
                                            <label for="exampleInputPassword1" style="visibility:hidden;">Action</label>
                                            <button type="button" class="glossy-button-button button-green" id="btnSearchInkind">
                                                <span class="glossy-button-after"></span>
                                                <span class="glossy-button-before"></span>
                                                Load
                                            </button>
                                        </div>


                                        <!-----In-kind activity Export section-->
                                        <div class="form-check col-lg-2 col-xs-12 glossy_btn">
                                            <label for="exampleInputPassword1" style="visibility:hidden;">Action</label>
                                            <button type="button" class="glossy-button-button button-blue" id="btninkindExport">
                                                <span class="glossy-button-after"></span>
                                                <span class="glossy-button-before"></span>
                                                Export
                                            </button>
                                        </div>
                                    </div>



                                </form>

                                <!-------In-kind Report table section------->

                                <div id="no-more-tables8" class="col-xs-12" style="margin-bottom: 20px;">



                                    <div class="col-xs-12 glossy-panel-div"  id="div-table-responsive">




                                        @{

                                            Html.RenderPartial("~/Views/InKind/_InkindReportListPartial.cshtml", Model);

                                        }


                                    </div>





                                </div>


                            <!---Pagination Section-->
                            <div class="col-xs-12">
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pagination-file">
                                    <div class="pages_display">
                                        <ul>
                                            <li style="color:#ffffff;">Display</li>
                                            <li>
                                                <select id="ddlpagetodisplay">
                                                    <option value="10" selected="selected">10</option>
                                                    <option value="20">20</option>
                                                    <option value="30">30</option>
                                                    <option value="50">50</option>
                                                    <option value="100">100</option>
                                                </select>
                                            </li>
                                            <li style="color:#ffffff;">Records Per Page</li>
                                        </ul>
                                        <div class="clear"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div id="divPaging" class="pagination_wrp">
                                        <ul id="ulPaging" class="pagination">
                                            <li>

                                                    @*<input id='First' type='image' src="~/Images/previousarrow.png" style="cursor:pointer;" disabled />*@

                                                    <a href="javascript:void(0);" id="First" disabled>
                                                        <i class="fa fa-angle-double-left" aria-hidden="true" style="margin:auto;padding:-7px;"></i>
                                                    </a>

                                                </li>
                                                <li title="Back">

                                                    @*<input id='Back' type='image' src="~/Images/prevarrow.png" style='cursor:pointer;' disabled />*@
                                                    <a href="javascript:void(0);" id="Back" disabled>
                                                        <i class="fa fa-angle-left" aria-hidden="true" style="margin:auto;padding:-7px;"></i>
                                                    </a>

                                                </li>
                                                <li title="Select">
                                                    <select class="select_cl" id="ddlpaging"></select>
                                                </li>
                                                <li title="Next">
                                                    @*<input id='Next' type='image' src="~/Images/nextarrow1.png" style='cursor:pointer;' disabled />*@
                                                    <a href="javascript:void(0);" id="Next" disabled>
                                                        <i class="fa fa-angle-right" aria-hidden="true" style="margin:auto;padding:-7px;"></i>
                                                    </a>
                                                </li>
                                                <li title="Last">
                                                    @* <input id='Last' type='image' src="~/Images/nextarrow.png" style='cursor:pointer;' disabled />*@
                                                    <a href="javascript:void(0);" id="Last" disabled>
                                                        <i class="fa fa-angle-double-right" aria-hidden="true" style="margin:auto;padding:-7px;"></i>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>




        </div>





        <div class="modal fade scroll-modal" id="modal-edit-inkind" role="dialog" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-dialog-ch">
                <div class="modal-content">

                    <div class="modal-body">
                        <button type="button" class="close" data-dismiss="modal"><img src="/Content/CaseNote/images/close.png"></button>
                        <h2 id="CaseNoteHeading" class="extra-title muted">Edit In-Kind Transaction</h2>
                        <form id="formEditInkind" enctype="multipart/form-data">

                            <div class="max_items_addn popup-addn-scroll">


                                <div class="form-group col-xs-12">
                                    <label for="lbl-contact-name" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Name</label>
                                    <label id="lbl-contact-name" class="col-md-5 col-lg-4 col-xs-12"></label>
                                    <input type="hidden" id="hide-trans-id" value="0" />
                                </div>





                            <div class="form-group col-xs-12">
                                <label for="inkindActivityDate" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Activity Date <sup style="color:red;">*</sup></label>
                                <div class="col-md-7 col-sm-11 col-lg-5 col-xs-10">
                                    @*<input type="text" class="form-control" id="inkindActivityDate" placeholder="MM/DD/YYYY">*@


                                        <div class="input-group date">
                                            <input type="text" class="form-control glossy-date-input" maxlength="12" placeholder="MM/DD/YYYY" id="inkindActivityDate">
                                            <span class="input-group-addon datepicker-icon" id="1" style="cursor:pointer;">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>



                                    </div>
                                    <div class="col-lg-5">
                                     
                                        <img src="/Images/info.png" id="imageinfoInkindDates" title="Dates Allowed" data-toggle="popover" style="height: 20px;width :20px;padding: 0;cursor:pointer;">

                                    </div>
                                </div>
                                <div class="form-group col-xs-12">
                                    <label for="inkindActivityDate" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Activity Type</label>
                                    <label id="lbl-activity-type" class="col-md-8 col-lg-5 col-xs-12"></label>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="lbl-inkind-activity" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Activity </label>
                                   
                                    <label id="lbl-inkind-activity" class="col-md-8 col-lg-5 col-xs-12"></label>
                                </div>


                                <div class="form-group col-xs-12">
                                    <label for="textarea-inkind-description" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Description of Activity <sup style="color:red;">*</sup></label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">
                                        <textarea class="form-control text-bg" id="textarea-inkind-description"></textarea>
                                    </div>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="inkindActivityMiles" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Miles <sup style="color:red;">*</sup></label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">
                                        <input type="text" class="form-control text-bg" id="inkindActivityMiles" placeholder="">

                                    </div>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="inkindActivityMiles" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Hours : Minutes <sup style="color:red;">*</sup></label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">

                                        <input type="text" class="form-control text-bg" data-toggle="popover" data-targe-selector="#hrs-exceed-content" data-placement="top" data-title="Exceeding 8 hours" id="inkindHoursText" placeholder="HH" maxlength="2" style="display:initial;width:30%;" data-original-title="" title="">
                                        <span style="display:initial;">:</span>
                                        <input type="text" class="form-control text-bg" id="inkindMinutesText" placeholder="MM" maxlength="2" style="display:initial;width:30%;">


                                    </div>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="bl-amount-rate" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Amount Rate</label>
                                    <label class="col-md-8 col-lg-4 col-xs-12" id="lbl-amount-rate"></label>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="inkindAmount" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Amount ($) <sup style="color:red;">*</sup></label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">
                                        <input type="text" class="form-control text-bg" id="inkindAmount" placeholder="Enter In-Kind Amount" pattern="^\d*(\.\d{0,2})?$">

                                    </div>
                                </div>


                                <div class="form-group col-xs-12">
                                    <label for="select-inkind-center" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Center <sup style="color:red;">*</sup></label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">
                                        <select class="form-control glossy-select" id="select-inkind-center"></select>
                                    </div>
                                </div>

                                <div class="form-group col-xs-12">
                                    <label for="select-inkind-classroom" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Classroom</label>
                                    <div class="col-md-8 col-lg-5 col-xs-12">
                                        <select class="form-control glossy-select" id="select-inkind-classroom"></select>
                                    </div>
                                </div>


                                <div class="form-group col-xs-12" id="div-download-inkind-attachments">
                                    <label for="inkind-attachments-div" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Attachment(s)</label>
                                    <div class="col-md-8 col-lg-5 col-xs-12" id="inkind-attachments-div">



                                    </div>
                                </div>


                                <div class="form-group col-xs-12" id="add-inkind-attachments-div">
                                    <label for="inkind-attachments-div" class="col-md-4 col-lg-2 col-xs-12" style="color:#295b8f;">Add Attachment(s)</label>
                                    <div class="col-md-8 col-lg-6 col-xs-12">
                                        <div class="col-xs-12 row sum_attachparticic">
                                            <input type="file" class="form-control text-bg" onchange="self.ValidateSingleInputpdf(this);" name="InkindAttachmentsList[0].InkindAttachmentFile">
                                            <a href="javascript:void(0)" id="Attachmectstag" title="Add Attachment"><i class="fa fa-plus-circle"></i>&nbsp;Add</a>
                                              <img id="uploadImageCamera" class="img-camera" data-toggle="tooltip" src="~/Images/camera.png" title="Capture using Camera" style="display:none;" />
                                        </div>


                                        <div class="col-xs-12 row attachparticic_myactive">

                                        </div>


                                        <div class="col-md-12 col-xs-12 adddivspace"  id="div-edit-modal-img-gallery">

                                        </div>

                                    </div>


                                   

                                </div>

                              





                            </div>


                            <div class="form-group final-btn text-center glossy_btn adddivspace">

                                <button class="glossy-button-button button-green" type="button" id="btn-modal-submit">
                                    <span class="glossy-button-after"></span>
                                    <span class="glossy-button-before"></span>
                                    Save
                                </button>
                                <button class="glossy-button-button button-red" type="button" id="btn-modal-cancel" data-dismiss="modal">
                                    <span class="glossy-button-after"></span>
                                    <span class="glossy-button-before"></span>
                                    Exit
                                </button>
                            </div>
                        </form>


                    </div>
                </div>
            </div>

        </div>


    <!----modal upload multiple document using camera--->


    @{
        Html.RenderPartial("~/Views/Partialviews/_MultipleCameraUploadPartial.cshtml");

    }


    <!------>
    <!-----Pop Over content for Hours exceed-->
    <div id="hrs-exceed-content" class="hidden">
        <p>Are you sure want to continue?</p>
        <p><button type="button" class="btn btn-success">Yes</button>&nbsp;&nbsp;<button type="button" class="btn btn-danger">No</button></p>
    </div>

        <!-----Pop Over content for delete in-kind document attachment-->
        <div id="delete-doc-content" class="hidden">
            <p>You are about to delete this document.</p>
            <p>Click <strong>OK</strong> to proceed.</p>
            <p>
                <button type="button" class="glossy-button-button button-red btn-cancel">
                    <span class="glossy-button-before"></span>
                    <span class="glossy-button-after"></span>

                    Cancel
                </button>&nbsp;&nbsp;

                <button type="button" class="glossy-button-button button-green btn-ok">
                    OK
                    <span class="glossy-button-before"></span>
                    <span class="glossy-button-after"></span>
                </button>
            </p>
        </div>

    }
