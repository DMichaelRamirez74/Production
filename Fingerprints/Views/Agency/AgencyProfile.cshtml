@model FingerprintsModel.Agency
@{
    @section Title
{
        @if (ViewData["Title"] != null)
        {

            @ViewData["Title"].ToString()
        }

    }
    if (Session["AgencyID"] != null && Session["Roleid"] != null && (Session["Roleid"].ToString().Contains("a65bb7c2-e320-42a2-aed4-409a321c08a5") || Session["Roleid"].ToString().Contains("f87b4a71-f0a8-43c3-aea7-267e5e37a59d")))
    {
        if (Session["LeftMenu"] != null)
        {
            if (Session["LeftMenu"].ToString() == "SuperAdmin")
            {
                Layout = "~/Views/Shared/SuperAdminLayout.cshtml";
            }
            else
            {
                Layout = "~/Views/Shared/AgencyAdminLayout.cshtml";
            }
        }
        else
        {
            Layout = "~/Views/Shared/AgencyAdminLayout.cshtml";
        }
    }
    else
    {
        Layout = "~/Views/Shared/SuperAdminLayout.cshtml";
    }
}
@section Script{

    <script type="text/javascript">
        //var isValid = true;

        //var round = 0;

        $(document).ready(function () {

            $('input').keypress(function () {
                if ($(this).val() == 'MM/DD/YYYY') {
                    $(this).val('');
                    // $(this).mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                }
            });

            var countgrd1 = 0;
            var count1 = 0;
            $("input[id^='programstartDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("input[id^='programendDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("input[id^='Date']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $("input[id^='ProgramYear']").each(function () {
                $(this).mask("99-99", { placeholder: 'YY-YY' });
            });



            $("#txtProgStartDate,#txtProgEndDate,#txtLastCurrentDate,#txtFutureAppDate,#txtTransitionDate").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            var dateToday = new Date();
            dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
            $("input[id^='Date']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    changeMonth: true,
                    changeYear: true,
                    minDate: dateToday
                });
            });



            $("#txtProgStartDate").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                    // minDate: new Date($('#AccessStartDate').val()),
                });
            });

            $("#txtProgEndDate").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                    //  minDate: new Date($('#AccessStartDate').val()),
                });
            });

            $("#txtLastCurrentDate").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                    //  minDate: new Date($('#AccessStartDate').val()),
                });
            });

            $("#txtFutureAppDate").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                    //  minDate: new Date($('#AccessStartDate').val()),
                });
            });

            $("#txtTransitionDate").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y'
                    //  minDate: new Date($('#AccessStartDate').val()),
                });
            });


            $('.date-picker').on('click',function(){

                $(this).children('input').datetimepicker('show');
            });

            //$("#txtProgEndDate").each(function () {
            //    $(this).datetimepicker({
            //        timepicker: false,
            //        format: 'm/d/Y',
            //        minDate: dateToday
            //    });
            //});



            $('#ActiveProgYear').mask("99-99", { placeholder: 'YY-YY' });

            $('#AccessStart').timepicker({ 'timeFormat': 'h:i A' });

            $('#AccessStop').timepicker({ 'timeFormat': 'h:i A' });

            $('#ProgramStartTime').timepicker({ 'timeFormat': 'h:i A' });

            $('#ProgramEndTime').timepicker({ 'timeFormat': 'h:i A' });

            $("#phone1").mask("(999) 999-9999");
            $("#phone2").mask("(999) 999-9999");

            $("#side-menu li a").removeClass("active");

            $('#addagency').addClass("active");

            $('#ul1').addClass("in");

            $('#li2').addClass("active");

            $('#liadd').addClass("active");

            if ('@ViewBag.message' != '') {
                customAlert('@ViewBag.message');
            }

            if ('@TempData["message"]' != null && '@TempData["message"]' != '') {
                customAlertforlongtime('@TempData["message"]');
            }

            @{
            TempData["message"] = null;
        }
            $('#btnExitClassroom').click(function () {
                $('#divclass').hide();
            });


            var dateToday = new Date();
            dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);

            $("input[id^='programstartDate']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday,
                });
            });


            $("input[id^='programendDate']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday,
                });
            });


            $("input[id^='programstartDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $("input[id^='programendDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $("input[id^='Date']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });


            if ('@ViewBag.mode' == 0) {
                //$('#ReferenceProg').val('');
                $('#nationality').val('');
                $('#DdlAccessType').val('');
                $('#TimeZoneID').val('');
                $('#DdlProgTypeList').val('');
                $('#Amount').val('');
                $('#Ddlfundingtype').val('');
                $('#Duration').val('');
            }

            $("#programstartDate").datetimepicker({
                timepicker: false,
                format: 'm/d/Y',
                minDate: dateToday,
            });

            $("#programendDate").datetimepicker({
                timepicker: false,
                format: 'm/d/Y',
                minDate: dateToday,
            });

            $("#AccessStartDate").datetimepicker({
                timepicker: false,
                format: 'm/d/Y',
                minDate: dateToday,
            });

            $("#Date").datetimepicker({
                timepicker: false,
                format: 'm/d/Y',
                minDate: dateToday,
            });

            $("#programstartDate").on("keypress paste", function (event) {
                event.preventDefault();
            });


            $("#programendDate").on("keypress paste", function (event) {
                event.preventDefault();
            });


            $("#AccessStartDate").on("keypress paste", function (event) {
                event.preventDefault();
            });


            //$("#Date").on("keypress paste", function (event) {
            //    event.preventDefault();
            //});


            $('#form1').submit(function () {
                $('#btnSubmit').attr('disabled', 'disabled');
            });


            $("#userName").on('change keypress paste', function (e) {
                if (e.which === 32)
                    return false;
                if ($(this).val().match(/\s/g)) {
                    $(this).val($(this).val().replace(/\s/g, ''));
                }
            });



            if ($('#agencyId').val() != "0") {
                $('#ShowDiv').show();
                // drawproglist();
            }

            $('#userName').bind("cut copy paste", function (e) {
                e.preventDefault();
            });


            try {
                // If super admin login into agency Making entire form read only
                if ('@Session["Roleid"]'.length > 0) {
                    var role = '@Session["Roleid"].ToString()';
                    if (role.toUpperCase() == "f87b4a71-f0a8-43c3-aea7-267e5e37a59d") {
                        $('#BackToList').show();   // Back to list button only visible to super admin
                        if ('@Session["AgencyID"]'.length > 0) {
                            if ('@Session["LeftMenu"]'.length) {
                                var menu = '@Session["LeftMenu"].ToString()';
                                if (menu.toUpperCase() == "a65bb7c2-e320-42a2-aed4-409a321c08a5") {
                                    $('#form1 input').attr('readonly', true);
                                    $('#form1 Button').attr('disabled', true);
                                    $('#form1 select').attr('disabled', true);
                                    $('#BtnChange').attr("onClick", "return false");
                                }
                            }
                            //$('#form1 #btnExit').attr('disabled', false);
                            //  $('#BackToList').hide();
                        }
                    }
                    else {
                        // $('#BackToList').hide();   // Hiding back to list button if role is not superadmin
                    }
                }
            }
            catch (err) {
            }
            // end of code


            if ('@Session["Roleid"]'.length > 0) {
                var role = '@Session["Roleid"].ToString()';

                if (role.toUpperCase() == "f87b4a71-f0a8-43c3-aea7-267e5e37a59d") {
                    $('#btnExit').click(function () {
                        window.location.href = HostedDir + "/Home/SuperAdminDashboard";
                    });
                }

                else {
                    $('#btnExit').click(function () {
                        window.location.href = HostedDir + "/Home/AgencyAdminDashboard/";
                    });

                }

            }

            $('input[name=Areabreakdown]').on('click', function () {

                if ($(this).val() == '1') {

                    loadAreaDivisionBreakDowns(this, 1);
                    $('#areadropAnchor').show();
                }
                else{
                    $('#areadropAnchor').hide();
                }
                return true;

            });

            $('input[name=DivisionBreakDown]').on('click', function (e) {

                if ($(this).val() == '1') {


                    loadAreaDivisionBreakDowns(this, 2);
                    $('#divisiondropAnchor').show();
                }
                else{

                    if($.parseJSON( $('#DivisionReference').val().toLowerCase()))
                    {

                        customAlert('Divisions are referred to Program Types');
                        e.preventDefault();
                        return false;
                    }
                    else
                    {
                        $('#divisiondropAnchor').hide();
                    }

                }
                return true;
            });


            $('#areadropAnchor').on('click', function () {

                loadAreaDivisionBreakDowns(this, 1);

            });

            $('#divisiondropAnchor').on('click', function () {

                loadAreaDivisionBreakDowns(this, 2);

            });


            $('.count-text').on('input',function(e){
                cleanValidation();
                debugger;
                var atrId=$(this).attr('id');
                var num=parseInt($(this).val());
                if(atrId=='divisionbreaktxt')
                {
                    if($('#gridprogram').find('tr').length>0)
                    {
                        var list1=[];
                        var list= $.each( $('#gridprogram').find('tbody').find('tr'), function(k,tr){
                            var returnVal= parseInt($(tr).find('td:eq(5)').children().val())

                            if(returnVal>num)
                            {
                                list1.push(returnVal);
                            }

                        });

                        if(list1.length>0)
                        {
                            plainValidation('#'+atrId+'');
                            customAlert('Divisions are referred by Program Types');
                            e.preventDefault();
                            return false;
                        }
                    }

                }

                else
                {
                    var rowLen= $('#myModelAreaBreakdown').find('#area_tbody').find('tr').length;
                    var isavail=0;
                    if(num<=rowLen)
                    {
                        $('#myModelAreaBreakdown').find('#area_tbody').find('tr').each(function(i,row){

                            if(i>(num-1))
                            {
                                if($(row).find('td').attr('isavail')=='true')
                                {
                                    isavail++;
                                }
                            }

                        });
                    }

                    if(isavail>0)
                    {
                        plainValidation('#'+atrId+'');
                        customAlert('Areas are referred by Center(s)');
                        e.preventDefault();
                        return false;
                    }
                }


            });


            $('.count-text').on('keydown', function (e) {
                cleanValidation();
                debugger;
                -1 !== $.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) ||
                (/65|67|86|88/.test(e.keyCode) && (e.ctrlKey === true || e.metaKey === true))
                && (!0 === e.ctrlKey || !0 === e.metaKey) || 35 <= e.keyCode && 40 >= e.keyCode || (e.shiftKey || 48 > e.keyCode || 57 < e.keyCode) && (96 > e.keyCode || 105 < e.keyCode)
                && e.preventDefault()
            });



            $('#btnLoadArea').on('click', function (e) {

                cleanValidation();
                var atrId=$(this).closest('.modal').find('.count-text').attr('id');
                var num=parseInt($(this).closest('.modal').find('.count-text').val());
                if(atrId=='areabreaktxt')
                {

                    //if($('#gridprogram').find('tr').length>0)
                    //{
                    //    var list1=[];
                    //    var list= $.each( $('#gridprogram').find('tbody').find('tr'), function(k,tr){
                    //        var returnVal= parseInt($(tr).find('td:eq(5)').children().val())
                    //        if(returnVal>num)
                    //        {
                    //            list1.push(returnVal);
                    //        }
                    //    });
                    //    if(list1.length>0)
                    //    {
                    //        plainValidation('#'+atrId+'');
                    //        customAlert('Areas are referred by Centers');
                    //        e.preventDefault();
                    //        return false;
                    //    }
                    //}


                    var rowLen= $('#myModelAreaBreakdown').find('#area_tbody').find('tr').length;
                    var isavail=0;
                    if(num<=rowLen)
                    {
                        $('#myModelAreaBreakdown').find('#area_tbody').find('tr').each(function(i,row){

                            if(i>(num-1))
                            {
                                if($(row).find('td').attr('isavail')=='true')
                                {
                                    isavail++;
                                }
                            }

                        });
                    }

                    if(isavail>0)
                    {
                        plainValidation('#'+atrId+'');
                        customAlert('Areas are referred by Center(s)');
                        e.preventDefault();
                        return false;
                    }

                }

                return  addAreaDivRows(this);

            });


            $('#btnSaveAreabreakDown').on('click', function () {
                return  saveAreasDivs(this, 1);
            });

            $('#btnSaveDivisionbreakDown').on('click', function () {
                return saveAreasDivs(this, 2);
            });

            $('#btnLoadDivison').on('click', function (e) {

                cleanValidation();
                var atrId=$(this).closest('.modal').find('.count-text').attr('id');
                var num=parseInt($(this).closest('.modal').find('.count-text').val());
                if(atrId=='divisionbreaktxt')
                {


                    if($('#gridprogram').find('tr').length>0)
                    {
                        var list1=[];
                        var list= $.each( $('#gridprogram').find('tbody').find('tr'), function(k,tr){
                            var returnVal= parseInt($(tr).find('td:eq(5)').children().val())

                            if(returnVal>num)
                            {
                                list1.push(returnVal);
                            }

                        });

                        if(list1.length>0)
                        {
                            plainValidation('#'+atrId+'');
                            customAlert('Divisions are referred by Program Types');
                            e.preventDefault();
                            return false;
                        }
                    }

                }


                return addAreaDivRows(this);
            });


            //$("#myModalagency").on('hide.bs.modal',function(){
            //    var modal=$(this);
            //    var rowIndex=modal.attr('element');
            //    var programRow=$('#gridprogram').find('tr[id="'+rowIndex+'"]');
            //    var progTd=$(programRow).find('td:eq(8)');
            //    progTd.find('.program-start-date').val(modal.find('#txtProgStartDate').val());
            //    progTd.find('.program-end-date').val(modal.find('#txtProgEndDate').val());
            //    progTd.find('.date-current-app').val(modal.find('#txtLastCurrentDate').val());
            //    progTd.find('.date-future-app').val(modal.find('#txtFutureAppDate').val());
            //    progTd.find('.trans-date').val(modal.find('#txtTransitionDate').val());
            //});

            $('#myModelFund').on('hide.bs.modal',function(){

                var modal=$(this);
                var rowIndex=$(this).attr('element');
                var programRow=$('#gridprogram').find('tr[id="'+rowIndex+'"]');
                var progTd=$(programRow).find('td:eq(9)');

                var arr=[];
                modal.find('.modal-body').find('input[name=fundcheckbox]:checked').each(function(){

                    arr.push($(this).val());
                });

                var str=arr.join(',');
                progTd.children('a').siblings('input').val(str);
            });


            $("#myModalagency").find('#btnProgDateClose').on('click',function(){

                cleanValidation();
                var dateModal=$('#myModalagency');
                var rowIndex=dateModal.attr('element');
                var programRow=$('#gridprogram').find('tr[id="'+rowIndex+'"]');
                var progTd=$(programRow).find('td:eq(8)');
                var error=0;

                var progStartDate=dateModal.find('#txtProgStartDate');

                var progEndDate=dateModal.find('#txtProgEndDate');

                var lastCurrentApp=dateModal.find('#txtLastCurrentDate');

                var futureAppDate=dateModal.find('#txtFutureAppDate');

                var transDate=dateModal.find('#txtTransitionDate');

                if(progStartDate.val()==="")
                {
                    plainValidation('#'+progStartDate.attr('id')+'');
                    error++;
                }

                if(progEndDate.val()==="")
                {
                    plainValidation('#'+progEndDate.attr('id')+'');
                    error++;
                }

                if(lastCurrentApp.val()==="")
                {
                    plainValidation('#'+lastCurrentApp.attr('id')+'');
                    error++;
                }
                if(futureAppDate.val()==="")
                {
                    plainValidation('#'+futureAppDate.attr('id')+'');
                    error++;
                }
                if(transDate.val()==="")
                {
                    plainValidation('#'+transDate.attr('id')+'');
                    error++;
                }



                if(error>0)
                {
                    customAlert('All date fields are required');
                    return false;
                }
                error=0;
                var progSDate=new Date(new Date(progStartDate.val()).setHours(0,0,0,0));
                var progEDate=new Date(new Date(progEndDate.val()).setHours(0,0,0,0));
                var lastCurrDate=new Date(new Date(lastCurrentApp.val()).setHours(0,0,0,0));
                var futurDate=new Date(new Date(futureAppDate.val()).setHours(0,0,0,0));
                var tDate=new Date(new Date(transDate.val()).setHours(0,0,0,0));

                if(progEDate<progSDate)
                {
                    plainValidation('#'+progStartDate.attr('id')+'');
                    customAlert('Program End Date should be greater than Program Start Date');
                    return false;
                }

                else if(lastCurrDate<progSDate || lastCurrDate>progEDate)
                {
                    plainValidation('#'+lastCurrentApp.attr('id')+'');
                    customAlert('Please enter valid date');
                    return false;
                }

                else if(futurDate<progSDate || futurDate>progEDate)
                {
                    plainValidation('#'+futureAppDate.attr('id')+'');
                    customAlert('Please enter valid date');
                    return false;
                }

                else if(tDate<progSDate || tDate>progEDate)
                {
                    plainValidation('#'+transDate.attr('id')+'');
                    customAlert('Please enter valid date');
                    return false;
                }
                else{
                    progTd.find('.program-start-date').val(progStartDate.val());
                    progTd.find('.program-end-date').val(progEndDate.val());
                    progTd.find('.date-current-app').val(lastCurrentApp.val());
                    progTd.find('.date-future-app').val(futureAppDate.val());
                    progTd.find('.trans-date').val(transDate.val());

                    dateModal.modal('hide');
                }

            });

            $('#myModalagency').find('#txtProgEndDate').on('change',function(e){
                cleanValidation();

                var progStartdate= $('#myModalagency').find('#txtProgStartDate').val();
                var progEndDate=$(this).val();
                if(progStartdate!='')
                {
                    if(new Date(new Date(progEndDate).setHours(0,0,0,0))<=new Date(new Date(progStartdate).setHours(0,0,0,0)))
                    {
                        plainValidation('#txtProgEndDate');
                        customAlert("Program End Date should greater than Program Start Date");
                        e.preventDefault();
                        return false;
                    }
                }

            });


            $('#myModalagency').find('#txtLastCurrentDate,#txtFutureAppDate,#txtTransitionDate').on('change',function(e){
                cleanValidation();
                var progStartdate= $('#myModalagency').find('#txtProgStartDate').val();
                var progEndDate=$('#myModalagency').find('#txtProgEndDate').val();
                var lastCurrDate=new Date(new Date($(this).val()).setHours(0,0,0,0));

                if(progEndDate!='' || progStartdate!='')
                {
                    var progSDate=new Date(new Date(progStartdate).setHours(0,0,0,0));
                    var progEDate=new Date(new Date(progEndDate).setHours(0,0,0,0));

                    if(lastCurrDate < progSDate || lastCurrDate>progEDate)
                    {
                        plainValidation('#'+$(this).attr('id')+'');
                        customAlert('Please enter valid date');
                        return false;
                    }

                }

            });


        });


        function addAreaDivRows(ele)
        {
            debugger;
            cleanValidation();

            var btn = $(ele);

            var countText = btn.parent('div').siblings('div').children('.count-text');
            var countValue = 0;

            var appendDiv = '';
            var areaTbody = btn.closest('.modal').find('tbody');
            var rowLength = areaTbody.find('tr').length;

            if (countText.val() == "") {
                plainValidation('#' + countText.attr('id') + '');
                customAlert('Please enter number');
                return false;
            }

            countValue = parseInt(countText.val());

            if (countValue > 0) {

                if (countValue === rowLength) {
                    areaTbody.find('tr').show();
                    return false;
                }

                else if (countValue < rowLength) {
                    areaTbody.find('tr:gt(' + (countValue - 1) + ')').remove();
                }

                else if (countValue > rowLength) {
                    for (var i = rowLength + 1; i <= countValue ; i++) {
                        var index = i - 1;
                        appendDiv += '<tr>' +
                                  '<td style="width:100px;text-align:center;">' + i + '</td>' +
                                  '<td><input type="text" class="form-control desc-input"  id="desc_' + i + '" ></td>' +
                              '</tr>';
                    }

                    //$('#myModelAreaBreakdown').find('#area_tbody').append(appendDiv);
                    btn.closest('.modal').find('tbody').append(appendDiv);
                }


                return true;

            }
            else {
                plainValidation('#' + countText.attr('id') + '');
                customAlert('Number should be greater than zero.');
                return false;

            }

        }


        function loadAreaDivisionBreakDowns(ele,area_div)
        {
            debugger;
            var appendtxt = '';
            var areaDivCount = 0;

            var url = (area_div === 1) ? HostedDir + '/Agency/GetAreas' : HostedDir + '/Agency/GetDivisions';
            $.ajax({

                url: url,
                type: 'POST',
                //contentType: 'application/json',
                datatype:'json',
                beforeSend: function () { $('#spinner').show() },
                data:{agencyId:$('#agencyId').val()},
                success: function (data) {
                    $('#spinner').hide();
                    console.log(data);
                    if (data != null && data.length > 0) {
                        areaDivCount = data.length;

                        if (area_div === 1)
                        {
                            $.each(data, function (i, area) {

                                appendtxt += '<tr>' +
                                  '<td style="width:100px;text-align:center;" isavail='+area.IsAreaReferred+' accesskey=' + area.AreaIndexID + '>' + area.AreaID + '</td>' +
                                  '<td><input type="text" class="form-control desc-input" id="desc_' + i + '" value="' + area.Description + '"></td>' +
                              '</tr>';

                            });
                        }
                        else {
                            $.each(data, function (i, div) {

                                appendtxt += '<tr>' +
                                  '<td style="width:100px;text-align:center;" accesskey=' + div.DivisionIndexID + '>' + div.DivisionID + '</td>' +
                                  '<td><input type="text" class="form-control desc-input" id="desc_'+i+'" value="' + div.Description + '"></td>' +
                              '</tr>';

                            });
                        }

                    }
                    else {
                        areaDivCount = 1;
                        appendtxt += '<tr>' +
                         '<td style="width:100px;text-align:center;" accesskey="0">1</td>' +
                         '<td><input type="text" class="form-control desc-input" value="" id="desc_1"></td>' +
                     '</tr>';
                    }


                    if (area_div === 1) {
                        $('#myModelAreaBreakdown').find('#areabreaktxt').val(areaDivCount);
                        $('#myModelAreaBreakdown').find('#area_tbody').html(appendtxt);
                        $('#myModelAreaBreakdown').modal('show');
                    }
                    else {
                        $('#myModelDivisionBreakdown').find('#divisionbreaktxt').val(areaDivCount);
                        $('#myModelDivisionBreakdown').find('#div_tbody').html(appendtxt);
                        $('#myModelDivisionBreakdown').modal('show');
                    }


                },
                error: function (data) {

                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                },
                complete: function (data) {
                    $('#spinner').hide();
                }
            });
        }

        function saveAreasDivs(ele,area_div)
        {
            debugger;

            if($(ele).closest('.modal').find('.count-text').val()=='0')
            {
                plainValidation('#' + $(ele).closest('.modal').find('.count-text').attr('id') + '');
                customAlert('Number should be greater than zero.');
                return false;
            }

            var agencyID=$('#agencyId').val();
            cleanValidation();
            var isRequired = 0;
            var tBody = $(ele).closest('.modal').find('tbody');

            var areaDivJson = [];
            if (tBody.find('tr').length > 0) {

                tBody.find('tr').each(function (j, areaRow) {
                    var descInput = $(areaRow).find('td:eq(1)').children('.desc-input');
                    var index = j;
                    var accesskey = $(areaRow).find('td:eq(0)').attr('accesskey');
                    var indexID = $(areaRow).find('td:eq(0)').html();
                    accesskey = (accesskey == undefined || accesskey == '') ? 0 : accesskey;

                    if (descInput.is('input') && descInput.val() == "") {
                        plainValidation('#' + descInput.attr('id') + '');
                        isRequired++;
                    }
                    else {
                        if (area_div === 1)
                        {
                            areaDivJson.push({
                                'AreaIndexID': accesskey,
                                'AreaID': indexID,
                                'AgencyID':agencyID,
                                'Description': descInput.val(),
                                'Status': true
                            });
                        }
                        else {
                            areaDivJson.push({
                                'DivisionIndexID': accesskey,
                                'DivisionID': indexID,
                                'AgencyID': agencyID,
                                'Description': descInput.val(),
                                'Status': true
                            });
                        }


                    }

                });

                if (isRequired > 0) {
                    customAlert('Please enter description');
                    return false;
                }

                var url = (area_div === 1) ? HostedDir + '/Agency/AddAreas' : HostedDir + '/Agency/AddDivisions';

                $.ajax({
                    url: url,
                    datatype: 'json',
                    contentType: 'application/json',
                    type: 'POST',
                    data: JSON.stringify(areaDivJson),
                    beforeSend:function(){
                        $('#spinner').show();
                    },
                    success: function (data) {
                        $('#spinner').hide();
                        if (data.isResult) {
                            $(ele).closest('.modal').modal('hide');
                            customAlert('Record saved successfully');

                            setTimeout(function(){
                                $('#spinner').show();
                                location.reload(true);

                            },500);
                        }
                        else {
                            customAlert('Some error occured.Please, try again later');
                        }


                    },
                    error: function (data) {
                        $('#spinner').hide();
                        customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                    },
                    complete: function (data) {
                        $('#spinner').hide();
                    }
                });





            }
        }

        function checkIfNumericDigit(el) {

            var ex = /^[0-9]+\.?[0-9]*$/;
            if (ex.test(el.value) == false) {
                el.value = "";
            }
            var ex = /^\d*\.?\d{0,2}$/;
            if (ex.test(el.value) == false) {
                // el.value = el.value.substring(0, el.value.indexOf('.') + 3);
                el.value = "";
            }
            var lastChar = el.value.substring(el.value.length - 1);
            if (lastChar == ".") {
                //el.value = el.value.substring(0, el.value.length - 1);
                el.value = "";
            }
        }

        //function isValidagencyInfo() {
        //    var count1 = 0;
        //    var countgrd1 = 0;
        //    cleanValidation();
        //    var isValid = true;
        //    if ($('#agencyName')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Agency name is required.");
        //        plainValidation('#agencyName');
        //        return isValid;
        //    }
        //    else if ($('#primaryEmail')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Email is required.");
        //        plainValidation('#primaryEmail');
        //        return isValid;
        //    }
        //    else if ($('#primaryEmail')[0].value.trim() != "" && !validateEmail($('#primaryEmail')[0].value.trim())) {
        //        isValid = false;
        //        customAlert("Please enter valid email id.");
        //        plainValidation('#primaryEmail');
        //        return isValid;
        //    }
        //    else if ($('#firstName')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("First name is required.");
        //        plainValidation('#firstName');
        //        return isValid;
        //    }
        //    else if ($('#LastName')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Last name is required.");
        //        plainValidation('#LastName');
        //        return isValid;
        //    }
        //    else if ($('#zipCode')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Zip code is required.");
        //        plainValidation('#zipCode');
        //        return isValid;
        //    }
        //    else if ($('#address1')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Address is required.");
        //        plainValidation('#address1');
        //        return isValid;
        //    }
        //    else if ($('#phone1')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Phone1 is required.");
        //        plainValidation('#phone1');
        //        return isValid;
        //    }
        //    else if ($('#nationality')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Country is required.");
        //        plainValidation('#nationality');
        //        return isValid;
        //    }
        //    else if ($('#TimeZoneID')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Please select timezone from list.");
        //        plainValidation('#TimeZoneID');
        //        return isValid;
        //    }
        //    else if ($('#AccessStartDate')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Access start date is required.");
        //        plainValidation('#AccessStartDate');
        //        return isValid;
        //    }
        //    else if ($('#AccessStart')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Please select access start time.");
        //        plainValidation('#AccessStart');
        //        return isValid;
        //    }
        //    else if ($('#AccessStop')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Please select access stop time.");
        //        plainValidation('#AccessStop');
        //        return isValid;
        //    }
        //    else if ($('#ActiveProgYear')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Active program year is required.");
        //        plainValidation('#ActiveProgYear');
        //        return isValid;
        //    }
        //    else if ($('#DdlAccessType')[0].value.trim() == "") {
        //        isValid = false;
        //        customAlert("Please select access type from list.");
        //        plainValidation('#DdlAccessType');
        //        return isValid;
        //    }
        //    else if ($('#Yakkr600').val().trim() == "") {
        //        isValid = false;
        //        customAlert("Yakkr 600 days are required.");
        //        plainValidation('#Yakkr600');
        //        return isValid;
        //    }
        //    else if ($('#Yakkr601').val().trim() == "") {
        //        isValid = false;
        //        customAlert("Yakkr 601 Percentage is required.");
        //        plainValidation('#Yakkr601');
        //        return isValid;
        //    }
        //    else if(!$('input[name=AcceptanceProcess]').is(":checked"))
        //    {
        //        isValid = false;
        //        customAlert("Acceptance Process is required. ");
        //        return isValid;
        //    }
        //    else if (!$("input:radio[name='DocsStorage']").is(":checked")) {
        //        isValid = false;
        //        customAlert("Document storage is required. ");
        //        return isValid;
        //    }
        //    else if ($('#FSWYearlyVisit').val().trim() == "") {
        //        isValid = false;
        //        customAlert("FSW yearly visit is required.");
        //        plainValidation('#FSWYearlyVisit');
        //        return isValid;
        //    }
        //    else if (!$("input:radio[name='Transportation']").is(":checked")) {
        //        isValid = false;
        //        customAlert("Transportation information is required. ");
        //        return isValid;
        //    }
        //    else if (!$("input:radio[name='Areabreakdown']").is(":checked")) {
        //        isValid = false;
        //        customAlert("Area breakdown is required. ");
        //        return isValid;
        //    }

        //    else if (!$("input:radio[name='DivisionBreakDown']").is(":checked")) {
        //        isValid = false;
        //        customAlert("Division breakdown is required. ");
        //        return isValid;
        //    }
        //    else if ($('.fundclass').children().length <= 0) {
        //        isValid = false;
        //        customAlert("Please add fund and program types.");
        //        return isValid;
        //    }

        //    else if ($('#divclass').show()) {
        //        var Programtype = [];
        //        var Programtypeduplicate = [];
        //        $('.fundclass').children().each(function () {
        //            if (!isValid)
        //                return isValid;
        //            var ProgCount = 0;
        //            var PeopleServedcount = 0;
        //            if ($(this).children().length > 0) {

        //                if ($('[name="FundSourcedata[' + count1 + '].Acronym"]').val() == "" && isValid) {
        //                    isValid = false;
        //                    customAlert("Acronym is required.");
        //                    plainValidation($('[name="FundSourcedata[' + count1 + '].Acronym"]'));
        //                    return isValid;
        //                }
        //                if ($('[name="FundSourcedata[' + count1 + '].Description"]').val() == "" && isValid) {
        //                    isValid = false;
        //                    customAlert("Description is required.");
        //                    plainValidation($('[name="FundSourcedata[' + count1 + '].Description"]'));
        //                    return isValid;
        //                }

        //                //if ($('[name="FundSourcedata[' + count1 + '].Amount"]').val() == "" && isValid) {
        //                //    isValid = false;
        //                //    customAlert("Amount is required.");
        //                //    plainValidation($('[name="FundSourcedata[' + count1 + '].Amount"]'));
        //                //    return isValid;
        //                //}


        //                if ($('[name="FundSourcedata[' + count1 + '].Date"]').val() == "" && isValid) {
        //                    isValid = false;
        //                    customAlert("Date is required.");
        //                    plainValidation($('[name="FundSourcedata[' + count1 + '].Date"]'));
        //                    return isValid;
        //                }

        //                if ($('[name="FundSourcedata[' + count1 + '].ServiceQty"]').val() == "" && isValid) {
        //                    isValid = false;
        //                    customAlert("Funded slots is required.");
        //                    plainValidation($('[name="FundSourcedata[' + count1 + '].ServiceQty"]'));
        //                    return isValid;
        //                }


        //                if ($('[name="FundSourcedata[' + count1 + '].ProgramYear"]').val() == "0" && isValid) {
        //                    isValid = false;
        //                    customAlert("Program Year is required.");
        //                    plainValidation($('[name="FundSourcedata[' + count1 + '].ProgramYear"]'));
        //                    return isValid;
        //                }


        //                //if ($('[name="FundSourcedata[' + count1 + '].grantNo"]').val() == "" && isValid) {
        //                //    isValid = false;
        //                //    customAlert("GrantNo is required.");
        //                //    plainValidation($('[name="FundSourcedata[' + count1 + '].grantNo"]'));
        //                //    return isValid;
        //                //}

        //                //if ($('[name="FundSourcedata[' + count1 + '].nameGranteeDelegate"]').val() == "" && isValid) {
        //                //    isValid = false;
        //                //    customAlert("Grantee/Delegate is required.");
        //                //    plainValidation($('[name="FundSourcedata[' + count1 + '].nameGranteeDelegate"]'));
        //                //    return isValid;
        //                //}


        //                var itemobj = null;
        //                var tdval = $('table#gridprogram> tbody > tr');
        //                for (var z = 0; z < tdval.length; z++) {
        //                    var tmp00 = $(tdval[z]).html();
        //                    var inputCouy = $(tmp00).find('input[type=text]');
        //                    for (var j = 0; j < inputCouy.length; j++) {
        //                        itemobj = $(inputCouy[j])[0].id;

        //                        if (itemobj.indexOf("Slots_") != -1) {
        //                            PeopleServedcount = PeopleServedcount + ($('#' + itemobj).val().trim() == "" ? 0 : parseInt($('#' + itemobj).val()));
        //                        }
        //                        if (itemobj.indexOf("ProgType_") != -1) {
        //                            if ($('#' + itemobj).val().trim() != "")
        //                                Programtype.push($('#' + itemobj).val().toUpperCase());
        //                        }


        //                        if (itemobj.indexOf("Area_") != -1) {
        //                            if ($('#Areabreakdown1').prop("checked")) {
        //                                //if ($('#' + itemobj).val() == "") {
        //                                if ($('#' + itemobj).val() == "" && $('#' + itemobj)[0].readOnly != true) {
        //                                    isValid = false;
        //                                    customprogAlert(itemobj);
        //                                    return isValid;
        //                                }
        //                            }
        //                        }
        //                        else {
        //                            //if ($('#' + itemobj).val() == "") {
        //                            if ($('#' + itemobj).val() == "" && $('#' + itemobj)[0].readOnly != true) {
        //                                isValid = false;
        //                                customprogAlert(itemobj);
        //                                return isValid;
        //                            }
        //                        }
        //                    }
        //                }



        //                //if (PeopleServedcount != 0) {
        //                //    if (parseInt($('[name="FundSourcedata[' + count1 + '].ServiceQty"]').val()) != PeopleServedcount) {
        //                //        isValid = false;
        //                //        customAlert("Slots served must be equal to slots entered in programs.");
        //                //        plainValidation($('[name="FundSourcedata[' + count1 + '].ServiceQty"]'));
        //                //        return isValid;
        //                //    }
        //                //}


        //            }
        //            PeopleServedcount = 0;
        //            count1 = count1 + 1;

        //        });
        //        if (Programtype.length > 0) {
        //            Programtypeduplicate = Programtype.sort();
        //            for (var i = 0; i < Programtypeduplicate.length - 1; i++) {
        //                if (Programtypeduplicate[i + 1] == Programtypeduplicate[i]) {
        //                    Programtype = [];
        //                    Programtypeduplicate = [];
        //                    isValid = false;
        //                    customAlert("Program type cannot be duplicate in funds.");
        //                    return isValid;
        //                }
        //            }
        //        }
        //    }

        //    if(isValid)
        //    {
        //        $('#spinner').show();
        //    }
        //    else{
        //        $('#spinner').hide();

        //    }


        //    //isValid = true;
        //    return isValid;
        //}


        function isValidagencyInfo() {
            debugger;
            var count1 = 0;
            var countgrd1 = 0;
            cleanValidation();
            $('#gridprogram>tbody>tr').each(function(){

                $(this).find('td:eq(8)').find('a').css('background-color','');
            });


            var isValid = true;
            if ($('#agencyName')[0].value.trim() == "") {
                isValid = false;
                customAlert("Agency name is required.");
                plainValidation('#agencyName');
                return isValid;
            }
            else if ($('#primaryEmail')[0].value.trim() == "") {
                isValid = false;
                customAlert("Email is required.");
                plainValidation('#primaryEmail');
                return isValid;
            }
            else if ($('#primaryEmail')[0].value.trim() != "" && !validateEmail($('#primaryEmail')[0].value.trim())) {
                isValid = false;
                customAlert("Please enter valid email id.");
                plainValidation('#primaryEmail');
                return isValid;
            }
            else if ($('#firstName')[0].value.trim() == "") {
                isValid = false;
                customAlert("First name is required.");
                plainValidation('#firstName');
                return isValid;
            }
            else if ($('#LastName')[0].value.trim() == "") {
                isValid = false;
                customAlert("Last name is required.");
                plainValidation('#LastName');
                return isValid;
            }
            else if ($('#zipCode')[0].value.trim() == "") {
                isValid = false;
                customAlert("Zip code is required.");
                plainValidation('#zipCode');
                return isValid;
            }
            else if ($('#address1')[0].value.trim() == "") {
                isValid = false;
                customAlert("Address is required.");
                plainValidation('#address1');
                return isValid;
            }
            else if ($('#phone1')[0].value.trim() == "") {
                isValid = false;
                customAlert("Phone1 is required.");
                plainValidation('#phone1');
                return isValid;
            }
            else if ($('#nationality')[0].value.trim() == "") {
                isValid = false;
                customAlert("Country is required.");
                plainValidation('#nationality');
                return isValid;
            }
            else if ($('#TimeZoneID')[0].value.trim() == "") {
                isValid = false;
                customAlert("Please select timezone from list.");
                plainValidation('#TimeZoneID');
                return isValid;
            }
            else if ($('#AccessStartDate')[0].value.trim() == "") {
                isValid = false;
                customAlert("Access start date is required.");
                plainValidation('#AccessStartDate');
                return isValid;
            }
            else if ($('#AccessStart')[0].value.trim() == "") {
                isValid = false;
                customAlert("Please select access start time.");
                plainValidation('#AccessStart');
                return isValid;
            }
            else if ($('#AccessStop')[0].value.trim() == "") {
                isValid = false;
                customAlert("Please select access stop time.");
                plainValidation('#AccessStop');
                return isValid;
            }
            else if ($('#ActiveProgYear')[0].value.trim() == "") {
                isValid = false;
                customAlert("Active program year is required.");
                plainValidation('#ActiveProgYear');
                return isValid;
            }

            else if ($('#DdlAccessType')[0].value.trim() == "") {
                isValid = false;
                customAlert("Please select access type from list.");
                plainValidation('#DdlAccessType');
                return isValid;
            }
            else if ($('#Yakkr600').val().trim() == "") {
                isValid = false;
                customAlert("Yakkr 600 days are required.");
                plainValidation('#Yakkr600');
                return isValid;
            }
            else if ($('#Yakkr601').val().trim() == "") {
                isValid = false;
                customAlert("Yakkr 601 Percentage is required.");
                plainValidation('#Yakkr601');
                return isValid;
            }

            else if(!$('input[name=AcceptanceProcess]').is(":checked"))
            {
                isValid = false;
                customAlert("Acceptance Process is required. ");
                return isValid;
            }

            else if (!$("input:radio[name='DocsStorage']").is(":checked")) {
                isValid = false;
                customAlert("Document storage is required. ");
                return isValid;
            }

            else if ($('#FSWYearlyVisit').val().trim() == "") {
                isValid = false;
                customAlert("FSW yearly visit is required.");
                plainValidation('#FSWYearlyVisit');
                return isValid;
            }
            else if (!$("input:radio[name='Transportation']").is(":checked")) {
                isValid = false;
                customAlert("Transportation information is required. ");
                return isValid;
            }
            else if (!$("input:radio[name='Areabreakdown']").is(":checked")) {
                isValid = false;
                customAlert("Area breakdown is required. ");
                return isValid;
            }
            else if (!$("input:radio[name='DivisionBreakDown']").is(":checked")) {
                isValid = false;
                customAlert("Division breakdown is required. ");
                return isValid;
            }

            else if ($('.fundclass').children().length <= 0) {
                isValid = false;
                customAlert("Please add fund and program types.");
                return isValid;
            }
            else if ($('#divclass').show()) {
                var Programtype = [];
                var Programtypeduplicate = [];

                $('.fundclass').children().each(function () {
                    if (!isValid)
                        return isValid;
                    var ProgCount = 0;
                    var PeopleServedcount = 0;
                    if ($(this).children().length > 0) {

                        if ($('[name="FundSourcedata[' + count1 + '].Acronym"]').val() == "" && isValid) {
                            isValid = false;
                            customAlert("Acronym is required.");
                            plainValidation($('[name="FundSourcedata[' + count1 + '].Acronym"]'));
                            return isValid;
                        }
                        if ($('[name="FundSourcedata[' + count1 + '].Description"]').val() == "" && isValid) {
                            isValid = false;
                            customAlert("Description is required.");
                            plainValidation($('[name="FundSourcedata[' + count1 + '].Description"]'));
                            return isValid;
                        }

                        //if ($('[name="FundSourcedata[' + count1 + '].Amount"]').val() == "" && isValid) {
                        //    isValid = false;
                        //    customAlert("Amount is required.");
                        //    plainValidation($('[name="FundSourcedata[' + count1 + '].Amount"]'));
                        //    return isValid;
                        //}

                        if ($('[name="FundSourcedata[' + count1 + '].ServiceQty"]').val() == "" && isValid) {
                            isValid = false;
                            customAlert("Funded slots is required.");
                            plainValidation($('[name="FundSourcedata[' + count1 + '].ServiceQty"]'));
                            return isValid;
                        }


                        if ($('[name="FundSourcedata[' + count1 + '].Date"]').val() == "" && isValid) {
                            isValid = false;
                            customAlert("Date is required.");
                            plainValidation($('[name="FundSourcedata[' + count1 + '].Date"]'));
                            return isValid;
                        }

                        if ($('[name="FundSourcedata[' + count1 + '].ProgramYear"]').val() == "0" && isValid) {
                            isValid = false;
                            customAlert("Program Year is required.");
                            plainValidation($('[name="FundSourcedata[' + count1 + '].ProgramYear"]'));
                            return isValid;
                        }

                        //if ($('[name="FundSourcedata[' + count1 + '].grantNo"]').val() == "" && isValid) {
                        //    isValid = false;
                        //    customAlert("GrantNo is required.");
                        //    plainValidation($('[name="FundSourcedata[' + count1 + '].grantNo"]'));
                        //    return isValid;
                        //}
                        //if ($('[name="FundSourcedata[' + count1 + '].nameGranteeDelegate"]').val() == "" && isValid) {
                        //    isValid = false;
                        //    customAlert("Grantee/Delegate is required.");
                        //    plainValidation($('[name="FundSourcedata[' + count1 + '].nameGranteeDelegate"]'));
                        //    return isValid;
                        //}
                    }

                    count1 = count1 + 1;

                });

                if(isValid)
                {
                    var itemobj = null;

                    var tdval = $('table#gridprogram> tbody > tr');

                    //for (var z = 0; z < tdval.length; z++) {
                    //    debugger;
                    //    var tmp00 = $(tdval[z]).html();
                    //    var inputCouy = $(tmp00).find('input[type=text]');
                    //    console.log(inputCouy);
                    //    for (var j = 0; j < inputCouy.length; j++) {
                    //        itemobj = $(inputCouy[j])[0].id;
                    //        if (itemobj.indexOf("Slots_") != -1) {
                    //            PeopleServedcount = PeopleServedcount + ($('#' + itemobj).val().trim() == "" ? 0 : parseInt($('#' + itemobj).val()));
                    //        }
                    //        if (itemobj.indexOf("__ProgramTypes") != -1) {
                    //            if ($('#' + itemobj).val().trim() != "")
                    //                Programtype.push($('#' + itemobj).val().toUpperCase());
                    //        }
                    //        if (itemobj.indexOf("__DivisionID") != -1) {
                    //            if ($('input[name=DivisionBreakDown]').prop("checked")) {
                    //                if ($('#' + itemobj).val() == "") {
                    //                    isValid = false;
                    //                    customprogAlert(itemobj);
                    //                    return isValid;
                    //                }
                    //            }
                    //        }
                    //        else {
                    //            if ($('#' + itemobj).val() == "" && $('#' + itemobj)[0].readOnly!=true) {
                    //                isValid = false;
                    //                customprogAlert(itemobj);
                    //                return isValid;
                    //            }
                    //        }
                    //    }
                    //}

                    if($(tdval).length>0)
                    {
                        Programtype=[];

                        $(tdval).each(function(m,row){

                            //  PeopleServedcount = 0;
                            var pTypes=$(row).find('td:eq(0)').children('input');

                            var pDes=$(row).find('td:eq(1)').children('input');
                            var pSlots=$(row).find('td:eq(3)').children('input');
                            var refProg=$(row).find('td:eq(4)').children();
                            var pDiv=$(row).find('td:eq(5)').children();


                            var pMinAge=$(row).find('td:eq(6)').children('input');

                            var pMaxAge=$(row).find('td:eq(7)').children('input');

                            var pStartDate=$(row).find('td:eq(8)').children('.program-start-date');
                            var pEndDate=$(row).find('td:eq(8)').children('.program-end-date');
                            var pCurrDate=$(row).find('td:eq(8)').children('.date-current-app');
                            var pFutureDate=$(row).find('td:eq(8)').children('.date-future-app');
                            var pTranDate=$(row).find('td:eq(8)').children('.trans-date');

                            if(pTypes.val()!='')
                            {
                                Programtype.push(pTypes.val().toUpperCase());
                            }
                            else{
                                isValid = false;
                                customAlert('Program Type is required');
                                plainValidation('#'+pTypes.attr('id')+'');
                                return isValid;
                            }

                            if (pDes.val()=='') {
                                isValid = false;
                                customAlert("Description is required. ");
                                plainValidation('#'+pDes.attr('id')+'');
                                return isValid;
                            }
                            else if (pSlots.val()=='') {
                                isValid = false;
                                customAlert("Funded Slots are required. ");
                                plainValidation('#'+pSlots.attr('id')+'');
                                return isValid;
                            }

                            else if(refProg.val()=='')
                            {
                                isValid = false;
                                customAlert("Reference Program is required. ");
                                plainValidation('#'+refProg.attr('id')+'');
                                return isValid;
                            }

                            else if (pDiv.val()=='') {
                                isValid = false;
                                customAlert("Division is required. ");
                                plainValidation('#'+pDiv.attr('id')+'');
                                return isValid;
                            }
                            else if (pMinAge.val()=='' && pMinAge[0].readOnly!=true) {
                                isValid = false;
                                customAlert("Minimum age is required. ");
                                plainValidation('#'+pMinAge.attr('id')+'');
                                return isValid;
                            }
                            else if (pMaxAge.val()=='' && pMaxAge[0].readOnly!=true) {
                                isValid = false;
                                customAlert("Maximum age is required. ");
                                plainValidation('#'+pMaxAge.attr('id')+'');
                                return isValid;
                            }
                                //else if (id.indexOf("programstartDate_") != -1) {
                                //    customAlert("Program start date is required. ");
                                //    plainValidation($('#' + id));
                                //}
                                //else if (id.indexOf("programendDate_") != -1) {
                                //    customAlert("Program end date is required. ");
                                //    plainValidation($('#' + id));
                                //}

                            else if (pStartDate.val()=='' || pEndDate.val()=='' || pCurrDate.val()==''|| pFutureDate.val()=='' || pTranDate.val()=='')
                            {
                                isValid = false;
                                customAlert("Program Date(s) are required. ");
                                $(row).find('td:eq(8)').find('a').css('background-color','pink');
                                $(row).find('td:eq(8)').find('a').focus();
                                return isValid;
                            }


                        });
                    }

                    else{

                        isValid=false;
                        customAlert('Please add program types');
                        return isValid;
                    }
                    //if (PeopleServedcount != 0) {
                    //    if (parseInt($('[name="FundSourcedata[' + count1 + '].ServiceQty"]').val()) != PeopleServedcount) {
                    //        isValid = false;
                    //        customAlert("Slots served must be equal to slots entered in programs.");
                    //        plainValidation($('[name="FundSourcedata[' + count1 + '].ServiceQty"]'));
                    //        return isValid;
                    //    }
                    //}
                    if (Programtype.length > 0) {
                        console.log(Programtype);
                        Programtypeduplicate = Programtype.sort();
                        console.log(Programtypeduplicate);
                        for (var i = 0; i < Programtypeduplicate.length - 1; i++) {
                            if (Programtypeduplicate[i + 1] == Programtypeduplicate[i]) {
                                Programtype = [];
                                Programtypeduplicate = [];
                                isValid = false;
                                customAlert("Program type cannot be duplicate in funds.");
                                return isValid;
                            }
                        }
                    }
                }


                if(isValid)
                {
                    $('#spinner').show();
                }
                else{
                    $('#spinner').hide();

                }

                //  $('#spinner').show();
                //Programtype = [];
                //Programtypeduplicate = [];




            }
            return isValid;
        }


        ///function for custom alert by id
        function customprogAlert(id) {

            if (id.indexOf("ProgType_") != -1) {
                customAlert("Program type is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("Desc_") != -1) {
                customAlert("Description is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("Slots_") != -1) {
                customAlert("Funded Slots are required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("Area") != -1) {
                customAlert("Area designation is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("Minage_") != -1 || id.indexOf("minage_") != -1) {
                customAlert("Minimum age is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("Maxage_") != -1) {
                customAlert("Maximum age is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("programstartDate_") != -1) {
                customAlert("Program start date is required. ");
                plainValidation($('#' + id));
            }
            else if (id.indexOf("programendDate_") != -1) {
                customAlert("Program end date is required. ");
                plainValidation($('#' + id));
            }

        }

        function EnableDisable() {
            if ($('#primaryEmail').is('[readonly]')) {
                $("#primaryEmail").removeAttr("readonly");
            }
            else {
                $("#primaryEmail").prop("readonly", true);
            }
        }

        function checkage(value, round) {
            isValiddob = true;

            if (isNaN(value.value)) {
                value.value = "";
            }
            return isValiddob;
        }


        function checkagemax(value) {
            isValiddob = true;
            if (isNaN(value.value)) {
                value.value = "";
            }

            return isValiddob;
        }

        function checkZipCode(inputTextObject) {

            if ($(inputTextObject).val().trim() != "") {
                var ret = true;
                var Zipcode = $(inputTextObject).val();
                var len = Zipcode.length;
                if ((isNaN(inputTextObject.value)) && (len < 2)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                else if (len < 2) {
                    $(inputTextObject).val('');
                    customAlert("Zip code length must be 2 digit. ");
                    var ret = false;
                }
                else if (isNaN(inputTextObject.value)) {
                    $(inputTextObject).val('');
                    customAlert("Zip code must be numeric. ");
                    var ret = false;
                }
                if (ret)
                    CheckAddress(1);
                return ret;
            }
            else {
                $('#City').find('option').remove();
                $('#State').val('');
                $('#County').val('');


            }
        }
        function CheckAddress(value) {
            var Zipcode = 0;
            if (value == 0)
                Zipcode = 0;
            else
                Zipcode = $('#zipCode').val();

            if ($('#zipCode').val().trim() != "") {

                $.ajax({
                    url: HostedDir + "/Agency/GetAddressByZipCode",
                    type: "POST",
                    data: {
                        Zipcode: Zipcode
                    },
                    dataType: "json",
                    secureuri: false,
                    async: false,
                    success: function (response) {

                        if (response.Zipcodelist != null && response.Zipcodelist.length > 0) {
                            var option = "";
                            for (var i = 0; i < response.Zipcodelist.length; i++) {
                                option = option + '<option value="' + response.Zipcodelist[i].City + '">' + response.Zipcodelist[i].City + '</option>';
                            }
                            $('#city').find('option').remove().end().append(option);
                            $('#city').val('');
                            $('#State').val(response.Zipcodelist[0].State);
                            $('#County').val(response.Zipcodelist[0].County);
                            $('#zipCode').val(response.Zipcodelist[0].Zipcode);
                        }
                        else {
                            $('#city').find('option').remove().end();
                            $('#city').val('');
                            $('#State').val('');
                            $('#ZipCode').val('');
                            $('#County').val('');
                            customAlert("Could not find zipcode details.");

                        }


                    }
                        , error: function (response) {
                            customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                        }
                });
            }





        }

        function ShowDiv() {
            var round = 0;
            var rowcount = $('#divclass').children().length;
            var numItems = $('.fundclass').length;
            round = numItems;
            $('#divclass').show();
            var programYearList=@Html.Raw(Json.Encode(Model.ProgramYearList));

            var selectstring='<select class="form-control" id="FundSourcedata_'+round+'__ProgramYear"  name="FundSourcedata[' + round + '].ProgramYear" tabindex="20">';

            if(programYearList.length>0){
                $.each(programYearList,function(k,progr){
                    selectstring+='<option value='+progr.Value+'>'+progr.Text+'</option>';
                })
            }

            selectstring+='</select>';

            var funddiv = '<div class="col-lg-12 col-xs-12 fund-background">'+
                '<div class="alert alert-info" role="alert" style="border-radius:unset;">'+
                '<strong>Note!&nbsp;</strong>Click on Submit after Add/Update of funds in this section.</div>'+
               '<div id="divedit_'+round+'" class="fundclass col-xs-12 col-lg-12" style="padding-top:20px;padding-bottom:20px;">'+
                '<div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group"><label for="email">Acronym <sup>*</sup> </label><input type="text" name="FundSourcedata[' + round + '].Acronym" id = "Acronym" Name = "Acronym" onkeypress="return onlyAlphaNumerics(event, this);" placeholder = "Acronym" maxlength="4" ' +
            'class="form-control"><input id ="FundSourceID' + round + '" type="hidden" value="" name="FundSourcedata[' + round + '].FundID" /></div>' +
            '</div> <div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group"> <label for="email">Description<sup>*</sup></label><input type="text" name="FundSourcedata[' + round + '].Description" id = "Description" class="form-control" placeholder="Description" maxlength="50" ' +
            'class="form-control"><input type="hidden" value="" name="FundSourcedata[' + round + '].Description" /></div> </div>' +
            '  <div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group">  <label for="pwd">Funded Slots<sup>*</sup></label><input type="text" class="form-control"  id = "ServiceQty" name="FundSourcedata[' + round + '].ServiceQty" placeholder = "Funded Slots" onblur="checkNumeric(this);" maxlength="11" > </div></div> '  +
            ' <div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group"><label for="pwd">Fund Date<sup>*</sup></label><input type="text" class="form-control"  id = "Date' + round + '" onblur="return Checkyearago(this);" name="FundSourcedata[' + round + '].Date" placeholder = "MM/DD/YYYY" maxlength="11" >  </div></div>'+
             '  <div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group"> <label for="email">Program Year<sup>*</sup></label>'+selectstring+
            '</div></div> ' +
            '<div class="col-xs-12"><p class="show-more" onclick="showHidemoreDiv(this);">Show<span class="more-text" style="color:#333;">More</span><span class="less-text" style="color:#333;">Less</span><span class="plus-ic"><i class="fa fa-plus-square"></i></span><span class="minus-ic"><i class="fa fa-minus-square"></i></span></p></div>' +
            '<div class="col-xs-12 show-div-sec show-section" style="padding:0;"><div class="col-lg-6 col-md-6 col-sm-12"> <div class="form-group"> <label for="email">Amount</label><input type="text" class="form-control"  id = "Amount" name="FundSourcedata[' + round + '].Amount"  placeholder = "Amount" onblur="checkIfNumericDigit(this);" maxlength="11" ></div></div>' +

            '<div class="col-lg-6 col-md-6 col-sm-12"> <div class="form-group"><label for="pwd">Duration</label><select class="form-control" id="FundSourcedata[' + round + '].Duration" name="FundSourcedata[' + round + '].Duration">' +
            ' <option value="1">1 Month</option><option value="2">2 Month</option><option value="3">3 Month</option><option value="4">4 Month</option> <option value="5">5 Month</option><option value="6">6 Month</option><option value="7">7 Month</option><option value="8">8 Month</option><option value="9">9 Month</option><option value="10">10 Month</option><option value="11">11 Month</option><option value="12">12 Month</option> </select></div></div>' +

            ' <div class="col-lg-6 col-md-6 col-sm-12"><div class="form-group"><label for="email">Funding Type</label><select class="form-control" id="FundSourcedata[' + round + '].fundingtype" name="FundSourcedata[' + round + '].fundingtype">' +
             ' <option value="1">County</option><option value="2">Fed</option><option value="3">Local</option><option value="4">Private</option> <option value="5">State</option></select></div></div>' +

          ' <div class="col-lg-6 col-md-6 col-sm-12"> <div class="form-group"> <label for="email">Grant No </label> <input type="text" class="form-control"  id = "grantNo" name="FundSourcedata[' + round + '].grantNo" placeholder = "Grant No" maxlength="11" ></div>  </div>' +
            ' <div class="col-lg-6 col-md-6 col-sm-12"> <div class="form-group"><label for="email">Grantee/Delegate</label> <input type="text" class="form-control" id = "nameGranteeDelegate" name="FundSourcedata[' + round + '].nameGranteeDelegate" placeholder = "Name of Grantee/Delegate" maxlength="11" ></div></div>' +
             '<div class="fundquestion" style="display:none;"><div  class="col-lg-12">    <h4 class="page-header">Funded Enrollment by Program Options  </h4>  </div><div class="row" id="FundQuestion">' +
             '<div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"> <label class="lablewidth" for="email"><strong>1.</strong> Center-based option (5 days per week) Full-day Enrollment </label>' +
              '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ1" class="form-control" style="width:100%;" maxlength="10" placeholder="Full-day Enrollment" type="text"></div></div></div>' +
               '<div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth fund-label" for="email"><strong>1.a</strong> Number available as full-working-day enrollment of children  </label>' +
               ' </div> <div class="col-lg-3 col-md-3 col-sm-3"><input  onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ2" class="form-control" style="width:104%;" maxlength="10" placeholder="Full Working Day" type="text"> </div><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth fund-label1" for="email"><strong>1.a.1</strong> Number available for the full-calendar-year of children</label>' +
              '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ3" class="form-control" maxlength="10" style="width:104%;" placeholder="Full Calendar Year" type="text">' +
               '</div></div>' +
            ' <div class="row" > <div class="col-lg-12"> <div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>2.</strong> Center-based option (5 days per week) Part-day Enrollment of children </label>' +
                '</div> <div class="col-lg-3 col-md-3 col-sm-3"> <input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ4" style="width:100%;" class="form-control" maxlength="10" placeholder="Part Day Enrollment" type="text"></div></div></div>' +
            ' <div class="col-lg-12"> <div class="col-lg-6 col-md-6 col-sm-6">  <label class="lablewidth fund-label" for="email"><strong>2.a</strong> Number in double sessions of children</label>' +
                '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ5" class="form-control" style="width:104%;" maxlength="10" placeholder="Double Sessions" type="text"></div><div class="row" ><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>3.</strong> Center-based option (4 days per week) Full-day Enrollment of children</label>' +
             ' </div>  <div class="col-lg-3 col-md-3 col-sm-3"> <input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ6" class="form-control" style="width:100%;" maxlength="10" placeholder="Full Day Enrollment" type="text">  </div>' +
            '</div></div><div class="row" > <div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>4.</strong> Center-based option (4 days per week) Part-day Enrollment  of children </label>' +
              '</div><div class="col-lg-3 col-md-3 col-sm-3"> <input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ7" class="form-control" style="width:100%;" maxlength="10" placeholder="Part Day Enrollment" type="text"></div>' +
            '</div></div> <div class="col-lg-12"> <div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth fund-label" for="email"><strong>4.a</strong> Number in double sessions of children </label>' +
              '</div> <div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ8" class="form-control" style="width:104%;" maxlength="10" placeholder="Double sessions" type="text"></div></div><div class="row" >  <div class="col-lg-12">' +
             '<div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>5.</strong> Home-based option of children </label></div><div class="col-lg-3 col-md-3 col-sm-3">' +
             '<input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ9" class="form-control" maxlength="10" style="width:100%;" placeholder="Home Based Option" type="text"></div></div></div><div class="row" ><div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6">' +
            ' <label class="lablewidth" for="email"><strong>6.</strong> Combination option of children</label></div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);"  name="FundSourcedata[' + round + '].FundQ10" style="width:100%;" class="form-control" maxlength="10" placeholder="Full-day Enrollment" type="text">' +
              '</div></div></div><div class="row" ><div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>7.</strong> Family child care option of children </label>' +
                '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);"  name="FundSourcedata[' + round + '].FundQ11"  class="form-control"  style="width:100%;" maxlength="10" placeholder="Child Care Option" type="text"></div></div></div><div class="col-lg-12">' +
                '<div class="col-lg-6 col-md-6 col-sm-6">  <label class="lablewidth fund-label" for="email"><strong>7.a</strong> Number available as full-working-day enrollment of children  </label>' +
                '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ12" style="width:104%;"  class="form-control" maxlength="10" placeholder="Full Working Day Enrollment" type="text"></div>' +
            '<div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth fund-label1" for="email"><strong>7.a.1</strong> Number available for the full-calendar-year of children </label>' +
              '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ13" style="width:104%;" class="form-control" maxlength="10" placeholder="Full-day Enrollment" type="text"></div></div><div class="row" ><div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>8.</strong> Locally designed option of children </label>' +
               '</div><div class="col-lg-3 col-md-3 col-sm-3"><input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ14" style="width:100%;" class="form-control" maxlength="10" placeholder="Locally Designed option" type="text"></div>' +
            '</div></div><div class="row" ><div class="col-lg-12">  <div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>9.</strong> Funded enrollment at child care partners in the center-based program option of children </label>' +
               '</div> <div class="col-lg-3 col-md-3 col-sm-3"> <input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ15" style="width:100%;" class="form-control" maxlength="10" placeholder="Center Based Program Option" type="text"></div>' +
            '</div></div><div class="row  Ehsshow" style="display:none;" ><div class="col-lg-12"><div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>10.</strong> Total number of pregnant women positions in funded enrollment of pregnant women </label>' +
              ' </div><div class="col-lg-3 col-md-3 col-sm-3"> <input onblur="return checkNumeric(this);" name="FundSourcedata[' + round + '].FundQ16" style="width:100%;" class="form-control" maxlength="10" placeholder="Funded Enrollment Of Pregnant Women" type="text"></div></div></div></div></div>'+
                '<div class="col-xs-12 col-lg-12 text-center"><button type="button" class="my-btn" onclick="return insertFunds(this);">Submit</button></div></div>';
            $('.fundappedClass').prepend(funddiv);

            $('#FundSourcedata[' + round + '].Duration').val('');
            $('#FundSourcedata[' + round + '].fundingtype').val('');
            $('#FundSourcedata[' + round + '].fundsource').val('');
            $('#FundSourceID' + round).val(round);
            $('#trFundSourceID' + round + '0').val(round);
            $("button[id^='btnExitClassroom']").click(function () {
                $('#divclass').hide();
            });
            var dateToday = new Date();
            dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
            $("input[id^='Date']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    changeMonth: true,
                    changeYear: true,
                    minDate: dateToday
                });
            });

            $("input[id^='programstartDate']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday
                });
            });

            $("input[id^='programendDate']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday
                });
            });
            $("input[id^='ProgramYear']").each(function () {
                $(this).mask("99-99", { placeholder: 'YY-YY' });
            });
            $("input[id^='ProgramStartTime']").each(function () {
                $(this).timepicker({ 'timeFormat': 'h:i A' });
            });
            $("input[id^='ProgramEndTime']").each(function () {
                $(this).timepicker({ 'timeFormat': 'h:i A' });
            });




            $("input[id^='programstartDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("input[id^='programendDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("input[id^='Date']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            var selRefProgID = 'ReferenceProg' + round + '0';
            var model = @Html.Raw(Json.Encode(@ViewBag.RefList))
            BindDDLRefList(model, selRefProgID);
        }

        function BindDDLRefList(reflst, objID) {

            var str = "";
            for (var i = 0; i < reflst.length; i++) {
                str += "<option value='" + reflst[i].Id + "' selected='selected'>" + reflst[i].Name + "</option>";
            }
            $("#" + objID).append(str);
        }

        @*function AddProgram(value, fundsourceID) {
            var Countgrd = $(value).attr("accesskey").substring($(value).attr("accesskey").toString().indexOf("[") + 1, $(value).attr("accesskey").toString().indexOf("]"));
            var prowcount = $('#gridprogram_' + Countgrd + ' > tbody').children().length;
            var rounds = prowcount;
            var divround = fundsourceID;
            var str = "";
            if ($(value).attr("accesskey")) {
                var FundSourceProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].FundID";
                var ProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramID"
                var ProgramTypes = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramTypes";
                var Description = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Description";
                var PIRReport = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].PIRReport";
                var Slots = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Slots";
                var ReferenceProg = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ReferenceProg";
                var Area = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Area";
                var MinAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MinAge";
                var MaxAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MaxAge";
                var ProgramStartDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartDate";
                var ProgramEndDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndDate";
                var ProgramStartTime = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartTime";
                var ProgramEndTime = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndTime";

                var tr = '<tr id=' + divround + '' + rounds + '><td><input style="width:100%;" id="ProgType_' + divround + '' + rounds + '" class = "form-control validate1" name=' + ProgramTypes + ' type="text"  maxlength="5"></td>' +
                    '<td><input style="width:100%;" id="Desc_' + divround + '' + rounds + '" class = "form-control validateDesc2" name=' + Description + ' type="text"  ></td> ' +
                    '<td><input id="PIRReport_' + divround + '' + rounds + '" type="checkbox"  value="true" name=' + PIRReport + ' data-val="true"  class="chcktbl"  style="width:70%;" /></td> ' +
                    '<td><input style="width:100%;" onblur="checkNumeric(this);" id="Slots_' + divround + '' + rounds + '" class = "form-control validateSlot3" name=' + Slots + ' type="text"  ></td> ' +
                    '<td class="empty_setpro"><select  id="ReferenceProg' + divround + '' + rounds + '" onchange="showCheckboxSecond(this,' + divround + ',' + rounds + ');" class = "form-control" name=' + ReferenceProg + ' style="width:80px;" ></select></td>' +
                    '<td class="process_art"><input style="width:100%;" maxlength="50" id="Area' + divround + '' + rounds + '" class = "form-control" name=' + Area + ' type="text"  ></td>' +
                    '<td class="process_art"><input style="width:100%;"  maxlength="2" id="minage_' + divround + '' + rounds + '"  onblur="checkage(this);" class = "form-control validateMin4" name=' + MinAge + ' type="text" id="minage" maxlength="1" onblur="checkage(this);"></td>' +
                    '<td class="process_art"><input style="width:100%;" maxlength="2" id="Maxage_' + divround + '' + rounds + '"  onblur="checkagemax(this);" class = "form-control validateMax5" type="text" id="Pnotes" data-val="true" name=' + MaxAge + '  maxlength="1" ></td>' +
                   '<td><a style="color:#295b8f;cursor:pointer;text-decoration:underline;" data-toggle="modal" data-target="#myModalagency">Add Date(s)</a></td>' +
                    '<td><a style="color:#295b8f;cursor:pointer;text-decoration:underline;" data-toggle="modal" data-target="#myModelFund">Add Fund(s)</a></td>' +
                     '<td class="process_sec"><select class="form-control" style = "width:80px;" id="FundSourcedata[' + divround + '].progtypelist[' + rounds + '].ProgramID" name="FundSourcedata[' + divround + '].progtypelist[ ' + rounds + '].ProgramID"> <option value="0">Active</option>' +
                    ' <td class="process_tashbox"><a accesskey="0" onclick="RemoveProg(this);" style="cursor:pointer;"><i class="fa fa-trash" aria-hidden="true" title="Delete Program Type"></i></a> </td>' +
                   '<td style="display:none;"> <input id ="trFundSourceID' + divround + '' + rounds + '" type="hidden" value="" name=' + FundSourceProgID + ' />' +
                   ' <input id ="trProgID' + divround + '' + rounds + '" type="hidden" value="" name=' + ProgID + ' /></td></tr>';
                console.log(tr);
                $('#gridprogram_' + Countgrd + ' > tbody').append(tr);
                //$('#trFundSourceID' + divround + '' + rounds).val(fundsourceID);
                //$('#trProgID' + divround + '' + rounds).val(rounds);
                var selRefProgID = 'ReferenceProg' + divround + '' + rounds;
                var model = @Html.Raw(Json.Encode(@ViewBag.RefList))
        BindDDLRefList(model, selRefProgID);
                $('#gridprogram_ > tbody tr').each(function () {
                    // var y = $(this).find('td:eq(8) :input[type="text"]').mask("MM/DD/YYYY");
                    // var z = $(this).find('td:eq(9) :input[type="text"]').mask("MM/DD/YYYY");
                    var x = $(this).find('td:eq(10) :input[type="text"]').timepicker({ 'timeFormat': 'h:i A' });
                    var w = $(this).find('td:eq(11) :input[type="text"]').timepicker({ 'timeFormat': 'h:i A' });
                });
                //$("input[id^='minage']").each(function () {
                //    checkage(this);
                //});
                //$("input[id^='maxage']").each(function () {
                //    checkagemax(this);
                //});
                var dateToday = new Date();
                dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
                $("input[id^='programstartDate_']").each(function () {
                    $(this).datetimepicker({
                        timepicker: false,
                        format: 'm/d/Y',
                        minDate: dateToday,
                    });
                });

                $("input[id^='programendDate_']").each(function () {
                    $(this).datetimepicker({
                        timepicker: false,
                        format: 'm/d/Y',
                        minDate: dateToday,
                    });
                });
                $("input[id^='programstartDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
                $("input[id^='programendDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

                $('#gridprogram_ > tbody tr:last').find('td:eq(0) :input').val("");
                $("button[id^='btnExitClassroom']").click(function () {
                    $('#divclass').hide();
                });
                //for (var i = 0; i < model.length; i++) {
                //    str = "<option value='" + model[i].Id + "' selected='selected'>" + model[i].Name + "</option>";
                //    $("select[id^='ReferenceProg'+rounds+']").append(str);
                //}
            }
        }*@


        function AddProgram(value) {
            debugger;
            var Countgrd = $(value);
            var prowcount = $('#gridprogram > tbody').children().length;
            var rounds = prowcount;
            // var divround = fundsourceID;
            var str = "";

            var FundSourceProgID = "ProgramTypeList[" + rounds + "].FundID";
            var ProgID = "ProgramTypeList[" + rounds + "].ProgramID"
            var ProgramTypes = "ProgramTypeList[" + rounds + "].ProgramTypes";
            var Description = "ProgramTypeList[" + rounds + "].Description";
            var PIRReport = "ProgramTypeList[" + rounds + "].PIRReport";
            var Slots = "ProgramTypeList[" + rounds + "].Slots";
            var ReferenceProg = "ProgramTypeList[" + rounds + "].ReferenceProg";
            var division ="ProgramTypeList[" + rounds + "].DivisionID";
            var MinAge ="ProgramTypeList[" + rounds + "].MinAge";
            var MaxAge = "ProgramTypeList[" + rounds + "].MaxAge";
            var ProgramStartDate = "ProgramTypeList[" + rounds + "].ProgramStartDate";
            var ProgramEndDate ="ProgramTypeList[" + rounds + "].ProgramEndDate";
            var ProgramStartTime ="ProgramTypeList[" + rounds + "].ProgramStartTime";
            var ProgramEndTime = "ProgramTypeList[" + rounds + "].ProgramEndTime";

            var divList = @Html.Raw(Json.Encode(Model.DivisionsList));
            var progAList=@Html.Raw(Json.Encode(Model.ProgramTypeList));
            var divstring='';
            var progAString="";

            if(divList.length>0)
            {
                if(divList.length==1)
                {
                    divstring+='<input style="width:100%;" maxlength="50" value="1" id="ProgramTypeList_'  + rounds + '__DivisionID" class = "form-control" name=' + division + ' type="text">';

                }
                else{

                    divstring+='<select id="ProgramTypeList_'+rounds+'__DivisionID" name="ProgramTypeList['+rounds+'].DivisionID" style="width:100%;height:34px;">'

                    $.each(divList,function(l,div){

                        divstring+='<option value='+div.Value+'>'+div.Text+'</option>';
                    });
                    divstring+='</select>';

                }
            }
            else
            {
                divstring+='<input style="width:100%;" maxlength="50" value="1" id="ProgramTypeList_'  + rounds + '__DivisionID" class = "form-control" name=' + division + ' type="text">';
            }

            if(progAList.length>0)
            {
                progAString+='<select class="form-control" id="ProgramTypeList_'+rounds+'__ProgramTypeAssociation" name="ProgramTypeList['+rounds+'].ProgramTypeAssociation" style="width:100%">';
                progAString+='<option value=""></option>';
                $.each(progAList,function(m,progA){

                    progAString+='<option value='+progA.ProgramID+'>'+progA.ProgramTypes+'</option>';
                });

                progAString+='</select>';
            }


            var tr = '<tr id='+ rounds + '><td><input style="width:100%;" id="ProgType_'+ rounds + '" class = "form-control validate1" name=' + ProgramTypes + ' type="text"  maxlength="5"></td>' +
                '<td><input style="width:100%;" id="Desc_'+ rounds + '" class = "form-control validateDesc2" name=' + Description + ' type="text"  ></td> ' +
                '<td><input id="PIRReport_'+ rounds + '" type="checkbox"  value="true" name=' + PIRReport + ' data-val="true"  class="chcktbl"  style="width:70%;" /></td> ' +
                '<td><input style="width:100%;" onblur="checkNumeric(this);" id="Slots_'+ rounds + '" class = "form-control validateSlot3" name=' + Slots + ' type="text"  ></td> ' +
                '<td class="empty_setpro"><select  id="ReferenceProg'+ rounds + '" onchange="showCheckboxSecond(this,'+ rounds + ');" class = "form-control" name=' + ReferenceProg + ' style="width:80px;" ></select></td>' +
                '<td class="process_art">'+divstring+'</td>' +
                '<td class="process_art"><input style="width:100%;"  maxlength="2" id="minage_' + rounds + '"  onblur="checkage(this);" class = "form-control validateMin4" name=' + MinAge + ' type="text" id="minage" maxlength="1" onblur="checkage(this);"></td>' +
                '<td class="process_art"><input style="width:100%;" maxlength="2" id="Maxage_'+ rounds + '"  onblur="checkagemax(this);" class = "form-control validateMax5" type="text" id="Pnotes" data-val="true" name=' + MaxAge + '  maxlength="1" ></td>' +
               '<td>'+
               '<input type="hidden" id="ProgramTypeList['+rounds+'].programstartdate" value="" class="program-start-date" name="ProgramTypeList['+rounds+'].programstartdate">'+
               '<input type="hidden" id="ProgramTypeList['+rounds+'].programenddate" value="" class="program-end-date" name="ProgramTypeList['+rounds+'].programenddate">'+
               '<input type="hidden" id="ProgramTypeList['+rounds+'].LastDateCurrentApplication" value="" class="date-current-app" name="ProgramTypeList['+rounds+'].LastDateCurrentApplication">'+
                 '<input type="hidden" id="ProgramTypeList['+rounds+'].DateFutureApplication" value="" class="date-future-app" name="ProgramTypeList['+rounds+'].DateFutureApplication">'+
               '<input type="hidden" id="ProgramTypeList['+rounds+'].TransitionDate" value="" class="trans-date" name="ProgramTypeList['+rounds+'].TransitionDate">'+
               '<a style="color:#295b8f;cursor:pointer;text-decoration:underline;" onclick="addProgDatesConfirm(this);">Add Date(s)</a></td>' +
                '<td style="text-align:center;"><a style="color:#295b8f;cursor:pointer;text-decoration:underline;" onclick="addFunds(this);" accesskey="">Fund(s)</a><input class="fund-id" id="ProgramTypeList_'+rounds+'_FundID" name="ProgramTypeList['+rounds+'].FundID" type="hidden" value=""></td>' +
                '<td style="text-align:center;">'+progAString+'</td>'+
                 '<td class="process_sec"><select class="form-control" style = "width:80px;" id="ProgramTypeList[' + rounds + '].ProgramID" name="ProgramTypeList[ ' + rounds + '].ProgramID"> <option value="0">Active</option>' +
               '<td style="display:none;"> <input id ="trFundSourceID' + rounds + '" type="hidden" value="" name=' + FundSourceProgID + ' />' +
               ' <input id ="trProgID'  + rounds + '" type="hidden" value="" name=' + ProgID + ' /></td></tr>';
            console.log(tr);
            $('#gridprogram > tbody').append(tr);
            var selRefProgID = 'ReferenceProg'+ rounds;
            var model = @Html.Raw(Json.Encode(@ViewBag.RefList))
            BindDDLRefList(model, selRefProgID);
            $('#gridprogram > tbody tr').each(function () {
                var x = $(this).find('td:eq(10) :input[type="text"]').timepicker({ 'timeFormat': 'h:i A' });
                var w = $(this).find('td:eq(11) :input[type="text"]').timepicker({ 'timeFormat': 'h:i A' });
            });

            var dateToday = new Date();
            dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
            $("input[id^='programstartDate_']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday,
                });
            });

            $("input[id^='programendDate_']").each(function () {
                $(this).datetimepicker({
                    timepicker: false,
                    format: 'm/d/Y',
                    minDate: dateToday,
                });
            });
            $("input[id^='programstartDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });
            $("input[id^='programendDate']").mask("99/99/9999", { placeholder: 'MM/DD/YYYY' });

            $('#gridprogram_ > tbody tr:last').find('td:eq(0) :input').val("");
            $("button[id^='btnExitClassroom']").click(function () {
                $('#divclass').hide();
            });


        }

        function showCheckbox(value) {
            var round = 0;
            if ($(value).val() == "4") {
                $(value).closest('tr').find("td:eq(6)").find("input[type=text]").val('');
                $(value).closest('tr').find("td:eq(6)").find("input[type=text]")[0].readOnly = true;
                $(value).closest('tr').find("td:eq(7)").find("input[type=text]").val('');
                $(value).closest('tr').find("td:eq(7)").find("input[type=text]")[0].readOnly = true;

                // $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").removeAttr("disabled");
            }
            else {

                $(value).closest('tr').find("td:eq(6)").find("input[type=text]")[0].readOnly = false;
                $(value).closest('tr').find("td:eq(7)").find("input[type=text]")[0].readOnly = false;
                // $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").attr("disabled", "disabled");
                // $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").prop("checked", false);
            }
            var show = 0;
            var showehs = 0;
            $(value).closest('table').find("tr td:nth-child(5)").each(function () {
                if ($(this).find('select').val() == "1" || $(this).find('select').val() == "2")
                    show = 1;
                if ($(this).find('select').val() == "1")
                    showehs = 1;
            });
            if (show == 1) {

                $(value).closest('table').parent().parent().parent().children("div.fundquestion").show();
                if (showehs == 1)
                    $(value).closest('table').parent().parent().parent().children("div.fundquestion").children("div.Ehsshow").show();
                else
                    $(value).closest('table').parent().parent().parent().children("div.fundquestion").children("div.Ehsshow").hide();


            }
            else {
                $(value).closest('table').parent().parent().parent().children("div.fundquestion").hide();

                $(value).closest('table').parent().parent().parent().children("div.fundquestion").children().find("input[type=text]").each(function () {
                    $(this).val("");
                });


            }
        }


        function showCheckboxSecond(value, rounds) {
            var round = 0;
            if ($(value).val() == "4") {
                $('[name="ProgramTypeList[' + rounds + '].MinAge"]').val("");
                $('[name="ProgramTypeList[' + rounds + '].MinAge"]')[0].readOnly = true;
                $('[name="ProgramTypeList[' + rounds + '].MaxAge"]').val("");
                $('[name="ProgramTypeList[' + rounds + '].MaxAge"]')[0].readOnly = true;
                // $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").removeAttr("disabled");

            }
            else {
                // $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").attr("disabled", "disabled");
                //  $(value).closest('tr').find("td:eq(11)").find("input[type=checkbox]").prop("checked", false);
                $('[name="ProgramTypeList[' + rounds + '].MinAge"]')[0].readOnly = false;
                $('[name="ProgramTypeList[' + rounds + '].MaxAge"]')[0].readOnly = false;
            }

            if ($('input[name=DivisionBreakDown]').is(':checked')) {
                if ($('input[name=DivisionBreakDown]:checked').val() == "2") {
                    $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val(1).prop('disabled', true);
                }
                else {
                    $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val('').prop('disabled', false);

                }
            }
            else {
                $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val('').prop('disabled', true);

            }

            var show = 0;
            var showehs = 0;
            $(value).closest('table').find("tr td:nth-child(5)").each(function () {
                if ($(this).find('select').val() == "1" || $(this).find('select').val() == "2")
                    show = 1;
                if ($(this).find('select').val() == "1")
                    showehs = 1;
            });
            if (show == 1) {

                var s = $(value).closest('table').parent().parent().parent().children("div.fundquestion").show();
                if (showehs == 1)
                    $(value).closest('table').parent().parent().parent().children("div.fundquestion").children("div.Ehsshow").show();
                else
                    $(value).closest('table').parent().parent().parent().children("div.fundquestion").children("div.Ehsshow").hide();


            }
            else {
                $(value).closest('table').parent().parent().parent().children("div.fundquestion").hide();
                $(value).closest('table').parent().parent().parent().children("div.fundquestion").children().find("input[type=text]").each(function () {
                    $(this).val("");
                });
            }


            if ($('input[name=Areabreakdown]').is(':checked')) {
                if ($('input[name=Areabreakdown]:checked').val() == "2") {
                    $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val(1).prop('disabled', true);
                    $(value).closest('tr').find('td:eq(5)').find('input[type=text]').prop('disabled', true);
                }
                else {
                    $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val('').prop('disabled', false);

                }
            }
            else {
                $(value).closest('tr').find('td:eq(5)').find('input[type=text]').val('').prop('disabled', true);

            }

        }

        var datesMessage='<h4 style="margin-bottom:20px;">Please have the following dates available with you. </h4>\
                <p>1. Program Start Date</p>\
                <p>2. Program End Date</p>\
                 <p>3. Last Date to Enter Application in Current Year</p>\
    <p>4. Date to Enter New Future Application</p>\
    <p>5. Transition Start Date</p>\
       </p><h4 style="margin-top:20px;">Click <b>OK</b> to proceed.</h4>';

        function addProgDatesConfirm(ele)
        {
            BootstrapDialog.show({

                title:"Confirmation",
                message:datesMessage,
                buttons: [{
                    label: 'Cancel',
                    action: function(dialog) {
                        dialog.close();
                    }
                }, {
                    label: 'Ok',
                    action: function(dialog) {
                        dialog.close();
                        addDates(ele);
                    }
                }]


            });
        }


        function RemoveProg(value) {
            var rounds = 1;
            var table = $(value).closest('table');
            var Length = $(value).closest('tr').find('td:eq(0) :input[type="text"]').attr("name").indexOf("[");
            var LengthTotal = $(value).closest('tr').find('td:eq(0) :input[type="text"]').attr("name").indexOf("]");
            var divround = $(value).closest('tr').find('td:eq(0) :input[type="text"]').attr("name").substr(Length + 1, (LengthTotal - 1) - Length);
            if ($(value).attr("accesskey") != 0) {
                if ($(value).closest('table').find('tbody > tr').length > 1) {
                    BootstrapDialog.confirm('You are about to delete the Program Type, Click OK to Proceed.', function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/SuperAdmin/DeleteProgA",
                                type: "POST",
                                data: {
                                    progId: $(value).attr("accesskey"),
                                    Agencyid: $('#agencyId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {
                                    if (response == 1) {
                                        customAlert("Record removed successfully. ");
                                        rounds = 0;
                                        $(value).closest('tr').remove();


                                        var show = 0;
                                        $(table).find("tr td:nth-child(5)").each(function () {
                                            if ($(this).find('select').val() == "1" || $(this).find('select').val() == "2")
                                                show = 1;
                                        });

                                        if (show == 0) {

                                            $(table).parent().parent().parent().children("div.fundquestion").hide();
                                            $(table).parent().parent().parent().children("div.fundquestion").children().find("input[type=text]").each(function () {
                                                $(this).val("");
                                            });
                                        }
                                        $(table).find('tbody > tr').each(function () {
                                            var FundSourceProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].FundID";
                                            var ProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramID"
                                            var ProgramTypes = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramTypes";
                                            var Description = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Description";
                                            var PIRReport = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].PIRReport";
                                            var Slots = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Slots";
                                            var ReferenceProg = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ReferenceProg";
                                            var Area = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Area";
                                            var MinAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MinAge";
                                            var MaxAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MaxAge";
                                            var ProgramStartDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartDate";
                                            var ProgramEndDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndDate";
                                            var ProgStatus = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgStatus";
                                            var Hreaview = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].healthreview";
                                            $(this).find('td:eq(0) :input[type="text"]').attr('name', ProgramTypes);
                                            $(this).find('td:eq(1) :input[type="text"]').attr('name', Description);
                                            $(this).find('td:eq(2)').find(':input').attr('name', PIRReport);
                                            $(this).find('td:eq(3) :input[type="text"]').attr('name', Slots);
                                            $(this).find('td:eq(4)').find('select').attr('name', ReferenceProg);
                                            $(this).find('td:eq(5) :input[type="text"]').attr('name', Area);
                                            $(this).find('td:eq(6) :input[type="text"]').attr('name', MinAge);
                                            $(this).find('td:eq(7) :input[type="text"]').attr('name', MaxAge);
                                            $(this).find('td:eq(8) :input[type="text"]').attr('name', ProgramStartDate);
                                            $(this).find('td:eq(9) :input[type="text"]').attr('name', ProgramEndDate);
                                            $(this).find('td:eq(10)').find('select').attr('name', ProgStatus);
                                            $(this).find('td:eq(11) :input[type="checkbox"]').attr('name', Hreaview);

                                            $(this).find('td:eq(13)').children().eq(1).attr("name", ProgID);
                                            $(this).find('td:eq(13)').children().eq(2).attr("name", FundSourceProgID);

                                            rounds = rounds + 1;
                                        });

                                    }
                                    if (response == 2) {
                                        customAlert("Cannot delete record. Seats already assigned.");
                                    }
                                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
                            });
                        }
                    });
                }
                else
                    customAlert("Program type grid can't be blank.");
            }
            else {
                if ($(value).closest('table').find('tbody > tr').length > 1) {
                    rounds = 0;
                    $(value).closest('tr').remove();



                    var show = 0;
                    $(table).find("tr td:nth-child(5)").each(function () {
                        if ($(this).find('select').val() == "1" || $(this).find('select').val() == "2")
                            show = 1;
                    });
                    if (show == 0) {

                        $(table).parent().parent().parent().children("div.fundquestion").hide();
                        $(table).closest('table').parent().parent().parent().children("div.fundquestion").children().find("input[type=text]").each(function () {
                            $(this).val("");
                        });
                    }



                    $(table).find('tbody > tr').each(function () {
                        var FundSourceProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].FundID";
                        var ProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramID"
                        var ProgramTypes = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramTypes";
                        var Description = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Description";
                        var PIRReport = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].PIRReport";
                        var Slots = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Slots";
                        var ReferenceProg = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ReferenceProg";
                        var Area = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Area";
                        var MinAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MinAge";
                        var MaxAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MaxAge";
                        var ProgramStartDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartDate";
                        var ProgramEndDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndDate";
                        var ProgStatus = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgStatus";
                        var Hreaview = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].healthreview";
                        $(this).find('td:eq(0) :input[type="text"]').attr('name', ProgramTypes);
                        $(this).find('td:eq(1) :input[type="text"]').attr('name', Description);
                        $(this).find('td:eq(2)').find(':input').attr('name', PIRReport);
                        $(this).find('td:eq(3) :input[type="text"]').attr('name', Slots);
                        $(this).find('td:eq(4)').find('select').attr('name', ReferenceProg);
                        $(this).find('td:eq(5) :input[type="text"]').attr('name', Area);
                        $(this).find('td:eq(6) :input[type="text"]').attr('name', MinAge);
                        $(this).find('td:eq(7) :input[type="text"]').attr('name', MaxAge);
                        $(this).find('td:eq(8) :input[type="text"]').attr('name', ProgramStartDate);
                        $(this).find('td:eq(9) :input[type="text"]').attr('name', ProgramEndDate);
                        $(this).find('td:eq(10)').find('select').attr('name', ProgStatus);
                        $(this).find('td:eq(11) :input[type="checkbox"]').attr('name', Hreaview);


                        rounds = rounds + 1;
                    });

                }
                else
                    customAlert("Program type grid can't be blank.");
            }
        }


        //function drawproglist() {
        //    getproglist();
        //    bindGridProg(listProg, $("#gridprogram_' + round + '").find('tr')[0].cells.length);
        //}
        function getproglist() {

            $.ajax({

                url: HostedDir + "/Agency/listProgDetails",
                type: "POST",
                dataType: "json",
                data: {
                    // ProgramID: $('#ProgramID').val(),
                    FundId: $('#FundID').val()  //$('#FundSourceID').val()
                },
                secureuri: false,
                async: false,
                success: function (data) {
                    getProgData(data);

                }
                , error: function (response) {
                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                }
            });

        }
        function getPhoneData(dataProg) {

            listProg = dataProg;
        }



        function addDates(ele)
        {
            var $this=$(ele);
            var progStartDate=$this.siblings('.program-start-date').val();
            var progEndDate=$this.siblings('.program-end-date').val();
            var currentLastDate=$this.siblings('.date-current-app').val();
            var futureAppDate=$this.siblings('.date-future-app').val();
            var transDate=$this.siblings('.trans-date').val();
            var $modal=$('#myModalagency');
            $modal.find('#txtProgStartDate').val(progStartDate);
            $modal.find('#txtProgEndDate').val(progEndDate);
            $modal.find('#txtLastCurrentDate').val(currentLastDate);
            $modal.find('#txtFutureAppDate').val(futureAppDate);
            $modal.find('#txtTransitionDate').val(transDate);
            var rowId=$this.closest('tr').attr('id');
            $modal.attr('element',rowId);
            //$modal.modal('show');

            $modal.modal({
                show: true,
                backdrop: 'static'
            });
        }


        function insertFunds(ele)
        {
            debugger;
            cleanValidation();
            var fundBtn=$(ele);
            var fundClass=fundBtn.closest('.fundclass');
            var index=fundClass.attr('id').split('_')[1];
            var acronym=fundClass.find('input[name="FundSourcedata['+index+'].Acronym"]');
            var description=fundClass.find('input[name="FundSourcedata['+index+'].Description"]');
            var fundedSlots=fundClass.find('input[name="FundSourcedata['+index+'].ServiceQty"]');

            var fundedDate=fundClass.find('input[name="FundSourcedata['+index+'].Date"]');

            var progYear=fundClass.find('select[name="FundSourcedata['+index+'].ProgramYear"]');
            var fundStatus=fundClass.find('select[name="FundSourcedata['+index+'].FundStatus"]');


            var amt=fundClass.find('input[name="FundSourcedata['+index+'].Amount"]');

            var duration=fundClass.find('select[name="FundSourcedata['+index+'].Duration"]');

            var fundType=fundClass.find('select[name="FundSourcedata['+index+'].fundingtype"]');
            var grantNo=fundClass.find('input[name="FundSourcedata['+index+'].grantNo"]');
            var granteeDelegate=fundClass.find('input[name="FundSourcedata['+index+'].nameGranteeDelegate"]');

            var fundID=fundClass.find('input[name="FundSourcedata['+index+'].FundID"]');
            if(acronym.val()=='')
            {
                plainValidation(acronym);
                customAlert('Acronym is required');
                return false;
            }
            if(description.val()=='')
            {
                plainValidation(description);
                customAlert('Description is required');
                return false;
            }
            if(fundedSlots.val()=='')
            {
                plainValidation(fundedSlots);
                customAlert('Funded Slot is required');
                return false;

            }
            if(fundedSlots.val()!='' &&  !checkNumeric(fundedSlots))
            {
                plainValidation(fundedSlots);
                customAlert("Only numeric value allowed");
                return false;
            }
            if(fundedDate.val()=='')
            {
                plainValidation(fundedDate);
                customAlert("Funded Date is required");
                return false;
            }

            if(progYear.val()=='0')
            {
                plainValidation(progYear);
                customAlert("Program Year is required");
                return false;
            }


            var fund={
                'Acronym':acronym.val(),
                'Description':description.val(),
                'ServiceQty':fundedSlots.val(),
                'Date':fundedDate.val(),
                'ProgramYear':progYear.val(),
                'FundStatus':fundStatus.val(),
                'Amount':amt.val(),
                'Duration':duration.val(),
                'fundingtype':fundType.val(),
                'grantNo':grantNo.val(),
                'nameGranteeDelegate':granteeDelegate.val(),
                'AgencyID':$('#agencyId').val(),
                'FundID':fundID.val()
            };

            $.ajax({
                url:'/Agency/AddFunds',
                type:'post',
                datatype:'json',
                data:fund,
                beforeSend:function(){$('#spinner').show()},
                success:function(data)
                {
                    $('#spinner').hide();
                    if(data)
                    {

                        if(parseInt(fundID.val())>0)
                        {
                            customAlert('Fund updated successfully');
                        }
                        else{
                            customAlert('Fund added successfully');
                        }
                        $('#spinner').show();
                        window.setTimeout(function(){
                            window.location.reload(true);
                        },1500);
                    }

                    else
                    {
                        $('#spinner').hide();

                        customAlert('Some error occured.Please,try again later');
                    }
                },
                error:function(data)
                {
                    $('#spinner').hide();

                    customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);

                },
                complete:function(data)
                {
                    $('#spinner').hide();

                }
            });

            //fund.Acronym=fundClass.
        }


        function addFunds(ele)
        {
            debugger;
            var $this=$(ele);
            var fundID=$this.siblings('input').val();
            var fundModal=$("#myModelFund");
            var model = @Html.Raw(Json.Encode(@ViewBag.FundSourceData));
            console.log(model);
            var appendText='';

            var fundarray=fundID.split(',');

            if(model.length>0)
            {
                $.each(model,function(i,fund){
                    debugger;
                    if(fundarray.indexOf(fund.FundID.toString())>-1)
                    {
                        appendText+='<div class="fa-checkbox">'+
                         '<input type="checkbox" id="checkbox_'+i+'" name="fundcheckbox"   value="'+fund.FundID+'" style="display:none;" class="abtCheckbox" checked>'+
                         '<label for="checkbox_'+i+'">'+fund.Acronym+'</label>'+
                     '</div>';
                    }
                    else{
                        appendText+='<div class="fa-checkbox">'+
                        '<input type="checkbox" id="checkbox_'+i+'" name="fundcheckbox"   value="'+fund.FundID+'" style="display:none;" class="abtCheckbox">'+
                        '<label for="checkbox_'+i+'">'+fund.Acronym+'</label>'+
                    '</div>';
                    }




                });


            }

            $('#myModelFund').find('.modal-body').html(appendText);

            fundModal.attr('element',$this.closest('tr').index());

            fundModal.modal('show');

        }

        function bindGridProg(dataProgDetail, num_cols) {

            rounds = 0;
            divround = 0;
            $('#gridprogram_' + round + ' > tbody > tr').remove();
            if (dataProgDetail.listProg.length == 0) {
                $('#divP1').show();
            }
            else {
                $('#divP1').hide();
                var tbody = $('#gridprogram_' + round + ' > tbody');
                for (var i = 0; i < dataProgDetail.listProg.length; i++) {

                    var FundSourceProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].FundID";
                    var ProgID = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramID"
                    var ProgramTypes = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramTypes";
                    var Description = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Description";
                    var PIRReport = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].PIRReport";
                    var Slots = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Slots";
                    var ReferenceProg = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ReferenceProg";
                    var Area = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].Area";
                    var MinAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MinAge";
                    var MaxAge = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].MaxAge";
                    var ProgramStartDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartDate";
                    var ProgramEndDate = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndDate";
                    // var ProgramStartTime = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramStartTime";
                    // var ProgramEndTime = "FundSourcedata[" + divround + "].progtypelist[" + rounds + "].ProgramEndTime";


                    $('#gridphone' + round + '').show();

                    var tr = "";

                    tr += "<tr><style='text-align:center;'>";

                    tr = tr + '<td><input  name=' + ProgramTypes + ' class = "form-control" type="text" value="' + dataProgDetail.listProg[i].ProgramTypes + '" ></td>';
                    tr = tr + '<td><input  name=' + Description + ' class = "form-control" type="text" value="' + dataProgDetail.listProg[i].Description + '" ></td>';
                    if (dataProgDetail.listProg[i].PIRReport) {
                        tr = tr + '<td><input value="true"  name=' + PIRReport + '  type="checkbox" data-val="true" checked=checked /></td>';
                    }
                    else {
                        tr = tr + '<td><input value="true" name=' + PIRReport + '  type="checkbox" data-val="true"  /></td>';
                    }
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + Slots + ' value="' + dataProgDetail.listProg[i].Slots + '"></td>';

                    tr = tr + '<td><select class="form-control" style="width:100%;" name=' + ReferenceProg + ' >' +
                                '</select></td>';
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="50" type="text" name=' + Area + ' value="' + dataProgDetail.listProg[i].Area + '"></td>';
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="2" type="text" name=' + MinAge + ' value="' + dataProgDetail.listProg[i].MinAge + '"></td>';
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="2" type="text" name=' + MaxAge + ' value="' + dataProgDetail.listProg[i].MaxAge + '"></td>';
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" id="" onblur="return Checkyearago(this);" type="text" name=' + ProgramStartDate + ' value="' + dataProgDetail.listProg[i].ProgramStartDate + '"></td>';
                    tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" id="" onblur="return Checkyearago(this);" type="text" name=' + ProgramEndDate + ' value="' + dataProgDetail.listProg[i].ProgramEndDate + '"></td>';
                    //  tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + ProgramStartDate + ' value="' + dataProgDetail.listProg[i].ProgramStartDate + '"></td>';
                    //  tr = tr + '<td ><input data-val="true" class = "form-control" maxlength="100" type="text" name=' + ProgramStartDate + ' value="' + dataProgDetail.listProg[i].ProgramStartDate + '"></td>';
                    tr = tr + '<td><input type="hidden"  name="' + ProgramID + '" value="' + dataProgDetail.listProg[i].ProgramID + '" /><a href="javascript:void(0)" onclick="RemovePhone(this);" accesskey="' + dataProgDetail.listProg[i].ProgramID + '" style=" text-decoration:underline;">Delete</a></td></tr>';
                    $('#gridprogram_' + round + ' > tbody').append(tr);
                    var model = @Html.Raw(Json.Encode(@ViewBag.RefList));
                    console.log(model);
                    BindDDLRefList(model);

                    var dateToday = new Date();
                    dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
                    $("input[id^='programstartDate']").each(function () {
                        $(this).datetimepicker({
                            timepicker: false,
                            format: 'm/d/Y',
                            minDate: dateToday,
                        });
                    });

                    $("input[id^='programendDate']").each(function () {
                        $(this).datetimepicker({
                            timepicker: false,
                            format: 'm/d/Y',
                            minDate: dateToday,
                        });
                    });
                    $('#gridprogram_ > tbody tr:last').find('td:eq(0) :input').val("");
                    rounds = rounds + 1;
                }
            }
        }

        function changestatus(value) {

            var ddlvalue = $(value).val();
            var status = $(value).parent('td').children().eq(0).val();
            var s = $(value).attr("accesskey");
            if (ddlvalue == status) {
                return;
            } var message = '';
            if (ddlvalue == 0)
                message = "Do you want to activate this program type? ";
            if (ddlvalue == 1)
                message = "Do you want to deactivate this program type? ";
            if (ddlvalue == 2)
                message = "Do you want to suspend this program type? ";
            BootstrapDialog.confirm(message, function yes(result) {
                if (result) {
                    $.ajax({
                        url: HostedDir + "/SuperAdmin/updateprogstatus",
                        type: "POST",
                        data: {
                            ProgramID: $(value).attr("accesskey"),
                            mode: ddlvalue
                        },
                        dataType: "json",
                        secureuri: false,
                        async: false,
                        success: function (response) {

                            if (response == 1) {
                                if (ddlvalue == 0)
                                    customAlert("Program type activated successfully.");
                                if (ddlvalue == 1)
                                    customAlert("Program type deactivated successfully.");
                                if (ddlvalue == 2)
                                    customAlert("Program type suspended successfully.");
                                getlistafterstatuschanged();
                            }
                        }
                         , error: function (response) {
                             customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                         }
                    });
                }
                else {
                    $(value).val(status);
                }
            }, function no() { });
        }
        function checkNumeric(inputTextObject) {

            var ret = true;
            var ex = /^[0-9]*$/;
            if ($(inputTextObject).val().trim() != "") {
                if (!ex.test($(inputTextObject).val())) {
                    $(inputTextObject).val('');
                    customAlert("Only numeric value allowed. ");
                    var ret = false;
                }
            }
            return ret;
        }
        function Checkyearago(obj) {
            if ($(obj).val().trim() != "") {

                var dateToday = new Date();
                dateToday = dateToday.setFullYear(dateToday.getFullYear() - 1);
                if (new Date($(obj).val()) < dateToday) {
                    $(obj).val("");
                    customAlert("Only year ago or future date allowed from current date. ");
                }
            }


        }

        function RemoveFund(object) {
            round = 0;
            debugger;
            if ($(object).attr("accesskey") == 0) {
                $(object).parent().parent().parent().remove();
                $('.fundclass').children().each(function () {
                    $(this).children().each(function () {
                        if ($(this).children().length > 0) {
                            //2410216
                            $(this).children().find("[id^='Acronym']").attr("name", "FundSourcedata[" + round + "].Acronym");
                            $(this).children().find("[id^='Description']").attr("name", "FundSourcedata[" + round + "].Description");
                            $(this).children().find("[id^='Amount']").attr("name", "FundSourcedata[" + round + "].Amount");
                            $(this).children().find("[id^='Date']").attr("name", "FundSourcedata[" + round + "].Date");
                            $(this).children().find("[id^='Duration']").attr("name", "FundSourcedata[" + round + "].Duration");
                            $(this).children().find("[id^='ServiceQty']").attr("name", "FundSourcedata[" + round + "].ServiceQty");
                            $(this).children().find("[id^='fundingtype']").attr("name", "FundSourcedata[" + round + "].fundingtype");
                            $(this).children().find("[id^='ProgramYear']").attr("name", "FundSourcedata[" + round + "].ProgramYear");
                            $(this).children().find("[id^='grantNo']").attr("name", "FundSourcedata[" + round + "].grantNo");
                            $(this).children().find("[id^='nameGranteeDelegate']").attr("name", "FundSourcedata[" + round + "].nameGranteeDelegate");
                            $(this).children().find("[id^='fundsource']").attr("name", "FundSourcedata[" + round + "].fundsource");
                            $(this).children().find("[id^='FundID']").attr("name", "FundSourcedata[" + round + "].FundID");
                            $(this).children().find("[id^='gridprogram']").find("tr").each(function () {

                                $(this).find('td').each(function () {

                                    if ($(this).find("[id^='ProgType']").length > 0) {
                                        var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                        $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='Description']").length > 0) {
                                        var name = $(this).find("[id^='Description']").attr("name").substr(17, $(this).find("[id^='Description']").attr("name").length);
                                        $(this).find("[id^='Description']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='pirreport']").length > 0) {
                                        var name = $(this).find("[id^='pirreport']").attr("name").substr(17, $(this).find("[id^='pirreport']").attr("name").length);
                                        $(this).find("[id^='pirreport']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='Slots']").length > 0) {
                                        var name = $(this).find("[id^='Slots']").attr("name").substr(17, $(this).find("[id^='Slots']").attr("name").length);
                                        $(this).find("[id^='Slots']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='ProgType']").length > 0) {
                                        var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                        $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='ReferenceProg']").length > 0) {
                                        var name = $(this).find("[id^='ReferenceProg']").attr("name").substr(17, $(this).find("[id^='ReferenceProg']").attr("name").length);
                                        $(this).find("[id^='ReferenceProg']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='ProgType']").length > 0) {
                                        var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                        $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);

                                    }
                                    if ($(this).find("[id^='area']").length > 0) {
                                        var name = $(this).find("[id^='area']").attr("name").substr(17, $(this).find("[id^='area']").attr("name").length);
                                        $(this).find("[id^='area']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='minage']").length > 0) {
                                        var name = $(this).find("[id^='minage']").attr("name").substr(17, $(this).find("[id^='minage']").attr("name").length);
                                        $(this).find("[id^='minage']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='maxage']").length > 0) {
                                        var name = $(this).find("[id^='maxage']").attr("name").substr(17, $(this).find("[id^='maxage']").attr("name").length);
                                        $(this).find("[id^='maxage']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='programstartdate']").length > 0) {
                                        var name = $(this).find("[id^='programstartdate']").attr("name").substr(17, $(this).find("[id^='programstartdate']").attr("name").length);
                                        $(this).find("[id^='programstartdate']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }

                                    if ($(this).find("[id^='ProgStatus']").length > 0) {
                                        var name = $(this).find("[id^='ProgStatus']").attr("name").substr(17, $(this).find("[id^='ProgStatus']").attr("name").length);
                                        $(this).find("[id^='ProgStatus']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='HealthReview']").length > 0) {
                                        var name = $(this).find("[id^='HealthReview']").attr("name").substr(17, $(this).find("[id^='HealthReview']").attr("name").length);
                                        $(this).find("[id^='HealthReview']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='OldFund']").length > 0) {
                                        var name = $(this).find("[id^='OldFund']").attr("name").substr(17, $(this).find("[id^='OldFund']").attr("name").length);
                                        $(this).find("[id^='OldFund']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='ProgramID']").length > 0) {
                                        var name = $(this).find("[id^='ProgramID']").attr("name").substr(17, $(this).find("[id^='ProgramID']").attr("name").length);
                                        $(this).find("[id^='ProgramID']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                    if ($(this).find("[id^='FundID']").length > 0) {
                                        var name = $(this).find("[id^='FundID']").attr("name").substr(17, $(this).find("[id^='FundID']").attr("name").length);
                                        $(this).find("[id^='FundID']").attr("name", "FundSourcedata[" + round + "]" + name);
                                    }
                                });
                            });
                        }
                    });
                    round = round + 1;
                });
            }
            else {

                var fundArr=[];
                var isHaveRef=0;
                if($('#gridprogram').find('tbody').find('tr').length>0)
                {
                    $('#gridprogram').find('tbody').find('tr').each(function(j,row){

                        var fundId=$(row).find('td:eq(9)').children('a').siblings('input').val();

                        if(fundId.split(',').indexOf($(object).attr("accesskey"))>-1)
                        {
                            isHaveRef++;
                        }

                    });




                    if(isHaveRef>0)
                    {
                        customAlert('Fund is referred to Program Type');
                        return false;
                    }
                }

                BootstrapDialog.confirm('You are about to delete the Fund, Click OK to Proceed.',

                    function (result) {
                        if (result) {
                            $.ajax({
                                url: HostedDir + "/SuperAdmin/DeleteFundA",
                                type: "POST",
                                data: {
                                    FundId: $(object).attr("accesskey"),
                                    Agencyid: $('#agencyId').val()
                                },
                                dataType: "json",
                                secureuri: false,
                                async: false,
                                success: function (response) {

                                    if (response == 1) {
                                        customAlert("Record removed successfully. ");
                                        $(object).parent().parent().parent().remove();
                                        $('.fundclass').children().each(function () {
                                            $(this).children().each(function () {
                                                if ($(this).children().length > 0) {
                                                    //2410216
                                                    $(this).children().find("[id^='Acronym']").attr("name", "FundSourcedata[" + round + "].Acronym");
                                                    $(this).children().find("[id^='Description']").attr("name", "FundSourcedata[" + round + "].Description");
                                                    $(this).children().find("[id^='Amount']").attr("name", "FundSourcedata[" + round + "].Amount");
                                                    $(this).children().find("[id^='Date']").attr("name", "FundSourcedata[" + round + "].Date");
                                                    $(this).children().find("[id^='Duration']").attr("name", "FundSourcedata[" + round + "].Duration");
                                                    $(this).children().find("[id^='ServiceQty']").attr("name", "FundSourcedata[" + round + "].ServiceQty");
                                                    $(this).children().find("[id^='fundingtype']").attr("name", "FundSourcedata[" + round + "].fundingtype");
                                                    $(this).children().find("[id^='ProgramYear']").attr("name", "FundSourcedata[" + round + "].ProgramYear");
                                                    $(this).children().find("[id^='grantNo']").attr("name", "FundSourcedata[" + round + "].grantNo");
                                                    $(this).children().find("[id^='nameGranteeDelegate']").attr("name", "FundSourcedata[" + round + "].nameGranteeDelegate");
                                                    $(this).children().find("[id^='fundsource']").attr("name", "FundSourcedata[" + round + "].fundsource");
                                                    $(this).children().find("[id^='FundID']").attr("name", "FundSourcedata[" + round + "].FundID");
                                                    $(this).children().find("[id^='gridprogram']").find("tr").each(function () {

                                                        $(this).find('td').each(function () {

                                                            if ($(this).find("[id^='ProgType']").length > 0) {
                                                                var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                                                $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='Description']").length > 0) {
                                                                var name = $(this).find("[id^='Description']").attr("name").substr(17, $(this).find("[id^='Description']").attr("name").length);
                                                                $(this).find("[id^='Description']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='pirreport']").length > 0) {
                                                                var name = $(this).find("[id^='pirreport']").attr("name").substr(17, $(this).find("[id^='pirreport']").attr("name").length);
                                                                $(this).find("[id^='pirreport']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='Slots']").length > 0) {
                                                                var name = $(this).find("[id^='Slots']").attr("name").substr(17, $(this).find("[id^='Slots']").attr("name").length);
                                                                $(this).find("[id^='Slots']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='ProgType']").length > 0) {
                                                                var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                                                $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='ReferenceProg']").length > 0) {
                                                                var name = $(this).find("[id^='ReferenceProg']").attr("name").substr(17, $(this).find("[id^='ReferenceProg']").attr("name").length);
                                                                $(this).find("[id^='ReferenceProg']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='ProgType']").length > 0) {
                                                                var name = $(this).find("[id^='ProgType']").attr("name").substr(17, $(this).find("[id^='ProgType']").attr("name").length);
                                                                $(this).find("[id^='ProgType']").attr("name", "FundSourcedata[" + round + "]" + name);

                                                            }
                                                            if ($(this).find("[id^='area']").length > 0) {
                                                                var name = $(this).find("[id^='area']").attr("name").substr(17, $(this).find("[id^='area']").attr("name").length);
                                                                $(this).find("[id^='area']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='minage']").length > 0) {
                                                                var name = $(this).find("[id^='minage']").attr("name").substr(17, $(this).find("[id^='minage']").attr("name").length);
                                                                $(this).find("[id^='minage']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='maxage']").length > 0) {
                                                                var name = $(this).find("[id^='maxage']").attr("name").substr(17, $(this).find("[id^='maxage']").attr("name").length);
                                                                $(this).find("[id^='maxage']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='programstartdate']").length > 0) {
                                                                var name = $(this).find("[id^='programstartdate']").attr("name").substr(17, $(this).find("[id^='programstartdate']").attr("name").length);
                                                                $(this).find("[id^='programstartdate']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }

                                                            if ($(this).find("[id^='ProgStatus']").length > 0) {
                                                                var name = $(this).find("[id^='ProgStatus']").attr("name").substr(17, $(this).find("[id^='ProgStatus']").attr("name").length);
                                                                $(this).find("[id^='ProgStatus']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='HealthReview']").length > 0) {
                                                                var name = $(this).find("[id^='HealthReview']").attr("name").substr(17, $(this).find("[id^='HealthReview']").attr("name").length);
                                                                $(this).find("[id^='HealthReview']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='OldFund']").length > 0) {
                                                                var name = $(this).find("[id^='OldFund']").attr("name").substr(17, $(this).find("[id^='OldFund']").attr("name").length);
                                                                $(this).find("[id^='OldFund']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='ProgramID']").length > 0) {
                                                                var name = $(this).find("[id^='ProgramID']").attr("name").substr(17, $(this).find("[id^='ProgramID']").attr("name").length);
                                                                $(this).find("[id^='ProgramID']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                            if ($(this).find("[id^='FundID']").length > 0) {
                                                                var name = $(this).find("[id^='FundID']").attr("name").substr(17, $(this).find("[id^='FundID']").attr("name").length);
                                                                $(this).find("[id^='FundID']").attr("name", "FundSourcedata[" + round + "]" + name);
                                                            }
                                                        });
                                                    });
                                                }
                                            });
                                            round = round + 1;
                                        });
                                    }
                                    if (response == 2) {
                                        customAlert("Cannot delete record. Seats already assigned to programtypes in funds.");

                                    }





                                }
                                 , error: function (response) {
                                     customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                                 }
                            });
                        }
                    });
            }
        }

        var selectLastvalue='';
        function fundStatusChange(e,object)
        {
            selectLastvalue=$(object).val();

            $(object).bind('change',function(e){

                debugger;
                var fundArr=[];
                var isHaveRef=0;
                var index=$(object).closest('.fundclass').attr('id').split('_')[1];
                var fundsource=$('input[name="FundSourcedata['+index+'].FundID"]')[0].value;
                if($('#gridprogram').find('tbody').find('tr').length>0)
                {
                    $('#gridprogram').find('tbody').find('tr').each(function(j,row){

                        var fundId=$(row).find('td:eq(9)').children('a').siblings('input').val();

                        if(fundId.split(',').indexOf(fundsource)>-1)
                        {
                            isHaveRef++;
                        }

                    });

                    if(isHaveRef>0 && $(object).val()!='0')
                    {
                        customAlert('Fund is referred to Program Type');
                        e.preventDefault();
                        $(object).val(selectLastvalue);
                        return false;
                    }
                }




            });


        }

        function CheckforProgramtype() {

            $.ajax({
                url: HostedDir + "/AgencyAdmin/CheckProgram",
                type: "POST",
                data: {
                    Agencyid: $('#agencyId').val()
                },
                dataType: "json",
                secureuri: false,
                async: false,
                success: function (response) {
                    var data = response.split(',');

                    if (data[0] > 0) {

                        if (data[1] > 0) {
                            window.location.href = HostedDir + '/AgencyAdmin/Centerlist/';
                        }
                        else {
                            window.location.href = HostedDir + '/AgencyAdmin/Center/';

                        }


                    }
                    else {
                        customAlert("Please add funds and programe types.");

                    }


                }
                            , error: function (response) {
                                customAlert("Session Ended Log Onto The System Again."); setTimeout(function () { window.location.href = HostedDir + '/login/Loginagency'; }, 2000);
                            }
            });

        }




        function showHidemoreDiv(ele) {


            var showmore = $(ele);

            if (showmore.parent('div').siblings(".show-div-sec").hasClass("show-section")) {
                showmore.parent('div').siblings(".show-div-sec").removeClass("show-section");
                showmore.parent('div').siblings(".show-div-sec").css({ "display": "block" });



                showmore.children(".plus-ic").css({ "display": "none" });
                showmore.children(".minus-ic").css({ "display": "inline-block" });
                showmore.children(".more-text").css({ "display": "none" });
                showmore.children(".less-text").css({ "display": "inline-block" });
            }
            else {
                showmore.parent('div').siblings(".show-div-sec").addClass("show-section");
                showmore.parent('div').siblings(".show-div-sec").css({ "display": "none" });

                showmore.children(".minus-ic").css({ "display": "none" });
                showmore.children(".plus-ic").css({ "display": "inline-block" });
                showmore.children(".less-text").css({ "display": "none" });
                showmore.children(".more-text").css({ "display": "inline-block" });
            }

        }


        function onlyAlphabets(e, t) {

            try {

                if (window.event) {

                    var charCode = window.event.keyCode;

                }

                else if (e) {

                    var charCode = e.which;

                }

                else {


                    return true;
                }

                if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123)) {

                    return true;
                }


                else

                    return false;

            }

            catch (err) {

                console.log(err.Description);

            }

        }

        function onlyAlphaNumerics(e,t) {


            var regex = new RegExp("^[a-zA-Z0-9\b]+$");
            var key = String.fromCharCode(!e.charCode ? e.which : e.charCode);
            if (!regex.test(key)) {
                e.preventDefault();
                return false;
            }

        }
    </script>


    <script type="text/javascript">




    </script>

}
@section MainContentHolder{


    <style>
        body{
        padding:0!important;
        }
        .bootstrap-dialog .bootstrap-dialog-title {
            margin-top: 13px;
        }

        .backto_list {
            color: #fff !important;
        }

        .fund-background {
            background-color: #fff;
            float: left;
            padding: 10px;
            border: 1px solid #ccc;
            font-family: verdana;
            width: 100%;
            margin: 10px 0;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
        }

        .lbl-required:after {
            margin-left: 2px;
            content: "*";
            color: red;
        }
        /*.modal-backdrop{display:none;}*/
        td.process_art {
            width: 6% !important;
        }

        td.process_sec {
            width: 12% !important;
        }

            td.process_sec input, td.process_sec select {
                width: 100% !important;
            }

        .empty_setpro select {
            width: 100% !important;
            padding: 0 !important;
        }

        td.empty_setpro {
            width: 9%;
        }

        .process_tashbox a i {
            font-size: 18px;
            padding: 11px;
            color: #295b8f;
        }

        .show-more {
            cursor: pointer;
            color: #333;
            transition: 0.3s linear;
            -webkit-transition: 0.3s linear;
            -moz-transition: 0.3s linear;
            -o-transition: 0.3s linear;
        }

            .show-more span {
                margin-left: 5px;
                color: #285b8f;
                transition: 0.3s linear;
                -webkit-transition: 0.3s linear;
                -moz-transition: 0.3s linear;
                -o-transition: 0.3s linear;
            }

        .minus-ic, .less-text {
            display: none;
            transition: 0.3s linear;
            -webkit-transition: 0.3s linear;
            -moz-transition: 0.3s linear;
            -o-transition: 0.3s linear;
        }

        .show-div-sec {
            display: none;
            transition: 0.3s linear;
            -webkit-transition: 0.3s linear;
            -moz-transition: 0.3s linear;
            -o-transition: 0.3s linear;
        }


        #myModelAreaBreakdown label, #myModelDivisionBreakdown label {
            color: #595959;
            font-weight: normal;
            font-style: normal;
            float: left;
        }

        .table-area-head th, .table-div-head th {
            color: #fff;
            background-color: #295b8f;
        }

        #myModelAreaBreakdown .modal-content, #myModelDivisionBreakdown .modal-content, #myModalagency .modal-content, #myModelFund .modal-content {
            background: #f1f5f8 none repeat scroll 0 0;
            border: 6px solid #295b8f;
            border-radius: 3px;
            /* color: #ffffff; */
            float: left;
            padding: 15px 3%;
            position: relative;
            width: 100%;
        }

        #myModelAreaBreakdown .modal-header, #myModelDivisionBreakdown .modal-header, #myModalagency .modal-header, #myModelFund .modal-header {
            border-bottom: 1px solid #adadad;
        }

        #myModelAreaBreakdown .form-control, #myModelDivisionBreakdown .form-control {
            border: 1px solid #9a9898;
        }

        #myModelAreaBreakdown .modal-footer, #myModelDivisionBreakdown .modal-footer, #myModalagency .modal-footer, #myModelFund .modal-footer {
            border-top: 1px solid #adadad;
        }

        #myModelAreaBreakdown .modal-header .close, #myModelDivisionBreakdown .modal-header .close, #myModalagency .modal-header .close {
            color: #807e7e;
            opacity: 1;
        }

            #myModelAreaBreakdown .modal-header .close:focus, #myModelAreaBreakdown .modal-header .close:active,
            #myModelDivisionBreakdown .modal-header .close:focus, #myModelDivisionBreakdown .modal-header .close:active {
                outline: 0;
            }

        #myModelAreaBreakdown .modal-footer .my-btn:hover, #myModelDivisionBreakdown .modal-footer .my-btn:hover, #myModalagency .modal-footer .my-btn:hover, #myModelFund .modal-footer .my-btn:hover {
            width: 15% !important;
        }

        #myModelAreaBreakdown h4, #myModelDivisionBreakdown h4, #myModalagency h4, #myModelFund h4 {
            font-size: 20px;
            font-weight: bold;
            color: #295b8f;
        }

        #myModalagency .glyphicon-calendar {
            color: #295b8f;
        }

        .scroll-thead {
            display: table;
            width: 100%;
            table-layout: fixed;
            /*width: calc( 100% - 17px );*/
        }

        .scroll-tbody tr td, .scroll-tbody1 tr td {
            word-break: break-word;
        }

        .scroll-tbody {
            display: block;
            height: 306px;
            overflow: auto;
            overflow-x: hidden;
        }

            .scroll-tbody tr {
                display: table;
                width: 100%;
                table-layout: fixed;
            }

        .fa-checkbox {
            position: relative;
            width: auto;
            display: inline-block;
            margin-right: 10px;
            margin-bottom: 10px;
        }


            .fa-checkbox input[type='checkbox'] {
                display: none !important;
            }

            .fa-checkbox label {
                color: #333;
                font-size: 15px;
                text-align: left;
                margin-bottom: 12px;
                padding-left: 20px;
                font-weight: normal;
            }

        .fa-radio input[type='radio'] + label:before {
            display: inline-block;
            font-family: FontAwesome;
            font-size: 21px;
            font-style: normal;
            font-weight: normal;
            line-height: 32px;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            padding-right: 8px;
            width: 20px;
        }

        .fa-checkbox input[type="checkbox"] + label:before {
            position: absolute;
            top: 3px;
            width: 14px;
            height: 14px;
            left: 0;
            /*background-image: url('../../Images/check.png');*/
            content: "\f096";
            color: #333;
            margin-right: 10px;
            font: normal normal normal 14px/1 FontAwesome;
        }

        .fa-checkbox input[type="checkbox"]:focus + label:before {
            color: #666;
        }

        .fa-checkbox input[type="checkbox"]:checked + label:before {
            color: #3FC593;
            width: 14px;
            height: 14px;
            content: '';
            position: absolute;
            top: 3px;
            left: 0;
            /*background-image: url('../../Images/checked.png');*/
            content: "\f14a";
            font: normal normal normal 14px/1 FontAwesome;
        }
    </style>


    <div class="row">
        <div class="col-lg-12">
            <h2 class="page-header">
                @if (ViewData["Title"] != null)
    { @ViewData["Title"].ToString()}
                @if (Session["AgencyID"] == null)
    {
                    <span class="view-btn backto_listspan" id="BackToList">
                        <a href="~/Agency/Viewagency" class="backto_list">Back to list</a>
                    </span>
                }
            </h2>

        </div>


    </div>

    <div class="row">

        @Html.HiddenFor(m => m.DivisionReference)
        @Html.HiddenFor(m => m.AreaReference)

        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
            <form method="post" role="form" id="form1" enctype="multipart/form-data" autocomplete="off">
                <div class="add-useragform">

                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="email">Agency Code <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.agencyCode, new { placeholder = "Agency Code", id = "agencyCode", maxlength = "50", readOnly = "true", @class = "form-control", tabIndex = "1" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Agency Name <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.agencyName, new { @class = "form-control", placeholder = "Agency Name", id = "agencyName", maxlength = "50", onblur = "CheckFirstCharcter(this);", tabIndex = "2" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="email">Email <sup>*</sup></label>
                                @if (@ViewBag.mode == 0)
                                {
                                    @Html.TextBoxFor(m => m.primaryEmail, new { placeholder = "Email", @class = "form-control", id = "primaryEmail", maxlength = "100", tabIndex = "3" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.primaryEmail, new { placeholder = "Email", @class = "form-control email-change", id = "primaryEmail", maxlength = "100", tabIndex = "3", @readonly = "true" })
                                    <a class="change_embtn" id="BtnChange" href="#" onclick="EnableDisable()">Change</a>
                                }
                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="email">First Name <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.firstName, new { @class = "form-control", placeholder = "First Name", id = "firstName", maxlength = "50", onblur = "CheckFirstCharcter(this);", tabIndex = "4" })

                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="email">Last Name <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name", id = "LastName", onblur = "CheckFirstCharcter(this);", maxlength = "50", tabIndex = "5" })


                            </div>
                        </div>


                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="email">Program Type <sup>*</sup></label>
                                    @{
                                        List<SelectListItem> prog = new List<SelectListItem>();
                                        foreach (var item in ViewBag.RefList)
                                        {
                                            prog.Add(new SelectListItem() { Text = item.Name, Value = item.Id });
                                        }
                                    }

                                    @Html.ListBoxFor(m => (m.programName), new MultiSelectList(prog, "Value", "Text"), new { id = "DdlProgTypeList", Multiple = "multiple", Name = "DdlProgTypeList", @class = "form-control", tabIndex = "6", @style = "height:10%;" })
                                  @Html.DropDownListFor(m => m.programName, new SelectList(prog, "Value", "Text"), new { id = "DdlProgTypeList", Name = "DdlProgTypeList", @class = "form-control", tabIndex = "6" })


                                </div>
                            </div>*@
                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="email">Grantee/Delegate <sup>*</sup> </label>
                                    @Html.TextBoxFor(m => m.nameGranteeDelegate, new { @class = "form-control", placeholder = "Name of Grantee/Delegate", id = "nameGranteeDelegate", maxlength = "100", tabIndex = "7" })


                                </div>
                            </div>*@




                        <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                            <div class="form-group">
                                <label for="pwd">Speed Zip </label>
                                @Html.TextBoxFor(m => m.SpeedZip, new { placeholder = "Speed Zip", id = "SpeedZip", maxlength = "5", tabIndex = "6", onblur = "checkIfNumeric(this);", @class = "form-control" })

                            </div>
                        </div>



                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Address1 <sup>*</sup> </label>
                                @Html.TextBoxFor(m => m.address1, new { placeholder = "Address1", id = "address1", maxlength = "50", tabIndex = "8", @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Address2  </label>
                                @Html.TextBoxFor(m => m.address2, new { placeholder = "Address2", id = "address2", maxlength = "50", tabIndex = "9", @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Zip Code <sup>*</sup> </label>

                                @Html.TextBoxFor(m => m.zipCode, new { placeholder = "Zip Code", id = "zipCode", maxlength = "5", tabIndex = "7", onblur = "checkZipCode(this);", @class = "form-control" })


                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">City<sup>*</sup> </label>
                                @* @Html.TextBoxFor(m => m.city, new { placeholder = "City", id = "zipCode", maxlength = "5", tabIndex = "7", onblur = "checkZipCode(this);", @class = "form-control" })*@

                                <select id="city" name="city" class="form-control">
                                    <option value="@Model.city">@Model.city</option>
                                </select>

                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">County<sup>*</sup> </label>
                                @Html.TextBoxFor(m => m.County, new { placeholder = "County", maxlength = "5", tabIndex = "7", @class = "form-control", @readonly = true })

                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">State<sup>*</sup> </label>
                                @Html.TextBoxFor(m => m.State, new { placeholder = "State", maxlength = "5", tabIndex = "7", @class = "form-control", @readonly = true })

                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Country <sup>*</sup></label>
                                @{
                                    List<SelectListItem> nation = new List<SelectListItem>();
                                    foreach (var item in ViewBag.country)
                                    {
                                        nation.Add(new SelectListItem() { Text = item.Name, Value = item.NationId });
                                    }
                                }
                                @if (@ViewBag.mode == 0)
                                {
                                    @Html.DropDownListFor(m => m.nationality, new SelectList(nation, "Value", "Text", "7D979B6C-F4D1-4D9C-99CD-8DC5160870B7"), new { @class = "form-control", tabIndex = "12" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(m => m.nationality, new SelectList(nation, "Value", "Text"), new { @class = "form-control", tabIndex = "13" })
                                }

                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Phone1 <sup>*</sup> </label>
                                @Html.TextBoxFor(m => m.phone1, new { placeholder = "Phone1", id = "phone1", maxlength = "15", @class = "form-control", tabIndex = "10" })
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Phone2 </label>
                                @Html.TextBoxFor(m => m.phone2, new { placeholder = "Phone2", id = "phone2", maxlength = "15", @class = "form-control", tabIndex = "11" })
                            </div>
                        </div>

                        @*<div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="pwd">Program Start Date <sup>*</sup> </label>
                                    @Html.TextBoxFor(m => m.programstartDate, "{0:MM/dd/yyyy}", new { placeholder = "Program Start Date", id = "programstartDate", @class = "form-control", tabIndex = "12" })
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="pwd">Program End Date <sup>*</sup> </label>
                                    @Html.TextBoxFor(m => m.programendDate, "{0:MM/dd/yyyy}", new { placeholder = "Program End Date", id = "programendDate", @class = "form-control", tabIndex = "13" })
                                </div>
                            </div>

                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="pwd">Program Start Time  </label>
                                    @Html.TextBoxFor(m => m.ProgramStartTime, new { placeholder = "Program Start Time", id = "ProgramStartTime", @class = "form-control", tabIndex = "12" })
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="pwd">Program End Time  </label>
                                    @Html.TextBoxFor(m => m.ProgramEndTime, new { placeholder = "Program End Time", id = "ProgramEndTime", @class = "form-control", tabIndex = "13" })
                                </div>
                            </div>*@





                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Time Zone <sup>*</sup></label>
                                @Html.DropDownListFor(m => m.TimeZoneID, new SelectList(Model.TimeZonelist, "TimZoneId", "TimZoneName", Model.TimeZoneID), new { @class = "form-control", tabIndex = "14" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Access Start Date <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.AccessStartDate, new { @class = "date form-control", placeholder = "Access Start Date", id = "AccessStartDate", Name = "AccessStartDate", maxlength = "50", tabIndex = "15" })
                            </div>
                        </div>



                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group DivHide" id="DivLoginTime">
                                <label for="pwd">Access Start Time <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.AccessStart, new { @class = "time form-control", id = "AccessStart", Name = "AccessStart", placeholder = "Access Start Time", tabIndex = "16" })

                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group DivHide">
                                <label for="pwd">Access Stop Time <sup>*</sup></label>
                                @Html.TextBoxFor(m => m.AccessStop, new { @class = "time form-control", id = "AccessStop", Name = "AccessStop", placeholder = "Access Stop Time", tabIndex = "17" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Active Program Year<sup>*</sup></label>
                                @Html.TextBoxFor(m => m.ActiveProgYear, new { @class = "form-control", placeholder = "YY-YY", id = "ActiveProgYear", maxlength = "10", tabIndex = "18" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group DivHide" id="DivAccessType">
                                <label for="email">Access Type <sup>*</sup></label>
                                @{
                                    List<SelectListItem> AccessTypeList = new List<SelectListItem>();
                                    //  AccessTypeList.Add(new SelectListItem() { Text = "Select", Value = "-1" });
                                    AccessTypeList.Add(new SelectListItem() { Text = "All Days", Value = "0" });
                                    AccessTypeList.Add(new SelectListItem() { Text = "M-F Only", Value = "1" });
                                }
                                @Html.DropDownListFor(m => m.AccessDays, new SelectList(AccessTypeList, "Value", "Text", Model.AccessDays), new { id = "DdlAccessType", Name = "DdlAccessType", @class = "form-control", tabIndex = "19" })

                                @if (@ViewBag.mode == 0)
                                {
                                    <span>Add Funds</span>
                                    <a href="javascript:void(0)" title="Add Fund & Program Types" onclick="ShowDiv();"><i class="fa fa-plus-square"></i></a>

                                }
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Yakkr 600 days<sup>*</sup></label>
                                @Html.TextBoxFor(m => m.Yakkr600, new { @class = "form-control", placeholder = "Yakkr 600 days", maxlength = "2", tabIndex = "21", @onblur = "return checkNumeric(this);" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">Yakkr 601 (in %)<sup>*</sup></label>
                                @Html.TextBoxFor(m => m.Yakkr601, new { @class = "form-control", placeholder = "Yakkr 601 Attendance %", maxlength = "2", tabIndex = "21", @onblur = "return checkNumeric(this);" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="RaceSubCatDesc">Acceptance Process<sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.AcceptanceProcess, false, new { id = "AcceptanceProcess1", tabIndex = "20" })
                                        <span>Waterfall</span>
                                    </div>
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.AcceptanceProcess, true, new { id = "AcceptanceProcess2", tabIndex = "21" })
                                        <span>Linear</span>
                                    </div>


                                </div>

                            </div>

                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="RaceSubCatDesc">Document Storage<sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.DocsStorage, "0", new { id = "DocsStorage", tabIndex = "20" })
                                        <span>Cloud</span>
                                    </div>
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.DocsStorage, "2", new { id = "DocsStorage", tabIndex = "21" })
                                        <span>Paper</span>
                                    </div>
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.DocsStorage, "1", new { id = "DocsStorage", tabIndex = "21" })
                                        <span>N/A</span>
                                    </div>

                                </div>

                            </div>

                        </div>

                        @if (Convert.ToString(ViewBag.mode) == "1")
                        {
                            if (Session["AgencyID"] != null)
                            {
                                List<SelectListItem> item = new List<SelectListItem>();
                                item.Add(new SelectListItem() { Text = "Inactive", Value = "0" });
                                item.Add(new SelectListItem() { Text = "Active", Value = "1" });
                                <div class="col-lg-6 col-md-6 col-sm-12" style="display:none;">
                                    <div class="form-group">
                                        <label for="pwd"> Status </label>
                                        @Html.HiddenFor(m => m.status)
                                        @Html.HiddenFor(m => m.agencyId)
                                    </div>
                                </div>
                            }
                            else
                            {
                                List<SelectListItem>
                                    item = new List<SelectListItem>
                                        ();
                                item.Add(new SelectListItem() { Text = "Inactive", Value = "0" });
                                item.Add(new SelectListItem() { Text = "Active", Value = "1" });
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label for="pwd"> Status </label>
                                        @Html.DropDownListFor(m => m.status, new SelectList(item, "Value", "Text"), new { @class = "form-control", tabIndex = "20" })
                                        @Html.HiddenFor(m => m.agencyId)
                                    </div>
                                </div>
                            }

                        }

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="pwd">FSW Yearly Visit<sup>*</sup></label>
                                @Html.TextBoxFor(m => m.FSWYearlyVisit, new { @class = "form-control", placeholder = "FSW Yearly Visit", maxlength = "2", tabIndex = "21", @onblur = "return checkNumeric(this);" })
                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="RaceSubCatDesc"> Do you provide transportation for your children? <sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-xs-6 col-sm-4">
                                        @Html.RadioButtonFor(m => m.Transportation, true, new { id = "Transportation1", tabIndex = "20" })
                                        <span>Yes</span>
                                    </div>
                                    <div class="col-xs-6 col-sm-4" style="margin-left: -7%;">
                                        @Html.RadioButtonFor(m => m.Transportation, false, new { id = "Transportation2", tabIndex = "21" })
                                        <span>No</span>
                                    </div>

                                </div>
                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12 hidden">
                            <div class="form-group">
                                <label for="pwd">Slots Purchased<sup>*</sup></label>
                                @Html.TextBoxFor(m => m.PurchasedSlots, new { @class = "form-control", placeholder = "Purchased Slots", tabIndex = "22", @onblur = "return checkNumeric(this);", @readonly = true })
                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="RaceSubCatDesc" class="label_full"> Will you use Area breakdown? <sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-sm-4 col-md-4 col-lg-4">
                                        @Html.RadioButtonFor(m => m.Areabreakdown, 1, new { id = "Areabreakdown1", tabIndex = "24" })
                                        <span>Yes</span>
                                    </div>
                                    <div class="col-sm-4 col-md-4 col-lg-4">
                                        @Html.RadioButtonFor(m => m.Areabreakdown, 2, new { id = "Areabreakdown2", tabIndex = "25" })
                                        <span>No</span>
                                    </div>
                                    <a title="Add/Update area breakdowns" @if (Model.Areabreakdown == "" || Model.Areabreakdown == "2") { <text> style="display:none;" </text>    } id="areadropAnchor" href="javascript:void(0)">Areas&nbsp;<i class="fa fa-arrow-up"></i></a>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                <label for="RaceSubCatDesc" class="label_full"> Will you use Division breakdown? <sup>*</sup></label>
                                <div class="cont-sz">
                                    <div class="col-sm-4 col-md-4 col-lg-4">
                                        @Html.RadioButtonFor(m => m.DivisionBreakDown, 1, new { id = "Areabreakdown1", tabIndex = "24" })
                                        <span>Yes</span>
                                    </div>
                                    <div class="col-sm-4 col-md-4 col-lg-4">
                                        @Html.RadioButtonFor(m => m.DivisionBreakDown, 2, new { id = "Areabreakdown2", tabIndex = "25" })
                                        <span>No</span>
                                    </div>
                                    <a title="Add/Update division breakdowns" @if (Model.DivisionBreakDown == "" || Model.DivisionBreakDown == "2") { <text> style="display:none;" </text>    } href="javascript:void(0)" id="divisiondropAnchor">Divisions&nbsp;<i class="fa fa-arrow-up"></i></a>

                                </div>
                            </div>
                        </div>


                        <div class="col-lg-6 col-md-6 col-sm-12 browse-grp">
                            <div class="form-group file_typimg">
                                <label for="RaceSubCatDesc">Agency Logo</label>
                                @Html.TextBoxFor(m => m.logo, new { id = "logo", name = "logo", type = "file", @accept = "image/*", onchange = "ValidateSingleInput(this)", @class = "form-control", tabIndex = "26" })
                                <div class="img-iconavt">
                                    <img alt="" id="imglogo" src='@Fingerprints.ViewModel.UrlExtensions.ToAvtarImages(Model.logourl)' style="border-style:none;" />
                                </div>
                            </div>
                        </div>

                    </div>





                    <div style="display:none;" id="divclass" class="adddivspace">


                    </div>


                    @{
                        int i = 0;
                        int Showfundquestion = 0;
                        int disabledhealth = 0;
                        int showfundq10 = 0;
                        int j = 0;
                    }

                    @if (ViewBag.mode == 1)
                    {


                        <div class="col-lg-12 col-xs-12">
                            <h2 class="page-header program-end-date program-div">
                                Funds<sup>*</sup>

                                <span class="view-btn" id="BackToList">
                                    <a href="javascript:void(0)" title="Add Funds" class="backto_list" onclick="ShowDiv();">Add Funds</a>
                                </span>

                            </h2>
                        </div>

                        <div class="fundappedClass col-lg-12 col-xs-12">

                            @foreach (var item in Model.FundSourcedata)
                            {

                                var z = i;
                                <div class="col-lg-12 col-xs-12 fund-background">
                                    <div class="alert alert-info" role="alert" style="border-radius:unset;">
                                        <strong>Note!&nbsp;</strong>Click on Submit after Add/Update of funds in this section.
                                    </div>

                                    <div id="divedit_@i" class="fundclass col-xs-12 col-lg-12" style="padding-top:20px;padding-bottom:20px;">
                                        @*<div class="col-lg-12">
                                                <h2 class="page-header funddiv">
                                                    Add Funds
                                                    @if (!item.IsReferredByProgram)
                                                    {
                                                        <a accesskey="@item.FundID" onclick="RemoveFund(this);" style="color:#285b8f !important;" class="pull-right" href="javascript:void(0)">Delete </a>
                                                    }
                                                </h2>
                                            </div>*@

                                        <div class="col-xs-12" style="padding:0;">
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Acronym <sup>*</sup></label>
                                                    @*@Html.TextBoxFor(m => m.FundSourcedata.Where(x => x.FundID == 0).FirstOrDefault().Acronym, new { @class = "form-control", id = "Acronym", Name = "Acronym", placeholder = "Acronym", tabIndex = "18" })*@
                                                    <input type="text" name="FundSourcedata[@i].Acronym" class="form-control" value="@item.Acronym" id="Acronym" placeholder="Acronym" onkeypress="return onlyAlphaNumerics(event, this);" maxlength="4">
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Description<sup>*</sup></label>
                                                    @*@Html.TextBoxFor(m => m.FundSourcedata.Where(x => x.FundID == 0).FirstOrDefault().Description, new { @class = "form-control", id = "Description", Name = "Description", placeholder = "Description", tabIndex = "18" })*@
                                                    <input type="text" name="FundSourcedata[@i].Description" class="form-control" value="@item.Description" id="Description" placeholder="Description" maxlength="50">
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Funded Slots<sup>*</sup></label>
                                                    @*@Html.TextBoxFor(m => m.FundSourcedata.Where(x => x.FundID == 0).FirstOrDefault().Acronym, new { @class = "form-control", id = "Acronym", Name = "Acronym", placeholder = "Acronym", tabIndex = "18" })*@
                                                    <input type="text" name="FundSourcedata[@i].ServiceQty" class="form-control" value="@item.ServiceQty" id="ServiceQty" onblur="checkNumeric(this);" placeholder="Funded Slots" maxlength="11">
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="pwd">Fund Date<sup>*</sup></label>
                                                    @*@Html.TextBoxFor(m => m.FundSourcedata.Where(x => x.FundID == 0).FirstOrDefault().Date, "{0:MM/dd/yyyy}", new { placeholder = "MM/DD/YYYY", id = "Date", @class = "form-control", tabIndex = "12" })*@
                                                    <input type="text" name="FundSourcedata[@i].Date" class="form-control" onblur="return Checkyearago(this);" value="@item.Date" id="Date" placeholder="Date" maxlength="11">
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Program Year<sup>*</sup></label>
                                                    @* <input type="text" name="FundSourcedata[@i].ProgramYear" class="form-control" value="@item.ProgramYear" id="ProgramYear" placeholder="YY-YY" maxlength="11">*@
                                                    @Html.DropDownListFor(m => m.FundSourcedata[i].ProgramYear, new SelectList(Model.ProgramYearList, "Value", "Text", Model.FundSourcedata[i].ProgramYear), new { @class = "form-control", tabIndex = "20" })




                                                </div>
                                            </div>


                                            @if (Session["AgencyID"] != null)
                                            {
                                                List<SelectListItem>
                                                    FundStatus = new List<SelectListItem>
                                                        ();
                                                FundStatus.Add(new SelectListItem() { Text = "Active", Value = "0" });
                                                FundStatus.Add(new SelectListItem() { Text = "Inactive", Value = "1" });
                                                FundStatus.Add(new SelectListItem() { Text = "Suspended", Value = "2" });
                                                @Html.HiddenFor(m => m.FundSourcedata[@i].FundStatus)
                                                @Html.HiddenFor(m => m.FundSourcedata[@i].FundID)
                                                @Html.HiddenFor(m => m.agencyId)

                                            }
                                            else
                                            {
                                                List<SelectListItem>
                                                    FundStatus = new List<SelectListItem>
                                                        ();
                                                FundStatus.Add(new SelectListItem() { Text = "Active", Value = "0" });
                                                FundStatus.Add(new SelectListItem() { Text = "Inactive", Value = "1" });
                                                FundStatus.Add(new SelectListItem() { Text = "Suspended", Value = "2" });
                                                <div class="col-lg-6 col-md-6 col-sm-12">
                                                    <div class="form-group">
                                                        <label for="pwd"> Status </label>
                                                        @Html.DropDownListFor(m => m.FundSourcedata[@i].FundStatus, new SelectList(FundStatus, "Value", "Text"), new { @class = "form-control" })
                                                        @Html.HiddenFor(m => m.FundSourcedata[@i].FundID)
                                                        @Html.HiddenFor(m => m.agencyId)
                                                    </div>
                                                </div>
                                            }

                                            <!---NEw fund status-->
                                            @*@if (Session["AgencyID"] != null)
                                                {
                                                    List<SelectListItem>
                                                        FundStatus = new List<SelectListItem>
                                                            ();
                                                    FundStatus.Add(new SelectListItem() { Text = "Active", Value = "0" });
                                                    FundStatus.Add(new SelectListItem() { Text = "Inactive", Value = "1" });
                                                    FundStatus.Add(new SelectListItem() { Text = "Suspended", Value = "2" });
                                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                                        <div class="form-group">
                                                            <label for="pwd"> Status </label>
                                                            @Html.DropDownListFor(m => m.FundSourcedata[@i].FundStatus, new SelectList(FundStatus, "Value", "Text"), new { @class = "form-control" ,@onclick= "return fundStatusChange(event,this);" })
                                                            @Html.HiddenFor(m => m.FundSourcedata[@i].FundID)
                                                            @Html.HiddenFor(m => m.agencyId)
                                                        </div>
                                                    </div>

                                                }*@

                                        </div>
                                        <div class="col-xs-12">
                                            <p class="show-more" onclick="showHidemoreDiv(this);">Show<span class="more-text" style="color:#333;">More</span><span class="less-text" style="color:#333;">Less</span><span class="plus-ic"><i class="fa fa-plus-square"></i></span><span class="minus-ic"><i class="fa fa-minus-square"></i></span></p>
                                        </div>
                                        <div class="col-xs-12 show-div-sec show-section" style="padding:0;">
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Amount</label>
                                                    <input type="text" name="FundSourcedata[@i].Amount" class="form-control" value="@item.Amount" id="Amount" onblur="checkIfNumericDigit(this);" placeholder="Amount" maxlength="11">
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="pwd">Duration </label>
                                                    <select class="form-control" id="FundSourcedata[@i].Duration" name="FundSourcedata[@i].Duration">
                                                        @if (@item.Duration.ToString() == "1")
                                                        {
                                                            <option value="1" selected="selected">1 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="1">1 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "2")
                                                        {
                                                            <option value="2" selected="selected">2 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="2">2 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "3")
                                                        {
                                                            <option value="3" selected="selected">3 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="3">3 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "4")
                                                        {
                                                            <option value="4" selected="selected">4 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="4">4 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "5")
                                                        {
                                                            <option value="5" selected="selected">5 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="5">5 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "6")
                                                        {
                                                            <option value="6" selected="selected">6 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="6">6 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "7")
                                                        {
                                                            <option value="7" selected="selected">7 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="7">7 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "8")
                                                        {
                                                            <option value="8" selected="selected">8 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="8">8 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "9")
                                                        {
                                                            <option value="9" selected="selected">9 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="9">9 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "10")
                                                        {
                                                            <option value="10" selected="selected">10 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="10">10 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "11")
                                                        {
                                                            <option value="11" selected="selected">11 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="11">11 Month</option>
                                                        }
                                                        @if (@item.Duration.ToString() == "12")
                                                        {
                                                            <option value="12" selected="selected">12 Month</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="12">12 Month</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Funding Type</label>
                                                    <select class="form-control" id="FundSourcedata[@i].fundingtype" name="FundSourcedata[@i].fundingtype">
                                                        @if (@item.fundingtype == "1")
                                                        {
                                                            <option value="1" selected="selected">County</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="1">County</option>
                                                        }
                                                        @if (@item.fundingtype == "2")
                                                        {
                                                            <option value="2" selected="selected">Fed</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="2">Fed</option>
                                                        }
                                                        @if (@item.fundingtype == "3")
                                                        {
                                                            <option value="3" selected="selected">Local</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="3">Local</option>
                                                        }
                                                        @if (@item.fundingtype == "4")
                                                        {
                                                            <option value="4" selected="selected">Private</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="4">Private</option>
                                                        }
                                                        @if (@item.fundingtype == "5")
                                                        {
                                                            <option value="5" selected="selected">State</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="5">State</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Grant No </label>
                                                    <input type="text" name="FundSourcedata[@i].grantNo" class="form-control" value="@item.grantNo" id="grantNo" placeholder="Grant No" maxlength="20">
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <div class="form-group">
                                                    <label for="email">Grantee/Delegate</label>
                                                    <input type="text" name="FundSourcedata[@i].nameGranteeDelegate" class="form-control" value="@item.nameGranteeDelegate" id="nameGranteeDelegate" placeholder="Name of Grantee/Delegate" maxlength="20">
                                                </div>
                                            </div>
                                        </div>




                                        <div>
                                            <input type="hidden" value="@item.FundID" name="FundSourcedata[@i].FundID">
                                            <input type="hidden" id="hdnOldFund" value="O" name="FundSourcedata[@i].OldFund" />
                                        </div>

                                        <div class="col-xs-12 col-lg-12 text-center">
                                            <button type="button" class="my-btn" onclick="return insertFunds(this);">Submit</button>
                                        </div>
                                    </div>




                                </div>
                                i++;
                                Showfundquestion = 0;
                                showfundq10 = 0;
                            }

                        </div>


                                            <div class="col-lg-12">
                                                <h2 class="page-header program-end-date program-div">
                                                    Program Types <sup>*</sup>

                                                    <span class="view-btn" id="BackToList">
                                                        <a href="javascript:void(0)" title="Add Program Types" class="backto_list" onclick="AddProgram(this);">Add Program Types</a>
                                                    </span>

                                                </h2>
                                            </div>

                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-main">
                                                <div class="table-responsive">
                                                    <table class="table table_size " id="gridprogram">
                                                        <thead style="cursor:pointer;">
                                                            <tr id='header00'>
                                                                <th id="thIN">Program Type</th>
                                                                <th id="thIN">Description</th>
                                                                <th id="thSN">PIR</th>
                                                                <th id="thnt">Funded Slots</th>
                                                                <th id="thCust">Reference Program</th>
                                                                <th id="thCust">DIV</th>
                                                                <th id="thCust">Age Min</th>
                                                                <th id="thCust">Age Max</th>
                                                                <th id="thCust" style="width:10%;">Program Date(s)</th>
                                                                <th id="thCust" style="width: 10%;">Fund</th>
                                                                <th id="thCust" style="width: 10%;">Program Type Association</th>
                                                                <th id="thCust">Status</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>


                                                            @foreach (var item1 in Model.ProgramTypeList)
                                                            {
                                                                if (@item1.ReferenceProg == "1" || @item1.ReferenceProg == "2")
                                                                {
                                                                    Showfundquestion = 1;
                                                                }
                                                                if (@item1.ReferenceProg == "4")
                                                                {
                                                                    disabledhealth = 1;
                                                                }
                                                                if (@item1.ReferenceProg == "1")
                                                                {
                                                                    showfundq10 = 1;
                                                                }

                                                                <tr id='@j'>
                                                                    <td><input id="ProgType_@j" style="width:100%;" class="form-control" name="ProgramTypeList[@j].ProgramTypes" value="@item1.ProgramTypes" type="text"></td>
                                                                    <td><input id="Desc_@j" style="width:100%;" class="form-control" name="ProgramTypeList[@j].Description" value="@item1.Description" type="text"></td>
                                                                    @if (item1.PIRReport == true)
                                                                    {
                                                                        <td><input id="PIRReport_@j" type="checkbox" value="true" checked="checked" name="ProgramTypeList[@j].pirreport" data-val="true" class="chcktbl" style="width:70%;" /></td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><input id="PIRReport_@j" type="checkbox" value="true" name="ProgramTypeList[@j].pirreport" data-val="true" class="chcktbl" style="width:70%;" /></td>
                                                                    }

                                                                    <td><input id="Slots_@j" style="width:100%;" onblur="checkNumeric(this);" class="form-control" type="text" data-val="true" name="ProgramTypeList[@j].Slots" value="@item1.Slots" maxlength="100"></td>
                                                                    <td class="empty_setpro">
                                                                        @{
                                                                            List<SelectListItem> prog = new List<SelectListItem>();
                                                                            foreach (var item2 in ViewBag.RefList)
                                                                            {
                                                                                prog.Add(new SelectListItem() { Text = item2.Name, Value = item2.Id });
                                                                            }
                                                                        }


                                                                        @Html.DropDownListFor(m => Model.ProgramTypeList[j].ReferenceProg, new SelectList(prog, "Value", "Text", @item1.ReferenceProg), new { @class = "form-control", @style = "width:80px;", onchange = "showCheckbox(this);" })

                                                                    </td>
                                                                    <td class="process_art">

                                                                        @if (Model.DivisionsList.Count() > 0 && Model.DivisionsList.Count() == 1)
                                                                        {
                                                                            <input maxlength="50" style="width:100%;" id="Area_@j" class="form-control" name="ProgramTypeList[@j].DivisionID" value="@Model.DivisionsList[0].Text" type="text" disabled />

                                                                        }

                                                                        else if (Model.DivisionsList.Count > 1)
                                                                        {
                                                                            @Html.DropDownListFor(m => m.ProgramTypeList[j].DivisionID, new SelectList(Model.DivisionsList, "Value", "Text", @item1.DivisionID), new { style = "width:100%;height:34px;" })
                                                                        }
                                                                        else
                                                                        {
                                                                            <input maxlength="50" style="width:100%;" id="Area_@j" class="form-control" name="ProgramTypeList[@j].DivisionID" value="@(item1.DivisionID == "" ? "1" : item1.DivisionID)" type="text" />

                                                                        }
                                                                    </td>
                                                                    @if (item1.ReferenceProg == "4")
                                                                    {
                                                                        <td class="process_art"><input id="Minage_@j" style="width:100%;" readonly class="form-control" name="ProgramTypeList[@j].minage" onblur="checkage(this);" type="text"></td>
                                                                        <td class="process_art"><input id="Maxage_@j" style="width:100%;" readonly class="form-control" name="ProgramTypeList[@j].maxage" onblur="checkagemax(this);" type="text"></td>

                                                                    }
                                                                    else
                                                                    {
                                                                        <td class="process_art"><input id="Minage_@j" style="width:100%;" class="form-control" name="ProgramTypeList[@j].minage" value="@item1.MinAge" onblur="checkage(this);" type="text"></td>
                                                                        <td class="process_art"><input id="Maxage_@j" style="width:100%;" class="form-control" name="ProgramTypeList[@j].maxage" value="@item1.MaxAge" onblur="checkagemax(this);" type="text"></td>

                                                                    }

                                                                    <td>


                                                                        <input type="hidden" id="ProgramTypeList[@j].programstartdate" value="@item1.programstartDate" class="program-start-date" name="ProgramTypeList[@j].programstartdate" />
                                                                        <input type="hidden" id="ProgramTypeList[@j].programenddate" value="@item1.programendDate" class="program-end-date" name="ProgramTypeList[@j].programenddate" />
                                                                        <input type="hidden" id="ProgramTypeList[@j].LastDateCurrentApplication" value="@item1.LastDateCurrentApplication" class="date-current-app" name="ProgramTypeList[@j].LastDateCurrentApplication" />
                                                                        <input type="hidden" id="ProgramTypeList[@j].DateFutureApplication" value="@item1.DateFutureApplication" class="date-future-app" name="ProgramTypeList[@j].DateFutureApplication" />
                                                                        <input type="hidden" id="ProgramTypeList[@j].TransitionDate" value="@item1.TransitionDate" class="trans-date" name="ProgramTypeList[@j].TransitionDate" />


                                                                        <a style="color:#295b8f;cursor:pointer;text-decoration:underline;" href="javascript:void(0);" onclick="addProgDatesConfirm(this);">Add Date(s)</a>

                                                                    </td>
                                                                    <td style="text-align:center;">
                                                                        <a style="color:#295b8f;cursor:pointer;text-decoration:underline;" href="javascript:void(0);" accesskey="@item1.FundID" onclick="addFunds(this);">Fund(s)</a>
                                                                        @Html.HiddenFor(m => m.ProgramTypeList[j].FundID, new { @class = "fund-id" })
                                                                    </td>
                                                                    <td style="text-align:center;">

                                                                        @{
                                                                            List<SelectListItem> progAssList = new List<SelectListItem>();

                                                                            progAssList = Model.ProgramTypeList.Where(x => x.ProgramID != item1.ProgramID).Select(x => new SelectListItem
                                                                            {

                                                                                Text = x.ProgramTypes.ToString(),
                                                                                Value = x.ProgramID.ToString()
                                                                            }).ToList();
                                                                        }


                                                                        @Html.DropDownListFor(m => m.ProgramTypeList[j].ProgramTypeAssociation, new SelectList(progAssList, "Value", "Text", item1.ProgramTypeAssociation), "", new { @class = "form-control", style = "width:100%;" })

                                                                    </td>

                                                                    <td class="process_sec" style="text-align:center;">
                                                                        <select class="form-control" accesskey="@item1.ProgramID" id="ProgramTypeList[@j].ProgStatus" name="ProgramTypeList[@j].ProgStatus" onchange="changestatus(this);" style="width:80px;">
                                                                            @if (item1.ProgStatus.ToString() == "0")
                                                                            {
                                                                                <option value="0" selected="selected">Active</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="0">Active</option>
                                                                            }
                                                                            @if (item1.ProgStatus.ToString() == "1")
                                                                            {
                                                                                <option value="1" selected="selected">Inactive</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="1">Inactive</option>
                                                                            }
                                                                            @if (item1.ProgStatus.ToString() == "2")
                                                                            {
                                                                                <option value="2" selected="selected">Suspended</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="2">Suspended</option>
                                                                            }
                                                                        </select>
                                                                    </td>


                                                                    <td style="display:none;">


                                                                        <input type="hidden" value="@item1.ProgramID" id="hdnProgID" name="ProgramTypeList[@j].ProgramID">
                                                                        <input type="hidden" value="@item1.FundID" id="hdnFundID" name="ProgramTypeList[@j].FundID">
                                                                    </td>
                                                                </tr>
                                                                                j++;
                                                                                disabledhealth = 0;
                                                                            }

                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>


                                            <div class="fundquestion" @if (Showfundquestion == 0) { <text> style="display:none;" </text>            }>
                                                <div class="col-lg-12 "><h4 class="page-header">Funded Enrollment by Program Options  </h4>  </div><div class="row" id="FundQuestion">

                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>1.</strong> Center-based option (5 days per week) Full-day Enrollment </label>

                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-3">
                                                            @*<input onblur="return checkNumeric(this);" name="_FundedEnrollment.FundQ1" value="@Model._FundedEnrollment.FundQ1" class="form-control" style="width:100%;" maxlength="10" placeholder="Full-day Enrollment" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ1, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Full-day Enrollment" })




                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label" for="email"><strong>1.a</strong> Number available as full-working-day enrollment of children  </label>

                                                    </div> <div class="col-lg-3 col-md-3 col-sm-3">

                                                        @* <input onblur="return checkNumeric(this);" name="_FundedEnrollment.FundQ2" value="@Model._FundedEnrollment.FundQ2" class="form-control" style="width:104%;" maxlength="10" placeholder="Full Working Day" type="text">*@

                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ2, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Full Working Day" })




                                                    </div><div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label1" for="email"><strong>1.a.1</strong> Number available for the full-calendar-year of children</label>

                                                    </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                        @* <input onblur="return checkNumeric(this);" name="_FundedEnrollment.FundQ3" value="@Model._FundedEnrollment.FundQ3" class="form-control" maxlength="10" style="width:104%;" placeholder="Full Calendar Year" type="text">*@

                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ3, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Full Calender Year" })


                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>2.</strong> Center-based option (5 days per week) Part-day Enrollment of children </label>

                                                        </div> <div class="col-lg-3 col-md-3 col-sm-3">

                                                            @* <input onblur="return checkNumeric(this);" name="_FundedEnrollment.FundQ4" value="@Model._FundedEnrollment.FundQ4" style="width:100%;" class="form-control" maxlength="10" placeholder="Part Day Enrollment" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ4, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Part Day Enrollment" })


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label" for="email"><strong>2.a</strong> Number in double sessions of children</label>

                                                    </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                        @*<input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ5" value="@Model._FundedEnrollment.FundQ5" class="form-control" style="width:104%;" maxlength="10" placeholder="Double Sessions" type="text">*@

                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ5, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Double Sessions" })


                                                    </div><div class="row">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>3.</strong> Center-based option (4 days per week) Full-day Enrollment of children</label>

                                                        </div>  <div class="col-lg-3 col-md-3 col-sm-3">
                                                            @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ6" value="@Model._FundedEnrollment.FundQ6" class="form-control" style="width:100%;" maxlength="10" placeholder="Full Day Enrollment" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ6, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Full Day Enrollment" })
                                                        </div>

                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>4.</strong> Center-based option (4 days per week) Part-day Enrollment  of children </label>

                                                        </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                            @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ7" value="@Model._FundedEnrollment.FundQ7" class="form-control" style="width:100%;" maxlength="10" placeholder="Part Day Enrollment" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ7, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Part Day Enrollment" })


                                                        </div>

                                                    </div>
                                                </div> <div class="col-lg-12">
                                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label" for="email"><strong>4.a</strong> Number in double sessions of children </label>

                                                    </div> <div class="col-lg-3 col-md-3 col-sm-3">

                                                        @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ8" value="@Model._FundedEnrollment.FundQ8" class="form-control" style="width:104%;" maxlength="10" placeholder="Double sessions" type="text">*@

                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ8, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Double Sessions" })




                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">

                                                        <div class="col-lg-6 col-md-6 col-sm-6"><label class="lablewidth" for="email"><strong>5.</strong> Home-based option of children </label></div><div class="col-lg-3 col-md-3 col-sm-3">

                                                            @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ9" value="@Model._FundedEnrollment.FundQ9" class="form-control" maxlength="10" style="width:100%;" placeholder="Home Based Option" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ9, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Home Based Option" })

                                                        </div>
                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">

                                                            <label class="lablewidth" for="email"><strong>6.</strong> Combination option of children</label>
                                                        </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                            @*<input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ10" value="@Model._FundedEnrollment.FundQ10" style="width:100%;" class="form-control" maxlength="10" placeholder="Full-day Enrollment" type="text">*@
                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ10, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Full-day Enrollment" })




                                                        </div>
                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>7.</strong> Family child care option of children </label>

                                                        </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                            @* <input onblur="return checkNumeric(this);" value="@Model._FundedEnrollment.FundQ11" name="FundSourcedata[@i].FundQ11" class="form-control" style="width:100%;" maxlength="10" placeholder="Child Care Option" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ11, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Child Care Option" })




                                                        </div>
                                                    </div>
                                                </div><div class="col-lg-12">

                                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label" for="email"><strong>7.a</strong> Number available as full-working-day enrollment of children  </label>

                                                    </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                        @* <input onblur="return checkNumeric(this);" value="@Model._FundedEnrollment.FundQ12" name="FundSourcedata[@i].FundQ12" style="width:104%;" class="form-control" maxlength="10" placeholder="Full Working Day Enrollment" type="text">*@

                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ12, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Full Working Day Enrollment" })




                                                    </div>
                                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                                        <label class="lablewidth fund-label1" for="email"><strong>7.a.1</strong> Number available for the full-calendar-year of children </label>

                                                    </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                        @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ13" value="@Model._FundedEnrollment.FundQ13" style="width:104%;" class="form-control" maxlength="10" placeholder="Full-day Enrollment" type="text">*@
                                                        @Html.TextBoxFor(m => m._FundedEnrollment.FundQ13, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:104%;", maxlength = "10", placeholder = "Full-day Enrollment" })




                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>8.</strong> Locally designed option of children </label>

                                                        </div><div class="col-lg-3 col-md-3 col-sm-3">
                                                            @* <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ14" value="@Model._FundedEnrollment.FundQ14" style="width:100%;" class="form-control" maxlength="10" placeholder="Locally Designed option" type="text">*@
                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ14, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Locally Designed Option" })
                                                        </div>

                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>9.</strong> Funded enrollment at child care partners in the center-based program option of children </label>

                                                        </div> <div class="col-lg-3 col-md-3 col-sm-3">
                                                            @*<input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ15" value="@Model._FundedEnrollment.FundQ15" style="width:100%;" class="form-control" maxlength="10" placeholder="Center Based Program Option" type="text">*@

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ15, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Center Based Program Option" })
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row  Ehsshow" @if (showfundq10 == 0) { <text> style="display:none;" </text>               }>
                                                    <div class="col-lg-12">
                                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                                            <label class="lablewidth" for="email"><strong>10.</strong>Total number of pregnant women positions in funded enrollment of pregnant women </label>

                                                        </div><div class="col-lg-3 col-md-3 col-sm-3">

                                                            @Html.TextBoxFor(m => m._FundedEnrollment.FundQ16, new { @class = "form-control", onblur = "return checkNumeric(this);", style = "width:100%;", maxlength = "10", placeholder = "Funded Enrollment of Pregnant Women" })

                                                            @*  <input onblur="return checkNumeric(this);" name="FundSourcedata[@i].FundQ16" value="@Model._FundedEnrollment.FundQ16" style="width:100%;" class="form-control" maxlength="10" placeholder="Funded Enrollment Of Pregnant Women" type="text">*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                                                            }

                </div>


                <div class="col-lg-6 col-md-12 col-sm-12">
                </div>
        </div><!--row-->

        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="btnwrp_subcal">

                    <button id="btnSubmi" t type="submit" class="my-btn" onclick="return isValidagencyInfo();" tabindex="21">Submit</button>
                    <button id="btnExit" class="my-btn" type="button" tabindex="22">Exit</button>

                    @if (Session["MenuEnable"] != null && !Convert.ToBoolean(Session["MenuEnable"]))
                    {
                        <button class="my-btn" onclick="CheckforProgramtype();" type="button" tabindex="22">Next</button>
                    }
                    <div class="clear"></div>
                </div>	<!--btnwrp_subcal--->
            </div>
        </div>
        </form>


    </div><!--add-useragform--->
    </div>

    <div class="col-xs-12">

        <!-- Modal -->
        <div class="modal fade" id="myModalagency" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        @* <button type="button" class="close" data-dismiss="modal">&times;</button>*@
                        <h4 class="modal-title">Program Date(s)</h4>
                    </div>
                    <div class="modal-body">
                        <div class="col-xs-12" style="padding:0;margin-bottom:10px;">

                            <i>(<text style="color:red;">*</text>)&nbsp; All fields are required</i>

                        </div>
                        <div class="form-group">
                            <label class="col-sm-8 col-form-label lbl-required" style="padding:0;padding-top: 7px;">Program Start Date</label>
                            <div class="input-group date col-sm-4 date-picker" style="padding-left:0px;padding-right:0px;">
                                <input type="text" class="form-control" id="txtProgStartDate" placeholder="MM/DD/YYYY">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-8 col-form-label lbl-required" style="padding:0;padding-top: 7px;">Program End Date</label>
                            <div class="input-group date col-sm-4 date-picker" style="padding-left:0px;padding-right:0px;">
                                <input type="text" class="form-control" id="txtProgEndDate" placeholder="MM/DD/YYYY">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="col-sm-8 col-form-label lbl-required" style="padding:0;padding-top: 7px;">Last Date to Enter Application in Current Year</label>
                            <div class="input-group date col-sm-4 date-picker" style="padding-left:0px;padding-right:0px;">
                                <input type="text" class="form-control" id="txtLastCurrentDate" placeholder="MM/DD/YYYY">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-8 col-form-label lbl-required" style="padding:0;padding-top: 7px;">Date to Enter New Future Application</label>
                            <div class="input-group date col-sm-4" style="padding-left:0px;padding-right:0px;">
                                <input type="text" class="form-control" id="txtFutureAppDate" placeholder="MM/DD/YYYY">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-8 col-form-label lbl-required" style="padding:0;padding-top: 7px;">Transition Start Date</label>
                            <div class="input-group date col-sm-4 date-picker" style="padding-left:0px;padding-right:0px;">
                                <input type="text" class="form-control" id="txtTransitionDate" placeholder="MM/DD/YYYY">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="my-btn" id="btnProgDateClose">Close</button>
                    </div>
                </div>
            </div>
        </div>




        <div class="modal fade" id="myModelFund" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Select Fund(s)</h4>
                    </div>
                    <div class="modal-body">

                        <div class="fa-checkbox">
                            <input type="checkbox" id="checkbox1" name="checkbox-type" value="Mark Late Arrival" style="display:none;" class="abtCheckbox">
                            <label for="checkbox1">Fedr</label>
                        </div>
                        <div class="fa-checkbox">
                            <input type="checkbox" id="checkbox2" name="checkbox-type" value="Mark Late Arrival" style="display:none;" class="abtCheckbox">
                            <label for="checkbox2">Fedr</label>
                        </div>
                        <div class="fa-checkbox">
                            <input type="checkbox" id="checkbox3" name="checkbox-type" value="Mark Late Arrival" style="display:none;" class="abtCheckbox">
                            <label for="checkbox3">Fedr</label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="my-btn" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="myModelAreaBreakdown" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Area(s)</h4>
                    </div>
                    <div class="modal-body">

                        @*<div class="form-group">
                                <label class="col-sm-4 col-form-label lbl-required" style="padding:0;margin-top:10px;">Number of Areas to Break</label>
                                <div class="col-sm-2 col-lg-2">
                                    <input type="text" class="form-control count-text" id="areabreaktxt" maxlength="2" style="height:38px;">
                                </div>
                                <div class="col-sm-4 col-lg-4">
                                    <button class="my-btn" id="btnLoadArea">Load</button>
                                </div>
                            </div>*@
                        <div class="form-group">
                            <label class="col-sm-4 col-form-label lbl-required" style="padding:0;margin-top:10px;">Number of Areas to Break</label>
                            <div class="col-sm-3 col-lg-3">
                                <span class="plus-ic" style="display: inline-block;width: auto;float: left;padding-top: 10px;">
                                    @*  <i class="fa fa-minus-circle" style="font-size: 15px;color: #295b8f;"></i>*@
                                </span>
                                <input type="text" class="form-control count-text" id="areabreaktxt" maxlength="2" style="height:38px;width: 44px;display: inline-block;float:  left;margin: 0 10px;">
                                <span class="plus-ic" style="display: inline-block;width: auto;float: left;padding-top: 10px;">
                                    @* <i class="fa fa-plus-circle" style="font-size: 15px;color: #295b8f;"></i>*@
                                </span>
                            </div>
                            <div class="col-sm-4 col-lg-5" style="float: right;text-align: right;padding: 0;">
                                <button class="my-btn" id="btnLoadArea">Load</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <table class="table table-bordered">
                                <thead class="table-area-head scroll-thead">
                                    <tr>
                                        <th style="width: 100px;border-right: 0;">Area ID</th>
                                        <th style="border-left: 0;">Description</th>
                                    </tr>

                                </thead>
                                <tbody class="table scroll-tbody" id="area_tbody">
                                    <tr>
                                        <td style="width: 100px;text-align:center;">1</td>
                                        <td><input type="text" class="form-control"></td>
                                    </tr>
                                </tbody>
                            </table>


                        </div>



                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="my-btn" style="width:100%;" id="btnSaveAreabreakDown">Save</button>
                        <button type="button" class="my-btn" data-dismiss="modal" style="width:100%;">Exit</button>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="myModelDivisionBreakdown" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Division(s)</h4>
                    </div>
                    <div class="modal-body">

                        @*<div class="form-group">
                                <label class="col-sm-4 col-form-label lbl-required" style="padding:0;margin-top:10px;">Number of Divisions to Break</label>
                                <div class="col-sm-2 col-lg-2">
                                    <input type="text" class="form-control count-text" id="divisionbreaktxt" maxlength="2" style="height:38px;">
                                </div>
                                <div class="col-sm-4 col-lg-4">
                                    <button class="my-btn" id="btnLoadDivison">Load</button>
                                </div>
                            </div>*@
                        <div class="form-group">
                            <label class="col-sm-4 col-form-label lbl-required" style="padding:0;margin-top:10px;">Number of Areas to Break</label>
                            <div class="col-sm-3 col-lg-3">
                                <span class="plus-ic" style="display: inline-block;width: auto;float: left;padding-top: 10px;">
                                    @*  <i class="fa fa-minus-circle" style="font-size: 15px;color: #295b8f;"></i>*@
                                </span>
                                <input type="text" class="form-control count-text" id="divisionbreaktxt" maxlength="2" style="height:38px;width: 44px;display: inline-block;float:  left;margin: 0 10px;">
                                <span class="plus-ic" style="display: inline-block;width: auto;float: left;padding-top: 10px;">
                                    @*<i class="fa fa-plus-circle" style="font-size: 15px;color: #295b8f;"></i>*@
                                </span>
                            </div>
                            <div class="col-sm-4 col-lg-5" style="float: right;text-align: right;padding: 0;">
                                <button class="my-btn" id="btnLoadDivison">Load</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <table class="table table-bordered">
                                <thead class="table-div-head scroll-thead">
                                    <tr>
                                        <th style="width: 100px;border-right: 0;">Division ID</th>
                                        <th style="border-left: 0;">Description</th>
                                    </tr>

                                </thead>
                                <tbody class="table scroll-tbody" id="div_tbody">
                                    <tr>
                                        <td style="width: 100px;text-align:center;">1</td>
                                        <td><input type="text" class="form-control"></td>
                                    </tr>
                                </tbody>
                            </table>


                        </div>



                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="my-btn" style="width:100%;" id="btnSaveDivisionbreakDown">Save</button>
                        <button type="button" class="my-btn" data-dismiss="modal" style="width:100%;">Exit</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

}


